package ThreeSumProblem;

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest5 {

    public static boolean debug = false;

    @Test
    public void test2501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2501");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem33 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray41 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem34.TwoPointer(intArray41, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem33.TwoPointer(intArray41, (int) (byte) 0);
        int[] intArray50 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem33.Hashmap(intArray50, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem20.Hashmap(intArray50, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem0.Hashmap(intArray50, 0);
        java.lang.Class<?> wildcardClass57 = intArray50.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test2502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2502");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray20 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem13.TwoPointer(intArray20, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList24 = threeSumProblem0.Hashmap(intArray20, (int) (byte) 10);
        int[] intArray25 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem0.TwoPointer(intArray25, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intListList24);
    }

    @Test
    public void test2503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2503");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray14 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray14, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray25 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem18.TwoPointer(intArray25, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem17.TwoPointer(intArray25, (int) (byte) 0);
        int[] intArray34 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem17.Hashmap(intArray34, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem38 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem38.TwoPointer(intArray45, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem37.TwoPointer(intArray45, (int) (byte) 0);
        int[] intArray54 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem37.Hashmap(intArray54, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem17.Hashmap(intArray54, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem59.BruteForce(intArray62, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem17.Hashmap(intArray62, (int) (byte) 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem0.TwoPointer(intArray62, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem69 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray76 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem69.TwoPointer(intArray76, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem0.Hashmap(intArray76, (int) (byte) 100);
        int[] intArray81 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem0.Hashmap(intArray81, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0]");
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
    }

    @Test
    public void test2504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2504");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem17.Hashmap(intArray21, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem26.BruteForce(intArray29, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem17.TwoPointer(intArray29, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem34.Hashmap(intArray38, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem43.BruteForce(intArray46, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem34.TwoPointer(intArray46, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem17.Hashmap(intArray46, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem0.BruteForce(intArray46, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem55.BruteForce(intArray58, (int) '#');
        int[] intArray64 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem55.BruteForce(intArray64, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem67 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem67.BruteForce(intArray70, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem55.Hashmap(intArray70, (int) (byte) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem0.TwoPointer(intArray70, 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem77 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem78 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray81 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem78.BruteForce(intArray81, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem77.Hashmap(intArray81, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem86 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray89 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem86.BruteForce(intArray89, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem77.TwoPointer(intArray89, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList95 = threeSumProblem0.TwoPointer(intArray89, 0);
        int[] intArray96 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList98 = threeSumProblem0.TwoPointer(intArray96, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(intListList93);
        org.junit.Assert.assertNotNull(intListList95);
    }

    @Test
    public void test2505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2505");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem14.BruteForce(intArray17, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem13.Hashmap(intArray17, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem22 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem22.BruteForce(intArray25, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem13.TwoPointer(intArray25, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem31.TwoPointer(intArray38, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem30.TwoPointer(intArray38, (int) (byte) 0);
        int[] intArray47 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem30.Hashmap(intArray47, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem13.Hashmap(intArray47, (int) ' ');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray60 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem53.TwoPointer(intArray60, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem52.TwoPointer(intArray60, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem13.BruteForce(intArray60, 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem67 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem68 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem68.BruteForce(intArray71, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem67.Hashmap(intArray71, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem76 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem77 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem77.BruteForce(intArray80, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem76.Hashmap(intArray80, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem67.BruteForce(intArray80, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem13.BruteForce(intArray80, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem0.TwoPointer(intArray80, (int) (short) 0);
        java.lang.Class<?> wildcardClass91 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test2506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2506");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        int[] intArray34 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem20.TwoPointer(intArray34, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem38 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem38.TwoPointer(intArray45, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem37.TwoPointer(intArray45, (int) (byte) 0);
        int[] intArray54 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem37.Hashmap(intArray54, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem20.TwoPointer(intArray54, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem0.Hashmap(intArray54, (int) (short) -1);
        java.lang.Class<?> wildcardClass61 = intArray54.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test2507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2507");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray9 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem6.BruteForce(intArray9, (int) '#');
        int[] intArray15 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem6.BruteForce(intArray15, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem6.Hashmap(intArray21, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray35 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem26.BruteForce(intArray35, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem6.TwoPointer(intArray35, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.TwoPointer(intArray35, (int) (short) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray50 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem43.TwoPointer(intArray50, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem42.TwoPointer(intArray50, (int) (byte) 0);
        int[] intArray56 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem42.TwoPointer(intArray56, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem59.BruteForce(intArray62, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem65 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem65.BruteForce(intArray68, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem59.TwoPointer(intArray68, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem73 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem74.BruteForce(intArray77, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem73.Hashmap(intArray77, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem82 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray85 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem82.BruteForce(intArray85, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem73.TwoPointer(intArray85, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem59.BruteForce(intArray85, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem42.Hashmap(intArray85, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList95 = threeSumProblem0.Hashmap(intArray85, (int) (byte) -1);
        java.lang.Class<?> wildcardClass96 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0]");
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(intListList93);
        org.junit.Assert.assertNotNull(intListList95);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test2508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2508");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem14.BruteForce(intArray17, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem13.Hashmap(intArray17, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem22 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem23 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray30 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem23.TwoPointer(intArray30, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem22.TwoPointer(intArray30, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem13.BruteForce(intArray30, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem0.BruteForce(intArray30, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem40.BruteForce(intArray43, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem39.Hashmap(intArray43, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem49.BruteForce(intArray52, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem48.Hashmap(intArray52, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem57 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem57.BruteForce(intArray60, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem48.TwoPointer(intArray60, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem65 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem66 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem66.BruteForce(intArray69, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem65.Hashmap(intArray69, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem74.BruteForce(intArray77, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem65.TwoPointer(intArray77, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem48.Hashmap(intArray77, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem39.BruteForce(intArray77, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem0.TwoPointer(intArray77, 0);
        int[] intArray88 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem0.TwoPointer(intArray88, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intListList87);
    }

    @Test
    public void test2509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2509");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem2 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList7 = threeSumProblem2.BruteForce(intArray5, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem1.Hashmap(intArray5, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem11 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray18 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem11.TwoPointer(intArray18, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem10.TwoPointer(intArray18, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem23 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem24 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem24.BruteForce(intArray27, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem23.Hashmap(intArray27, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem32 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem32.BruteForce(intArray35, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem23.TwoPointer(intArray35, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem41.BruteForce(intArray44, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem40.Hashmap(intArray44, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem49.BruteForce(intArray52, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem40.TwoPointer(intArray52, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem23.Hashmap(intArray52, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem10.Hashmap(intArray52, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem61 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem62 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray69 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem62.TwoPointer(intArray69, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem61.TwoPointer(intArray69, (int) (byte) 0);
        int[] intArray75 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem61.TwoPointer(intArray75, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem10.BruteForce(intArray75, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem1.Hashmap(intArray75, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem0.Hashmap(intArray75, 100);
        java.lang.Class<?> wildcardClass84 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList7);
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0]");
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test2510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2510");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray29 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem20.BruteForce(intArray29, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem0.TwoPointer(intArray29, (int) ' ');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray42 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem35.TwoPointer(intArray42, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem34.TwoPointer(intArray42, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem47 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem48.BruteForce(intArray51, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem47.Hashmap(intArray51, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem57 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray64 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem57.TwoPointer(intArray64, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem56.TwoPointer(intArray64, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem47.BruteForce(intArray64, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem34.BruteForce(intArray64, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem73 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem74.BruteForce(intArray77, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem73.Hashmap(intArray77, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem82 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem83 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray86 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem83.BruteForce(intArray86, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem82.Hashmap(intArray86, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem73.BruteForce(intArray86, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem34.TwoPointer(intArray86, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem0.TwoPointer(intArray86, (int) 'a');
        java.lang.Class<?> wildcardClass97 = intArray86.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(intListList96);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test2511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2511");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        int[] intArray37 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray37, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.Hashmap(intArray37, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem42.BruteForce(intArray45, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem0.Hashmap(intArray45, (int) (byte) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem50 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem50.BruteForce(intArray53, (int) '#');
        int[] intArray59 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem50.BruteForce(intArray59, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem62 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem62.BruteForce(intArray65, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem50.Hashmap(intArray65, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem70 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray79 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem70.BruteForce(intArray79, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem50.TwoPointer(intArray79, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem0.Hashmap(intArray79, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem86 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem87 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray90 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem87.BruteForce(intArray90, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem86.BruteForce(intArray90, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem0.BruteForce(intArray90, (int) (byte) 10);
        java.lang.Class<?> wildcardClass97 = intListList96.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(intListList96);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test2512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2512");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        int[] intArray13 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem0.TwoPointer(intArray13, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem16 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem17.TwoPointer(intArray24, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem16.TwoPointer(intArray24, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem0.BruteForce(intArray24, (int) (short) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem31.TwoPointer(intArray38, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray49 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem42.TwoPointer(intArray49, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem41.TwoPointer(intArray49, (int) (byte) 0);
        int[] intArray58 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem41.Hashmap(intArray58, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem31.BruteForce(intArray58, (int) (byte) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem0.BruteForce(intArray58, (int) (byte) 0);
        java.lang.Class<?> wildcardClass65 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test2513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2513");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem9.TwoPointer(intArray21, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem0.Hashmap(intArray21, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem28 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem29.BruteForce(intArray32, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem28.Hashmap(intArray32, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem37.BruteForce(intArray40, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem28.TwoPointer(intArray40, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem45 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray53 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem46.TwoPointer(intArray53, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem45.TwoPointer(intArray53, (int) (byte) 0);
        int[] intArray62 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem45.Hashmap(intArray62, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem28.Hashmap(intArray62, (int) ' ');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem67 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem68 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray75 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem68.TwoPointer(intArray75, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem67.TwoPointer(intArray75, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem28.Hashmap(intArray75, (int) (byte) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem82 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem83 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray90 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem83.TwoPointer(intArray90, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem82.TwoPointer(intArray90, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem28.Hashmap(intArray90, (int) (short) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList98 = threeSumProblem0.Hashmap(intArray90, 10);
        java.lang.Class<?> wildcardClass99 = intListList98.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(intListList96);
        org.junit.Assert.assertNotNull(intListList98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test2514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2514");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem10.TwoPointer(intArray17, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray29 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem20.BruteForce(intArray29, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem32 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem32.BruteForce(intArray35, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray35, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem41.BruteForce(intArray44, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem40.Hashmap(intArray44, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem50 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray57 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem50.TwoPointer(intArray57, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem49.TwoPointer(intArray57, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem40.BruteForce(intArray57, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem20.TwoPointer(intArray57, (int) (byte) 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem10.TwoPointer(intArray57, (int) (byte) 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem0.Hashmap(intArray57, 1);
        int[] intArray70 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem0.BruteForce(intArray70, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
    }

    @Test
    public void test2515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2515");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray14 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray14, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray25 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem18.TwoPointer(intArray25, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem17.TwoPointer(intArray25, (int) (byte) 0);
        int[] intArray34 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem17.Hashmap(intArray34, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem0.TwoPointer(intArray34, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray47 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem40.TwoPointer(intArray47, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem39.TwoPointer(intArray47, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray60 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem53.TwoPointer(intArray60, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem52.TwoPointer(intArray60, (int) (byte) 0);
        int[] intArray69 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem52.Hashmap(intArray69, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem39.Hashmap(intArray69, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem74.BruteForce(intArray77, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem39.TwoPointer(intArray77, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem0.BruteForce(intArray77, (int) (short) -1);
        int[] intArray84 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem0.TwoPointer(intArray84, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0]");
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
    }

    @Test
    public void test2516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2516");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem11 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray14 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem11.BruteForce(intArray14, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList18 = threeSumProblem10.Hashmap(intArray14, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem19 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem20.BruteForce(intArray23, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem19.Hashmap(intArray23, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem10.BruteForce(intArray23, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem31.TwoPointer(intArray38, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem30.TwoPointer(intArray38, (int) (byte) 0);
        int[] intArray47 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem30.Hashmap(intArray47, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem10.BruteForce(intArray47, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem52.BruteForce(intArray55, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem10.Hashmap(intArray55, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem60.BruteForce(intArray63, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem10.TwoPointer(intArray63, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem9.TwoPointer(intArray63, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem0.Hashmap(intArray63, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem72 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray79 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem72.TwoPointer(intArray79, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem0.Hashmap(intArray79, 1);
        java.lang.Class<?> wildcardClass84 = intArray79.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intListList18);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test2517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2517");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem17.Hashmap(intArray21, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem26.BruteForce(intArray29, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem17.TwoPointer(intArray29, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem0.Hashmap(intArray29, (int) 'a');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem37.BruteForce(intArray40, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem36.Hashmap(intArray40, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem45 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem45.BruteForce(intArray48, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem36.TwoPointer(intArray48, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem54.BruteForce(intArray57, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem53.Hashmap(intArray57, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem62 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem62.BruteForce(intArray65, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem53.TwoPointer(intArray65, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem36.Hashmap(intArray65, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem0.Hashmap(intArray65, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem75 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem75.BruteForce(intArray78, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem74.Hashmap(intArray78, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem0.TwoPointer(intArray78, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem85 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray92 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem85.TwoPointer(intArray92, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem0.TwoPointer(intArray92, (int) (short) 0);
        java.lang.Class<?> wildcardClass97 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(intListList96);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test2518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2518");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.BruteForce(intArray4, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem10.TwoPointer(intArray17, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem9.TwoPointer(intArray17, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem0.TwoPointer(intArray17, (int) (byte) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem24 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray31 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem24.TwoPointer(intArray31, (int) (short) 1);
        int[] intArray37 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem24.TwoPointer(intArray37, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem41.BruteForce(intArray44, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem40.BruteForce(intArray44, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem24.Hashmap(intArray44, 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem0.Hashmap(intArray44, (int) (short) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem53.BruteForce(intArray56, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem59.BruteForce(intArray62, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem53.TwoPointer(intArray62, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem0.Hashmap(intArray62, (int) '#');
        java.lang.Class<?> wildcardClass69 = intArray62.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test2519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2519");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray27 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem20.TwoPointer(intArray27, (int) (short) 1);
        int[] intArray33 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem20.TwoPointer(intArray33, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem37.BruteForce(intArray40, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem36.Hashmap(intArray40, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem45 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray53 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem46.TwoPointer(intArray53, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem45.TwoPointer(intArray53, (int) (byte) 0);
        int[] intArray62 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem45.Hashmap(intArray62, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem65 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem66 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray73 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem66.TwoPointer(intArray73, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem65.TwoPointer(intArray73, (int) (byte) 0);
        int[] intArray82 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem65.Hashmap(intArray82, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem45.Hashmap(intArray82, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem36.Hashmap(intArray82, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem20.BruteForce(intArray82, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem0.Hashmap(intArray82, (int) '4');
        java.lang.Class<?> wildcardClass93 = intArray82.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test2520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2520");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        int[] intArray37 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray37, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.Hashmap(intArray37, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem42.BruteForce(intArray45, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem0.Hashmap(intArray45, (int) (byte) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem50 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem50.BruteForce(intArray53, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem56.BruteForce(intArray59, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem50.TwoPointer(intArray59, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem64 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem65 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem65.BruteForce(intArray68, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem64.Hashmap(intArray68, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem73 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem73.BruteForce(intArray76, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem64.TwoPointer(intArray76, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem50.BruteForce(intArray76, (int) ' ');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem83 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem84 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray87 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem84.BruteForce(intArray87, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem83.BruteForce(intArray87, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem50.Hashmap(intArray87, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList95 = threeSumProblem0.Hashmap(intArray87, 1);
        int[] intArray96 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList98 = threeSumProblem0.TwoPointer(intArray96, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(intListList93);
        org.junit.Assert.assertNotNull(intListList95);
    }

    @Test
    public void test2521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2521");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem16 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem16.BruteForce(intArray19, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem10.TwoPointer(intArray19, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem24 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray33 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem24.BruteForce(intArray33, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem10.BruteForce(intArray33, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem0.BruteForce(intArray33, 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray49 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem40.BruteForce(intArray49, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem52.BruteForce(intArray55, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem40.Hashmap(intArray55, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem60.BruteForce(intArray63, (int) '#');
        int[] intArray69 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem60.BruteForce(intArray69, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem40.TwoPointer(intArray69, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem0.Hashmap(intArray69, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem76 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem77 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray84 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem77.TwoPointer(intArray84, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem76.TwoPointer(intArray84, (int) (byte) 0);
        int[] intArray90 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem76.TwoPointer(intArray90, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem0.TwoPointer(intArray90, (int) (short) 10);
        java.lang.Class<?> wildcardClass95 = intListList94.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0]");
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test2522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2522");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem2 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList7 = threeSumProblem2.BruteForce(intArray5, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem1.Hashmap(intArray5, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem11 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray14 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem11.BruteForce(intArray14, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList18 = threeSumProblem10.Hashmap(intArray14, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem1.BruteForce(intArray14, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem22 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem22.BruteForce(intArray25, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem21.Hashmap(intArray25, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem31.TwoPointer(intArray38, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem30.TwoPointer(intArray38, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem21.BruteForce(intArray38, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem1.TwoPointer(intArray38, 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem47 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem47.BruteForce(intArray50, (int) '#');
        int[] intArray56 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem47.BruteForce(intArray56, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem59.BruteForce(intArray62, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem47.Hashmap(intArray62, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem67 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem67.BruteForce(intArray70, (int) '#');
        int[] intArray76 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem67.BruteForce(intArray76, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem47.BruteForce(intArray76, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem81 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem82 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray89 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem82.TwoPointer(intArray89, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem81.TwoPointer(intArray89, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList95 = threeSumProblem47.Hashmap(intArray89, (int) (short) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList97 = threeSumProblem1.Hashmap(intArray89, (int) (short) 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList99 = threeSumProblem0.TwoPointer(intArray89, 0);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList7);
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intListList18);
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(intListList93);
        org.junit.Assert.assertNotNull(intListList95);
        org.junit.Assert.assertNotNull(intListList97);
        org.junit.Assert.assertNotNull(intListList99);
    }

    @Test
    public void test2523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2523");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem17.BruteForce(intArray21, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem0.TwoPointer(intArray21, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem28 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem29.BruteForce(intArray32, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem28.Hashmap(intArray32, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem0.BruteForce(intArray32, (int) (byte) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem39.BruteForce(intArray42, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem0.TwoPointer(intArray42, (int) (byte) 10);
        int[] intArray47 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem0.Hashmap(intArray47, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
    }

    @Test
    public void test2524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2524");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem21.BruteForce(intArray24, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem20.Hashmap(intArray24, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem0.TwoPointer(intArray24, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem32 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem32.BruteForce(intArray35, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem31.Hashmap(intArray35, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem41.BruteForce(intArray44, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem40.Hashmap(intArray44, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem31.BruteForce(intArray44, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem0.BruteForce(intArray44, (int) ' ');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray62 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem55.TwoPointer(intArray62, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem54.TwoPointer(intArray62, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem67 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem68 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem68.BruteForce(intArray71, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem67.Hashmap(intArray71, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem76 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem77 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray84 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem77.TwoPointer(intArray84, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem76.TwoPointer(intArray84, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem67.BruteForce(intArray84, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem54.BruteForce(intArray84, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem53.Hashmap(intArray84, (int) (byte) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem0.BruteForce(intArray84, (int) (short) 0);
        java.lang.Class<?> wildcardClass97 = intArray84.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(intListList96);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test2525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2525");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.BruteForce(intArray4, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem10.TwoPointer(intArray17, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem9.TwoPointer(intArray17, (int) (byte) 0);
        int[] intArray26 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem9.Hashmap(intArray26, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem30.BruteForce(intArray33, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem29.Hashmap(intArray33, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem38 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem39.BruteForce(intArray42, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem38.Hashmap(intArray42, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem29.BruteForce(intArray42, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem9.Hashmap(intArray42, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem0.TwoPointer(intArray42, (int) (byte) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray61 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem54.TwoPointer(intArray61, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem53.TwoPointer(intArray61, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem0.TwoPointer(intArray61, (int) (short) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem68 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem68.BruteForce(intArray71, (int) '#');
        int[] intArray77 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem68.BruteForce(intArray77, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem0.BruteForce(intArray77, 100);
        java.lang.Class<?> wildcardClass82 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test2526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2526");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        int[] intArray34 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem20.TwoPointer(intArray34, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem38 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem38.TwoPointer(intArray45, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem37.TwoPointer(intArray45, (int) (byte) 0);
        int[] intArray54 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem37.Hashmap(intArray54, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem20.TwoPointer(intArray54, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem0.Hashmap(intArray54, (int) (byte) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem61 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray68 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem61.TwoPointer(intArray68, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem0.Hashmap(intArray68, (int) 'a');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem73 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray81 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem74.TwoPointer(intArray81, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem73.TwoPointer(intArray81, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem0.TwoPointer(intArray81, (int) (byte) 100);
        java.lang.Class<?> wildcardClass88 = intListList87.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test2527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2527");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem21.BruteForce(intArray24, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem20.Hashmap(intArray24, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem0.TwoPointer(intArray24, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem32 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem32.BruteForce(intArray35, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem31.Hashmap(intArray35, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem41.BruteForce(intArray44, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem40.Hashmap(intArray44, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem31.BruteForce(intArray44, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem0.BruteForce(intArray44, (int) ' ');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem53.BruteForce(intArray56, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray66 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem59.TwoPointer(intArray66, (int) (short) 1);
        int[] intArray72 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem59.TwoPointer(intArray72, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem75 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem76 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray83 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem76.TwoPointer(intArray83, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem75.TwoPointer(intArray83, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem59.BruteForce(intArray83, (int) (short) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem53.Hashmap(intArray83, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem0.TwoPointer(intArray83, (int) ' ');
        int[] intArray94 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem0.BruteForce(intArray94, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(intListList93);
    }

    @Test
    public void test2528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2528");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray27 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem20.TwoPointer(intArray27, (int) (short) 1);
        int[] intArray33 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem20.TwoPointer(intArray33, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray45 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem36.BruteForce(intArray45, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem48.BruteForce(intArray51, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem36.Hashmap(intArray51, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray65 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem56.BruteForce(intArray65, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem36.BruteForce(intArray65, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem70 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray77 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem70.TwoPointer(intArray77, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem36.TwoPointer(intArray77, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem20.BruteForce(intArray77, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem0.BruteForce(intArray77, (int) (short) 100);
        java.lang.Class<?> wildcardClass86 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test2529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2529");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem2 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList7 = threeSumProblem2.BruteForce(intArray5, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem1.Hashmap(intArray5, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem1.TwoPointer(intArray13, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem19 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList24 = threeSumProblem19.BruteForce(intArray22, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem18.Hashmap(intArray22, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem27.BruteForce(intArray30, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem18.TwoPointer(intArray30, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem1.Hashmap(intArray30, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem0.Hashmap(intArray30, (int) (byte) 100);
        java.lang.Class<?> wildcardClass39 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList7);
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList24);
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test2530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2530");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem7 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem7.BruteForce(intArray10, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem6.Hashmap(intArray10, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem15 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem15.BruteForce(intArray18, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem6.TwoPointer(intArray18, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem23 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem24 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem24.BruteForce(intArray27, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem23.BruteForce(intArray27, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem6.TwoPointer(intArray27, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem34.Hashmap(intArray38, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem44 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem44.BruteForce(intArray47, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem43.Hashmap(intArray47, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem34.BruteForce(intArray47, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray62 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem55.TwoPointer(intArray62, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem54.TwoPointer(intArray62, (int) (byte) 0);
        int[] intArray71 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem54.Hashmap(intArray71, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem34.BruteForce(intArray71, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem76 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem76.BruteForce(intArray79, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem34.Hashmap(intArray79, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem84 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray87 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem84.BruteForce(intArray87, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem34.TwoPointer(intArray87, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem6.TwoPointer(intArray87, (int) (short) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList95 = threeSumProblem0.TwoPointer(intArray87, 10);
        java.lang.Class<?> wildcardClass96 = intArray87.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(intListList93);
        org.junit.Assert.assertNotNull(intListList95);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test2531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2531");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem21.BruteForce(intArray24, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem20.Hashmap(intArray24, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem0.TwoPointer(intArray24, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem32 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem32.BruteForce(intArray35, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem31.Hashmap(intArray35, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem41.BruteForce(intArray44, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem40.Hashmap(intArray44, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem49.BruteForce(intArray52, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem40.TwoPointer(intArray52, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem31.Hashmap(intArray52, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem0.BruteForce(intArray52, 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem61 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray68 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem61.TwoPointer(intArray68, (int) (short) 1);
        int[] intArray74 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem61.TwoPointer(intArray74, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem0.BruteForce(intArray74, (-1));
        java.lang.Class<?> wildcardClass79 = intArray74.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test2532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2532");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray14 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray14, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray25 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem18.TwoPointer(intArray25, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem17.TwoPointer(intArray25, (int) (byte) 0);
        int[] intArray34 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem17.Hashmap(intArray34, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem0.TwoPointer(intArray34, 0);
        java.lang.Class<?> wildcardClass39 = intListList38.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0]");
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test2533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2533");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem7 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray14 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem7.TwoPointer(intArray14, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList18 = threeSumProblem6.TwoPointer(intArray14, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem19 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem20.BruteForce(intArray23, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem19.Hashmap(intArray23, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem28 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray36 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem29.TwoPointer(intArray36, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem28.TwoPointer(intArray36, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem19.BruteForce(intArray36, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem6.BruteForce(intArray36, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem45 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem46.BruteForce(intArray49, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem45.Hashmap(intArray49, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem55.BruteForce(intArray58, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem54.Hashmap(intArray58, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem45.BruteForce(intArray58, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem6.TwoPointer(intArray58, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem0.TwoPointer(intArray58, (int) (byte) 1);
        java.lang.Class<?> wildcardClass69 = intListList68.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intListList18);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test2534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2534");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.BruteForce(intArray4, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray18 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem9.BruteForce(intArray18, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem0.BruteForce(intArray18, (int) (short) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem23 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem24 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem24.BruteForce(intArray27, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem23.Hashmap(intArray27, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem32 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem32.BruteForce(intArray35, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem23.TwoPointer(intArray35, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem41.BruteForce(intArray44, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem40.Hashmap(intArray44, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem50 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem50.BruteForce(intArray53, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem49.Hashmap(intArray53, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem58 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem59.BruteForce(intArray62, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem58.Hashmap(intArray62, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem49.BruteForce(intArray62, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem69 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem70 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray77 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem70.TwoPointer(intArray77, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem69.TwoPointer(intArray77, (int) (byte) 0);
        int[] intArray86 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem69.Hashmap(intArray86, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem49.BruteForce(intArray86, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem40.TwoPointer(intArray86, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem23.Hashmap(intArray86, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem0.TwoPointer(intArray86, 10);
        int[] intArray97 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList99 = threeSumProblem0.Hashmap(intArray97, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(intListList96);
    }

    @Test
    public void test2535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2535");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem9.TwoPointer(intArray21, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem27.BruteForce(intArray30, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem26.BruteForce(intArray30, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem9.TwoPointer(intArray30, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem38 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem38.BruteForce(intArray41, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem37.Hashmap(intArray41, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem9.BruteForce(intArray41, (int) (byte) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem48.BruteForce(intArray51, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem9.TwoPointer(intArray51, (int) (byte) 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem0.TwoPointer(intArray51, (int) ' ');
        java.lang.Class<?> wildcardClass58 = intArray51.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test2536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2536");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray29 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem20.BruteForce(intArray29, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem0.TwoPointer(intArray29, (int) ' ');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray41 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem34.TwoPointer(intArray41, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem44 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem44.BruteForce(intArray47, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem50 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem50.BruteForce(intArray53, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem44.TwoPointer(intArray53, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem34.BruteForce(intArray53, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem0.Hashmap(intArray53, 100);
        java.lang.Class<?> wildcardClass62 = intListList61.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test2537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2537");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.BruteForce(intArray4, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem10.TwoPointer(intArray17, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem9.TwoPointer(intArray17, (int) (byte) 0);
        int[] intArray26 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem9.Hashmap(intArray26, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem30.BruteForce(intArray33, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem29.Hashmap(intArray33, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem9.TwoPointer(intArray33, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.Hashmap(intArray33, (int) (byte) 10);
        int[] intArray47 = new int[] { (byte) 10, (byte) 100, 'a', '4', 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem0.TwoPointer(intArray47, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem50 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem50.BruteForce(intArray53, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem56.BruteForce(intArray59, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem50.TwoPointer(intArray59, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem64 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem65 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem65.BruteForce(intArray68, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem64.Hashmap(intArray68, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem73 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray81 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem74.TwoPointer(intArray81, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem73.TwoPointer(intArray81, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem64.BruteForce(intArray81, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem50.TwoPointer(intArray81, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem0.BruteForce(intArray81, (int) '#');
        int[] intArray92 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem0.TwoPointer(intArray92, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[1, 10, 52, 97, 100]");
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(intListList91);
    }

    @Test
    public void test2538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2538");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray16 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList18 = threeSumProblem13.BruteForce(intArray16, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem12.BruteForce(intArray16, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray30 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem21.BruteForce(intArray30, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem12.BruteForce(intArray30, (int) (short) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray46 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem37.BruteForce(intArray46, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem49.BruteForce(intArray52, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem37.Hashmap(intArray52, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem57 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem58 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem58.BruteForce(intArray61, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem57.Hashmap(intArray61, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem66 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem67 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray74 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem67.TwoPointer(intArray74, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem66.TwoPointer(intArray74, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem57.BruteForce(intArray74, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem37.TwoPointer(intArray74, (int) (byte) 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem0.Hashmap(intArray74, (int) (byte) 1);
        java.lang.Class<?> wildcardClass85 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList18);
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test2539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2539");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem16 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem16.BruteForce(intArray19, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem10.TwoPointer(intArray19, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem0.BruteForce(intArray19, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray35 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem26.BruteForce(intArray35, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem0.TwoPointer(intArray35, (int) ' ');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem40.BruteForce(intArray43, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem47 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem47.BruteForce(intArray50, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem46.Hashmap(intArray50, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray63 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem56.TwoPointer(intArray63, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem55.TwoPointer(intArray63, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem46.BruteForce(intArray63, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem40.Hashmap(intArray63, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem0.TwoPointer(intArray63, (int) (short) 10);
        java.lang.Class<?> wildcardClass74 = intArray63.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test2540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2540");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.BruteForce(intArray4, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray18 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem9.BruteForce(intArray18, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem0.BruteForce(intArray18, (int) (short) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem23 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem24 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem24.BruteForce(intArray27, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem23.Hashmap(intArray27, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem32 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem33 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem33.BruteForce(intArray36, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem32.Hashmap(intArray36, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem41.BruteForce(intArray44, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem32.TwoPointer(intArray44, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem23.Hashmap(intArray44, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem52.BruteForce(intArray55, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem51.Hashmap(intArray55, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem60.BruteForce(intArray63, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem51.TwoPointer(intArray63, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem23.TwoPointer(intArray63, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem70 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem71 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem71.BruteForce(intArray74, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem70.BruteForce(intArray74, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem23.Hashmap(intArray74, (int) (short) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem0.BruteForce(intArray74, (int) (short) 100);
        java.lang.Class<?> wildcardClass83 = intListList82.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test2541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2541");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        int[] intArray37 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray37, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.Hashmap(intArray37, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem42.BruteForce(intArray45, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem0.Hashmap(intArray45, (int) (byte) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem50 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem51.BruteForce(intArray54, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem50.Hashmap(intArray54, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem0.Hashmap(intArray54, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem61 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray68 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem61.TwoPointer(intArray68, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem0.BruteForce(intArray68, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem73 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray80 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem73.TwoPointer(intArray80, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem0.BruteForce(intArray80, (int) '#');
        java.lang.Class<?> wildcardClass85 = intArray80.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test2542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2542");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem10.TwoPointer(intArray17, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem9.TwoPointer(intArray17, (int) (byte) 0);
        int[] intArray26 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem9.Hashmap(intArray26, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray37 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem30.TwoPointer(intArray37, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem29.TwoPointer(intArray37, (int) (byte) 0);
        int[] intArray46 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem29.Hashmap(intArray46, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem9.Hashmap(intArray46, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem0.Hashmap(intArray46, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray62 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem55.TwoPointer(intArray62, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem54.TwoPointer(intArray62, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem67 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem68 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem68.BruteForce(intArray71, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem67.Hashmap(intArray71, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem76 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem77 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray84 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem77.TwoPointer(intArray84, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem76.TwoPointer(intArray84, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem67.BruteForce(intArray84, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem54.BruteForce(intArray84, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem53.Hashmap(intArray84, (int) (byte) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem0.BruteForce(intArray84, (int) (byte) -1);
        int[] intArray97 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList99 = threeSumProblem0.Hashmap(intArray97, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(intListList96);
    }

    @Test
    public void test2543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2543");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray9 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem6.BruteForce(intArray9, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList13 = threeSumProblem0.TwoPointer(intArray9, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem15 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem15.BruteForce(intArray18, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem14.Hashmap(intArray18, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem23 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem24 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray31 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem24.TwoPointer(intArray31, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem23.TwoPointer(intArray31, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem14.BruteForce(intArray31, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem0.TwoPointer(intArray31, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem41.BruteForce(intArray44, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem40.Hashmap(intArray44, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem49.BruteForce(intArray52, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem40.TwoPointer(intArray52, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem57 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem58 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray65 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem58.TwoPointer(intArray65, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem57.TwoPointer(intArray65, (int) (byte) 0);
        int[] intArray74 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem57.Hashmap(intArray74, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem40.Hashmap(intArray74, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem0.TwoPointer(intArray74, (int) (short) 10);
        int[] intArray81 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem0.BruteForce(intArray81, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intListList13);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
    }

    @Test
    public void test2544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2544");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem17.BruteForce(intArray21, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem0.TwoPointer(intArray21, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem28 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem29.BruteForce(intArray32, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem28.Hashmap(intArray32, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem0.BruteForce(intArray32, (int) (byte) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem39.BruteForce(intArray42, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem0.TwoPointer(intArray42, (int) (byte) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem47 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem48.BruteForce(intArray51, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem47.Hashmap(intArray51, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem56.BruteForce(intArray59, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem47.TwoPointer(intArray59, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem0.Hashmap(intArray59, 1);
        int[] intArray66 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem0.Hashmap(intArray66, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intListList65);
    }

    @Test
    public void test2545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2545");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray9 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem6.BruteForce(intArray9, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList13 = threeSumProblem0.TwoPointer(intArray9, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem14.BruteForce(intArray17, (int) '#');
        int[] intArray23 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem14.BruteForce(intArray23, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem0.BruteForce(intArray23, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem28 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray36 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem29.TwoPointer(intArray36, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem28.TwoPointer(intArray36, (int) (byte) 0);
        int[] intArray42 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem28.TwoPointer(intArray42, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem45 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem45.BruteForce(intArray48, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem51.BruteForce(intArray54, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem45.TwoPointer(intArray54, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem60.BruteForce(intArray63, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem59.Hashmap(intArray63, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem68 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem68.BruteForce(intArray71, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem59.TwoPointer(intArray71, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem45.BruteForce(intArray71, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem28.Hashmap(intArray71, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem0.BruteForce(intArray71, (int) '#');
        int[] intArray82 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem0.BruteForce(intArray82, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intListList13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0]");
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
    }

    @Test
    public void test2546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2546");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem16 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem16.BruteForce(intArray19, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem10.TwoPointer(intArray19, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem0.BruteForce(intArray19, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray35 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem26.BruteForce(intArray35, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem38 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem38.BruteForce(intArray41, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem26.Hashmap(intArray41, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem47 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem47.BruteForce(intArray50, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem46.Hashmap(intArray50, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem55.BruteForce(intArray58, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem46.TwoPointer(intArray58, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem26.Hashmap(intArray58, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem0.BruteForce(intArray58, (int) 'a');
        int[] intArray67 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem0.BruteForce(intArray67, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
    }

    @Test
    public void test2547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2547");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem11 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray18 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem11.TwoPointer(intArray18, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem10.TwoPointer(intArray18, (int) (byte) 0);
        int[] intArray27 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem10.Hashmap(intArray27, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem31.TwoPointer(intArray38, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem30.TwoPointer(intArray38, (int) (byte) 0);
        int[] intArray47 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem30.Hashmap(intArray47, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem10.Hashmap(intArray47, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem52.BruteForce(intArray55, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem10.Hashmap(intArray55, (int) (byte) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem61 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem61.BruteForce(intArray64, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem60.Hashmap(intArray64, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem10.Hashmap(intArray64, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem0.BruteForce(intArray64, 0);
        int[] intArray73 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem0.TwoPointer(intArray73, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
    }

    @Test
    public void test2548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2548");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray14 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray14, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem17.BruteForce(intArray20, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem23 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray26 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem23.BruteForce(intArray26, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem17.TwoPointer(intArray26, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem32 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem32.BruteForce(intArray35, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem31.Hashmap(intArray35, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem40.BruteForce(intArray43, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem31.TwoPointer(intArray43, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem17.BruteForce(intArray43, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem0.Hashmap(intArray43, 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray61 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem52.BruteForce(intArray61, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem0.Hashmap(intArray61, (int) (short) 10);
        java.lang.Class<?> wildcardClass66 = intListList65.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0]");
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test2549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2549");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem14.BruteForce(intArray17, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem13.Hashmap(intArray17, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem22 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem22.BruteForce(intArray25, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem13.TwoPointer(intArray25, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem31.BruteForce(intArray34, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem30.Hashmap(intArray34, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem39.BruteForce(intArray42, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem30.TwoPointer(intArray42, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem13.Hashmap(intArray42, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem0.Hashmap(intArray42, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray60 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem51.BruteForce(intArray60, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem0.Hashmap(intArray60, (int) (short) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem65 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem65.BruteForce(intArray68, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem0.Hashmap(intArray68, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem73 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem74.BruteForce(intArray77, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem73.Hashmap(intArray77, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem82 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem83 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray86 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem83.BruteForce(intArray86, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem82.Hashmap(intArray86, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem73.BruteForce(intArray86, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem0.BruteForce(intArray86, (int) (byte) 100);
        java.lang.Class<?> wildcardClass95 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test2550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2550");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem14.BruteForce(intArray17, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem13.Hashmap(intArray17, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem22 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem22.BruteForce(intArray25, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem13.TwoPointer(intArray25, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem31.BruteForce(intArray34, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem30.Hashmap(intArray34, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem39.BruteForce(intArray42, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem30.TwoPointer(intArray42, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem13.Hashmap(intArray42, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem0.Hashmap(intArray42, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem51.BruteForce(intArray54, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem57 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem58 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem58.BruteForce(intArray61, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem57.Hashmap(intArray61, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem66 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem67 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray74 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem67.TwoPointer(intArray74, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem66.TwoPointer(intArray74, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem57.BruteForce(intArray74, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem51.Hashmap(intArray74, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem0.BruteForce(intArray74, 0);
        int[] intArray85 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem0.Hashmap(intArray85, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
    }

    @Test
    public void test2551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2551");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        int[] intArray13 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem0.TwoPointer(intArray13, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem16 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem17.BruteForce(intArray20, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList24 = threeSumProblem16.BruteForce(intArray20, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem0.Hashmap(intArray20, 100);
        int[] intArray27 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem0.BruteForce(intArray27, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intListList24);
        org.junit.Assert.assertNotNull(intListList26);
    }

    @Test
    public void test2552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2552");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray29 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem20.BruteForce(intArray29, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem0.TwoPointer(intArray29, (int) ' ');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray42 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem35.TwoPointer(intArray42, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem34.TwoPointer(intArray42, (int) (byte) 0);
        int[] intArray51 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem34.Hashmap(intArray51, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray62 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem55.TwoPointer(intArray62, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem54.TwoPointer(intArray62, (int) (byte) 0);
        int[] intArray71 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem54.Hashmap(intArray71, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem34.Hashmap(intArray71, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem76 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem76.BruteForce(intArray79, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem34.Hashmap(intArray79, (int) (byte) 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem0.Hashmap(intArray79, (int) (byte) 100);
        int[] intArray86 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem0.Hashmap(intArray86, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
    }

    @Test
    public void test2553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2553");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray20 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem13.TwoPointer(intArray20, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList24 = threeSumProblem0.Hashmap(intArray20, (int) (byte) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem25 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem26.BruteForce(intArray29, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem25.BruteForce(intArray29, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray42 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem35.TwoPointer(intArray42, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem34.TwoPointer(intArray42, (int) (byte) 0);
        int[] intArray51 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem34.Hashmap(intArray51, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem55.BruteForce(intArray58, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem54.Hashmap(intArray58, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem34.TwoPointer(intArray58, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem25.Hashmap(intArray58, (int) (byte) 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem0.BruteForce(intArray58, (int) (byte) -1);
        java.lang.Class<?> wildcardClass69 = intListList68.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intListList24);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test2554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2554");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.BruteForce(intArray13, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        int[] intArray37 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray37, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.BruteForce(intArray37, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem42.BruteForce(intArray45, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem0.Hashmap(intArray45, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem50 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem51.BruteForce(intArray54, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem50.BruteForce(intArray54, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray67 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem60.TwoPointer(intArray67, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem59.TwoPointer(intArray67, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem50.TwoPointer(intArray67, (int) (byte) 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem0.BruteForce(intArray67, (int) ' ');
        java.lang.Class<?> wildcardClass76 = intListList75.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test2555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2555");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem7 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray14 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem7.TwoPointer(intArray14, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList18 = threeSumProblem6.TwoPointer(intArray14, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem19 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem20.BruteForce(intArray23, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem19.Hashmap(intArray23, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem28 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem28.BruteForce(intArray31, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem19.TwoPointer(intArray31, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem37.BruteForce(intArray40, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem36.Hashmap(intArray40, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem45 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem45.BruteForce(intArray48, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem36.TwoPointer(intArray48, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem19.Hashmap(intArray48, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem6.Hashmap(intArray48, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem57 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem57.BruteForce(intArray60, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem6.TwoPointer(intArray60, (int) (short) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem0.Hashmap(intArray60, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem67 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem67.BruteForce(intArray70, (int) '#');
        int[] intArray76 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem67.BruteForce(intArray76, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem0.BruteForce(intArray76, 0);
        int[] intArray83 = new int[] { (short) 0, (short) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem0.Hashmap(intArray83, 100);
        int[] intArray86 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem0.BruteForce(intArray86, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intListList18);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 1]");
        org.junit.Assert.assertNotNull(intListList85);
    }

    @Test
    public void test2556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2556");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem14.TwoPointer(intArray21, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem13.TwoPointer(intArray21, (int) (byte) 0);
        int[] intArray30 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem13.Hashmap(intArray30, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem0.Hashmap(intArray30, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem41.BruteForce(intArray44, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem35.TwoPointer(intArray44, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem49.BruteForce(intArray52, (int) '#');
        int[] intArray58 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem49.BruteForce(intArray58, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem35.BruteForce(intArray58, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem0.TwoPointer(intArray58, (int) '4');
        int[] intArray71 = new int[] { (byte) 100, (short) 1, (short) 100, (byte) 0, (short) -1, (short) 10 };
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem0.TwoPointer(intArray71, 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem74.BruteForce(intArray77, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem0.TwoPointer(intArray77, (int) ' ');
        java.lang.Class<?> wildcardClass82 = intArray77.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0, 1, 10, 100, 100]");
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test2557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2557");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem21.BruteForce(intArray24, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem20.Hashmap(intArray24, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem0.TwoPointer(intArray24, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem32 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem32.BruteForce(intArray35, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem31.Hashmap(intArray35, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem41.BruteForce(intArray44, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem40.Hashmap(intArray44, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem49.BruteForce(intArray52, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem40.TwoPointer(intArray52, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem31.Hashmap(intArray52, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem0.BruteForce(intArray52, 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem61 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray68 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem61.TwoPointer(intArray68, (int) (short) 1);
        int[] intArray74 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem61.TwoPointer(intArray74, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem0.BruteForce(intArray74, (-1));
        java.lang.Class<?> wildcardClass79 = intListList78.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test2558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2558");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        int[] intArray13 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem0.TwoPointer(intArray13, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem16 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem17.TwoPointer(intArray24, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem16.TwoPointer(intArray24, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem0.BruteForce(intArray24, (int) (short) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem31.TwoPointer(intArray38, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray49 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem42.TwoPointer(intArray49, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem41.TwoPointer(intArray49, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem31.Hashmap(intArray49, (int) (byte) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem0.BruteForce(intArray49, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem58 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem59.BruteForce(intArray62, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem58.Hashmap(intArray62, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem67 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem67.BruteForce(intArray70, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem58.TwoPointer(intArray70, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem75 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem76 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray83 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem76.TwoPointer(intArray83, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem75.TwoPointer(intArray83, (int) (byte) 0);
        int[] intArray92 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem75.Hashmap(intArray92, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem58.Hashmap(intArray92, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList98 = threeSumProblem0.TwoPointer(intArray92, (int) '#');
        java.lang.Class<?> wildcardClass99 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(intListList96);
        org.junit.Assert.assertNotNull(intListList98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test2559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2559");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem21.BruteForce(intArray24, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem20.Hashmap(intArray24, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem30.BruteForce(intArray33, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem29.Hashmap(intArray33, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.BruteForce(intArray33, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.Hashmap(intArray33, (-1));
        int[] intArray45 = new int[] { (short) 10, (short) 100, (byte) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem0.BruteForce(intArray45, (int) ' ');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray56 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem49.TwoPointer(intArray56, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem48.TwoPointer(intArray56, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem61 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem62 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray69 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem62.TwoPointer(intArray69, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem61.TwoPointer(intArray69, (int) (byte) 0);
        int[] intArray78 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem61.Hashmap(intArray78, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem48.Hashmap(intArray78, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem0.Hashmap(intArray78, (int) (byte) -1);
        int[] intArray85 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem0.Hashmap(intArray85, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[10, 100, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
    }

    @Test
    public void test2560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2560");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        int[] intArray13 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem0.TwoPointer(intArray13, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem16 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem17.TwoPointer(intArray24, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem16.TwoPointer(intArray24, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem0.BruteForce(intArray24, (int) (short) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem31.TwoPointer(intArray38, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray49 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem42.TwoPointer(intArray49, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem41.TwoPointer(intArray49, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem31.Hashmap(intArray49, (int) (byte) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem0.BruteForce(intArray49, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem58 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem59.BruteForce(intArray62, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem58.Hashmap(intArray62, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem67 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem67.BruteForce(intArray70, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem58.TwoPointer(intArray70, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem75 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem76 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray83 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem76.TwoPointer(intArray83, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem75.TwoPointer(intArray83, (int) (byte) 0);
        int[] intArray92 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem75.Hashmap(intArray92, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem58.Hashmap(intArray92, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList98 = threeSumProblem0.TwoPointer(intArray92, (int) '#');
        java.lang.Class<?> wildcardClass99 = intArray92.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(intListList96);
        org.junit.Assert.assertNotNull(intListList98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test2561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2561");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem2 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray9 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem2.TwoPointer(intArray9, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList13 = threeSumProblem1.TwoPointer(intArray9, (int) (byte) 0);
        int[] intArray15 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem1.TwoPointer(intArray15, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.TwoPointer(intArray15, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        int[] intArray34 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem20.TwoPointer(intArray34, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem38 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem38.TwoPointer(intArray45, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem37.TwoPointer(intArray45, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem50 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem51.BruteForce(intArray54, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem50.Hashmap(intArray54, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray67 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem60.TwoPointer(intArray67, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem59.TwoPointer(intArray67, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem50.BruteForce(intArray67, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem37.BruteForce(intArray67, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem20.TwoPointer(intArray67, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem0.BruteForce(intArray67, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem80 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem81 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray88 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem81.TwoPointer(intArray88, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem80.TwoPointer(intArray88, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem0.BruteForce(intArray88, (int) (byte) 10);
        int[] intArray95 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList97 = threeSumProblem0.TwoPointer(intArray95, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intListList13);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(intListList94);
    }

    @Test
    public void test2562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2562");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        int[] intArray13 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem0.TwoPointer(intArray13, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem16 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem17.BruteForce(intArray20, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList24 = threeSumProblem16.BruteForce(intArray20, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem0.Hashmap(intArray20, 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem28 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem28.BruteForce(intArray31, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem27.Hashmap(intArray31, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem37.BruteForce(intArray40, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem36.Hashmap(intArray40, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem27.BruteForce(intArray40, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem47 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray55 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem48.TwoPointer(intArray55, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem47.TwoPointer(intArray55, (int) (byte) 0);
        int[] intArray64 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem47.Hashmap(intArray64, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem27.BruteForce(intArray64, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem69 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem70 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem70.BruteForce(intArray73, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem69.Hashmap(intArray73, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem78 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem79 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem79.BruteForce(intArray82, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem78.Hashmap(intArray82, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem69.BruteForce(intArray82, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem27.TwoPointer(intArray82, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem0.BruteForce(intArray82, (int) '#');
        java.lang.Class<?> wildcardClass93 = intArray82.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intListList24);
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test2563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2563");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray18 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem9.BruteForce(intArray18, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem21.BruteForce(intArray24, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem9.Hashmap(intArray24, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem30.BruteForce(intArray33, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem29.Hashmap(intArray33, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem38 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem38.BruteForce(intArray41, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem29.TwoPointer(intArray41, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem9.Hashmap(intArray41, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray56 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem49.TwoPointer(intArray56, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem48.TwoPointer(intArray56, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem61 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem61.BruteForce(intArray64, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem67 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem67.BruteForce(intArray70, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem61.TwoPointer(intArray70, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem75 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem75.BruteForce(intArray78, (int) '#');
        int[] intArray84 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem75.BruteForce(intArray84, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem61.BruteForce(intArray84, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem48.Hashmap(intArray84, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem9.TwoPointer(intArray84, (int) (byte) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem0.TwoPointer(intArray84, (int) '4');
        java.lang.Class<?> wildcardClass95 = intListList94.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test2564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2564");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.BruteForce(intArray4, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem10.TwoPointer(intArray17, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem9.TwoPointer(intArray17, (int) (byte) 0);
        int[] intArray26 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem9.Hashmap(intArray26, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem30.BruteForce(intArray33, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem29.Hashmap(intArray33, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem38 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem39.BruteForce(intArray42, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem38.Hashmap(intArray42, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem29.BruteForce(intArray42, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem9.Hashmap(intArray42, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem0.TwoPointer(intArray42, (int) (byte) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray61 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem54.TwoPointer(intArray61, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem53.TwoPointer(intArray61, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem66 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray73 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem66.TwoPointer(intArray73, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem53.Hashmap(intArray73, (int) (byte) 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem0.BruteForce(intArray73, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem80 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem81 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray88 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem81.TwoPointer(intArray88, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem80.TwoPointer(intArray88, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem0.Hashmap(intArray88, (int) (short) -1);
        java.lang.Class<?> wildcardClass95 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test2565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2565");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem17.Hashmap(intArray21, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem26.BruteForce(intArray29, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem17.TwoPointer(intArray29, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem0.Hashmap(intArray29, (int) 'a');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem37.BruteForce(intArray40, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem36.Hashmap(intArray40, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem45 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem45.BruteForce(intArray48, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem36.TwoPointer(intArray48, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem54.BruteForce(intArray57, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem53.Hashmap(intArray57, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem62 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem62.BruteForce(intArray65, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem53.TwoPointer(intArray65, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem36.Hashmap(intArray65, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem0.Hashmap(intArray65, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem74.BruteForce(intArray77, (int) '#');
        int[] intArray83 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem74.BruteForce(intArray83, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem0.BruteForce(intArray83, 100);
        int[] intArray88 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem0.Hashmap(intArray88, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intListList87);
    }

    @Test
    public void test2566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2566");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem21.BruteForce(intArray24, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem20.Hashmap(intArray24, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem29.BruteForce(intArray32, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem20.TwoPointer(intArray32, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem0.Hashmap(intArray32, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem40.BruteForce(intArray43, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem39.Hashmap(intArray43, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem48.BruteForce(intArray51, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem39.TwoPointer(intArray51, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem57 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem57.BruteForce(intArray60, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem56.Hashmap(intArray60, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem65 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem65.BruteForce(intArray68, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem56.TwoPointer(intArray68, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem73 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem74.BruteForce(intArray77, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem73.Hashmap(intArray77, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem82 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray85 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem82.BruteForce(intArray85, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem73.TwoPointer(intArray85, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem56.Hashmap(intArray85, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem39.BruteForce(intArray85, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList95 = threeSumProblem0.TwoPointer(intArray85, (-1));
        int[] intArray96 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList98 = threeSumProblem0.Hashmap(intArray96, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(intListList93);
        org.junit.Assert.assertNotNull(intListList95);
    }

    @Test
    public void test2567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2567");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem14.TwoPointer(intArray21, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem13.TwoPointer(intArray21, (int) (byte) 0);
        int[] intArray30 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem13.Hashmap(intArray30, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem0.Hashmap(intArray30, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem41.BruteForce(intArray44, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem35.TwoPointer(intArray44, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem50 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem50.BruteForce(intArray53, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem49.Hashmap(intArray53, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem58 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem58.BruteForce(intArray61, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem49.TwoPointer(intArray61, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem35.BruteForce(intArray61, (int) ' ');
        int[] intArray74 = new int[] { (short) 100, (byte) 100, '4', (byte) -1, (byte) 0, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem35.Hashmap(intArray74, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem0.Hashmap(intArray74, (int) '4');
        java.lang.Class<?> wildcardClass79 = intArray74.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0, 52, 97, 100, 100]");
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test2568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2568");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem10.TwoPointer(intArray17, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem9.TwoPointer(intArray17, (int) (byte) 0);
        int[] intArray23 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem9.TwoPointer(intArray23, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem27.BruteForce(intArray30, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem26.Hashmap(intArray30, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem36.BruteForce(intArray39, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem35.Hashmap(intArray39, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem26.BruteForce(intArray39, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem47 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray54 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem47.TwoPointer(intArray54, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem46.TwoPointer(intArray54, (int) (byte) 0);
        int[] intArray63 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem46.Hashmap(intArray63, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem26.BruteForce(intArray63, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem9.Hashmap(intArray63, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem0.TwoPointer(intArray63, (int) 'a');
        java.lang.Class<?> wildcardClass72 = intListList71.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test2569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2569");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem2 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList7 = threeSumProblem2.BruteForce(intArray5, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem1.Hashmap(intArray5, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem11 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray14 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem11.BruteForce(intArray14, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList18 = threeSumProblem10.Hashmap(intArray14, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem1.BruteForce(intArray14, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem22 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray29 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem22.TwoPointer(intArray29, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem21.TwoPointer(intArray29, (int) (byte) 0);
        int[] intArray38 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem21.Hashmap(intArray38, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem1.BruteForce(intArray38, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem43.BruteForce(intArray46, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem1.Hashmap(intArray46, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem51.BruteForce(intArray54, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem1.TwoPointer(intArray54, (int) ' ');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray66 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem59.TwoPointer(intArray66, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem69 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem69.BruteForce(intArray72, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem75 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem75.BruteForce(intArray78, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem69.TwoPointer(intArray78, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem59.BruteForce(intArray78, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem1.BruteForce(intArray78, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem0.TwoPointer(intArray78, (int) (byte) 1);
        java.lang.Class<?> wildcardClass89 = intArray78.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList7);
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intListList18);
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test2570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2570");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray16 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList18 = threeSumProblem13.BruteForce(intArray16, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem12.BruteForce(intArray16, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray30 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem21.BruteForce(intArray30, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem12.BruteForce(intArray30, (int) (short) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem38 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem38.BruteForce(intArray41, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem37.Hashmap(intArray41, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem47 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem47.BruteForce(intArray50, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem46.Hashmap(intArray50, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem37.BruteForce(intArray50, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem57 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem58 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray65 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem58.TwoPointer(intArray65, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem57.TwoPointer(intArray65, (int) (byte) 0);
        int[] intArray74 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem57.Hashmap(intArray74, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem37.BruteForce(intArray74, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem79 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray86 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem79.TwoPointer(intArray86, (int) (short) 1);
        int[] intArray92 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem79.TwoPointer(intArray92, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem37.TwoPointer(intArray92, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList98 = threeSumProblem0.Hashmap(intArray92, (int) (short) 100);
        java.lang.Class<?> wildcardClass99 = intArray92.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList18);
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(intListList96);
        org.junit.Assert.assertNotNull(intListList98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test2571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2571");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.BruteForce(intArray4, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem10.TwoPointer(intArray17, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem9.TwoPointer(intArray17, (int) (byte) 0);
        int[] intArray26 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem9.Hashmap(intArray26, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem30.BruteForce(intArray33, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem29.Hashmap(intArray33, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem9.TwoPointer(intArray33, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.Hashmap(intArray33, (int) (byte) 10);
        int[] intArray42 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem0.Hashmap(intArray42, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
    }

    @Test
    public void test2572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2572");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        int[] intArray21 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem12.BruteForce(intArray21, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem24 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem24.BruteForce(intArray27, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem12.Hashmap(intArray27, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem32 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem33 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray40 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem33.TwoPointer(intArray40, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem32.TwoPointer(intArray40, (int) (byte) 0);
        int[] intArray46 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem32.TwoPointer(intArray46, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem50 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray57 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem50.TwoPointer(intArray57, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem49.TwoPointer(intArray57, (int) (byte) 0);
        int[] intArray66 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem49.Hashmap(intArray66, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem32.TwoPointer(intArray66, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem12.Hashmap(intArray66, (int) (byte) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem73 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray80 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem73.TwoPointer(intArray80, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem12.Hashmap(intArray80, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem0.TwoPointer(intArray80, (int) (short) 10);
        int[] intArray87 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem0.TwoPointer(intArray87, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intListList86);
    }

    @Test
    public void test2573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2573");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray29 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem20.BruteForce(intArray29, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem0.BruteForce(intArray29, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray43 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem34.BruteForce(intArray43, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem46.BruteForce(intArray49, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem34.Hashmap(intArray49, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem55.BruteForce(intArray58, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem54.Hashmap(intArray58, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem34.TwoPointer(intArray58, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem0.BruteForce(intArray58, 10);
        int[] intArray67 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem0.TwoPointer(intArray67, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
    }

    @Test
    public void test2574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2574");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.BruteForce(intArray13, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem21.BruteForce(intArray24, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem20.Hashmap(intArray24, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray37 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem30.TwoPointer(intArray37, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem29.TwoPointer(intArray37, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem20.BruteForce(intArray37, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem0.TwoPointer(intArray37, 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray53 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem46.TwoPointer(intArray53, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem0.BruteForce(intArray53, 0);
        java.lang.Class<?> wildcardClass58 = intArray53.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test2575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2575");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        int[] intArray13 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem0.TwoPointer(intArray13, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem16 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem17.BruteForce(intArray20, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList24 = threeSumProblem16.BruteForce(intArray20, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem0.Hashmap(intArray20, 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem28 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem28.BruteForce(intArray31, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem27.Hashmap(intArray31, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem36.BruteForce(intArray39, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem27.TwoPointer(intArray39, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem44 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem45 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem45.BruteForce(intArray48, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem44.BruteForce(intArray48, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem27.TwoPointer(intArray48, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem56.BruteForce(intArray59, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem55.Hashmap(intArray59, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem27.BruteForce(intArray59, (int) (byte) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem66 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem66.BruteForce(intArray69, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem27.TwoPointer(intArray69, (int) (byte) 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem0.TwoPointer(intArray69, (int) (byte) 0);
        java.lang.Class<?> wildcardClass76 = intListList75.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intListList24);
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test2576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2576");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem17.BruteForce(intArray21, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem0.TwoPointer(intArray21, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem28 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem29.BruteForce(intArray32, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem28.Hashmap(intArray32, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem0.BruteForce(intArray32, (int) (byte) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem39.BruteForce(intArray42, (int) '#');
        int[] intArray48 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem39.BruteForce(intArray48, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem51.BruteForce(intArray54, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem39.Hashmap(intArray54, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem60.BruteForce(intArray63, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem59.Hashmap(intArray63, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem68 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem68.BruteForce(intArray71, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem59.TwoPointer(intArray71, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem39.Hashmap(intArray71, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem78 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem79 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray86 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem79.TwoPointer(intArray86, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem78.TwoPointer(intArray86, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem39.TwoPointer(intArray86, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem0.TwoPointer(intArray86, 0);
        java.lang.Class<?> wildcardClass95 = intArray86.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test2577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2577");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem14.TwoPointer(intArray21, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem13.TwoPointer(intArray21, (int) (byte) 0);
        int[] intArray30 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem13.Hashmap(intArray30, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem33 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray41 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem34.TwoPointer(intArray41, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem33.TwoPointer(intArray41, (int) (byte) 0);
        int[] intArray50 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem33.Hashmap(intArray50, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem13.Hashmap(intArray50, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem55.BruteForce(intArray58, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem61 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem61.BruteForce(intArray64, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem55.TwoPointer(intArray64, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem13.BruteForce(intArray64, (int) (byte) 100);
        int[] intArray76 = new int[] { '#', 10, (byte) 0, 10, ' ' };
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem13.Hashmap(intArray76, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem0.Hashmap(intArray76, (int) (byte) 100);
        int[] intArray81 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem0.Hashmap(intArray81, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 10, 10, 32, 35]");
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
    }

    @Test
    public void test2578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2578");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        int[] intArray13 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem0.TwoPointer(intArray13, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem16 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem17.BruteForce(intArray20, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList24 = threeSumProblem16.BruteForce(intArray20, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem0.Hashmap(intArray20, 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray34 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem27.TwoPointer(intArray34, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem38 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem38.TwoPointer(intArray45, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem37.TwoPointer(intArray45, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem27.Hashmap(intArray45, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem52.BruteForce(intArray55, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem58 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray65 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem58.TwoPointer(intArray65, (int) (short) 1);
        int[] intArray71 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem58.TwoPointer(intArray71, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem75 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray82 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem75.TwoPointer(intArray82, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem74.TwoPointer(intArray82, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem58.BruteForce(intArray82, (int) (short) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem52.Hashmap(intArray82, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem27.TwoPointer(intArray82, (int) (short) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem0.TwoPointer(intArray82, (int) (byte) 10);
        java.lang.Class<?> wildcardClass95 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intListList24);
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test2579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2579");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray20 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem13.TwoPointer(intArray20, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList24 = threeSumProblem0.Hashmap(intArray20, (int) (byte) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem25 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem26.BruteForce(intArray29, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem25.Hashmap(intArray29, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem34.Hashmap(intArray38, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem25.BruteForce(intArray38, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem45 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray53 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem46.TwoPointer(intArray53, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem45.TwoPointer(intArray53, (int) (byte) 0);
        int[] intArray62 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem45.Hashmap(intArray62, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem25.BruteForce(intArray62, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem67 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem67.BruteForce(intArray70, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem25.Hashmap(intArray70, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem75 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem75.BruteForce(intArray78, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem81 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray84 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem81.BruteForce(intArray84, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem75.TwoPointer(intArray84, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem25.BruteForce(intArray84, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem0.Hashmap(intArray84, (int) (byte) -1);
        int[] intArray93 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList95 = threeSumProblem0.TwoPointer(intArray93, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intListList24);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(intListList92);
    }

    @Test
    public void test2580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2580");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem2 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray9 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem2.TwoPointer(intArray9, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList13 = threeSumProblem1.TwoPointer(intArray9, (int) (byte) 0);
        int[] intArray15 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem1.TwoPointer(intArray15, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.TwoPointer(intArray15, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem21.BruteForce(intArray24, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem20.Hashmap(intArray24, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem29.BruteForce(intArray32, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem20.TwoPointer(intArray32, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem38 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem38.TwoPointer(intArray45, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem37.TwoPointer(intArray45, (int) (byte) 0);
        int[] intArray54 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem37.Hashmap(intArray54, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem20.Hashmap(intArray54, (int) ' ');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray67 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem60.TwoPointer(intArray67, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem59.TwoPointer(intArray67, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem20.BruteForce(intArray67, 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem75 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem75.BruteForce(intArray78, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem74.Hashmap(intArray78, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem83 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem84 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray87 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem84.BruteForce(intArray87, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem83.Hashmap(intArray87, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem74.BruteForce(intArray87, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList95 = threeSumProblem20.BruteForce(intArray87, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList97 = threeSumProblem0.BruteForce(intArray87, (int) (byte) 1);
        java.lang.Class<?> wildcardClass98 = intArray87.getClass();
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intListList13);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(intListList93);
        org.junit.Assert.assertNotNull(intListList95);
        org.junit.Assert.assertNotNull(intListList97);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test2581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2581");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem2 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList7 = threeSumProblem2.BruteForce(intArray5, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem1.Hashmap(intArray5, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem1.TwoPointer(intArray13, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem19 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList24 = threeSumProblem19.BruteForce(intArray22, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem18.Hashmap(intArray22, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem27.BruteForce(intArray30, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem18.TwoPointer(intArray30, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem36.BruteForce(intArray39, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem35.Hashmap(intArray39, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem44 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem44.BruteForce(intArray47, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem35.TwoPointer(intArray47, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem18.Hashmap(intArray47, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem1.BruteForce(intArray47, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem56.BruteForce(intArray59, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem62 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem62.BruteForce(intArray65, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem56.TwoPointer(intArray65, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem1.Hashmap(intArray65, (int) (short) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem72 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem73 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray80 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem73.TwoPointer(intArray80, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem72.TwoPointer(intArray80, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem1.TwoPointer(intArray80, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem0.BruteForce(intArray80, 10);
        java.lang.Class<?> wildcardClass89 = intListList88.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList7);
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList24);
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test2582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2582");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray14 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray14, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray25 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem18.TwoPointer(intArray25, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem17.TwoPointer(intArray25, (int) (byte) 0);
        int[] intArray34 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem17.Hashmap(intArray34, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem38 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem38.TwoPointer(intArray45, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem37.TwoPointer(intArray45, (int) (byte) 0);
        int[] intArray54 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem37.Hashmap(intArray54, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem17.Hashmap(intArray54, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem59.BruteForce(intArray62, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem17.Hashmap(intArray62, (int) (byte) 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem0.TwoPointer(intArray62, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem69 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray76 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem69.TwoPointer(intArray76, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem0.Hashmap(intArray76, (int) (byte) 100);
        int[] intArray81 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem0.TwoPointer(intArray81, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0]");
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
    }

    @Test
    public void test2583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2583");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem9.TwoPointer(intArray21, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem0.Hashmap(intArray21, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem28 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem29.BruteForce(intArray32, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem28.Hashmap(intArray32, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem37.BruteForce(intArray40, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem28.TwoPointer(intArray40, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem0.TwoPointer(intArray40, (int) (byte) -1);
        int[] intArray47 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem0.BruteForce(intArray47, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
    }

    @Test
    public void test2584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2584");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem21.BruteForce(intArray24, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem20.Hashmap(intArray24, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem29.BruteForce(intArray32, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem20.TwoPointer(intArray32, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem38 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem38.BruteForce(intArray41, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem37.Hashmap(intArray41, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem46.BruteForce(intArray49, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem37.TwoPointer(intArray49, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem20.Hashmap(intArray49, (int) 'a');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem57 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem57.BruteForce(intArray60, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem56.Hashmap(intArray60, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem65 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem65.BruteForce(intArray68, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem56.TwoPointer(intArray68, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem73 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem74.BruteForce(intArray77, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem73.Hashmap(intArray77, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem82 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray85 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem82.BruteForce(intArray85, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem73.TwoPointer(intArray85, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem56.Hashmap(intArray85, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem20.Hashmap(intArray85, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList95 = threeSumProblem0.BruteForce(intArray85, (int) (byte) 1);
        int[] intArray96 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList98 = threeSumProblem0.TwoPointer(intArray96, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(intListList93);
        org.junit.Assert.assertNotNull(intListList95);
    }

    @Test
    public void test2585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2585");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray14 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray14, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray25 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem18.TwoPointer(intArray25, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem17.TwoPointer(intArray25, (int) (byte) 0);
        int[] intArray34 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem17.Hashmap(intArray34, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem0.TwoPointer(intArray34, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray47 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem40.TwoPointer(intArray47, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem39.TwoPointer(intArray47, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray60 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem53.TwoPointer(intArray60, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem52.TwoPointer(intArray60, (int) (byte) 0);
        int[] intArray69 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem52.Hashmap(intArray69, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem39.Hashmap(intArray69, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem74.BruteForce(intArray77, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem39.TwoPointer(intArray77, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem0.BruteForce(intArray77, (int) (short) -1);
        int[] intArray84 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem0.Hashmap(intArray84, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0]");
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
    }

    @Test
    public void test2586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2586");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray29 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem20.BruteForce(intArray29, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem0.TwoPointer(intArray29, (int) ' ');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem34.Hashmap(intArray38, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem43.BruteForce(intArray46, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem34.TwoPointer(intArray46, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem0.TwoPointer(intArray46, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem53.BruteForce(intArray56, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray66 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem59.TwoPointer(intArray66, (int) (short) 1);
        int[] intArray72 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem59.TwoPointer(intArray72, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem75 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem76 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray83 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem76.TwoPointer(intArray83, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem75.TwoPointer(intArray83, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem59.BruteForce(intArray83, (int) (short) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem53.Hashmap(intArray83, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem0.Hashmap(intArray83, (int) (short) 1);
        int[] intArray94 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem0.TwoPointer(intArray94, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(intListList93);
    }

    @Test
    public void test2587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2587");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.BruteForce(intArray4, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem19 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList24 = threeSumProblem19.BruteForce(intArray22, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem18.Hashmap(intArray22, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem27.BruteForce(intArray30, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem18.TwoPointer(intArray30, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem9.Hashmap(intArray30, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem38 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem38.BruteForce(intArray41, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem37.Hashmap(intArray41, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem46.BruteForce(intArray49, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem37.TwoPointer(intArray49, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem9.TwoPointer(intArray49, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem0.TwoPointer(intArray49, (int) (short) 1);
        java.lang.Class<?> wildcardClass58 = intArray49.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList24);
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test2588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2588");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem11 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray18 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem11.TwoPointer(intArray18, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem10.TwoPointer(intArray18, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList24 = threeSumProblem0.Hashmap(intArray18, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem25 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray33 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem26.TwoPointer(intArray33, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem25.TwoPointer(intArray33, (int) (byte) 0);
        int[] intArray42 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem25.Hashmap(intArray42, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem45 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem46.BruteForce(intArray49, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem45.Hashmap(intArray49, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem25.TwoPointer(intArray49, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem57 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem58 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray65 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem58.TwoPointer(intArray65, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem57.TwoPointer(intArray65, (int) (byte) 0);
        int[] intArray71 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem57.TwoPointer(intArray71, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem56.TwoPointer(intArray71, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem25.TwoPointer(intArray71, (int) (short) 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem0.TwoPointer(intArray71, (int) '4');
        java.lang.Class<?> wildcardClass80 = intListList79.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intListList24);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0]");
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test2589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2589");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray14 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray14, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem17.BruteForce(intArray20, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem23 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray26 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem23.BruteForce(intArray26, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem17.TwoPointer(intArray26, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem32 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem32.BruteForce(intArray35, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem31.Hashmap(intArray35, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem40.BruteForce(intArray43, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem31.TwoPointer(intArray43, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem17.BruteForce(intArray43, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem0.Hashmap(intArray43, 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray61 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem52.BruteForce(intArray61, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem0.Hashmap(intArray61, (int) (short) 10);
        java.lang.Class<?> wildcardClass66 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0]");
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test2590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2590");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray25 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem18.TwoPointer(intArray25, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem17.TwoPointer(intArray25, (int) (byte) 0);
        int[] intArray34 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem17.Hashmap(intArray34, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem0.Hashmap(intArray34, (int) ' ');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray47 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem40.TwoPointer(intArray47, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem39.TwoPointer(intArray47, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem0.Hashmap(intArray47, (int) (byte) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray62 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem55.TwoPointer(intArray62, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem54.TwoPointer(intArray62, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem0.Hashmap(intArray62, (int) (short) 100);
        java.lang.Class<?> wildcardClass69 = intListList68.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test2591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2591");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray14 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray14, (int) (byte) 0);
        int[] intArray17 = new int[] {};
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.BruteForce(intArray17, (int) '#');
        java.lang.Class<?> wildcardClass20 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0]");
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test2592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2592");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.BruteForce(intArray13, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem22 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem22.BruteForce(intArray25, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem21.Hashmap(intArray25, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem31.BruteForce(intArray34, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem30.Hashmap(intArray34, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem21.BruteForce(intArray34, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray49 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem42.TwoPointer(intArray49, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem41.TwoPointer(intArray49, (int) (byte) 0);
        int[] intArray58 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem41.Hashmap(intArray58, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem21.BruteForce(intArray58, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem63 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem63.BruteForce(intArray66, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem21.Hashmap(intArray66, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem71 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem71.BruteForce(intArray74, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem21.TwoPointer(intArray74, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem20.TwoPointer(intArray74, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem0.TwoPointer(intArray74, (int) (byte) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem83 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem84 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray91 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem84.TwoPointer(intArray91, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList95 = threeSumProblem83.TwoPointer(intArray91, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList97 = threeSumProblem0.BruteForce(intArray91, (int) (short) -1);
        java.lang.Class<?> wildcardClass98 = intArray91.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList93);
        org.junit.Assert.assertNotNull(intListList95);
        org.junit.Assert.assertNotNull(intListList97);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test2593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2593");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray9 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem6.BruteForce(intArray9, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList13 = threeSumProblem0.TwoPointer(intArray9, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem15 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem15.BruteForce(intArray18, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem14.Hashmap(intArray18, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem23 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray26 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem23.BruteForce(intArray26, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem14.TwoPointer(intArray26, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem0.BruteForce(intArray26, (int) ' ');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem33 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem33.BruteForce(intArray36, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem39.BruteForce(intArray42, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem33.TwoPointer(intArray42, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem47 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem48.BruteForce(intArray51, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem47.Hashmap(intArray51, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem56.BruteForce(intArray59, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem47.TwoPointer(intArray59, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem33.BruteForce(intArray59, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem0.Hashmap(intArray59, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem68 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray75 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem68.TwoPointer(intArray75, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem78 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem79 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray86 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem79.TwoPointer(intArray86, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem78.TwoPointer(intArray86, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem68.Hashmap(intArray86, (int) (byte) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem0.BruteForce(intArray86, (int) (short) -1);
        java.lang.Class<?> wildcardClass95 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intListList13);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test2594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2594");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        int[] intArray13 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem0.TwoPointer(intArray13, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem16 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem17.TwoPointer(intArray24, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem16.TwoPointer(intArray24, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem0.BruteForce(intArray24, (int) (short) 100);
        int[] intArray31 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem0.Hashmap(intArray31, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intListList30);
    }

    @Test
    public void test2595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2595");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem9.TwoPointer(intArray21, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem0.Hashmap(intArray21, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem28 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem29.BruteForce(intArray32, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem28.Hashmap(intArray32, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem38 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem38.BruteForce(intArray41, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem37.Hashmap(intArray41, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem28.BruteForce(intArray41, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem49.BruteForce(intArray52, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem48.Hashmap(intArray52, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem57 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem58 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray65 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem58.TwoPointer(intArray65, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem57.TwoPointer(intArray65, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem48.BruteForce(intArray65, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem28.TwoPointer(intArray65, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem0.TwoPointer(intArray65, (int) (short) 0);
        int[] intArray76 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem0.BruteForce(intArray76, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
    }

    @Test
    public void test2596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2596");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem17.TwoPointer(intArray24, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem27.BruteForce(intArray30, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem33 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem33.BruteForce(intArray36, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem27.TwoPointer(intArray36, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem17.BruteForce(intArray36, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem44 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray51 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem44.TwoPointer(intArray51, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem43.TwoPointer(intArray51, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem57 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem57.BruteForce(intArray60, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem56.Hashmap(intArray60, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem65 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem66 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray73 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem66.TwoPointer(intArray73, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem65.TwoPointer(intArray73, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem56.BruteForce(intArray73, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem43.BruteForce(intArray73, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem17.TwoPointer(intArray73, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem0.TwoPointer(intArray73, 10);
        java.lang.Class<?> wildcardClass86 = intListList85.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test2597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2597");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem17.TwoPointer(intArray24, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem27.BruteForce(intArray30, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem33 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem33.BruteForce(intArray36, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem27.TwoPointer(intArray36, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem17.BruteForce(intArray36, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem44 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray51 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem44.TwoPointer(intArray51, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem43.TwoPointer(intArray51, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem57 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem57.BruteForce(intArray60, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem56.Hashmap(intArray60, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem65 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem66 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray73 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem66.TwoPointer(intArray73, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem65.TwoPointer(intArray73, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem56.BruteForce(intArray73, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem43.BruteForce(intArray73, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem17.TwoPointer(intArray73, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem0.TwoPointer(intArray73, 10);
        java.lang.Class<?> wildcardClass86 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test2598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2598");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        int[] intArray34 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem20.TwoPointer(intArray34, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem38 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem38.TwoPointer(intArray45, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem37.TwoPointer(intArray45, (int) (byte) 0);
        int[] intArray54 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem37.Hashmap(intArray54, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem20.TwoPointer(intArray54, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem0.Hashmap(intArray54, (int) (byte) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem61 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray68 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem61.TwoPointer(intArray68, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem0.Hashmap(intArray68, (int) 'a');
        int[] intArray73 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem0.Hashmap(intArray73, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
    }

    @Test
    public void test2599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2599");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem2 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList7 = threeSumProblem2.BruteForce(intArray5, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem1.Hashmap(intArray5, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem1.TwoPointer(intArray13, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem19 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList24 = threeSumProblem19.BruteForce(intArray22, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem18.Hashmap(intArray22, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem27.BruteForce(intArray30, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem18.TwoPointer(intArray30, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem1.Hashmap(intArray30, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem0.Hashmap(intArray30, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray47 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem40.TwoPointer(intArray47, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem39.TwoPointer(intArray47, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray60 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem53.TwoPointer(intArray60, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem52.TwoPointer(intArray60, (int) (byte) 0);
        int[] intArray69 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem52.Hashmap(intArray69, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem39.Hashmap(intArray69, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem74.BruteForce(intArray77, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem39.TwoPointer(intArray77, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem0.BruteForce(intArray77, (int) (byte) 10);
        java.lang.Class<?> wildcardClass84 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList7);
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList24);
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test2600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2600");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.BruteForce(intArray4, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem9.TwoPointer(intArray21, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem27.BruteForce(intArray30, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem26.Hashmap(intArray30, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem36.BruteForce(intArray39, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem35.Hashmap(intArray39, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem44 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem45 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem45.BruteForce(intArray48, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem44.Hashmap(intArray48, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem35.BruteForce(intArray48, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray63 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem56.TwoPointer(intArray63, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem55.TwoPointer(intArray63, (int) (byte) 0);
        int[] intArray72 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem55.Hashmap(intArray72, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem35.BruteForce(intArray72, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem26.TwoPointer(intArray72, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem9.Hashmap(intArray72, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem0.Hashmap(intArray72, (int) (byte) 1);
        java.lang.Class<?> wildcardClass83 = intListList82.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test2601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2601");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.BruteForce(intArray4, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem10.TwoPointer(intArray17, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem9.TwoPointer(intArray17, (int) (byte) 0);
        int[] intArray23 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem9.TwoPointer(intArray23, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray34 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem27.TwoPointer(intArray34, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem26.TwoPointer(intArray34, (int) (byte) 0);
        int[] intArray43 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem26.Hashmap(intArray43, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem9.TwoPointer(intArray43, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem48.BruteForce(intArray51, (int) '#');
        int[] intArray57 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem48.BruteForce(intArray57, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem60.BruteForce(intArray63, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem48.Hashmap(intArray63, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem68 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem69 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem69.BruteForce(intArray72, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem68.Hashmap(intArray72, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem77 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem77.BruteForce(intArray80, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem68.TwoPointer(intArray80, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem48.Hashmap(intArray80, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem9.Hashmap(intArray80, (int) (byte) 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem0.BruteForce(intArray80, (int) (short) 100);
        java.lang.Class<?> wildcardClass91 = intArray80.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test2602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2602");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray14 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray14, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem17.Hashmap(intArray21, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem26.BruteForce(intArray29, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem17.TwoPointer(intArray29, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem34.Hashmap(intArray38, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem44 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem44.BruteForce(intArray47, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem43.Hashmap(intArray47, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem52.BruteForce(intArray55, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem43.TwoPointer(intArray55, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem34.Hashmap(intArray55, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem62 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem63 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem63.BruteForce(intArray66, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem62.Hashmap(intArray66, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem71 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem72 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem72.BruteForce(intArray75, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem71.Hashmap(intArray75, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem80 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray83 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem80.BruteForce(intArray83, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem71.TwoPointer(intArray83, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem62.Hashmap(intArray83, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem34.TwoPointer(intArray83, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem17.Hashmap(intArray83, (int) (byte) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList95 = threeSumProblem0.TwoPointer(intArray83, 100);
        int[] intArray96 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList98 = threeSumProblem0.TwoPointer(intArray96, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0]");
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(intListList93);
        org.junit.Assert.assertNotNull(intListList95);
    }

    @Test
    public void test2603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2603");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem16 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem16.BruteForce(intArray19, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem10.TwoPointer(intArray19, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem24 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray33 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem24.BruteForce(intArray33, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem10.BruteForce(intArray33, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem0.BruteForce(intArray33, 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem41.BruteForce(intArray44, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem40.Hashmap(intArray44, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem50 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem50.BruteForce(intArray53, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem49.Hashmap(intArray53, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem40.BruteForce(intArray53, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem61 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray68 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem61.TwoPointer(intArray68, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem60.TwoPointer(intArray68, (int) (byte) 0);
        int[] intArray77 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem60.Hashmap(intArray77, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem40.BruteForce(intArray77, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem0.Hashmap(intArray77, (int) (byte) 100);
        int[] intArray84 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem0.TwoPointer(intArray84, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
    }

    @Test
    public void test2604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2604");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem7 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray14 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem7.TwoPointer(intArray14, (int) (short) 1);
        int[] intArray20 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem7.TwoPointer(intArray20, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem23 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem24 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray31 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem24.TwoPointer(intArray31, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem23.TwoPointer(intArray31, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem7.BruteForce(intArray31, (int) (short) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem38 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray47 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem38.BruteForce(intArray47, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem50 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem50.BruteForce(intArray53, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem38.Hashmap(intArray53, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem58 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem59.BruteForce(intArray62, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem58.Hashmap(intArray62, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem67 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem67.BruteForce(intArray70, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem58.TwoPointer(intArray70, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem38.Hashmap(intArray70, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem7.TwoPointer(intArray70, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem6.TwoPointer(intArray70, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem0.BruteForce(intArray70, (int) (short) -1);
        int[] intArray83 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem0.Hashmap(intArray83, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
    }

    @Test
    public void test2605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2605");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray9 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem6.BruteForce(intArray9, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList13 = threeSumProblem0.TwoPointer(intArray9, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem15 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem15.BruteForce(intArray18, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem14.Hashmap(intArray18, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem23 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray26 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem23.BruteForce(intArray26, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem14.TwoPointer(intArray26, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem0.BruteForce(intArray26, (int) ' ');
        int[] intArray39 = new int[] { (short) 100, (byte) 100, '4', (byte) -1, (byte) 0, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.Hashmap(intArray39, (int) (byte) 0);
        java.lang.Class<?> wildcardClass42 = intArray39.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intListList13);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0, 52, 97, 100, 100]");
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test2606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2606");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray16 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList18 = threeSumProblem13.BruteForce(intArray16, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem12.Hashmap(intArray16, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem22 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem22.BruteForce(intArray25, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem21.Hashmap(intArray25, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem30.BruteForce(intArray33, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem21.TwoPointer(intArray33, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem12.Hashmap(intArray33, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem40.BruteForce(intArray43, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem12.TwoPointer(intArray43, (int) (short) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem48.BruteForce(intArray51, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem54.BruteForce(intArray57, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem48.TwoPointer(intArray57, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem62 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem63 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem63.BruteForce(intArray66, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem62.Hashmap(intArray66, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem71 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem71.BruteForce(intArray74, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem62.TwoPointer(intArray74, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem48.BruteForce(intArray74, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem12.Hashmap(intArray74, (int) (short) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem0.Hashmap(intArray74, 0);
        java.lang.Class<?> wildcardClass85 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList18);
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test2607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2607");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray25 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem18.TwoPointer(intArray25, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem17.TwoPointer(intArray25, (int) (byte) 0);
        int[] intArray34 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem17.Hashmap(intArray34, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem0.Hashmap(intArray34, (int) ' ');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray47 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem40.TwoPointer(intArray47, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem39.TwoPointer(intArray47, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem0.Hashmap(intArray47, (int) (byte) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray62 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem55.TwoPointer(intArray62, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem54.TwoPointer(intArray62, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem0.Hashmap(intArray62, (int) (short) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem69 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem70 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray77 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem70.TwoPointer(intArray77, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem69.TwoPointer(intArray77, (int) (byte) 0);
        int[] intArray86 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem69.Hashmap(intArray86, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem0.Hashmap(intArray86, (int) (short) -1);
        int[] intArray91 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem0.BruteForce(intArray91, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intListList90);
    }

    @Test
    public void test2608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2608");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray9 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem6.BruteForce(intArray9, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList13 = threeSumProblem0.TwoPointer(intArray9, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem15 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem15.BruteForce(intArray18, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem14.Hashmap(intArray18, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem23 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray26 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem23.BruteForce(intArray26, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem14.TwoPointer(intArray26, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem32 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem32.BruteForce(intArray35, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem31.BruteForce(intArray35, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem14.TwoPointer(intArray35, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem43.BruteForce(intArray46, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem42.Hashmap(intArray46, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem14.BruteForce(intArray46, (int) (byte) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem53.BruteForce(intArray56, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem14.TwoPointer(intArray56, (int) (byte) 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem0.Hashmap(intArray56, (int) (byte) 0);
        java.lang.Class<?> wildcardClass63 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intListList13);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test2609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2609");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem16 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem16.BruteForce(intArray19, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem10.TwoPointer(intArray19, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem0.BruteForce(intArray19, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray33 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem26.TwoPointer(intArray33, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem36.BruteForce(intArray39, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem42.BruteForce(intArray45, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem36.TwoPointer(intArray45, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem26.BruteForce(intArray45, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray61 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem52.BruteForce(intArray61, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem64 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem64.BruteForce(intArray67, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem52.Hashmap(intArray67, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem72 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem73 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem73.BruteForce(intArray76, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem72.Hashmap(intArray76, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem81 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray84 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem81.BruteForce(intArray84, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem72.TwoPointer(intArray84, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem52.Hashmap(intArray84, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem26.BruteForce(intArray84, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem0.BruteForce(intArray84, (int) 'a');
        java.lang.Class<?> wildcardClass95 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test2610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2610");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray9 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem6.BruteForce(intArray9, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList13 = threeSumProblem0.TwoPointer(intArray9, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem14.BruteForce(intArray17, (int) '#');
        int[] intArray23 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem14.BruteForce(intArray23, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem0.BruteForce(intArray23, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem28 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray36 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem29.TwoPointer(intArray36, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem28.TwoPointer(intArray36, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem42.BruteForce(intArray45, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem41.Hashmap(intArray45, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem50 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem50.BruteForce(intArray53, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem41.TwoPointer(intArray53, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem58 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem59.BruteForce(intArray62, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem58.Hashmap(intArray62, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem67 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem67.BruteForce(intArray70, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem58.TwoPointer(intArray70, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem41.Hashmap(intArray70, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem28.Hashmap(intArray70, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem79 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray88 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem79.BruteForce(intArray88, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem28.Hashmap(intArray88, (int) (short) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem0.Hashmap(intArray88, (int) '#');
        int[] intArray95 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList97 = threeSumProblem0.TwoPointer(intArray95, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intListList13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(intListList94);
    }

    @Test
    public void test2611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2611");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem21.BruteForce(intArray24, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem20.Hashmap(intArray24, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray37 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem30.TwoPointer(intArray37, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem29.TwoPointer(intArray37, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem20.BruteForce(intArray37, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem0.TwoPointer(intArray37, (int) (byte) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem47 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem47.BruteForce(intArray50, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem46.Hashmap(intArray50, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem56.BruteForce(intArray59, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem55.Hashmap(intArray59, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem46.BruteForce(intArray59, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem66 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem67 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray74 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem67.TwoPointer(intArray74, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem66.TwoPointer(intArray74, (int) (byte) 0);
        int[] intArray83 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem66.Hashmap(intArray83, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem46.BruteForce(intArray83, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem88 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray91 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem88.BruteForce(intArray91, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList95 = threeSumProblem46.Hashmap(intArray91, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList97 = threeSumProblem0.BruteForce(intArray91, 10);
        java.lang.Class<?> wildcardClass98 = intListList97.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList93);
        org.junit.Assert.assertNotNull(intListList95);
        org.junit.Assert.assertNotNull(intListList97);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test2612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2612");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem21.BruteForce(intArray24, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem20.Hashmap(intArray24, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem29.BruteForce(intArray32, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem20.TwoPointer(intArray32, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem0.Hashmap(intArray32, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray48 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem41.TwoPointer(intArray48, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem40.TwoPointer(intArray48, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem54.BruteForce(intArray57, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem53.Hashmap(intArray57, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem62 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem63 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray70 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem63.TwoPointer(intArray70, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem62.TwoPointer(intArray70, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem53.BruteForce(intArray70, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem40.BruteForce(intArray70, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem39.Hashmap(intArray70, (int) (byte) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem0.Hashmap(intArray70, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem83 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem84 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray87 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem84.BruteForce(intArray87, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem83.BruteForce(intArray87, (int) (short) 1);
        int[] intArray93 = new int[] { '#' };
        java.util.List<java.util.List<java.lang.Integer>> intListList95 = threeSumProblem83.TwoPointer(intArray93, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList97 = threeSumProblem0.BruteForce(intArray93, (int) '4');
        java.lang.Class<?> wildcardClass98 = intArray93.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[35]");
        org.junit.Assert.assertNotNull(intListList95);
        org.junit.Assert.assertNotNull(intListList97);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test2613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2613");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray25 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem18.TwoPointer(intArray25, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem17.TwoPointer(intArray25, (int) (byte) 0);
        int[] intArray34 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem17.Hashmap(intArray34, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem0.Hashmap(intArray34, (int) ' ');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray47 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem40.TwoPointer(intArray47, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem39.TwoPointer(intArray47, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem0.Hashmap(intArray47, (int) (byte) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray62 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem55.TwoPointer(intArray62, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem54.TwoPointer(intArray62, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem0.Hashmap(intArray62, (int) (short) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem69 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem70 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray77 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem70.TwoPointer(intArray77, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem69.TwoPointer(intArray77, (int) (byte) 0);
        int[] intArray86 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem69.Hashmap(intArray86, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem0.Hashmap(intArray86, (int) (short) -1);
        java.lang.Class<?> wildcardClass91 = intArray86.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test2614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2614");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem11 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray18 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem11.TwoPointer(intArray18, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem10.TwoPointer(intArray18, (int) (byte) 0);
        int[] intArray27 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem10.Hashmap(intArray27, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem31.BruteForce(intArray34, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem30.Hashmap(intArray34, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem10.TwoPointer(intArray34, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem42.BruteForce(intArray45, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem41.Hashmap(intArray45, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem50 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem51.BruteForce(intArray54, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem50.Hashmap(intArray54, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem41.BruteForce(intArray54, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem10.BruteForce(intArray54, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem0.TwoPointer(intArray54, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem65 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray72 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem65.TwoPointer(intArray72, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem75 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem76 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray83 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem76.TwoPointer(intArray83, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem75.TwoPointer(intArray83, (int) (byte) 0);
        int[] intArray92 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem75.Hashmap(intArray92, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem65.BruteForce(intArray92, (int) (byte) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList98 = threeSumProblem0.BruteForce(intArray92, 0);
        java.lang.Class<?> wildcardClass99 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(intListList96);
        org.junit.Assert.assertNotNull(intListList98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test2615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2615");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem7 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem7.BruteForce(intArray10, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem6.Hashmap(intArray10, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem15 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem16 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem16.TwoPointer(intArray23, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem15.TwoPointer(intArray23, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem6.BruteForce(intArray23, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem0.Hashmap(intArray23, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem32 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem33 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray40 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem33.TwoPointer(intArray40, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem32.TwoPointer(intArray40, (int) (byte) 0);
        int[] intArray49 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem32.Hashmap(intArray49, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray60 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem53.TwoPointer(intArray60, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem52.TwoPointer(intArray60, (int) (byte) 0);
        int[] intArray69 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem52.Hashmap(intArray69, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem32.Hashmap(intArray69, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem74.BruteForce(intArray77, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem32.Hashmap(intArray77, (int) (byte) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem82 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem83 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray86 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem83.BruteForce(intArray86, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem82.Hashmap(intArray86, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem32.Hashmap(intArray86, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem0.Hashmap(intArray86, 100);
        java.lang.Class<?> wildcardClass95 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test2616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2616");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem10.TwoPointer(intArray17, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem9.TwoPointer(intArray17, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem0.BruteForce(intArray17, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem24 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray31 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem24.TwoPointer(intArray31, (int) (short) 1);
        int[] intArray37 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem24.TwoPointer(intArray37, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray49 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem40.BruteForce(intArray49, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem52.BruteForce(intArray55, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem58 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray65 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem58.TwoPointer(intArray65, (int) (short) 1);
        int[] intArray71 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem58.TwoPointer(intArray71, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem75 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray82 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem75.TwoPointer(intArray82, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem74.TwoPointer(intArray82, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem58.BruteForce(intArray82, (int) (short) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem52.Hashmap(intArray82, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem40.BruteForce(intArray82, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem24.Hashmap(intArray82, (int) (short) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem0.TwoPointer(intArray82, 10);
        java.lang.Class<?> wildcardClass97 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(intListList96);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test2617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2617");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem9.TwoPointer(intArray21, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem27.BruteForce(intArray30, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem26.Hashmap(intArray30, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem26.TwoPointer(intArray38, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem9.Hashmap(intArray38, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem0.BruteForce(intArray38, 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem47 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray54 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem47.TwoPointer(intArray54, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem57 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem57.BruteForce(intArray60, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem63 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem63.BruteForce(intArray66, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem57.TwoPointer(intArray66, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem47.BruteForce(intArray66, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem0.TwoPointer(intArray66, 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem75 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem75.BruteForce(intArray78, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem0.TwoPointer(intArray78, 1);
        int[] intArray83 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem0.TwoPointer(intArray83, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
    }

    @Test
    public void test2618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2618");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.BruteForce(intArray4, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray18 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem9.BruteForce(intArray18, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem0.BruteForce(intArray18, (int) (short) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem23 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray26 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem23.BruteForce(intArray26, (int) '#');
        int[] intArray32 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem23.BruteForce(intArray32, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray48 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem41.TwoPointer(intArray48, (int) (short) 1);
        int[] intArray54 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem41.TwoPointer(intArray54, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem57 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem58 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray65 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem58.TwoPointer(intArray65, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem57.TwoPointer(intArray65, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem41.BruteForce(intArray65, (int) (short) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem35.Hashmap(intArray65, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem23.BruteForce(intArray65, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem0.TwoPointer(intArray65, (int) ' ');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem78 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem79 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem79.BruteForce(intArray82, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem78.BruteForce(intArray82, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem0.BruteForce(intArray82, (-1));
        java.lang.Class<?> wildcardClass89 = intArray82.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test2619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2619");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem9.TwoPointer(intArray21, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem0.Hashmap(intArray21, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem28 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem29.BruteForce(intArray32, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem28.Hashmap(intArray32, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem37.BruteForce(intArray40, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem28.TwoPointer(intArray40, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem0.TwoPointer(intArray40, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem47 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem48.BruteForce(intArray51, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem47.BruteForce(intArray51, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem0.Hashmap(intArray51, (int) (short) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem58 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem59.BruteForce(intArray62, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem58.BruteForce(intArray62, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem0.TwoPointer(intArray62, (int) '#');
        java.lang.Class<?> wildcardClass69 = intArray62.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test2620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2620");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem11 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray18 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem11.TwoPointer(intArray18, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem10.TwoPointer(intArray18, (int) (byte) 0);
        int[] intArray27 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem10.Hashmap(intArray27, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem31.BruteForce(intArray34, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem30.Hashmap(intArray34, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem40.BruteForce(intArray43, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem39.Hashmap(intArray43, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem30.BruteForce(intArray43, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem10.Hashmap(intArray43, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem0.TwoPointer(intArray43, (int) (short) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem54.BruteForce(intArray57, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem60.BruteForce(intArray63, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem54.TwoPointer(intArray63, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem0.BruteForce(intArray63, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem70 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem71 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem71.BruteForce(intArray74, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem70.BruteForce(intArray74, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem0.TwoPointer(intArray74, (int) (short) 10);
        int[] intArray81 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem0.Hashmap(intArray81, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
    }

    @Test
    public void test2621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2621");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        int[] intArray37 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray37, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray48 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem41.TwoPointer(intArray48, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem40.TwoPointer(intArray48, (int) (byte) 0);
        int[] intArray57 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem40.Hashmap(intArray57, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem20.Hashmap(intArray57, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem62 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem63 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem63.BruteForce(intArray66, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem62.Hashmap(intArray66, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem71 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem72 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem72.BruteForce(intArray75, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem71.Hashmap(intArray75, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem62.BruteForce(intArray75, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem20.Hashmap(intArray75, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem0.Hashmap(intArray75, (int) (short) 1);
        int[] intArray86 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem0.BruteForce(intArray86, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
    }

    @Test
    public void test2622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2622");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray26 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem17.BruteForce(intArray26, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem29.BruteForce(intArray32, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem17.Hashmap(intArray32, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray46 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem37.BruteForce(intArray46, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem17.BruteForce(intArray46, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem0.Hashmap(intArray46, (int) ' ');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem54.BruteForce(intArray57, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem53.Hashmap(intArray57, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem62 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem63 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem63.BruteForce(intArray66, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem62.Hashmap(intArray66, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem53.BruteForce(intArray66, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem0.BruteForce(intArray66, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem75 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem75.BruteForce(intArray78, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem0.Hashmap(intArray78, (int) (short) 10);
        java.lang.Class<?> wildcardClass83 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test2623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2623");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem11 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray18 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem11.TwoPointer(intArray18, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem10.TwoPointer(intArray18, (int) (byte) 0);
        int[] intArray27 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem10.Hashmap(intArray27, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem31.BruteForce(intArray34, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem30.Hashmap(intArray34, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem10.TwoPointer(intArray34, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem42.BruteForce(intArray45, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem41.Hashmap(intArray45, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem50 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem51.BruteForce(intArray54, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem50.Hashmap(intArray54, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem41.BruteForce(intArray54, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem10.BruteForce(intArray54, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem0.TwoPointer(intArray54, (int) (short) 1);
        int[] intArray69 = new int[] { (short) -1, '#', (short) 1, '4' };
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem0.Hashmap(intArray69, (int) (short) -1);
        java.lang.Class<?> wildcardClass72 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 1, 35, 52]");
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test2624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2624");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem14.BruteForce(intArray17, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem13.Hashmap(intArray17, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem22 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem23 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray26 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem23.BruteForce(intArray26, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem22.Hashmap(intArray26, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem13.BruteForce(intArray26, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem33 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray41 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem34.TwoPointer(intArray41, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem33.TwoPointer(intArray41, (int) (byte) 0);
        int[] intArray50 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem33.Hashmap(intArray50, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem13.BruteForce(intArray50, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem55.BruteForce(intArray58, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem13.Hashmap(intArray58, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem63 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem63.BruteForce(intArray66, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem13.TwoPointer(intArray66, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem0.Hashmap(intArray66, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem73 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray81 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem74.TwoPointer(intArray81, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem73.TwoPointer(intArray81, (int) (byte) 0);
        int[] intArray87 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem73.TwoPointer(intArray87, (int) (byte) 0);
        int[] intArray90 = new int[] {};
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem73.BruteForce(intArray90, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem0.Hashmap(intArray90, (int) (byte) 0);
        java.lang.Class<?> wildcardClass95 = intArray90.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0]");
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[]");
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test2625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2625");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.BruteForce(intArray13, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        int[] intArray37 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray37, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.BruteForce(intArray37, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem42.BruteForce(intArray45, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem0.Hashmap(intArray45, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem50 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem50.BruteForce(intArray53, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem0.TwoPointer(intArray53, (int) ' ');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem58 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray65 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem58.TwoPointer(intArray65, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem68 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem68.BruteForce(intArray71, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem74.BruteForce(intArray77, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem68.TwoPointer(intArray77, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem58.BruteForce(intArray77, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem0.BruteForce(intArray77, (int) (byte) -1);
        java.lang.Class<?> wildcardClass86 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test2626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2626");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem9.TwoPointer(intArray21, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem0.Hashmap(intArray21, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem28 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem29.BruteForce(intArray32, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem28.Hashmap(intArray32, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem38 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem38.BruteForce(intArray41, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem37.Hashmap(intArray41, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem46.BruteForce(intArray49, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem37.TwoPointer(intArray49, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem28.Hashmap(intArray49, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem0.TwoPointer(intArray49, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem58 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem59.BruteForce(intArray62, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem58.BruteForce(intArray62, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem67 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem67.BruteForce(intArray70, (int) '#');
        int[] intArray76 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem67.BruteForce(intArray76, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem58.BruteForce(intArray76, (int) (short) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem0.Hashmap(intArray76, (int) (byte) 10);
        java.lang.Class<?> wildcardClass83 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test2627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2627");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem11 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray18 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem11.TwoPointer(intArray18, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem10.TwoPointer(intArray18, (int) (byte) 0);
        int[] intArray27 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem10.Hashmap(intArray27, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem31.BruteForce(intArray34, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem30.Hashmap(intArray34, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem10.TwoPointer(intArray34, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem42.BruteForce(intArray45, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem41.Hashmap(intArray45, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem50 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem51.BruteForce(intArray54, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem50.Hashmap(intArray54, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem41.BruteForce(intArray54, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem10.BruteForce(intArray54, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem0.TwoPointer(intArray54, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem65 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem66 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem66.BruteForce(intArray69, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem65.Hashmap(intArray69, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem75 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem75.BruteForce(intArray78, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem74.Hashmap(intArray78, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem65.BruteForce(intArray78, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem0.TwoPointer(intArray78, 10);
        java.lang.Class<?> wildcardClass87 = intListList86.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test2628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2628");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem14.TwoPointer(intArray21, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem13.TwoPointer(intArray21, (int) (byte) 0);
        int[] intArray30 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem13.Hashmap(intArray30, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem0.Hashmap(intArray30, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray43 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem36.TwoPointer(intArray43, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem35.TwoPointer(intArray43, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray56 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem49.TwoPointer(intArray56, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem48.TwoPointer(intArray56, (int) (byte) 0);
        int[] intArray65 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem48.Hashmap(intArray65, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem35.Hashmap(intArray65, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem0.TwoPointer(intArray65, (int) '4');
        int[] intArray72 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem0.TwoPointer(intArray72, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
    }

    @Test
    public void test2629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2629");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray26 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem17.BruteForce(intArray26, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem29.BruteForce(intArray32, (int) '#');
        int[] intArray38 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem29.BruteForce(intArray38, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem41.BruteForce(intArray44, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem29.Hashmap(intArray44, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem49.BruteForce(intArray52, (int) '#');
        int[] intArray58 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem49.BruteForce(intArray58, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem29.BruteForce(intArray58, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem63 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem64 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray71 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem64.TwoPointer(intArray71, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem63.TwoPointer(intArray71, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem29.Hashmap(intArray71, (int) (short) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem17.Hashmap(intArray71, (int) (short) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem0.TwoPointer(intArray71, (int) (byte) -1);
        java.lang.Class<?> wildcardClass82 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test2630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2630");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem21.BruteForce(intArray24, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem20.Hashmap(intArray24, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem0.TwoPointer(intArray24, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem31.BruteForce(intArray34, (int) '#');
        int[] intArray40 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem31.BruteForce(intArray40, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem43.BruteForce(intArray46, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem31.Hashmap(intArray46, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray59 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem52.TwoPointer(intArray59, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem51.TwoPointer(intArray59, (int) (byte) 0);
        int[] intArray65 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem51.TwoPointer(intArray65, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem68 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem69 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray76 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem69.TwoPointer(intArray76, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem68.TwoPointer(intArray76, (int) (byte) 0);
        int[] intArray85 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem68.Hashmap(intArray85, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem51.TwoPointer(intArray85, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem31.Hashmap(intArray85, (int) (byte) 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem0.Hashmap(intArray85, (int) ' ');
        int[] intArray94 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem0.Hashmap(intArray94, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(intListList93);
    }

    @Test
    public void test2631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2631");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem11 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray18 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem11.TwoPointer(intArray18, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem10.TwoPointer(intArray18, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem23 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem24 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray31 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem24.TwoPointer(intArray31, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem23.TwoPointer(intArray31, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray44 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem37.TwoPointer(intArray44, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem36.TwoPointer(intArray44, (int) (byte) 0);
        int[] intArray53 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem36.Hashmap(intArray53, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem23.Hashmap(intArray53, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem58 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray66 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem59.TwoPointer(intArray66, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem58.TwoPointer(intArray66, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem71 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem72 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray79 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem72.TwoPointer(intArray79, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem71.TwoPointer(intArray79, (int) (byte) 0);
        int[] intArray88 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem71.Hashmap(intArray88, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem58.Hashmap(intArray88, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem23.TwoPointer(intArray88, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem10.Hashmap(intArray88, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList98 = threeSumProblem0.TwoPointer(intArray88, (int) (byte) 100);
        java.lang.Class<?> wildcardClass99 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(intListList96);
        org.junit.Assert.assertNotNull(intListList98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test2632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2632");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray16 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList18 = threeSumProblem13.BruteForce(intArray16, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem19 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList24 = threeSumProblem19.BruteForce(intArray22, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem13.TwoPointer(intArray22, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray36 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem27.BruteForce(intArray36, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem13.BruteForce(intArray36, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem0.Hashmap(intArray36, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem44 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem44.BruteForce(intArray47, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem43.Hashmap(intArray47, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem52.BruteForce(intArray55, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem43.TwoPointer(intArray55, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem61 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray68 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem61.TwoPointer(intArray68, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem60.TwoPointer(intArray68, (int) (byte) 0);
        int[] intArray77 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem60.Hashmap(intArray77, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem43.Hashmap(intArray77, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem0.BruteForce(intArray77, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem84 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem85 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray92 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem85.TwoPointer(intArray92, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem84.TwoPointer(intArray92, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList98 = threeSumProblem0.Hashmap(intArray92, (-1));
        java.lang.Class<?> wildcardClass99 = intArray92.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList18);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList24);
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(intListList96);
        org.junit.Assert.assertNotNull(intListList98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test2633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2633");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem17.BruteForce(intArray21, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem0.TwoPointer(intArray21, (-1));
        java.lang.Class<?> wildcardClass28 = intListList27.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test2634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2634");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem2 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray9 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem2.TwoPointer(intArray9, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList13 = threeSumProblem1.TwoPointer(intArray9, (int) (byte) 0);
        int[] intArray15 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem1.TwoPointer(intArray15, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.TwoPointer(intArray15, 1);
        int[] intArray20 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem0.Hashmap(intArray20, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intListList13);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
    }

    @Test
    public void test2635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2635");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        int[] intArray37 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray37, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.Hashmap(intArray37, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray50 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem43.TwoPointer(intArray50, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem42.TwoPointer(intArray50, (int) (byte) 0);
        int[] intArray56 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem42.TwoPointer(intArray56, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem59.BruteForce(intArray62, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem65 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem65.BruteForce(intArray68, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem59.TwoPointer(intArray68, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem73 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem74.BruteForce(intArray77, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem73.Hashmap(intArray77, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem82 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray85 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem82.BruteForce(intArray85, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem73.TwoPointer(intArray85, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem59.BruteForce(intArray85, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem42.Hashmap(intArray85, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList95 = threeSumProblem0.Hashmap(intArray85, (int) (byte) -1);
        java.lang.Class<?> wildcardClass96 = intListList95.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0]");
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(intListList93);
        org.junit.Assert.assertNotNull(intListList95);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test2636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2636");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem11 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray18 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem11.TwoPointer(intArray18, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem10.TwoPointer(intArray18, (int) (byte) 0);
        int[] intArray27 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem10.Hashmap(intArray27, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem31.BruteForce(intArray34, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem30.Hashmap(intArray34, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem10.TwoPointer(intArray34, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem42.BruteForce(intArray45, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem41.Hashmap(intArray45, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem50 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem51.BruteForce(intArray54, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem50.Hashmap(intArray54, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem41.BruteForce(intArray54, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem10.BruteForce(intArray54, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem0.TwoPointer(intArray54, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem65 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem66 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem66.BruteForce(intArray69, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem65.Hashmap(intArray69, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem75 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem75.BruteForce(intArray78, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem74.Hashmap(intArray78, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem65.BruteForce(intArray78, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem0.TwoPointer(intArray78, 10);
        java.lang.Class<?> wildcardClass87 = intArray78.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test2637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2637");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray25 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem18.TwoPointer(intArray25, (int) (short) 1);
        int[] intArray31 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem18.TwoPointer(intArray31, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray42 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem35.TwoPointer(intArray42, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem34.TwoPointer(intArray42, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem18.BruteForce(intArray42, (int) (short) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem12.Hashmap(intArray42, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray59 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem52.TwoPointer(intArray59, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem51.TwoPointer(intArray59, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem12.BruteForce(intArray59, (int) (byte) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem0.TwoPointer(intArray59, 1);
        java.lang.Class<?> wildcardClass68 = intArray59.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test2638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2638");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray20 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem13.TwoPointer(intArray20, (int) (short) 1);
        int[] intArray26 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem13.TwoPointer(intArray26, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray37 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem30.TwoPointer(intArray37, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem29.TwoPointer(intArray37, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem13.BruteForce(intArray37, (int) (short) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem44 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem44.BruteForce(intArray47, (int) '#');
        int[] intArray53 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem44.BruteForce(intArray53, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem56.BruteForce(intArray59, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem44.Hashmap(intArray59, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem64 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem65 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem65.BruteForce(intArray68, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem64.Hashmap(intArray68, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem73 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem73.BruteForce(intArray76, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem64.TwoPointer(intArray76, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem44.Hashmap(intArray76, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem13.TwoPointer(intArray76, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem12.TwoPointer(intArray76, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem0.Hashmap(intArray76, (int) (short) 10);
        int[] intArray89 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem0.Hashmap(intArray89, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
    }

    @Test
    public void test2639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2639");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray14 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray14, (int) (byte) 0);
        int[] intArray17 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.TwoPointer(intArray17, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0]");
        org.junit.Assert.assertNotNull(intListList16);
    }

    @Test
    public void test2640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2640");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem7 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem7.BruteForce(intArray10, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem6.Hashmap(intArray10, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem15 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem16 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem16.TwoPointer(intArray23, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem15.TwoPointer(intArray23, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem6.BruteForce(intArray23, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem0.Hashmap(intArray23, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem32 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem32.BruteForce(intArray35, (int) '#');
        int[] intArray41 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem32.BruteForce(intArray41, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem44 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem44.BruteForce(intArray47, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem32.Hashmap(intArray47, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem53.BruteForce(intArray56, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem52.Hashmap(intArray56, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem32.TwoPointer(intArray56, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem63 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray70 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem63.TwoPointer(intArray70, (int) (short) 1);
        int[] intArray76 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem63.TwoPointer(intArray76, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem32.TwoPointer(intArray76, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem0.BruteForce(intArray76, 10);
        java.lang.Class<?> wildcardClass83 = intListList82.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test2641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2641");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        int[] intArray37 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray37, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.Hashmap(intArray37, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem43.BruteForce(intArray46, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem42.Hashmap(intArray46, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem52.BruteForce(intArray55, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem51.Hashmap(intArray55, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem42.BruteForce(intArray55, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem0.Hashmap(intArray55, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem64 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem65 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem65.BruteForce(intArray68, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem64.Hashmap(intArray68, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem73 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray81 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem74.TwoPointer(intArray81, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem73.TwoPointer(intArray81, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem64.BruteForce(intArray81, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem0.BruteForce(intArray81, 1);
        int[] intArray90 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem0.Hashmap(intArray90, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(intListList89);
    }

    @Test
    public void test2642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2642");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem7 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray14 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem7.TwoPointer(intArray14, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList18 = threeSumProblem6.TwoPointer(intArray14, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem19 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem20.BruteForce(intArray23, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem19.Hashmap(intArray23, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem28 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem28.BruteForce(intArray31, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem19.TwoPointer(intArray31, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem37.BruteForce(intArray40, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem36.Hashmap(intArray40, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem45 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem45.BruteForce(intArray48, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem36.TwoPointer(intArray48, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem19.Hashmap(intArray48, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem6.Hashmap(intArray48, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem57 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem57.BruteForce(intArray60, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem6.TwoPointer(intArray60, (int) (short) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem0.Hashmap(intArray60, (int) '#');
        java.lang.Class<?> wildcardClass67 = intListList66.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intListList18);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test2643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2643");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem11 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray18 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem11.TwoPointer(intArray18, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem10.TwoPointer(intArray18, (int) (byte) 0);
        int[] intArray27 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem10.Hashmap(intArray27, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem31.BruteForce(intArray34, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem30.Hashmap(intArray34, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem40.BruteForce(intArray43, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem39.Hashmap(intArray43, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem30.BruteForce(intArray43, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem10.Hashmap(intArray43, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem0.TwoPointer(intArray43, (int) (short) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem54.BruteForce(intArray57, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem60.BruteForce(intArray63, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem54.TwoPointer(intArray63, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem68 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem68.BruteForce(intArray71, (int) '#');
        int[] intArray77 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem68.BruteForce(intArray77, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem54.BruteForce(intArray77, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem0.BruteForce(intArray77, (int) (byte) 1);
        int[] intArray84 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem0.BruteForce(intArray84, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
    }

    @Test
    public void test2644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2644");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.BruteForce(intArray4, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem10.TwoPointer(intArray17, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem9.TwoPointer(intArray17, (int) (byte) 0);
        int[] intArray26 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem9.Hashmap(intArray26, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem30.BruteForce(intArray33, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem29.Hashmap(intArray33, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem38 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem39.BruteForce(intArray42, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem38.Hashmap(intArray42, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem29.BruteForce(intArray42, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem9.Hashmap(intArray42, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem0.TwoPointer(intArray42, (int) (byte) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray61 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem54.TwoPointer(intArray61, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem53.TwoPointer(intArray61, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem66 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray73 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem66.TwoPointer(intArray73, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem53.Hashmap(intArray73, (int) (byte) 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem0.BruteForce(intArray73, 1);
        int[] intArray80 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem0.TwoPointer(intArray80, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intListList79);
    }

    @Test
    public void test2645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2645");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.BruteForce(intArray12, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem17.BruteForce(intArray20, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem23 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray26 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem23.BruteForce(intArray26, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem29.BruteForce(intArray32, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem23.TwoPointer(intArray32, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem38 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem38.BruteForce(intArray41, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem37.Hashmap(intArray41, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem46.BruteForce(intArray49, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem37.TwoPointer(intArray49, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem23.BruteForce(intArray49, (int) ' ');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem57 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem57.BruteForce(intArray60, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem56.Hashmap(intArray60, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem65 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem65.BruteForce(intArray68, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem56.TwoPointer(intArray68, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem73 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem74.BruteForce(intArray77, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem73.Hashmap(intArray77, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem82 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray85 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem82.BruteForce(intArray85, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem73.TwoPointer(intArray85, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem56.Hashmap(intArray85, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem23.Hashmap(intArray85, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList95 = threeSumProblem17.TwoPointer(intArray85, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList97 = threeSumProblem0.TwoPointer(intArray85, (int) (byte) 10);
        java.lang.Class<?> wildcardClass98 = intListList97.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(intListList93);
        org.junit.Assert.assertNotNull(intListList95);
        org.junit.Assert.assertNotNull(intListList97);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test2646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2646");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem14.BruteForce(intArray17, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem13.Hashmap(intArray17, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem22 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem22.BruteForce(intArray25, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem13.TwoPointer(intArray25, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem31.BruteForce(intArray34, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem30.Hashmap(intArray34, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem39.BruteForce(intArray42, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem30.TwoPointer(intArray42, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem13.Hashmap(intArray42, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem0.Hashmap(intArray42, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem52.BruteForce(intArray55, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem51.Hashmap(intArray55, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem61 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray68 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem61.TwoPointer(intArray68, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem60.TwoPointer(intArray68, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem51.BruteForce(intArray68, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem0.Hashmap(intArray68, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem77 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem77.BruteForce(intArray80, (int) '#');
        int[] intArray86 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem77.BruteForce(intArray86, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem0.TwoPointer(intArray86, (int) 'a');
        java.lang.Class<?> wildcardClass91 = intListList90.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test2647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2647");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem10.TwoPointer(intArray17, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem9.TwoPointer(intArray17, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem0.BruteForce(intArray17, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem24 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray31 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem24.TwoPointer(intArray31, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem34.BruteForce(intArray37, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem40.BruteForce(intArray43, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem34.TwoPointer(intArray43, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem24.BruteForce(intArray43, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem50 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray58 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem51.TwoPointer(intArray58, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem50.TwoPointer(intArray58, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem63 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem64 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem64.BruteForce(intArray67, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem63.Hashmap(intArray67, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem72 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem73 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray80 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem73.TwoPointer(intArray80, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem72.TwoPointer(intArray80, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem63.BruteForce(intArray80, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem50.BruteForce(intArray80, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem24.TwoPointer(intArray80, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem0.TwoPointer(intArray80, (int) (short) 0);
        java.lang.Class<?> wildcardClass93 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test2648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2648");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem21.BruteForce(intArray24, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem20.Hashmap(intArray24, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem0.TwoPointer(intArray24, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem32 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem33 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray40 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem33.TwoPointer(intArray40, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem32.TwoPointer(intArray40, (int) (byte) 0);
        int[] intArray46 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem32.TwoPointer(intArray46, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem31.TwoPointer(intArray46, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem0.TwoPointer(intArray46, (int) (short) 10);
        java.lang.Class<?> wildcardClass53 = intArray46.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test2649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2649");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray25 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem18.TwoPointer(intArray25, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem17.TwoPointer(intArray25, (int) (byte) 0);
        int[] intArray34 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem17.Hashmap(intArray34, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem38 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem38.BruteForce(intArray41, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem37.Hashmap(intArray41, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem17.TwoPointer(intArray41, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem50 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray57 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem50.TwoPointer(intArray57, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem49.TwoPointer(intArray57, (int) (byte) 0);
        int[] intArray63 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem49.TwoPointer(intArray63, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem48.TwoPointer(intArray63, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem17.BruteForce(intArray63, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem0.BruteForce(intArray63, (int) '4');
        java.lang.Class<?> wildcardClass72 = intArray63.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0]");
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test2650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2650");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem14.BruteForce(intArray17, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem13.Hashmap(intArray17, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem22 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem22.BruteForce(intArray25, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem13.TwoPointer(intArray25, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem31.BruteForce(intArray34, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem30.Hashmap(intArray34, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem39.BruteForce(intArray42, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem30.TwoPointer(intArray42, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem13.Hashmap(intArray42, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem0.Hashmap(intArray42, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray60 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem51.BruteForce(intArray60, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem0.Hashmap(intArray60, (int) (short) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem65 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem65.BruteForce(intArray68, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem0.Hashmap(intArray68, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem73 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem74.BruteForce(intArray77, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem73.Hashmap(intArray77, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem82 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem83 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray86 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem83.BruteForce(intArray86, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem82.Hashmap(intArray86, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem73.BruteForce(intArray86, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem0.BruteForce(intArray86, (int) (byte) 100);
        int[] intArray95 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList97 = threeSumProblem0.TwoPointer(intArray95, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(intListList94);
    }

    @Test
    public void test2651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2651");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        int[] intArray37 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray37, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.Hashmap(intArray37, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray50 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem43.TwoPointer(intArray50, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem42.TwoPointer(intArray50, (int) (byte) 0);
        int[] intArray56 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem42.TwoPointer(intArray56, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem59.BruteForce(intArray62, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem65 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem65.BruteForce(intArray68, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem59.TwoPointer(intArray68, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem73 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem74.BruteForce(intArray77, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem73.Hashmap(intArray77, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem82 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray85 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem82.BruteForce(intArray85, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem73.TwoPointer(intArray85, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem59.BruteForce(intArray85, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem42.Hashmap(intArray85, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList95 = threeSumProblem0.Hashmap(intArray85, (int) (byte) -1);
        int[] intArray96 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList98 = threeSumProblem0.TwoPointer(intArray96, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0]");
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(intListList93);
        org.junit.Assert.assertNotNull(intListList95);
    }

    @Test
    public void test2652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2652");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem11 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray14 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem11.BruteForce(intArray14, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList18 = threeSumProblem10.Hashmap(intArray14, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem19 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList24 = threeSumProblem19.BruteForce(intArray22, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem10.TwoPointer(intArray22, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem28 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem28.BruteForce(intArray31, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem27.Hashmap(intArray31, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem36.BruteForce(intArray39, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem27.TwoPointer(intArray39, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem10.Hashmap(intArray39, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem0.Hashmap(intArray39, (int) (short) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem48.BruteForce(intArray51, (int) '#');
        int[] intArray57 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem48.BruteForce(intArray57, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem60.BruteForce(intArray63, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem48.Hashmap(intArray63, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem68 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem68.BruteForce(intArray71, (int) '#');
        int[] intArray77 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem68.BruteForce(intArray77, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem48.TwoPointer(intArray77, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem0.Hashmap(intArray77, 1);
        java.lang.Class<?> wildcardClass84 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intListList18);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList24);
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test2653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2653");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem17.BruteForce(intArray21, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem0.TwoPointer(intArray21, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem28 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem29.BruteForce(intArray32, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem28.Hashmap(intArray32, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem0.BruteForce(intArray32, (int) (byte) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem39.BruteForce(intArray42, (int) '#');
        int[] intArray48 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem39.BruteForce(intArray48, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem51.BruteForce(intArray54, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem39.Hashmap(intArray54, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem59.BruteForce(intArray62, (int) '#');
        int[] intArray68 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem59.BruteForce(intArray68, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem39.TwoPointer(intArray68, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem0.TwoPointer(intArray68, (int) ' ');
        java.lang.Class<?> wildcardClass75 = intListList74.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test2654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2654");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem7 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem7.BruteForce(intArray10, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem6.Hashmap(intArray10, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem15 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem15.BruteForce(intArray18, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem6.TwoPointer(intArray18, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem23 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem24 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem24.BruteForce(intArray27, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem23.BruteForce(intArray27, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem6.TwoPointer(intArray27, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem34.Hashmap(intArray38, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem44 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem44.BruteForce(intArray47, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem43.Hashmap(intArray47, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem34.BruteForce(intArray47, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray62 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem55.TwoPointer(intArray62, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem54.TwoPointer(intArray62, (int) (byte) 0);
        int[] intArray71 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem54.Hashmap(intArray71, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem34.BruteForce(intArray71, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem76 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem76.BruteForce(intArray79, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem34.Hashmap(intArray79, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem84 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray87 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem84.BruteForce(intArray87, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem34.TwoPointer(intArray87, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem6.TwoPointer(intArray87, (int) (short) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList95 = threeSumProblem0.TwoPointer(intArray87, 10);
        java.lang.Class<?> wildcardClass96 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(intListList93);
        org.junit.Assert.assertNotNull(intListList95);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test2655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2655");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray9 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem6.BruteForce(intArray9, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList13 = threeSumProblem0.TwoPointer(intArray9, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem15 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem15.BruteForce(intArray18, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem14.Hashmap(intArray18, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem23 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray26 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem23.BruteForce(intArray26, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem14.TwoPointer(intArray26, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem0.BruteForce(intArray26, (int) ' ');
        int[] intArray39 = new int[] { (short) 100, (byte) 100, '4', (byte) -1, (byte) 0, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.Hashmap(intArray39, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem42.BruteForce(intArray45, (int) '#');
        int[] intArray51 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem42.BruteForce(intArray51, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem54.BruteForce(intArray57, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem42.Hashmap(intArray57, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem62 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem62.BruteForce(intArray65, (int) '#');
        int[] intArray71 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem62.BruteForce(intArray71, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem42.TwoPointer(intArray71, (int) ' ');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem76 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem76.BruteForce(intArray79, (int) '#');
        int[] intArray85 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem76.BruteForce(intArray85, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem42.BruteForce(intArray85, (int) (short) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem0.BruteForce(intArray85, (-1));
        int[] intArray92 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem0.TwoPointer(intArray92, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intListList13);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0, 52, 97, 100, 100]");
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(intListList91);
    }

    @Test
    public void test2656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2656");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray14 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray14, (int) (byte) 0);
        int[] intArray17 = new int[] {};
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.BruteForce(intArray17, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        int[] intArray34 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem20.TwoPointer(intArray34, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray46 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem37.BruteForce(intArray46, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem50 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem50.BruteForce(intArray53, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem49.BruteForce(intArray53, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem58 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem58.BruteForce(intArray61, (int) '#');
        int[] intArray67 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem58.BruteForce(intArray67, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem49.BruteForce(intArray67, (int) (short) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem37.BruteForce(intArray67, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem20.Hashmap(intArray67, (int) (short) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem0.Hashmap(intArray67, (int) ' ');
        java.lang.Class<?> wildcardClass78 = intListList77.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0]");
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test2657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2657");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem16 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem16.BruteForce(intArray19, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem10.TwoPointer(intArray19, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem0.BruteForce(intArray19, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray35 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem26.BruteForce(intArray35, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem38 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem38.BruteForce(intArray41, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem26.Hashmap(intArray41, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem47 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem47.BruteForce(intArray50, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem46.Hashmap(intArray50, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem55.BruteForce(intArray58, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem46.TwoPointer(intArray58, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem26.Hashmap(intArray58, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem0.BruteForce(intArray58, (int) 'a');
        java.lang.Class<?> wildcardClass67 = intArray58.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test2658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2658");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem16 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem16.BruteForce(intArray19, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem10.TwoPointer(intArray19, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem0.BruteForce(intArray19, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray34 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem27.TwoPointer(intArray34, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem26.TwoPointer(intArray34, (int) (byte) 0);
        int[] intArray40 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem26.TwoPointer(intArray40, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem44 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray51 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem44.TwoPointer(intArray51, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem43.TwoPointer(intArray51, (int) (byte) 0);
        int[] intArray60 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem43.Hashmap(intArray60, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem26.TwoPointer(intArray60, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem0.BruteForce(intArray60, (int) (byte) 1);
        int[] intArray73 = new int[] { 1, (byte) 10, (byte) 10, (short) 0, 0, (-1) };
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem0.Hashmap(intArray73, (int) '4');
        java.lang.Class<?> wildcardClass76 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0]");
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0, 0, 1, 10, 10]");
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test2659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2659");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem14.BruteForce(intArray17, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem13.Hashmap(intArray17, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem22 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem23 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray30 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem23.TwoPointer(intArray30, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem22.TwoPointer(intArray30, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem13.BruteForce(intArray30, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem0.BruteForce(intArray30, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem40.BruteForce(intArray43, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem39.Hashmap(intArray43, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem49.BruteForce(intArray52, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem48.Hashmap(intArray52, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem57 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem57.BruteForce(intArray60, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem48.TwoPointer(intArray60, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem65 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem66 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem66.BruteForce(intArray69, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem65.Hashmap(intArray69, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem74.BruteForce(intArray77, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem65.TwoPointer(intArray77, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem48.Hashmap(intArray77, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem39.BruteForce(intArray77, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem0.TwoPointer(intArray77, 0);
        java.lang.Class<?> wildcardClass88 = intArray77.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test2660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2660");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.BruteForce(intArray4, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem10.TwoPointer(intArray17, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem9.TwoPointer(intArray17, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem0.TwoPointer(intArray17, (int) (byte) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem24 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem25 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem25.BruteForce(intArray28, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem24.Hashmap(intArray28, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem33 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem34.BruteForce(intArray37, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem33.Hashmap(intArray37, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem42.BruteForce(intArray45, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem33.TwoPointer(intArray45, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem24.Hashmap(intArray45, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray60 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem53.TwoPointer(intArray60, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem52.TwoPointer(intArray60, (int) (byte) 0);
        int[] intArray66 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem52.TwoPointer(intArray66, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem24.Hashmap(intArray66, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem0.BruteForce(intArray66, (int) '#');
        java.lang.Class<?> wildcardClass73 = intListList72.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0]");
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test2661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2661");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem7 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem7.BruteForce(intArray10, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem6.Hashmap(intArray10, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem15 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem16 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem16.TwoPointer(intArray23, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem15.TwoPointer(intArray23, (int) (byte) 0);
        int[] intArray32 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem15.Hashmap(intArray32, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray43 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem36.TwoPointer(intArray43, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem35.TwoPointer(intArray43, (int) (byte) 0);
        int[] intArray52 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem35.Hashmap(intArray52, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem15.Hashmap(intArray52, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem6.Hashmap(intArray52, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray67 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem60.TwoPointer(intArray67, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem59.TwoPointer(intArray67, (int) (byte) 0);
        int[] intArray73 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem59.TwoPointer(intArray73, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem6.Hashmap(intArray73, 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem0.TwoPointer(intArray73, (int) (byte) 10);
        int[] intArray80 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem0.TwoPointer(intArray80, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0]");
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intListList79);
    }

    @Test
    public void test2662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2662");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray29 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem20.BruteForce(intArray29, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem32 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem32.BruteForce(intArray35, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray35, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray49 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem40.BruteForce(intArray49, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem20.BruteForce(intArray49, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray61 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem54.TwoPointer(intArray61, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem20.TwoPointer(intArray61, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem66 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray73 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem66.TwoPointer(intArray73, (int) (short) 1);
        int[] intArray79 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem66.TwoPointer(intArray79, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem20.Hashmap(intArray79, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem0.Hashmap(intArray79, (int) '4');
        java.lang.Class<?> wildcardClass86 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test2663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2663");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem7 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem7.BruteForce(intArray10, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem6.Hashmap(intArray10, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem15 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem16 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem16.BruteForce(intArray19, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem15.Hashmap(intArray19, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem24 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem24.BruteForce(intArray27, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem15.TwoPointer(intArray27, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem6.Hashmap(intArray27, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem34.BruteForce(intArray37, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem6.TwoPointer(intArray37, (int) (short) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem42.BruteForce(intArray45, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem48.BruteForce(intArray51, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem42.TwoPointer(intArray51, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem57 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem57.BruteForce(intArray60, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem56.Hashmap(intArray60, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem65 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem65.BruteForce(intArray68, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem56.TwoPointer(intArray68, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem42.BruteForce(intArray68, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem6.Hashmap(intArray68, (int) (short) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem0.BruteForce(intArray68, (int) (byte) 1);
        int[] intArray79 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem0.Hashmap(intArray79, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intListList78);
    }

    @Test
    public void test2664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2664");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.BruteForce(intArray4, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem10.TwoPointer(intArray17, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem9.TwoPointer(intArray17, (int) (byte) 0);
        int[] intArray26 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem9.Hashmap(intArray26, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem30.BruteForce(intArray33, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem29.Hashmap(intArray33, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem9.TwoPointer(intArray33, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.Hashmap(intArray33, (int) (byte) 10);
        int[] intArray47 = new int[] { (byte) 10, (byte) 100, 'a', '4', 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem0.TwoPointer(intArray47, (int) (byte) 0);
        int[] intArray50 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem0.BruteForce(intArray50, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[1, 10, 52, 97, 100]");
        org.junit.Assert.assertNotNull(intListList49);
    }

    @Test
    public void test2665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2665");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.BruteForce(intArray4, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem10.TwoPointer(intArray17, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem9.TwoPointer(intArray17, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem0.TwoPointer(intArray17, (int) (byte) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem24 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem25 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem25.BruteForce(intArray28, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem24.Hashmap(intArray28, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem33 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem34.BruteForce(intArray37, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem33.Hashmap(intArray37, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem42.BruteForce(intArray45, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem33.TwoPointer(intArray45, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem24.Hashmap(intArray45, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray60 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem53.TwoPointer(intArray60, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem52.TwoPointer(intArray60, (int) (byte) 0);
        int[] intArray66 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem52.TwoPointer(intArray66, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem24.Hashmap(intArray66, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem0.BruteForce(intArray66, (int) '#');
        int[] intArray73 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem0.Hashmap(intArray73, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0]");
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
    }

    @Test
    public void test2666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2666");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem16 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem16.BruteForce(intArray19, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem10.TwoPointer(intArray19, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem0.BruteForce(intArray19, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem26.BruteForce(intArray29, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem32 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem32.BruteForce(intArray35, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem26.TwoPointer(intArray35, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem41.BruteForce(intArray44, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem40.Hashmap(intArray44, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem49.BruteForce(intArray52, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem40.TwoPointer(intArray52, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem26.BruteForce(intArray52, (int) ' ');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem60.BruteForce(intArray63, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem59.Hashmap(intArray63, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem68 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem68.BruteForce(intArray71, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem59.TwoPointer(intArray71, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem76 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem77 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem77.BruteForce(intArray80, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem76.Hashmap(intArray80, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem85 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray88 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem85.BruteForce(intArray88, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem76.TwoPointer(intArray88, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem59.Hashmap(intArray88, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem26.Hashmap(intArray88, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList98 = threeSumProblem0.BruteForce(intArray88, 10);
        java.lang.Class<?> wildcardClass99 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(intListList96);
        org.junit.Assert.assertNotNull(intListList98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test2667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2667");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem16 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem16.BruteForce(intArray19, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem10.TwoPointer(intArray19, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem24 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray33 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem24.BruteForce(intArray33, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem10.BruteForce(intArray33, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem0.BruteForce(intArray33, 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray49 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem40.BruteForce(intArray49, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem52.BruteForce(intArray55, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem40.Hashmap(intArray55, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem60.BruteForce(intArray63, (int) '#');
        int[] intArray69 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem60.BruteForce(intArray69, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem40.TwoPointer(intArray69, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem0.Hashmap(intArray69, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem76 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem77 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray84 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem77.TwoPointer(intArray84, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem76.TwoPointer(intArray84, (int) (byte) 0);
        int[] intArray90 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem76.TwoPointer(intArray90, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem0.TwoPointer(intArray90, (int) (short) 10);
        java.lang.Class<?> wildcardClass95 = intArray90.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0]");
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test2668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2668");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray9 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem6.BruteForce(intArray9, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList13 = threeSumProblem0.TwoPointer(intArray9, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem14.BruteForce(intArray17, (int) '#');
        int[] intArray23 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem14.BruteForce(intArray23, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem0.BruteForce(intArray23, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem28 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray36 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem29.TwoPointer(intArray36, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem28.TwoPointer(intArray36, (int) (byte) 0);
        int[] intArray42 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem28.TwoPointer(intArray42, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem45 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem45.BruteForce(intArray48, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem51.BruteForce(intArray54, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem45.TwoPointer(intArray54, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem60.BruteForce(intArray63, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem59.Hashmap(intArray63, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem68 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem68.BruteForce(intArray71, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem59.TwoPointer(intArray71, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem45.BruteForce(intArray71, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem28.Hashmap(intArray71, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem0.BruteForce(intArray71, (int) '#');
        java.lang.Class<?> wildcardClass82 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intListList13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0]");
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test2669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2669");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem11 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray18 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem11.TwoPointer(intArray18, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem10.TwoPointer(intArray18, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList24 = threeSumProblem0.Hashmap(intArray18, (int) (byte) 100);
        int[] intArray25 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem0.TwoPointer(intArray25, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intListList24);
    }

    @Test
    public void test2670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2670");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray9 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem6.BruteForce(intArray9, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList13 = threeSumProblem0.TwoPointer(intArray9, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem15 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem15.BruteForce(intArray18, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem14.Hashmap(intArray18, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem23 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem24 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem24.BruteForce(intArray27, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem23.Hashmap(intArray27, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem14.BruteForce(intArray27, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray42 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem35.TwoPointer(intArray42, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem34.TwoPointer(intArray42, (int) (byte) 0);
        int[] intArray51 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem34.Hashmap(intArray51, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem14.BruteForce(intArray51, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem57 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem57.BruteForce(intArray60, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem56.Hashmap(intArray60, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem65 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem66 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem66.BruteForce(intArray69, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem65.Hashmap(intArray69, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem56.BruteForce(intArray69, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem14.TwoPointer(intArray69, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem0.Hashmap(intArray69, (int) (short) 1);
        java.lang.Class<?> wildcardClass80 = intArray69.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intListList13);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test2671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2671");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem7 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem8 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray11 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList13 = threeSumProblem8.BruteForce(intArray11, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem7.Hashmap(intArray11, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem16 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem17.BruteForce(intArray20, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList24 = threeSumProblem16.Hashmap(intArray20, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem7.BruteForce(intArray20, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem28 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray35 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem28.TwoPointer(intArray35, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem27.TwoPointer(intArray35, (int) (byte) 0);
        int[] intArray44 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem27.Hashmap(intArray44, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem7.BruteForce(intArray44, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem49.BruteForce(intArray52, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem7.Hashmap(intArray52, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem57 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem57.BruteForce(intArray60, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem7.TwoPointer(intArray60, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem6.TwoPointer(intArray60, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem0.BruteForce(intArray60, (int) (byte) -1);
        java.lang.Class<?> wildcardClass69 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList13);
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intListList24);
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test2672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2672");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem2 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray9 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem2.TwoPointer(intArray9, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList13 = threeSumProblem1.TwoPointer(intArray9, (int) (byte) 0);
        int[] intArray15 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem1.TwoPointer(intArray15, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.TwoPointer(intArray15, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem33 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem34.BruteForce(intArray37, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem33.Hashmap(intArray37, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray50 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem43.TwoPointer(intArray50, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem42.TwoPointer(intArray50, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem33.BruteForce(intArray50, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem20.BruteForce(intArray50, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray67 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem60.TwoPointer(intArray67, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem59.TwoPointer(intArray67, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem72 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem73 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray80 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem73.TwoPointer(intArray80, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem72.TwoPointer(intArray80, (int) (byte) 0);
        int[] intArray89 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem72.Hashmap(intArray89, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem59.Hashmap(intArray89, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList95 = threeSumProblem20.BruteForce(intArray89, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList97 = threeSumProblem0.Hashmap(intArray89, 0);
        java.lang.Class<?> wildcardClass98 = intListList97.getClass();
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intListList13);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(intListList93);
        org.junit.Assert.assertNotNull(intListList95);
        org.junit.Assert.assertNotNull(intListList97);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test2673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2673");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem21.BruteForce(intArray24, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem20.Hashmap(intArray24, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem0.TwoPointer(intArray24, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem32 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem32.BruteForce(intArray35, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem31.Hashmap(intArray35, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem41.BruteForce(intArray44, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem40.Hashmap(intArray44, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem31.BruteForce(intArray44, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem0.BruteForce(intArray44, (int) ' ');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem53.BruteForce(intArray56, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray66 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem59.TwoPointer(intArray66, (int) (short) 1);
        int[] intArray72 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem59.TwoPointer(intArray72, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem75 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem76 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray83 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem76.TwoPointer(intArray83, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem75.TwoPointer(intArray83, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem59.BruteForce(intArray83, (int) (short) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem53.Hashmap(intArray83, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem0.TwoPointer(intArray83, (int) ' ');
        int[] intArray94 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem0.TwoPointer(intArray94, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(intListList93);
    }

    @Test
    public void test2674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2674");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.BruteForce(intArray13, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem33 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray41 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem34.TwoPointer(intArray41, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem33.TwoPointer(intArray41, (int) (byte) 0);
        int[] intArray50 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem33.Hashmap(intArray50, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem20.Hashmap(intArray50, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem56.BruteForce(intArray59, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem55.Hashmap(intArray59, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem64 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem65 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem65.BruteForce(intArray68, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem64.Hashmap(intArray68, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem73 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem73.BruteForce(intArray76, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem64.TwoPointer(intArray76, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem55.Hashmap(intArray76, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem20.BruteForce(intArray76, (int) (byte) 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem0.TwoPointer(intArray76, (int) (byte) 100);
        int[] intArray87 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem0.Hashmap(intArray87, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intListList86);
    }

    @Test
    public void test2675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2675");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.BruteForce(intArray13, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem33 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray40 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem33.TwoPointer(intArray40, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem20.Hashmap(intArray40, (int) (byte) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem45 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray52 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem45.TwoPointer(intArray52, (int) (short) 1);
        int[] intArray58 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem45.TwoPointer(intArray58, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem61 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem62 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem62.BruteForce(intArray65, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem61.BruteForce(intArray65, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem45.Hashmap(intArray65, 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem20.Hashmap(intArray65, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem0.BruteForce(intArray65, (int) (byte) -1);
        java.lang.Class<?> wildcardClass76 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test2676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2676");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray29 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem20.BruteForce(intArray29, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem0.TwoPointer(intArray29, (int) ' ');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray43 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem34.BruteForce(intArray43, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem0.BruteForce(intArray43, (int) (short) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray56 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem49.TwoPointer(intArray56, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem48.TwoPointer(intArray56, (int) (byte) 0);
        int[] intArray65 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem48.Hashmap(intArray65, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem68 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem69 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem69.BruteForce(intArray72, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem68.Hashmap(intArray72, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem48.TwoPointer(intArray72, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem0.Hashmap(intArray72, 0);
        java.lang.Class<?> wildcardClass81 = intArray72.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test2677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2677");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray29 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem20.BruteForce(intArray29, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem32 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem32.BruteForce(intArray35, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray35, (int) (byte) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.BruteForce(intArray35, (int) (byte) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray50 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem43.TwoPointer(intArray50, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem42.TwoPointer(intArray50, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem0.BruteForce(intArray50, 1);
        java.lang.Class<?> wildcardClass57 = intArray50.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test2678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2678");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        int[] intArray13 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem0.TwoPointer(intArray13, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem16 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem17.BruteForce(intArray20, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList24 = threeSumProblem16.Hashmap(intArray20, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem25 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem27.BruteForce(intArray30, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem26.Hashmap(intArray30, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem36.BruteForce(intArray39, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem35.Hashmap(intArray39, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem26.BruteForce(intArray39, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem47 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray54 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem47.TwoPointer(intArray54, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem46.TwoPointer(intArray54, (int) (byte) 0);
        int[] intArray63 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem46.Hashmap(intArray63, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem26.BruteForce(intArray63, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem68 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem68.BruteForce(intArray71, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem26.Hashmap(intArray71, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem76 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem76.BruteForce(intArray79, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem26.TwoPointer(intArray79, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem25.TwoPointer(intArray79, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem16.Hashmap(intArray79, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem0.Hashmap(intArray79, 0);
        java.lang.Class<?> wildcardClass90 = intListList89.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intListList24);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test2679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2679");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.BruteForce(intArray4, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem19 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList24 = threeSumProblem19.BruteForce(intArray22, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem18.Hashmap(intArray22, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem27.BruteForce(intArray30, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem18.TwoPointer(intArray30, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem9.Hashmap(intArray30, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem38 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem38.BruteForce(intArray41, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem37.Hashmap(intArray41, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem46.BruteForce(intArray49, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem37.TwoPointer(intArray49, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem9.TwoPointer(intArray49, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem0.TwoPointer(intArray49, (int) (short) 1);
        int[] intArray58 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem0.Hashmap(intArray58, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList24);
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intListList57);
    }

    @Test
    public void test2680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2680");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem11 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray18 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem11.TwoPointer(intArray18, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem10.TwoPointer(intArray18, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList24 = threeSumProblem0.Hashmap(intArray18, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem25 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem25.BruteForce(intArray28, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem31.TwoPointer(intArray38, (int) (short) 1);
        int[] intArray44 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem31.TwoPointer(intArray44, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem47 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray55 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem48.TwoPointer(intArray55, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem47.TwoPointer(intArray55, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem31.BruteForce(intArray55, (int) (short) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem25.Hashmap(intArray55, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem0.TwoPointer(intArray55, (int) (short) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem66 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem67 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem67.BruteForce(intArray70, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem66.BruteForce(intArray70, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem75 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem76 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray83 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem76.TwoPointer(intArray83, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem75.TwoPointer(intArray83, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem66.TwoPointer(intArray83, (int) (byte) 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem0.BruteForce(intArray83, 100);
        java.lang.Class<?> wildcardClass92 = intListList91.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intListList24);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test2681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2681");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem2 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray9 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem2.TwoPointer(intArray9, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList13 = threeSumProblem1.TwoPointer(intArray9, (int) (byte) 0);
        int[] intArray15 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem1.TwoPointer(intArray15, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.TwoPointer(intArray15, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray29 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem20.BruteForce(intArray29, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem32 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem32.BruteForce(intArray35, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem38 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem38.TwoPointer(intArray45, (int) (short) 1);
        int[] intArray51 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem38.TwoPointer(intArray51, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray62 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem55.TwoPointer(intArray62, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem54.TwoPointer(intArray62, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem38.BruteForce(intArray62, (int) (short) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem32.Hashmap(intArray62, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem20.BruteForce(intArray62, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem0.BruteForce(intArray62, (int) (short) 10);
        java.lang.Class<?> wildcardClass75 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intListList13);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test2682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2682");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem21.BruteForce(intArray24, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem20.Hashmap(intArray24, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem30.BruteForce(intArray33, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem29.Hashmap(intArray33, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.BruteForce(intArray33, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray48 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem41.TwoPointer(intArray48, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem40.TwoPointer(intArray48, (int) (byte) 0);
        int[] intArray57 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem40.Hashmap(intArray57, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem20.BruteForce(intArray57, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem0.Hashmap(intArray57, (int) (short) 1);
        int[] intArray64 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem0.Hashmap(intArray64, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
    }

    @Test
    public void test2683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2683");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray14 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray14, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem17.Hashmap(intArray21, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem27.BruteForce(intArray30, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem26.Hashmap(intArray30, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem17.BruteForce(intArray30, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem38 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem38.TwoPointer(intArray45, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem37.TwoPointer(intArray45, (int) (byte) 0);
        int[] intArray54 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem37.Hashmap(intArray54, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem17.BruteForce(intArray54, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem0.Hashmap(intArray54, (int) 'a');
        java.lang.Class<?> wildcardClass61 = intListList60.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0]");
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test2684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2684");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray26 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem17.BruteForce(intArray26, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem29.BruteForce(intArray32, (int) '#');
        int[] intArray38 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem29.BruteForce(intArray38, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem41.BruteForce(intArray44, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem29.Hashmap(intArray44, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem49.BruteForce(intArray52, (int) '#');
        int[] intArray58 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem49.BruteForce(intArray58, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem29.BruteForce(intArray58, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem63 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem64 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray71 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem64.TwoPointer(intArray71, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem63.TwoPointer(intArray71, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem29.Hashmap(intArray71, (int) (short) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem17.Hashmap(intArray71, (int) (short) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem0.TwoPointer(intArray71, (int) (byte) -1);
        java.lang.Class<?> wildcardClass82 = intArray71.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test2685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2685");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray25 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem18.TwoPointer(intArray25, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem17.TwoPointer(intArray25, (int) (byte) 0);
        int[] intArray34 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem17.Hashmap(intArray34, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem38 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem38.BruteForce(intArray41, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem37.Hashmap(intArray41, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem17.TwoPointer(intArray41, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem50 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray57 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem50.TwoPointer(intArray57, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem49.TwoPointer(intArray57, (int) (byte) 0);
        int[] intArray63 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem49.TwoPointer(intArray63, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem48.TwoPointer(intArray63, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem17.BruteForce(intArray63, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem0.BruteForce(intArray63, (int) '4');
        int[] intArray72 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem0.Hashmap(intArray72, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0]");
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
    }

    @Test
    public void test2686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2686");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray16 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList18 = threeSumProblem13.BruteForce(intArray16, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem19 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList24 = threeSumProblem19.BruteForce(intArray22, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem13.TwoPointer(intArray22, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray36 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem27.BruteForce(intArray36, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem13.BruteForce(intArray36, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem0.Hashmap(intArray36, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem44 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem44.BruteForce(intArray47, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem43.Hashmap(intArray47, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem53.BruteForce(intArray56, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem52.Hashmap(intArray56, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem61 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem61.BruteForce(intArray64, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem52.TwoPointer(intArray64, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem43.Hashmap(intArray64, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem0.Hashmap(intArray64, 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem73 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray81 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem74.TwoPointer(intArray81, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem73.TwoPointer(intArray81, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem86 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray93 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList95 = threeSumProblem86.TwoPointer(intArray93, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList97 = threeSumProblem73.Hashmap(intArray93, (int) (byte) 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList99 = threeSumProblem0.TwoPointer(intArray93, (int) '#');
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList18);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList24);
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList95);
        org.junit.Assert.assertNotNull(intListList97);
        org.junit.Assert.assertNotNull(intListList99);
    }

    @Test
    public void test2687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2687");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem19 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList24 = threeSumProblem19.BruteForce(intArray22, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem18.Hashmap(intArray22, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem9.BruteForce(intArray22, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem30.BruteForce(intArray33, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem29.Hashmap(intArray33, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem38 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray46 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem39.TwoPointer(intArray46, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem38.TwoPointer(intArray46, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem29.BruteForce(intArray46, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem9.TwoPointer(intArray46, 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem56.BruteForce(intArray59, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem55.Hashmap(intArray59, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem64 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem65 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem65.BruteForce(intArray68, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem64.Hashmap(intArray68, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem73 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem73.BruteForce(intArray76, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem64.TwoPointer(intArray76, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem55.Hashmap(intArray76, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem83 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray86 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem83.BruteForce(intArray86, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem55.TwoPointer(intArray86, (int) (short) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem9.Hashmap(intArray86, 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem0.Hashmap(intArray86, (int) (short) 0);
        int[] intArray95 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList97 = threeSumProblem0.BruteForce(intArray95, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList24);
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(intListList94);
    }

    @Test
    public void test2688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2688");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem10.TwoPointer(intArray17, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem9.TwoPointer(intArray17, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem0.BruteForce(intArray17, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem24 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem25 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray32 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem25.TwoPointer(intArray32, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem24.TwoPointer(intArray32, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem0.TwoPointer(intArray32, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem39.BruteForce(intArray42, (int) '#');
        int[] intArray48 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem39.BruteForce(intArray48, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem51.BruteForce(intArray54, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem39.Hashmap(intArray54, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem60.BruteForce(intArray63, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem59.Hashmap(intArray63, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem68 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem68.BruteForce(intArray71, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem59.TwoPointer(intArray71, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem39.Hashmap(intArray71, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem78 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem79 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray86 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem79.TwoPointer(intArray86, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem78.TwoPointer(intArray86, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem39.TwoPointer(intArray86, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem0.Hashmap(intArray86, (int) (byte) 10);
        java.lang.Class<?> wildcardClass95 = intListList94.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test2689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2689");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        int[] intArray13 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem0.TwoPointer(intArray13, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem16 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem17.BruteForce(intArray20, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList24 = threeSumProblem16.BruteForce(intArray20, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem0.Hashmap(intArray20, 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem28 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem28.BruteForce(intArray31, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem27.Hashmap(intArray31, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem37.BruteForce(intArray40, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem36.Hashmap(intArray40, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem27.BruteForce(intArray40, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem47 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray55 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem48.TwoPointer(intArray55, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem47.TwoPointer(intArray55, (int) (byte) 0);
        int[] intArray64 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem47.Hashmap(intArray64, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem27.BruteForce(intArray64, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem69 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem70 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem70.BruteForce(intArray73, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem69.Hashmap(intArray73, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem78 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem79 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem79.BruteForce(intArray82, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem78.Hashmap(intArray82, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem69.BruteForce(intArray82, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem27.TwoPointer(intArray82, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem0.BruteForce(intArray82, (int) '#');
        java.lang.Class<?> wildcardClass93 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intListList24);
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test2690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2690");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem16 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem16.BruteForce(intArray19, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem10.TwoPointer(intArray19, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem24 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray33 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem24.BruteForce(intArray33, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem10.BruteForce(intArray33, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem0.BruteForce(intArray33, 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray49 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem40.BruteForce(intArray49, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem52.BruteForce(intArray55, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem40.Hashmap(intArray55, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem60.BruteForce(intArray63, (int) '#');
        int[] intArray69 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem60.BruteForce(intArray69, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem40.TwoPointer(intArray69, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem0.Hashmap(intArray69, 0);
        java.lang.Class<?> wildcardClass76 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test2691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2691");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem21.BruteForce(intArray24, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem20.Hashmap(intArray24, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem0.TwoPointer(intArray24, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem31.TwoPointer(intArray38, (int) (short) 1);
        int[] intArray44 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem31.TwoPointer(intArray44, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem0.TwoPointer(intArray44, 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray56 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem49.TwoPointer(intArray56, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem59.BruteForce(intArray62, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem65 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem65.BruteForce(intArray68, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem59.TwoPointer(intArray68, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem49.BruteForce(intArray68, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem0.TwoPointer(intArray68, (int) (byte) 1);
        java.lang.Class<?> wildcardClass77 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test2692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2692");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem10.TwoPointer(intArray17, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem9.TwoPointer(intArray17, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem0.BruteForce(intArray17, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem24 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray33 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem24.BruteForce(intArray33, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray45 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem36.BruteForce(intArray45, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem48.BruteForce(intArray51, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem36.Hashmap(intArray51, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray65 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem56.BruteForce(intArray65, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem36.BruteForce(intArray65, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem70 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem71 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray78 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem71.TwoPointer(intArray78, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem70.TwoPointer(intArray78, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem36.Hashmap(intArray78, (int) (short) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem24.Hashmap(intArray78, (int) (short) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem0.BruteForce(intArray78, (int) (short) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem89 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem90 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray93 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList95 = threeSumProblem90.BruteForce(intArray93, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList97 = threeSumProblem89.Hashmap(intArray93, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList99 = threeSumProblem0.BruteForce(intArray93, (int) '#');
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList95);
        org.junit.Assert.assertNotNull(intListList97);
        org.junit.Assert.assertNotNull(intListList99);
    }

    @Test
    public void test2693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2693");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.BruteForce(intArray4, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem19 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList24 = threeSumProblem19.BruteForce(intArray22, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem18.Hashmap(intArray22, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem27.BruteForce(intArray30, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem18.TwoPointer(intArray30, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem9.Hashmap(intArray30, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem38 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem38.BruteForce(intArray41, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem37.Hashmap(intArray41, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem46.BruteForce(intArray49, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem37.TwoPointer(intArray49, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem9.TwoPointer(intArray49, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem0.TwoPointer(intArray49, (int) (short) 1);
        java.lang.Class<?> wildcardClass58 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList24);
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test2694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2694");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem21.BruteForce(intArray24, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem20.Hashmap(intArray24, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray37 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem30.TwoPointer(intArray37, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem29.TwoPointer(intArray37, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem20.BruteForce(intArray37, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem0.TwoPointer(intArray37, (int) (byte) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem46.BruteForce(intArray49, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem52.BruteForce(intArray55, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem46.TwoPointer(intArray55, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem0.Hashmap(intArray55, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem62 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem63 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray70 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem63.TwoPointer(intArray70, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem62.TwoPointer(intArray70, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem0.TwoPointer(intArray70, (int) ' ');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem77 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem78 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray81 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem78.BruteForce(intArray81, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem77.Hashmap(intArray81, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem0.TwoPointer(intArray81, (int) (short) 1);
        java.lang.Class<?> wildcardClass88 = intArray81.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test2695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2695");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem9.TwoPointer(intArray21, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem27.BruteForce(intArray30, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem26.Hashmap(intArray30, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem26.TwoPointer(intArray38, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem9.Hashmap(intArray38, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem0.BruteForce(intArray38, 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem47 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray54 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem47.TwoPointer(intArray54, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem57 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem57.BruteForce(intArray60, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem63 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem63.BruteForce(intArray66, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem57.TwoPointer(intArray66, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem47.BruteForce(intArray66, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem0.TwoPointer(intArray66, 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem75 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem75.BruteForce(intArray78, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem0.TwoPointer(intArray78, 1);
        java.lang.Class<?> wildcardClass83 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test2696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2696");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem11 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray18 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem11.TwoPointer(intArray18, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem10.TwoPointer(intArray18, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList24 = threeSumProblem0.Hashmap(intArray18, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem25 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray33 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem26.TwoPointer(intArray33, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem25.TwoPointer(intArray33, (int) (byte) 0);
        int[] intArray42 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem25.Hashmap(intArray42, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem45 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem46.BruteForce(intArray49, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem45.Hashmap(intArray49, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem25.TwoPointer(intArray49, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem57 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem58 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray65 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem58.TwoPointer(intArray65, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem57.TwoPointer(intArray65, (int) (byte) 0);
        int[] intArray71 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem57.TwoPointer(intArray71, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem56.TwoPointer(intArray71, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem25.TwoPointer(intArray71, (int) (short) 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem0.TwoPointer(intArray71, (int) '4');
        int[] intArray80 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem0.Hashmap(intArray80, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intListList24);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0]");
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intListList79);
    }

    @Test
    public void test2697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2697");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray16 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList18 = threeSumProblem13.BruteForce(intArray16, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem19 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList24 = threeSumProblem19.BruteForce(intArray22, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem13.TwoPointer(intArray22, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray36 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem27.BruteForce(intArray36, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem13.BruteForce(intArray36, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem0.Hashmap(intArray36, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray50 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem43.TwoPointer(intArray50, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem53.BruteForce(intArray56, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem59.BruteForce(intArray62, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem53.TwoPointer(intArray62, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem43.BruteForce(intArray62, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem69 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem69.BruteForce(intArray72, (int) '#');
        int[] intArray78 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem69.BruteForce(intArray78, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem43.TwoPointer(intArray78, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem0.TwoPointer(intArray78, (int) (short) 10);
        java.lang.Class<?> wildcardClass85 = intArray78.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList18);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList24);
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test2698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2698");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray9 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem6.BruteForce(intArray9, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList13 = threeSumProblem0.TwoPointer(intArray9, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem15 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem15.BruteForce(intArray18, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem14.Hashmap(intArray18, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem23 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem24 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray31 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem24.TwoPointer(intArray31, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem23.TwoPointer(intArray31, (int) (byte) 0);
        int[] intArray40 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem23.Hashmap(intArray40, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem44 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray51 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem44.TwoPointer(intArray51, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem43.TwoPointer(intArray51, (int) (byte) 0);
        int[] intArray60 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem43.Hashmap(intArray60, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem23.Hashmap(intArray60, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem14.Hashmap(intArray60, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem67 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem68 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray75 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem68.TwoPointer(intArray75, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem67.TwoPointer(intArray75, (int) (byte) 0);
        int[] intArray81 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem67.TwoPointer(intArray81, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem14.Hashmap(intArray81, 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem0.TwoPointer(intArray81, (int) (short) -1);
        java.lang.Class<?> wildcardClass88 = intListList87.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intListList13);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0]");
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test2699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2699");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem2 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList7 = threeSumProblem2.BruteForce(intArray5, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem1.BruteForce(intArray5, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem11 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray18 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem11.TwoPointer(intArray18, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem10.TwoPointer(intArray18, (int) (byte) 0);
        int[] intArray27 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem10.Hashmap(intArray27, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem31.BruteForce(intArray34, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem30.Hashmap(intArray34, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem10.TwoPointer(intArray34, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem1.Hashmap(intArray34, (int) (byte) 10);
        int[] intArray48 = new int[] { (byte) 10, (byte) 100, 'a', '4', 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem1.TwoPointer(intArray48, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem0.TwoPointer(intArray48, (int) '4');
        java.lang.Class<?> wildcardClass53 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList7);
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[1, 10, 52, 97, 100]");
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test2700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2700");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray9 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem6.BruteForce(intArray9, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList13 = threeSumProblem0.TwoPointer(intArray9, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem14.BruteForce(intArray17, (int) '#');
        int[] intArray23 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem14.BruteForce(intArray23, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem0.BruteForce(intArray23, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem28 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray36 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem29.TwoPointer(intArray36, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem28.TwoPointer(intArray36, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem42.BruteForce(intArray45, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem41.Hashmap(intArray45, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem50 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem50.BruteForce(intArray53, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem41.TwoPointer(intArray53, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem58 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem59.BruteForce(intArray62, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem58.Hashmap(intArray62, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem67 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem67.BruteForce(intArray70, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem58.TwoPointer(intArray70, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem41.Hashmap(intArray70, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem28.Hashmap(intArray70, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem79 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray88 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem79.BruteForce(intArray88, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem28.Hashmap(intArray88, (int) (short) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem0.Hashmap(intArray88, (int) '#');
        int[] intArray95 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList97 = threeSumProblem0.Hashmap(intArray95, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intListList13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(intListList94);
    }

    @Test
    public void test2701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2701");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray29 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem20.BruteForce(intArray29, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem0.BruteForce(intArray29, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray42 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem35.TwoPointer(intArray42, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem34.TwoPointer(intArray42, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem0.Hashmap(intArray42, (int) (short) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem49.BruteForce(intArray52, (int) '#');
        int[] intArray58 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem49.BruteForce(intArray58, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem61 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem61.BruteForce(intArray64, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem49.Hashmap(intArray64, (int) (byte) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem0.TwoPointer(intArray64, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem71 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem71.BruteForce(intArray74, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem0.BruteForce(intArray74, (int) (short) 0);
        java.lang.Class<?> wildcardClass79 = intListList78.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test2702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2702");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem9.TwoPointer(intArray21, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem27.BruteForce(intArray30, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem26.BruteForce(intArray30, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem9.TwoPointer(intArray30, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem38 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem38.BruteForce(intArray41, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem37.Hashmap(intArray41, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem47 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem47.BruteForce(intArray50, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem46.Hashmap(intArray50, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem37.BruteForce(intArray50, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem57 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem58 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray65 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem58.TwoPointer(intArray65, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem57.TwoPointer(intArray65, (int) (byte) 0);
        int[] intArray74 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem57.Hashmap(intArray74, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem37.BruteForce(intArray74, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem79 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem79.BruteForce(intArray82, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem37.Hashmap(intArray82, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem87 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray90 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem87.BruteForce(intArray90, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem37.TwoPointer(intArray90, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem9.TwoPointer(intArray90, (int) (short) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList98 = threeSumProblem0.BruteForce(intArray90, 1);
        java.lang.Class<?> wildcardClass99 = intListList98.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(intListList96);
        org.junit.Assert.assertNotNull(intListList98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test2703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2703");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem17.Hashmap(intArray21, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem26.BruteForce(intArray29, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem17.TwoPointer(intArray29, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem0.Hashmap(intArray29, (int) 'a');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem37.BruteForce(intArray40, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem36.Hashmap(intArray40, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem0.TwoPointer(intArray40, (int) (byte) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem47 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem48.BruteForce(intArray51, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem47.Hashmap(intArray51, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem57 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem57.BruteForce(intArray60, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem56.Hashmap(intArray60, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem65 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem65.BruteForce(intArray68, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem56.TwoPointer(intArray68, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem73 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem74.BruteForce(intArray77, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem73.Hashmap(intArray77, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem82 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray85 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem82.BruteForce(intArray85, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem73.TwoPointer(intArray85, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem56.Hashmap(intArray85, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem47.BruteForce(intArray85, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList95 = threeSumProblem0.TwoPointer(intArray85, (int) (byte) 100);
        java.lang.Class<?> wildcardClass96 = intArray85.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(intListList93);
        org.junit.Assert.assertNotNull(intListList95);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test2704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2704");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray16 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList18 = threeSumProblem13.BruteForce(intArray16, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem19 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem20.BruteForce(intArray23, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem19.Hashmap(intArray23, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem28 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray36 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem29.TwoPointer(intArray36, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem28.TwoPointer(intArray36, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem19.BruteForce(intArray36, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem13.Hashmap(intArray36, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem0.TwoPointer(intArray36, 0);
        java.lang.Class<?> wildcardClass47 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList18);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test2705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2705");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem10.TwoPointer(intArray17, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem9.TwoPointer(intArray17, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem0.BruteForce(intArray17, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem24 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray33 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem24.BruteForce(intArray33, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray45 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem36.BruteForce(intArray45, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem48.BruteForce(intArray51, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem36.Hashmap(intArray51, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray65 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem56.BruteForce(intArray65, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem36.BruteForce(intArray65, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem70 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem71 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray78 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem71.TwoPointer(intArray78, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem70.TwoPointer(intArray78, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem36.Hashmap(intArray78, (int) (short) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem24.Hashmap(intArray78, (int) (short) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem0.TwoPointer(intArray78, (int) 'a');
        int[] intArray89 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem0.TwoPointer(intArray89, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
    }

    @Test
    public void test2706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2706");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.BruteForce(intArray13, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        int[] intArray37 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray37, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.BruteForce(intArray37, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem42.BruteForce(intArray45, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem0.Hashmap(intArray45, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem50 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem50.BruteForce(intArray53, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem0.TwoPointer(intArray53, (int) ' ');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem58 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray65 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem58.TwoPointer(intArray65, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem0.TwoPointer(intArray65, 100);
        int[] intArray70 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem0.Hashmap(intArray70, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
    }

    @Test
    public void test2707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2707");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray25 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem18.TwoPointer(intArray25, (int) (short) 1);
        int[] intArray31 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem18.TwoPointer(intArray31, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray42 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem35.TwoPointer(intArray42, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem34.TwoPointer(intArray42, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem18.BruteForce(intArray42, (int) (short) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem12.Hashmap(intArray42, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem0.BruteForce(intArray42, (int) 'a');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem53.BruteForce(intArray56, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem59.BruteForce(intArray62, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem53.TwoPointer(intArray62, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem67 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem67.BruteForce(intArray70, (int) '#');
        int[] intArray76 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem67.BruteForce(intArray76, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem53.BruteForce(intArray76, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem0.BruteForce(intArray76, (int) (byte) 1);
        java.lang.Class<?> wildcardClass83 = intArray76.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test2708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2708");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem21.BruteForce(intArray24, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem20.Hashmap(intArray24, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem0.TwoPointer(intArray24, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem32 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem32.BruteForce(intArray35, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem31.Hashmap(intArray35, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem41.BruteForce(intArray44, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem40.Hashmap(intArray44, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem31.BruteForce(intArray44, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem0.BruteForce(intArray44, (int) ' ');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem54.BruteForce(intArray57, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem53.BruteForce(intArray57, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem62 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem62.BruteForce(intArray65, (int) '#');
        int[] intArray71 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem62.BruteForce(intArray71, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem53.BruteForce(intArray71, (int) (short) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem76 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem77 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray84 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem77.TwoPointer(intArray84, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem76.TwoPointer(intArray84, (int) (byte) 0);
        int[] intArray90 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem76.TwoPointer(intArray90, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem53.BruteForce(intArray90, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem0.TwoPointer(intArray90, (int) (short) 10);
        java.lang.Class<?> wildcardClass97 = intArray90.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0]");
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(intListList96);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test2709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2709");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        int[] intArray21 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem12.BruteForce(intArray21, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem24 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem24.BruteForce(intArray27, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem12.Hashmap(intArray27, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem32 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem32.BruteForce(intArray35, (int) '#');
        int[] intArray41 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem32.BruteForce(intArray41, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem12.BruteForce(intArray41, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem47 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray54 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem47.TwoPointer(intArray54, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem46.TwoPointer(intArray54, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem12.Hashmap(intArray54, (int) (short) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem0.Hashmap(intArray54, (int) (short) 0);
        java.lang.Class<?> wildcardClass63 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test2710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2710");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem17.Hashmap(intArray21, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem26.BruteForce(intArray29, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem17.TwoPointer(intArray29, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem34.Hashmap(intArray38, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem43.BruteForce(intArray46, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem34.TwoPointer(intArray46, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem17.Hashmap(intArray46, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem0.BruteForce(intArray46, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray63 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem56.TwoPointer(intArray63, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem55.TwoPointer(intArray63, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem0.TwoPointer(intArray63, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem70 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem71 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem71.BruteForce(intArray74, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem70.BruteForce(intArray74, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem79 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem80 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray87 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem80.TwoPointer(intArray87, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem79.TwoPointer(intArray87, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem70.TwoPointer(intArray87, (int) (byte) 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList95 = threeSumProblem0.TwoPointer(intArray87, 10);
        int[] intArray96 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList98 = threeSumProblem0.TwoPointer(intArray96, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(intListList93);
        org.junit.Assert.assertNotNull(intListList95);
    }

    @Test
    public void test2711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2711");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray25 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem18.TwoPointer(intArray25, (int) (short) 1);
        int[] intArray31 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem18.TwoPointer(intArray31, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray42 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem35.TwoPointer(intArray42, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem34.TwoPointer(intArray42, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem18.BruteForce(intArray42, (int) (short) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem12.Hashmap(intArray42, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray59 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem52.TwoPointer(intArray59, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem51.TwoPointer(intArray59, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem12.BruteForce(intArray59, (int) (byte) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem0.TwoPointer(intArray59, 1);
        int[] intArray68 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem0.TwoPointer(intArray68, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
    }

    @Test
    public void test2712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2712");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray29 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem20.BruteForce(intArray29, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem32 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem32.BruteForce(intArray35, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray35, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem41.BruteForce(intArray44, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem40.Hashmap(intArray44, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem50 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray57 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem50.TwoPointer(intArray57, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem49.TwoPointer(intArray57, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem40.BruteForce(intArray57, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem20.TwoPointer(intArray57, (int) (byte) 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem0.TwoPointer(intArray57, 1);
        int[] intArray68 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem0.BruteForce(intArray68, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
    }

    @Test
    public void test2713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2713");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray20 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem13.TwoPointer(intArray20, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList24 = threeSumProblem0.Hashmap(intArray20, (int) (byte) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem25 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray34 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem25.BruteForce(intArray34, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem37.BruteForce(intArray40, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem25.Hashmap(intArray40, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem45 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem46.BruteForce(intArray49, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem45.Hashmap(intArray49, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem25.TwoPointer(intArray49, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem0.BruteForce(intArray49, 1);
        java.lang.Class<?> wildcardClass58 = intArray49.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intListList24);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test2714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2714");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray29 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem20.BruteForce(intArray29, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem0.BruteForce(intArray29, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray41 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem34.TwoPointer(intArray41, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem0.TwoPointer(intArray41, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray53 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem46.TwoPointer(intArray53, (int) (short) 1);
        int[] intArray59 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem46.TwoPointer(intArray59, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem0.BruteForce(intArray59, 0);
        int[] intArray64 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem0.BruteForce(intArray64, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
    }

    @Test
    public void test2715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2715");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        int[] intArray34 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem20.TwoPointer(intArray34, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem38 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem38.TwoPointer(intArray45, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem37.TwoPointer(intArray45, (int) (byte) 0);
        int[] intArray54 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem37.Hashmap(intArray54, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem20.TwoPointer(intArray54, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem0.Hashmap(intArray54, (int) (short) -1);
        java.lang.Class<?> wildcardClass61 = intListList60.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test2716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2716");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem19 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList24 = threeSumProblem19.BruteForce(intArray22, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem18.Hashmap(intArray22, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem9.BruteForce(intArray22, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray37 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem30.TwoPointer(intArray37, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem29.TwoPointer(intArray37, (int) (byte) 0);
        int[] intArray46 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem29.Hashmap(intArray46, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem9.BruteForce(intArray46, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem0.TwoPointer(intArray46, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray61 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem54.TwoPointer(intArray61, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem53.TwoPointer(intArray61, (int) (byte) 0);
        int[] intArray70 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem53.Hashmap(intArray70, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem73 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray82 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem73.BruteForce(intArray82, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem85 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray88 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem85.BruteForce(intArray88, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem73.Hashmap(intArray88, (int) (byte) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem53.BruteForce(intArray88, (int) (byte) 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem0.Hashmap(intArray88, (int) '#');
        int[] intArray97 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList99 = threeSumProblem0.Hashmap(intArray97, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList24);
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(intListList96);
    }

    @Test
    public void test2717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2717");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem21.BruteForce(intArray24, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem20.Hashmap(intArray24, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem0.TwoPointer(intArray24, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem32 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem32.BruteForce(intArray35, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem31.Hashmap(intArray35, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem41.BruteForce(intArray44, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem40.Hashmap(intArray44, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem31.BruteForce(intArray44, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem0.BruteForce(intArray44, (int) ' ');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem53.BruteForce(intArray56, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem59.BruteForce(intArray62, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem53.TwoPointer(intArray62, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem67 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem68 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem68.BruteForce(intArray71, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem67.Hashmap(intArray71, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem76 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem76.BruteForce(intArray79, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem67.TwoPointer(intArray79, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem53.BruteForce(intArray79, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem0.Hashmap(intArray79, (int) (byte) 0);
        java.lang.Class<?> wildcardClass88 = intListList87.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test2718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2718");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.BruteForce(intArray4, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray16 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList18 = threeSumProblem9.TwoPointer(intArray16, (int) (short) 1);
        int[] intArray22 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList24 = threeSumProblem9.TwoPointer(intArray22, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem25 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray34 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem25.BruteForce(intArray34, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem37.BruteForce(intArray40, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray50 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem43.TwoPointer(intArray50, (int) (short) 1);
        int[] intArray56 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem43.TwoPointer(intArray56, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray67 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem60.TwoPointer(intArray67, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem59.TwoPointer(intArray67, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem43.BruteForce(intArray67, (int) (short) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem37.Hashmap(intArray67, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem25.BruteForce(intArray67, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem9.Hashmap(intArray67, (int) (short) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem0.Hashmap(intArray67, (int) '4');
        java.lang.Class<?> wildcardClass82 = intListList81.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList18);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList24);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test2719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2719");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray29 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem20.BruteForce(intArray29, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem0.BruteForce(intArray29, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray41 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem34.TwoPointer(intArray41, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem0.TwoPointer(intArray41, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem47 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray54 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem47.TwoPointer(intArray54, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem46.TwoPointer(intArray54, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray67 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem60.TwoPointer(intArray67, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem59.TwoPointer(intArray67, (int) (byte) 0);
        int[] intArray76 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem59.Hashmap(intArray76, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem46.Hashmap(intArray76, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem0.TwoPointer(intArray76, (int) (short) 10);
        int[] intArray83 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem0.BruteForce(intArray83, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
    }

    @Test
    public void test2720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2720");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem19 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray26 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem19.TwoPointer(intArray26, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem18.TwoPointer(intArray26, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem9.BruteForce(intArray26, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem33 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem33.BruteForce(intArray36, (int) '#');
        int[] intArray42 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem33.BruteForce(intArray42, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem45 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem45.BruteForce(intArray48, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem33.Hashmap(intArray48, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray62 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem53.BruteForce(intArray62, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem33.TwoPointer(intArray62, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem9.BruteForce(intArray62, (int) (short) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem0.BruteForce(intArray62, 0);
        int[] intArray71 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem0.TwoPointer(intArray71, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
    }

    @Test
    public void test2721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2721");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray16 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList18 = threeSumProblem13.BruteForce(intArray16, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem19 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList24 = threeSumProblem19.BruteForce(intArray22, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem13.TwoPointer(intArray22, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem28 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem28.BruteForce(intArray31, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem27.Hashmap(intArray31, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem37.BruteForce(intArray40, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem36.Hashmap(intArray40, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem27.BruteForce(intArray40, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem47 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray55 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem48.TwoPointer(intArray55, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem47.TwoPointer(intArray55, (int) (byte) 0);
        int[] intArray64 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem47.Hashmap(intArray64, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem27.BruteForce(intArray64, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem69 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem70 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem70.BruteForce(intArray73, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem69.Hashmap(intArray73, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem78 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem79 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem79.BruteForce(intArray82, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem78.Hashmap(intArray82, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem69.BruteForce(intArray82, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem27.TwoPointer(intArray82, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem13.TwoPointer(intArray82, (int) (byte) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem0.TwoPointer(intArray82, (int) ' ');
        java.lang.Class<?> wildcardClass95 = intArray82.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList18);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList24);
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test2722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2722");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray29 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem20.BruteForce(intArray29, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem0.TwoPointer(intArray29, (int) ' ');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem34.Hashmap(intArray38, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem43.BruteForce(intArray46, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem34.TwoPointer(intArray46, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem0.TwoPointer(intArray46, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray61 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem54.TwoPointer(intArray61, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem53.TwoPointer(intArray61, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem66 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem67 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray74 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem67.TwoPointer(intArray74, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem66.TwoPointer(intArray74, (int) (byte) 0);
        int[] intArray83 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem66.Hashmap(intArray83, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem53.Hashmap(intArray83, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem88 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray91 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem88.BruteForce(intArray91, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList95 = threeSumProblem53.TwoPointer(intArray91, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList97 = threeSumProblem0.Hashmap(intArray91, (int) (short) -1);
        java.lang.Class<?> wildcardClass98 = intArray91.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList93);
        org.junit.Assert.assertNotNull(intListList95);
        org.junit.Assert.assertNotNull(intListList97);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test2723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2723");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem33 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem34.BruteForce(intArray37, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem33.Hashmap(intArray37, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem42.BruteForce(intArray45, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem33.TwoPointer(intArray45, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem50 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem51.BruteForce(intArray54, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem50.Hashmap(intArray54, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem59.BruteForce(intArray62, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem50.TwoPointer(intArray62, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem33.Hashmap(intArray62, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem20.Hashmap(intArray62, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem0.BruteForce(intArray62, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem73 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem74.BruteForce(intArray77, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem73.BruteForce(intArray77, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem82 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem83 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray90 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem83.TwoPointer(intArray90, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem82.TwoPointer(intArray90, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem73.TwoPointer(intArray90, (int) (byte) 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList98 = threeSumProblem0.TwoPointer(intArray90, (int) (short) 10);
        java.lang.Class<?> wildcardClass99 = intArray90.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(intListList96);
        org.junit.Assert.assertNotNull(intListList98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test2724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2724");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray14 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray14, (int) (byte) 0);
        int[] intArray17 = new int[] {};
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.BruteForce(intArray17, (int) '#');
        java.lang.Class<?> wildcardClass20 = intArray17.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0]");
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test2725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2725");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.BruteForce(intArray4, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray18 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem9.BruteForce(intArray18, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem0.BruteForce(intArray18, (int) (short) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem23 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem24 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray31 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem24.TwoPointer(intArray31, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem23.TwoPointer(intArray31, (int) (byte) 0);
        int[] intArray37 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem23.TwoPointer(intArray37, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.BruteForce(intArray37, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem42.BruteForce(intArray45, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray55 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem48.TwoPointer(intArray55, (int) (short) 1);
        int[] intArray61 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem48.TwoPointer(intArray61, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem64 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem65 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray72 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem65.TwoPointer(intArray72, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem64.TwoPointer(intArray72, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem48.BruteForce(intArray72, (int) (short) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem42.Hashmap(intArray72, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem81 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem82 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray89 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem82.TwoPointer(intArray89, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem81.TwoPointer(intArray89, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList95 = threeSumProblem42.BruteForce(intArray89, (int) (byte) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList97 = threeSumProblem0.TwoPointer(intArray89, (int) (byte) 100);
        java.lang.Class<?> wildcardClass98 = intListList97.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(intListList93);
        org.junit.Assert.assertNotNull(intListList95);
        org.junit.Assert.assertNotNull(intListList97);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test2726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2726");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.BruteForce(intArray4, (int) (short) 1);
        int[] intArray10 = new int[] { '#' };
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray10, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray16 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList18 = threeSumProblem13.BruteForce(intArray16, (int) '#');
        int[] intArray22 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList24 = threeSumProblem13.BruteForce(intArray22, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem25 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem25.BruteForce(intArray28, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem31.TwoPointer(intArray38, (int) (short) 1);
        int[] intArray44 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem31.TwoPointer(intArray44, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem47 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray55 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem48.TwoPointer(intArray55, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem47.TwoPointer(intArray55, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem31.BruteForce(intArray55, (int) (short) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem25.Hashmap(intArray55, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem13.BruteForce(intArray55, (int) 'a');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem66 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem66.BruteForce(intArray69, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem72 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem72.BruteForce(intArray75, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem66.TwoPointer(intArray75, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem80 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray83 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem80.BruteForce(intArray83, (int) '#');
        int[] intArray89 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem80.BruteForce(intArray89, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem66.BruteForce(intArray89, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList95 = threeSumProblem13.BruteForce(intArray89, (int) (byte) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList97 = threeSumProblem0.TwoPointer(intArray89, (int) (short) 1);
        java.lang.Class<?> wildcardClass98 = intArray89.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[35]");
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList18);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList24);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(intListList93);
        org.junit.Assert.assertNotNull(intListList95);
        org.junit.Assert.assertNotNull(intListList97);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test2727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2727");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.BruteForce(intArray4, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray18 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem9.BruteForce(intArray18, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem0.BruteForce(intArray18, (int) (short) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem23 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem24 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray31 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem24.TwoPointer(intArray31, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem23.TwoPointer(intArray31, (int) (byte) 0);
        int[] intArray37 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem23.TwoPointer(intArray37, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.BruteForce(intArray37, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem43.BruteForce(intArray46, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem42.Hashmap(intArray46, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem51.BruteForce(intArray54, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem42.TwoPointer(intArray54, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem60.BruteForce(intArray63, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem59.BruteForce(intArray63, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem42.TwoPointer(intArray63, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem70 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem71 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem71.BruteForce(intArray74, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem70.Hashmap(intArray74, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem42.BruteForce(intArray74, (int) (byte) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem0.BruteForce(intArray74, 0);
        java.lang.Class<?> wildcardClass83 = intArray74.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test2728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2728");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.BruteForce(intArray4, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray18 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem9.BruteForce(intArray18, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem21.BruteForce(intArray24, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem9.Hashmap(intArray24, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem29.BruteForce(intArray32, (int) '#');
        int[] intArray38 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem29.BruteForce(intArray38, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem9.BruteForce(intArray38, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray50 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem43.TwoPointer(intArray50, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem9.TwoPointer(intArray50, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray62 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem55.TwoPointer(intArray62, (int) (short) 1);
        int[] intArray68 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem55.TwoPointer(intArray68, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem9.BruteForce(intArray68, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem0.Hashmap(intArray68, (int) (byte) 1);
        java.lang.Class<?> wildcardClass75 = intArray68.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test2729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2729");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem14.TwoPointer(intArray21, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem13.TwoPointer(intArray21, (int) (byte) 0);
        int[] intArray27 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem13.TwoPointer(intArray27, (int) (byte) 0);
        int[] intArray30 = new int[] {};
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem13.BruteForce(intArray30, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem0.BruteForce(intArray30, (int) '#');
        int[] intArray35 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem0.Hashmap(intArray35, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0]");
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
    }

    @Test
    public void test2730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2730");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray9 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem6.BruteForce(intArray9, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList13 = threeSumProblem0.TwoPointer(intArray9, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem15 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem15.BruteForce(intArray18, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem14.Hashmap(intArray18, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem23 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray26 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem23.BruteForce(intArray26, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem14.TwoPointer(intArray26, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem0.BruteForce(intArray26, (int) ' ');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem33 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem34.BruteForce(intArray37, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem33.BruteForce(intArray37, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem0.Hashmap(intArray37, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem44 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem45 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem45.BruteForce(intArray48, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem44.Hashmap(intArray48, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem54.BruteForce(intArray57, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem53.Hashmap(intArray57, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem62 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem62.BruteForce(intArray65, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem53.TwoPointer(intArray65, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem44.Hashmap(intArray65, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem0.BruteForce(intArray65, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray81 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem74.TwoPointer(intArray81, (int) (short) 1);
        int[] intArray87 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem74.TwoPointer(intArray87, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem0.BruteForce(intArray87, (int) ' ');
        java.lang.Class<?> wildcardClass92 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intListList13);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test2731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2731");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.BruteForce(intArray4, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem10.TwoPointer(intArray17, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem9.TwoPointer(intArray17, (int) (byte) 0);
        int[] intArray26 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem9.Hashmap(intArray26, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem30.BruteForce(intArray33, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem29.Hashmap(intArray33, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem9.TwoPointer(intArray33, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.Hashmap(intArray33, (int) (byte) 10);
        int[] intArray47 = new int[] { (byte) 10, (byte) 100, 'a', '4', 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem0.TwoPointer(intArray47, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem50 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem50.BruteForce(intArray53, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem56.BruteForce(intArray59, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem50.TwoPointer(intArray59, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem64 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem65 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem65.BruteForce(intArray68, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem64.Hashmap(intArray68, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem73 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray81 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem74.TwoPointer(intArray81, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem73.TwoPointer(intArray81, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem64.BruteForce(intArray81, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem50.TwoPointer(intArray81, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem0.BruteForce(intArray81, (int) '#');
        java.lang.Class<?> wildcardClass92 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[1, 10, 52, 97, 100]");
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test2732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2732");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray29 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem20.BruteForce(intArray29, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem0.BruteForce(intArray29, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray42 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem35.TwoPointer(intArray42, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem34.TwoPointer(intArray42, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem0.Hashmap(intArray42, (int) (short) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem49.BruteForce(intArray52, (int) '#');
        int[] intArray58 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem49.BruteForce(intArray58, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem61 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem61.BruteForce(intArray64, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem49.Hashmap(intArray64, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem69 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem70 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem70.BruteForce(intArray73, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem69.Hashmap(intArray73, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem78 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem79 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray86 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem79.TwoPointer(intArray86, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem78.TwoPointer(intArray86, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem69.BruteForce(intArray86, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem49.TwoPointer(intArray86, (int) (byte) 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem0.Hashmap(intArray86, (int) (short) 0);
        int[] intArray97 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList99 = threeSumProblem0.BruteForce(intArray97, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(intListList96);
    }

    @Test
    public void test2733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2733");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem16 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem16.BruteForce(intArray19, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem10.TwoPointer(intArray19, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem0.BruteForce(intArray19, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray34 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem27.TwoPointer(intArray34, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem26.TwoPointer(intArray34, (int) (byte) 0);
        int[] intArray43 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem26.Hashmap(intArray43, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem47 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray54 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem47.TwoPointer(intArray54, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem46.TwoPointer(intArray54, (int) (byte) 0);
        int[] intArray63 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem46.Hashmap(intArray63, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem26.Hashmap(intArray63, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem68 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem68.BruteForce(intArray71, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem74.BruteForce(intArray77, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem68.TwoPointer(intArray77, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem26.BruteForce(intArray77, (int) (byte) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem0.Hashmap(intArray77, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem86 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem87 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray90 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem87.BruteForce(intArray90, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem86.Hashmap(intArray90, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem0.BruteForce(intArray90, (int) (byte) 10);
        java.lang.Class<?> wildcardClass97 = intArray90.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(intListList96);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test2734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2734");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem21.BruteForce(intArray24, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem20.Hashmap(intArray24, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray37 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem30.TwoPointer(intArray37, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem29.TwoPointer(intArray37, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem20.BruteForce(intArray37, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem0.TwoPointer(intArray37, (int) (byte) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem47 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem47.BruteForce(intArray50, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem46.Hashmap(intArray50, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem56.BruteForce(intArray59, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem55.Hashmap(intArray59, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem46.BruteForce(intArray59, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem66 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem67 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray74 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem67.TwoPointer(intArray74, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem66.TwoPointer(intArray74, (int) (byte) 0);
        int[] intArray83 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem66.Hashmap(intArray83, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem46.BruteForce(intArray83, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem88 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray91 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem88.BruteForce(intArray91, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList95 = threeSumProblem46.Hashmap(intArray91, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList97 = threeSumProblem0.BruteForce(intArray91, 10);
        java.lang.Class<?> wildcardClass98 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList93);
        org.junit.Assert.assertNotNull(intListList95);
        org.junit.Assert.assertNotNull(intListList97);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test2735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2735");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.BruteForce(intArray4, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem19 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList24 = threeSumProblem19.BruteForce(intArray22, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem18.Hashmap(intArray22, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem27.BruteForce(intArray30, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem18.TwoPointer(intArray30, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem9.Hashmap(intArray30, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem38 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem38.BruteForce(intArray41, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem37.Hashmap(intArray41, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem46.BruteForce(intArray49, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem37.TwoPointer(intArray49, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem9.TwoPointer(intArray49, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem0.TwoPointer(intArray49, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem58 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem58.BruteForce(intArray61, (int) '#');
        int[] intArray67 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem58.BruteForce(intArray67, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem70 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem70.BruteForce(intArray73, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem58.Hashmap(intArray73, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem78 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray81 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem78.BruteForce(intArray81, (int) '#');
        int[] intArray87 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem78.BruteForce(intArray87, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem58.BruteForce(intArray87, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem0.BruteForce(intArray87, (int) (byte) 10);
        java.lang.Class<?> wildcardClass94 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList24);
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(intListList93);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test2736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2736");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem9.TwoPointer(intArray21, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem0.Hashmap(intArray21, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem28 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray36 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem29.TwoPointer(intArray36, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem28.TwoPointer(intArray36, (int) (byte) 0);
        int[] intArray42 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem28.TwoPointer(intArray42, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem0.Hashmap(intArray42, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem47 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem48.BruteForce(intArray51, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem47.Hashmap(intArray51, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem0.Hashmap(intArray51, (int) (short) 100);
        java.lang.Class<?> wildcardClass58 = intListList57.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0]");
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test2737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2737");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        int[] intArray34 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem20.TwoPointer(intArray34, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem38 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem38.TwoPointer(intArray45, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem37.TwoPointer(intArray45, (int) (byte) 0);
        int[] intArray54 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem37.Hashmap(intArray54, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem20.TwoPointer(intArray54, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem0.Hashmap(intArray54, (int) (byte) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem61 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray68 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem61.TwoPointer(intArray68, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem0.Hashmap(intArray68, (int) 'a');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem73 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray82 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem73.BruteForce(intArray82, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem0.TwoPointer(intArray82, (-1));
        int[] intArray87 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem0.BruteForce(intArray87, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intListList86);
    }

    @Test
    public void test2738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2738");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray25 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem18.TwoPointer(intArray25, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem17.TwoPointer(intArray25, (int) (byte) 0);
        int[] intArray34 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem17.Hashmap(intArray34, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem0.Hashmap(intArray34, (int) ' ');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray47 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem40.TwoPointer(intArray47, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem39.TwoPointer(intArray47, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem0.BruteForce(intArray47, 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray61 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem54.TwoPointer(intArray61, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem64 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem64.BruteForce(intArray67, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem70 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem70.BruteForce(intArray73, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem64.TwoPointer(intArray73, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem54.BruteForce(intArray73, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem80 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray83 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem80.BruteForce(intArray83, (int) '#');
        int[] intArray89 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem80.BruteForce(intArray89, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem54.TwoPointer(intArray89, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList95 = threeSumProblem0.TwoPointer(intArray89, 100);
        java.lang.Class<?> wildcardClass96 = intArray89.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(intListList93);
        org.junit.Assert.assertNotNull(intListList95);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test2739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2739");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray13 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem0.Hashmap(intArray13, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
    }

    @Test
    public void test2740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2740");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem10.TwoPointer(intArray17, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem9.TwoPointer(intArray17, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem0.BruteForce(intArray17, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem24 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray31 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem24.TwoPointer(intArray31, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray42 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem35.TwoPointer(intArray42, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem34.TwoPointer(intArray42, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem24.Hashmap(intArray42, (int) (byte) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem0.Hashmap(intArray42, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem52.BruteForce(intArray55, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem51.Hashmap(intArray55, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem60.BruteForce(intArray63, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem51.TwoPointer(intArray63, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem68 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem69 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem69.BruteForce(intArray72, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem68.Hashmap(intArray72, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem77 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem77.BruteForce(intArray80, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem68.TwoPointer(intArray80, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem51.Hashmap(intArray80, (int) 'a');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem87 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem88 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray91 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem88.BruteForce(intArray91, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList95 = threeSumProblem87.Hashmap(intArray91, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList97 = threeSumProblem51.TwoPointer(intArray91, (int) (byte) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList99 = threeSumProblem0.TwoPointer(intArray91, 1);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList93);
        org.junit.Assert.assertNotNull(intListList95);
        org.junit.Assert.assertNotNull(intListList97);
        org.junit.Assert.assertNotNull(intListList99);
    }

    @Test
    public void test2741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2741");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem10.TwoPointer(intArray17, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem9.TwoPointer(intArray17, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem0.BruteForce(intArray17, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem24 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray33 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem24.BruteForce(intArray33, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem36.BruteForce(intArray39, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem24.Hashmap(intArray39, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem44 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem44.BruteForce(intArray47, (int) '#');
        int[] intArray53 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem44.BruteForce(intArray53, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem24.TwoPointer(intArray53, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem0.BruteForce(intArray53, (int) (short) 0);
        java.lang.Class<?> wildcardClass60 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test2742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2742");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem21.BruteForce(intArray24, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem20.Hashmap(intArray24, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem0.TwoPointer(intArray24, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem32 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem33 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray40 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem33.TwoPointer(intArray40, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem32.TwoPointer(intArray40, (int) (byte) 0);
        int[] intArray46 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem32.TwoPointer(intArray46, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem31.TwoPointer(intArray46, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem0.BruteForce(intArray46, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray60 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem53.TwoPointer(intArray60, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem0.BruteForce(intArray60, 10);
        int[] intArray65 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem0.TwoPointer(intArray65, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intListList64);
    }

    @Test
    public void test2743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2743");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem11 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray19 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem12.TwoPointer(intArray19, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem11.TwoPointer(intArray19, (int) (byte) 0);
        int[] intArray28 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem11.Hashmap(intArray28, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem1.BruteForce(intArray28, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem33 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray40 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem33.TwoPointer(intArray40, (int) (short) 1);
        int[] intArray46 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem33.TwoPointer(intArray46, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem50 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray57 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem50.TwoPointer(intArray57, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem49.TwoPointer(intArray57, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem33.BruteForce(intArray57, (int) (short) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem64 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray71 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem64.TwoPointer(intArray71, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem75 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray82 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem75.TwoPointer(intArray82, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem74.TwoPointer(intArray82, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem64.Hashmap(intArray82, (int) (byte) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem33.BruteForce(intArray82, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem1.BruteForce(intArray82, (int) (byte) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem0.TwoPointer(intArray82, (int) (byte) -1);
        int[] intArray95 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList97 = threeSumProblem0.TwoPointer(intArray95, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(intListList94);
    }

    @Test
    public void test2744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2744");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem16 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem16.BruteForce(intArray19, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem10.TwoPointer(intArray19, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem24 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray33 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem24.BruteForce(intArray33, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem10.BruteForce(intArray33, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem0.BruteForce(intArray33, 100);
        java.lang.Class<?> wildcardClass40 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test2745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2745");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem11 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray18 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem11.TwoPointer(intArray18, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem10.TwoPointer(intArray18, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList24 = threeSumProblem0.Hashmap(intArray18, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem25 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem25.BruteForce(intArray28, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem31.BruteForce(intArray34, (int) '#');
        int[] intArray40 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem31.BruteForce(intArray40, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem43.BruteForce(intArray46, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem31.Hashmap(intArray46, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem52.BruteForce(intArray55, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem51.Hashmap(intArray55, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem60.BruteForce(intArray63, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem51.TwoPointer(intArray63, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem31.Hashmap(intArray63, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem25.TwoPointer(intArray63, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem0.TwoPointer(intArray63, (int) '4');
        int[] intArray74 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem0.TwoPointer(intArray74, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intListList24);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
    }

    @Test
    public void test2746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2746");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.BruteForce(intArray4, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem10.TwoPointer(intArray17, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem9.TwoPointer(intArray17, (int) (byte) 0);
        int[] intArray23 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem9.TwoPointer(intArray23, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem27.BruteForce(intArray30, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem26.Hashmap(intArray30, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem36.BruteForce(intArray39, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem35.Hashmap(intArray39, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem26.BruteForce(intArray39, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem47 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray54 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem47.TwoPointer(intArray54, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem46.TwoPointer(intArray54, (int) (byte) 0);
        int[] intArray63 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem46.Hashmap(intArray63, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem26.BruteForce(intArray63, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem9.Hashmap(intArray63, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem0.TwoPointer(intArray63, (int) (short) 10);
        int[] intArray72 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem0.BruteForce(intArray72, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
    }

    @Test
    public void test2747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2747");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem11 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray18 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem11.TwoPointer(intArray18, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem10.TwoPointer(intArray18, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList24 = threeSumProblem0.Hashmap(intArray18, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem25 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray32 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem25.TwoPointer(intArray32, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray43 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem36.TwoPointer(intArray43, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem35.TwoPointer(intArray43, (int) (byte) 0);
        int[] intArray52 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem35.Hashmap(intArray52, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem56.BruteForce(intArray59, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem55.Hashmap(intArray59, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem64 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem65 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem65.BruteForce(intArray68, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem64.Hashmap(intArray68, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem55.BruteForce(intArray68, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem35.Hashmap(intArray68, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem25.TwoPointer(intArray68, (int) (short) 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem0.Hashmap(intArray68, (int) (short) 1);
        int[] intArray81 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem0.Hashmap(intArray81, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intListList24);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
    }

    @Test
    public void test2748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2748");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.BruteForce(intArray13, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        int[] intArray37 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray37, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.BruteForce(intArray37, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem43.BruteForce(intArray46, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem42.Hashmap(intArray46, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem0.BruteForce(intArray46, (int) (short) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray61 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem54.TwoPointer(intArray61, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem53.TwoPointer(intArray61, (int) (byte) 0);
        int[] intArray67 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem53.TwoPointer(intArray67, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem70 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem71 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray78 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem71.TwoPointer(intArray78, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem70.TwoPointer(intArray78, (int) (byte) 0);
        int[] intArray87 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem70.Hashmap(intArray87, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem53.TwoPointer(intArray87, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem0.TwoPointer(intArray87, (int) (byte) 100);
        int[] intArray94 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem0.Hashmap(intArray94, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0]");
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(intListList93);
    }

    @Test
    public void test2749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2749");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem11 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray14 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem11.BruteForce(intArray14, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList18 = threeSumProblem10.Hashmap(intArray14, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem19 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList24 = threeSumProblem19.BruteForce(intArray22, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem10.TwoPointer(intArray22, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem28 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem28.BruteForce(intArray31, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem27.Hashmap(intArray31, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem36.BruteForce(intArray39, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem27.TwoPointer(intArray39, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem10.Hashmap(intArray39, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem0.Hashmap(intArray39, (int) (short) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray56 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem49.TwoPointer(intArray56, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem48.TwoPointer(intArray56, (int) (byte) 0);
        int[] intArray65 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem48.Hashmap(intArray65, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem68 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem69 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem69.BruteForce(intArray72, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem68.Hashmap(intArray72, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem77 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem78 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray81 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem78.BruteForce(intArray81, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem77.Hashmap(intArray81, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem68.BruteForce(intArray81, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem48.Hashmap(intArray81, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem0.Hashmap(intArray81, (int) ' ');
        int[] intArray92 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem0.TwoPointer(intArray92, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intListList18);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList24);
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(intListList91);
    }

    @Test
    public void test2750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2750");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem21.BruteForce(intArray24, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem20.Hashmap(intArray24, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem29.BruteForce(intArray32, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem20.TwoPointer(intArray32, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem38 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem38.BruteForce(intArray41, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem37.Hashmap(intArray41, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem46.BruteForce(intArray49, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem37.TwoPointer(intArray49, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem20.Hashmap(intArray49, (int) 'a');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray65 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem56.BruteForce(intArray65, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem68 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem68.BruteForce(intArray71, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem56.Hashmap(intArray71, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem76 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem76.BruteForce(intArray79, (int) '#');
        int[] intArray85 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem76.BruteForce(intArray85, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem56.TwoPointer(intArray85, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem20.Hashmap(intArray85, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem0.Hashmap(intArray85, (int) (short) 100);
        int[] intArray94 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem0.BruteForce(intArray94, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(intListList93);
    }

    @Test
    public void test2751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2751");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem11 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray19 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem12.TwoPointer(intArray19, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem11.TwoPointer(intArray19, (int) (byte) 0);
        int[] intArray28 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem11.Hashmap(intArray28, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem1.BruteForce(intArray28, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem33 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray40 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem33.TwoPointer(intArray40, (int) (short) 1);
        int[] intArray46 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem33.TwoPointer(intArray46, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem50 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray57 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem50.TwoPointer(intArray57, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem49.TwoPointer(intArray57, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem33.BruteForce(intArray57, (int) (short) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem64 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray71 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem64.TwoPointer(intArray71, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem75 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray82 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem75.TwoPointer(intArray82, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem74.TwoPointer(intArray82, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem64.Hashmap(intArray82, (int) (byte) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem33.BruteForce(intArray82, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem1.BruteForce(intArray82, (int) (byte) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem0.TwoPointer(intArray82, (int) (byte) -1);
        java.lang.Class<?> wildcardClass95 = intArray82.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test2752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2752");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem17.Hashmap(intArray21, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem26.BruteForce(intArray29, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem17.TwoPointer(intArray29, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem0.Hashmap(intArray29, (int) 'a');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem37.BruteForce(intArray40, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem36.Hashmap(intArray40, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem0.TwoPointer(intArray40, (int) (byte) 1);
        java.lang.Class<?> wildcardClass47 = intArray40.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test2753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2753");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem19 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList24 = threeSumProblem19.BruteForce(intArray22, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem18.Hashmap(intArray22, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem9.BruteForce(intArray22, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray37 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem30.TwoPointer(intArray37, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem29.TwoPointer(intArray37, (int) (byte) 0);
        int[] intArray46 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem29.Hashmap(intArray46, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem9.BruteForce(intArray46, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem52.BruteForce(intArray55, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem51.Hashmap(intArray55, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem9.BruteForce(intArray55, (int) (short) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem0.Hashmap(intArray55, (int) 'a');
        java.lang.Class<?> wildcardClass64 = intListList63.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList24);
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test2754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2754");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem17.BruteForce(intArray21, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem0.TwoPointer(intArray21, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem28 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem29.BruteForce(intArray32, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem28.Hashmap(intArray32, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem0.BruteForce(intArray32, (int) (byte) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem40.BruteForce(intArray43, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem39.BruteForce(intArray43, (int) (short) 1);
        int[] intArray49 = new int[] { '#' };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem39.TwoPointer(intArray49, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem0.TwoPointer(intArray49, (int) (short) 10);
        java.lang.Class<?> wildcardClass54 = intArray49.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[35]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test2755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2755");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.BruteForce(intArray13, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        int[] intArray37 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray37, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.BruteForce(intArray37, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem42.BruteForce(intArray45, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem0.Hashmap(intArray45, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem50 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem50.BruteForce(intArray53, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem0.TwoPointer(intArray53, (int) ' ');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem58 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray65 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem58.TwoPointer(intArray65, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem0.TwoPointer(intArray65, 100);
        int[] intArray70 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem0.BruteForce(intArray70, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
    }

    @Test
    public void test2756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2756");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem14.BruteForce(intArray17, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem13.Hashmap(intArray17, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem22 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem23 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray30 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem23.TwoPointer(intArray30, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem22.TwoPointer(intArray30, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem13.BruteForce(intArray30, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem0.BruteForce(intArray30, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem40.BruteForce(intArray43, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem39.Hashmap(intArray43, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem49.BruteForce(intArray52, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem48.Hashmap(intArray52, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem57 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem57.BruteForce(intArray60, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem48.TwoPointer(intArray60, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem39.Hashmap(intArray60, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem67 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem68 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem68.BruteForce(intArray71, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem67.Hashmap(intArray71, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem76 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem76.BruteForce(intArray79, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem67.TwoPointer(intArray79, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem39.TwoPointer(intArray79, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem86 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem87 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray90 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem87.BruteForce(intArray90, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem86.BruteForce(intArray90, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem39.Hashmap(intArray90, (int) (short) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList98 = threeSumProblem0.BruteForce(intArray90, 0);
        java.lang.Class<?> wildcardClass99 = intArray90.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(intListList96);
        org.junit.Assert.assertNotNull(intListList98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test2757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2757");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray25 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem18.TwoPointer(intArray25, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem17.TwoPointer(intArray25, (int) (byte) 0);
        int[] intArray34 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem17.Hashmap(intArray34, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem0.Hashmap(intArray34, (int) ' ');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray47 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem40.TwoPointer(intArray47, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem39.TwoPointer(intArray47, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem0.Hashmap(intArray47, (int) (byte) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray62 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem55.TwoPointer(intArray62, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem54.TwoPointer(intArray62, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem0.Hashmap(intArray62, (int) (short) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem69 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem69.BruteForce(intArray72, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem75 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem75.BruteForce(intArray78, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem69.TwoPointer(intArray78, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem83 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray86 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem83.BruteForce(intArray86, (int) '#');
        int[] intArray92 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem83.BruteForce(intArray92, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem69.BruteForce(intArray92, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList98 = threeSumProblem0.BruteForce(intArray92, (int) (byte) -1);
        java.lang.Class<?> wildcardClass99 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(intListList96);
        org.junit.Assert.assertNotNull(intListList98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test2758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2758");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem14.TwoPointer(intArray21, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem13.TwoPointer(intArray21, (int) (byte) 0);
        int[] intArray30 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem13.Hashmap(intArray30, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem0.Hashmap(intArray30, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem41.BruteForce(intArray44, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem35.TwoPointer(intArray44, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem49.BruteForce(intArray52, (int) '#');
        int[] intArray58 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem49.BruteForce(intArray58, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem35.BruteForce(intArray58, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem0.TwoPointer(intArray58, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem65 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray72 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem65.TwoPointer(intArray72, (int) (short) 1);
        int[] intArray78 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem65.TwoPointer(intArray78, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem0.TwoPointer(intArray78, 0);
        java.lang.Class<?> wildcardClass83 = intListList82.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test2759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2759");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem22 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray29 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem22.TwoPointer(intArray29, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem21.TwoPointer(intArray29, (int) (byte) 0);
        int[] intArray35 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem21.TwoPointer(intArray35, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.TwoPointer(intArray35, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.BruteForce(intArray35, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem42.BruteForce(intArray45, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem48.BruteForce(intArray51, (int) '#');
        int[] intArray57 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem48.BruteForce(intArray57, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem60.BruteForce(intArray63, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem48.Hashmap(intArray63, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem68 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem69 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem69.BruteForce(intArray72, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem68.Hashmap(intArray72, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem77 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem77.BruteForce(intArray80, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem68.TwoPointer(intArray80, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem48.Hashmap(intArray80, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem42.TwoPointer(intArray80, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem0.Hashmap(intArray80, 0);
        int[] intArray91 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem0.Hashmap(intArray91, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0]");
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intListList90);
    }

    @Test
    public void test2760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2760");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.BruteForce(intArray13, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        int[] intArray37 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray37, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.BruteForce(intArray37, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem43.BruteForce(intArray46, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem42.Hashmap(intArray46, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem0.Hashmap(intArray46, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem53.BruteForce(intArray56, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem59.BruteForce(intArray62, (int) '#');
        int[] intArray68 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem59.BruteForce(intArray68, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem71 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem71.BruteForce(intArray74, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem59.Hashmap(intArray74, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem79 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray88 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem79.BruteForce(intArray88, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem59.TwoPointer(intArray88, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem53.TwoPointer(intArray88, 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem0.Hashmap(intArray88, (int) 'a');
        java.lang.Class<?> wildcardClass97 = intArray88.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(intListList96);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test2761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2761");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray14 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray14, (int) (byte) 0);
        int[] intArray17 = new int[] {};
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.BruteForce(intArray17, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray27 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem20.TwoPointer(intArray27, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem30.BruteForce(intArray33, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem36.BruteForce(intArray39, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem30.TwoPointer(intArray39, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem44 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem44.BruteForce(intArray47, (int) '#');
        int[] intArray53 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem44.BruteForce(intArray53, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem30.BruteForce(intArray53, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem20.BruteForce(intArray53, 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem0.BruteForce(intArray53, (int) (short) 10);
        java.lang.Class<?> wildcardClass62 = intListList61.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0]");
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test2762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2762");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem17.BruteForce(intArray20, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem23 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray30 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem23.TwoPointer(intArray30, (int) (short) 1);
        int[] intArray36 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem23.TwoPointer(intArray36, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray47 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem40.TwoPointer(intArray47, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem39.TwoPointer(intArray47, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem23.BruteForce(intArray47, (int) (short) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem17.Hashmap(intArray47, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray65 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem56.BruteForce(intArray65, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem68 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem68.BruteForce(intArray71, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem56.Hashmap(intArray71, (int) (byte) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem17.TwoPointer(intArray71, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem0.Hashmap(intArray71, (-1));
        java.lang.Class<?> wildcardClass80 = intListList79.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test2763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2763");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray16 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList18 = threeSumProblem13.BruteForce(intArray16, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem19 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList24 = threeSumProblem19.BruteForce(intArray22, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem13.TwoPointer(intArray22, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray36 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem27.BruteForce(intArray36, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem13.BruteForce(intArray36, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem0.Hashmap(intArray36, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem44 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem44.BruteForce(intArray47, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem43.Hashmap(intArray47, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem52.BruteForce(intArray55, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem43.TwoPointer(intArray55, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem61 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray68 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem61.TwoPointer(intArray68, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem60.TwoPointer(intArray68, (int) (byte) 0);
        int[] intArray77 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem60.Hashmap(intArray77, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem43.Hashmap(intArray77, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem0.BruteForce(intArray77, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem84 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem85 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray92 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem85.TwoPointer(intArray92, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem84.TwoPointer(intArray92, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList98 = threeSumProblem0.Hashmap(intArray92, (-1));
        java.lang.Class<?> wildcardClass99 = intListList98.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList18);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList24);
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(intListList96);
        org.junit.Assert.assertNotNull(intListList98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test2764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2764");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        int[] intArray13 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem0.TwoPointer(intArray13, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem16 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem17.BruteForce(intArray20, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList24 = threeSumProblem16.BruteForce(intArray20, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem0.Hashmap(intArray20, 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray36 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem27.BruteForce(intArray36, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem39.BruteForce(intArray42, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem27.Hashmap(intArray42, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem47 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem47.BruteForce(intArray50, (int) '#');
        int[] intArray56 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem47.BruteForce(intArray56, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem27.TwoPointer(intArray56, (int) ' ');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem61 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray70 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem61.BruteForce(intArray70, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem27.BruteForce(intArray70, (int) (short) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem0.TwoPointer(intArray70, (int) 'a');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem77 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem78 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem79 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray86 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem79.TwoPointer(intArray86, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem78.TwoPointer(intArray86, (int) (byte) 0);
        int[] intArray92 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem78.TwoPointer(intArray92, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem77.TwoPointer(intArray92, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList98 = threeSumProblem0.TwoPointer(intArray92, (int) (short) 100);
        java.lang.Class<?> wildcardClass99 = intListList98.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intListList24);
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0]");
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(intListList96);
        org.junit.Assert.assertNotNull(intListList98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test2765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2765");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.BruteForce(intArray4, (int) (short) 1);
        int[] intArray10 = new int[] { '#' };
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray10, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem14.TwoPointer(intArray21, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem13.TwoPointer(intArray21, (int) (byte) 0);
        int[] intArray30 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem13.Hashmap(intArray30, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem33 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray41 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem34.TwoPointer(intArray41, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem33.TwoPointer(intArray41, (int) (byte) 0);
        int[] intArray50 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem33.Hashmap(intArray50, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem13.Hashmap(intArray50, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem55.BruteForce(intArray58, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem13.Hashmap(intArray58, (int) (byte) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem63 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem64 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem64.BruteForce(intArray67, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem63.Hashmap(intArray67, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem13.Hashmap(intArray67, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem0.Hashmap(intArray67, (int) (short) -1);
        int[] intArray76 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem0.TwoPointer(intArray76, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[35]");
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
    }

    @Test
    public void test2766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2766");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray6 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray6, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
    }

    @Test
    public void test2767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2767");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem9.TwoPointer(intArray21, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem0.Hashmap(intArray21, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem28 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem29.BruteForce(intArray32, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem28.Hashmap(intArray32, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem38 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem38.BruteForce(intArray41, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem37.Hashmap(intArray41, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem46.BruteForce(intArray49, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem37.TwoPointer(intArray49, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem28.Hashmap(intArray49, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem56.BruteForce(intArray59, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem28.TwoPointer(intArray59, (int) (short) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem0.BruteForce(intArray59, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem66 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray73 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem66.TwoPointer(intArray73, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem76 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem77 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray84 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem77.TwoPointer(intArray84, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem76.TwoPointer(intArray84, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem66.Hashmap(intArray84, (int) (byte) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem0.Hashmap(intArray84, (int) '#');
        int[] intArray93 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList95 = threeSumProblem0.TwoPointer(intArray93, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(intListList92);
    }

    @Test
    public void test2768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2768");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem14.BruteForce(intArray17, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem13.Hashmap(intArray17, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem22 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem23 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray26 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem23.BruteForce(intArray26, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem22.Hashmap(intArray26, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem13.BruteForce(intArray26, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem33 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray41 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem34.TwoPointer(intArray41, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem33.TwoPointer(intArray41, (int) (byte) 0);
        int[] intArray50 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem33.Hashmap(intArray50, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem13.BruteForce(intArray50, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem55.BruteForce(intArray58, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem13.Hashmap(intArray58, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem63 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem63.BruteForce(intArray66, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem13.TwoPointer(intArray66, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem0.Hashmap(intArray66, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem73 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem74.BruteForce(intArray77, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem73.Hashmap(intArray77, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem82 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray85 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem82.BruteForce(intArray85, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem73.TwoPointer(intArray85, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem0.BruteForce(intArray85, 0);
        int[] intArray92 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem0.BruteForce(intArray92, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(intListList91);
    }

    @Test
    public void test2769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2769");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem16 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem16.BruteForce(intArray19, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem10.TwoPointer(intArray19, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem24 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray33 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem24.BruteForce(intArray33, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem10.BruteForce(intArray33, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem0.BruteForce(intArray33, 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray49 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem40.BruteForce(intArray49, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem52.BruteForce(intArray55, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem40.Hashmap(intArray55, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem60.BruteForce(intArray63, (int) '#');
        int[] intArray69 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem60.BruteForce(intArray69, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem40.TwoPointer(intArray69, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem0.Hashmap(intArray69, 0);
        java.lang.Class<?> wildcardClass76 = intListList75.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test2770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2770");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem17.BruteForce(intArray21, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem0.TwoPointer(intArray21, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem28 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem29.BruteForce(intArray32, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem28.Hashmap(intArray32, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem0.BruteForce(intArray32, (int) (byte) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem39.BruteForce(intArray42, (int) '#');
        int[] intArray48 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem39.BruteForce(intArray48, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem51.BruteForce(intArray54, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem39.Hashmap(intArray54, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem59.BruteForce(intArray62, (int) '#');
        int[] intArray68 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem59.BruteForce(intArray68, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem39.TwoPointer(intArray68, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem0.TwoPointer(intArray68, (int) ' ');
        java.lang.Class<?> wildcardClass75 = intArray68.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test2771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2771");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray9 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem6.BruteForce(intArray9, (int) '#');
        int[] intArray15 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem6.BruteForce(intArray15, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem6.Hashmap(intArray21, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray35 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem26.BruteForce(intArray35, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem6.TwoPointer(intArray35, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.TwoPointer(intArray35, (int) (short) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem43.BruteForce(intArray46, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem42.BruteForce(intArray46, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray60 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem51.BruteForce(intArray60, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem42.BruteForce(intArray60, (int) (short) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem65 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem66 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray73 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem66.TwoPointer(intArray73, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem65.TwoPointer(intArray73, (int) (byte) 0);
        int[] intArray79 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem65.TwoPointer(intArray79, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem42.BruteForce(intArray79, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem0.BruteForce(intArray79, (int) (short) 100);
        java.lang.Class<?> wildcardClass86 = intListList85.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0]");
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test2772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2772");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem17.Hashmap(intArray21, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem26.BruteForce(intArray29, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem17.TwoPointer(intArray29, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem0.Hashmap(intArray29, (int) 'a');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem37.BruteForce(intArray40, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem36.Hashmap(intArray40, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem45 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem45.BruteForce(intArray48, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem36.TwoPointer(intArray48, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem54.BruteForce(intArray57, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem53.Hashmap(intArray57, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem62 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem62.BruteForce(intArray65, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem53.TwoPointer(intArray65, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem36.Hashmap(intArray65, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem0.Hashmap(intArray65, 0);
        int[] intArray74 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem0.TwoPointer(intArray74, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
    }

    @Test
    public void test2773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2773");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem11 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray18 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem11.TwoPointer(intArray18, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem10.TwoPointer(intArray18, (int) (byte) 0);
        int[] intArray27 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem10.Hashmap(intArray27, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem31.BruteForce(intArray34, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem30.Hashmap(intArray34, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem40.BruteForce(intArray43, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem39.Hashmap(intArray43, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem30.BruteForce(intArray43, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem10.Hashmap(intArray43, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem0.TwoPointer(intArray43, (int) (short) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem54.BruteForce(intArray57, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem60.BruteForce(intArray63, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem54.TwoPointer(intArray63, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem0.BruteForce(intArray63, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem70 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem71 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem71.BruteForce(intArray74, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem70.BruteForce(intArray74, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem0.TwoPointer(intArray74, (int) (short) 10);
        java.lang.Class<?> wildcardClass81 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test2774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2774");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.BruteForce(intArray13, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        int[] intArray37 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray37, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.BruteForce(intArray37, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem42.BruteForce(intArray45, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem0.Hashmap(intArray45, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem50 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem50.BruteForce(intArray53, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem0.TwoPointer(intArray53, (int) ' ');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem58 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem59.BruteForce(intArray62, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem58.Hashmap(intArray62, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem67 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem68 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem68.BruteForce(intArray71, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem67.Hashmap(intArray71, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem76 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem76.BruteForce(intArray79, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem67.TwoPointer(intArray79, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem58.Hashmap(intArray79, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem0.Hashmap(intArray79, (int) (short) 0);
        java.lang.Class<?> wildcardClass88 = intArray79.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test2775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2775");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem14.TwoPointer(intArray21, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem13.TwoPointer(intArray21, (int) (byte) 0);
        int[] intArray30 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem13.Hashmap(intArray30, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem0.TwoPointer(intArray30, (int) ' ');
        java.lang.Class<?> wildcardClass35 = intListList34.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test2776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2776");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem16 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem16.BruteForce(intArray19, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem10.TwoPointer(intArray19, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem0.BruteForce(intArray19, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray33 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem26.TwoPointer(intArray33, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem37.BruteForce(intArray40, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem36.Hashmap(intArray40, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem45 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem45.BruteForce(intArray48, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem36.TwoPointer(intArray48, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem54.BruteForce(intArray57, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem53.Hashmap(intArray57, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem62 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem62.BruteForce(intArray65, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem53.TwoPointer(intArray65, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem36.Hashmap(intArray65, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem26.Hashmap(intArray65, (int) (short) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem0.TwoPointer(intArray65, 0);
        java.lang.Class<?> wildcardClass76 = intListList75.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test2777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2777");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem11 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray18 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem11.TwoPointer(intArray18, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem10.TwoPointer(intArray18, (int) (byte) 0);
        int[] intArray27 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem10.Hashmap(intArray27, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem31.BruteForce(intArray34, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem30.Hashmap(intArray34, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem10.TwoPointer(intArray34, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem42.BruteForce(intArray45, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem41.Hashmap(intArray45, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem50 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem51.BruteForce(intArray54, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem50.Hashmap(intArray54, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem41.BruteForce(intArray54, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem10.BruteForce(intArray54, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem0.TwoPointer(intArray54, (int) (short) 1);
        int[] intArray69 = new int[] { (short) -1, '#', (short) 1, '4' };
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem0.Hashmap(intArray69, (int) (short) -1);
        java.lang.Class<?> wildcardClass72 = intArray69.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 1, 35, 52]");
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test2778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2778");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.BruteForce(intArray13, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        int[] intArray37 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray37, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.BruteForce(intArray37, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray49 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem42.TwoPointer(intArray49, (int) (short) 1);
        int[] intArray55 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem42.TwoPointer(intArray55, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem0.TwoPointer(intArray55, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem60.BruteForce(intArray63, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem66 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem66.BruteForce(intArray69, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem60.TwoPointer(intArray69, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem0.Hashmap(intArray69, 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem76 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem77 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray84 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem77.TwoPointer(intArray84, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem76.TwoPointer(intArray84, (int) (byte) 0);
        int[] intArray90 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem76.TwoPointer(intArray90, (int) (byte) 0);
        int[] intArray93 = new int[] {};
        java.util.List<java.util.List<java.lang.Integer>> intListList95 = threeSumProblem76.BruteForce(intArray93, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList97 = threeSumProblem0.TwoPointer(intArray93, (int) (byte) 100);
        java.lang.Class<?> wildcardClass98 = intListList97.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0]");
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[]");
        org.junit.Assert.assertNotNull(intListList95);
        org.junit.Assert.assertNotNull(intListList97);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test2779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2779");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem14.TwoPointer(intArray21, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem13.TwoPointer(intArray21, (int) (byte) 0);
        int[] intArray30 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem13.Hashmap(intArray30, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem0.Hashmap(intArray30, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem41.BruteForce(intArray44, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem35.TwoPointer(intArray44, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem49.BruteForce(intArray52, (int) '#');
        int[] intArray58 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem49.BruteForce(intArray58, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem35.BruteForce(intArray58, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem0.TwoPointer(intArray58, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem65 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray72 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem65.TwoPointer(intArray72, (int) (short) 1);
        int[] intArray78 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem65.TwoPointer(intArray78, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem0.TwoPointer(intArray78, 0);
        java.lang.Class<?> wildcardClass83 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test2780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2780");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem10.TwoPointer(intArray17, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem9.TwoPointer(intArray17, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem22 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem23 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray26 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem23.BruteForce(intArray26, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem22.Hashmap(intArray26, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem31.BruteForce(intArray34, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem22.TwoPointer(intArray34, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem40.BruteForce(intArray43, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem39.Hashmap(intArray43, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem48.BruteForce(intArray51, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem39.TwoPointer(intArray51, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem22.Hashmap(intArray51, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem9.Hashmap(intArray51, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem61 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray68 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem61.TwoPointer(intArray68, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem60.TwoPointer(intArray68, (int) (byte) 0);
        int[] intArray74 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem60.TwoPointer(intArray74, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem9.BruteForce(intArray74, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem0.Hashmap(intArray74, (int) '#');
        java.lang.Class<?> wildcardClass81 = intArray74.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0]");
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test2781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2781");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem14.TwoPointer(intArray21, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem13.TwoPointer(intArray21, (int) (byte) 0);
        int[] intArray30 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem13.Hashmap(intArray30, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem33 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray41 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem34.TwoPointer(intArray41, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem33.TwoPointer(intArray41, (int) (byte) 0);
        int[] intArray50 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem33.Hashmap(intArray50, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem13.Hashmap(intArray50, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem55.BruteForce(intArray58, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem13.Hashmap(intArray58, (int) (byte) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem63 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem64 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem64.BruteForce(intArray67, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem63.Hashmap(intArray67, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem13.Hashmap(intArray67, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem0.Hashmap(intArray67, (-1));
        java.lang.Class<?> wildcardClass76 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test2782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2782");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem14.TwoPointer(intArray21, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem13.TwoPointer(intArray21, (int) (byte) 0);
        int[] intArray30 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem13.Hashmap(intArray30, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem0.Hashmap(intArray30, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem41.BruteForce(intArray44, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem35.TwoPointer(intArray44, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem49.BruteForce(intArray52, (int) '#');
        int[] intArray58 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem49.BruteForce(intArray58, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem35.BruteForce(intArray58, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem0.TwoPointer(intArray58, (int) '4');
        int[] intArray71 = new int[] { (byte) 100, (short) 1, (short) 100, (byte) 0, (short) -1, (short) 10 };
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem0.TwoPointer(intArray71, 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem74.BruteForce(intArray77, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem0.TwoPointer(intArray77, (int) ' ');
        int[] intArray82 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem0.Hashmap(intArray82, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0, 1, 10, 100, 100]");
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
    }

    @Test
    public void test2783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2783");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray9 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem6.BruteForce(intArray9, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList13 = threeSumProblem0.TwoPointer(intArray9, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem15 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem15.BruteForce(intArray18, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem14.Hashmap(intArray18, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem23 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray26 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem23.BruteForce(intArray26, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem14.TwoPointer(intArray26, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem32 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem32.BruteForce(intArray35, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem31.Hashmap(intArray35, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem40.BruteForce(intArray43, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem31.TwoPointer(intArray43, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem49.BruteForce(intArray52, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem48.Hashmap(intArray52, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem57 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem57.BruteForce(intArray60, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem48.TwoPointer(intArray60, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem31.Hashmap(intArray60, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem14.BruteForce(intArray60, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem0.TwoPointer(intArray60, 0);
        java.lang.Class<?> wildcardClass71 = intListList70.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intListList13);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test2784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2784");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        int[] intArray37 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray37, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray48 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem41.TwoPointer(intArray48, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem40.TwoPointer(intArray48, (int) (byte) 0);
        int[] intArray57 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem40.Hashmap(intArray57, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem20.Hashmap(intArray57, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem62 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem63 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem63.BruteForce(intArray66, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem62.Hashmap(intArray66, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem71 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem72 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem72.BruteForce(intArray75, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem71.Hashmap(intArray75, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem62.BruteForce(intArray75, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem20.Hashmap(intArray75, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem0.Hashmap(intArray75, (int) (short) 1);
        java.lang.Class<?> wildcardClass86 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test2785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2785");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem2 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray9 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem2.TwoPointer(intArray9, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList13 = threeSumProblem1.TwoPointer(intArray9, (int) (byte) 0);
        int[] intArray15 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem1.TwoPointer(intArray15, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.TwoPointer(intArray15, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        int[] intArray34 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem20.TwoPointer(intArray34, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem38 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem38.TwoPointer(intArray45, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem37.TwoPointer(intArray45, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem50 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem51.BruteForce(intArray54, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem50.Hashmap(intArray54, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray67 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem60.TwoPointer(intArray67, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem59.TwoPointer(intArray67, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem50.BruteForce(intArray67, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem37.BruteForce(intArray67, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem20.TwoPointer(intArray67, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem0.BruteForce(intArray67, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem80 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem81 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray88 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem81.TwoPointer(intArray88, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem80.TwoPointer(intArray88, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem0.BruteForce(intArray88, (int) (byte) 10);
        java.lang.Class<?> wildcardClass95 = intArray88.getClass();
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intListList13);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test2786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2786");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        int[] intArray37 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray37, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.Hashmap(intArray37, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem43.BruteForce(intArray46, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem42.Hashmap(intArray46, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem52.BruteForce(intArray55, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem51.Hashmap(intArray55, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem42.BruteForce(intArray55, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem0.Hashmap(intArray55, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem64 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem65 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem65.BruteForce(intArray68, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem64.Hashmap(intArray68, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem73 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray81 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem74.TwoPointer(intArray81, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem73.TwoPointer(intArray81, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem64.BruteForce(intArray81, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem0.BruteForce(intArray81, 1);
        java.lang.Class<?> wildcardClass90 = intArray81.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test2787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2787");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem17.Hashmap(intArray21, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem26.BruteForce(intArray29, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem17.TwoPointer(intArray29, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem0.Hashmap(intArray29, (int) 'a');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem37.BruteForce(intArray40, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem36.Hashmap(intArray40, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem0.TwoPointer(intArray40, (int) (byte) 1);
        int[] intArray47 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem0.BruteForce(intArray47, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
    }

    @Test
    public void test2788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2788");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray9 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem6.BruteForce(intArray9, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList13 = threeSumProblem0.TwoPointer(intArray9, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem15 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem15.BruteForce(intArray18, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem14.Hashmap(intArray18, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem23 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray26 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem23.BruteForce(intArray26, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem14.TwoPointer(intArray26, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem32 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem32.BruteForce(intArray35, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem31.Hashmap(intArray35, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem40.BruteForce(intArray43, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem31.TwoPointer(intArray43, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem49.BruteForce(intArray52, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem48.Hashmap(intArray52, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem57 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem57.BruteForce(intArray60, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem48.TwoPointer(intArray60, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem31.Hashmap(intArray60, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem14.BruteForce(intArray60, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem0.TwoPointer(intArray60, 0);
        int[] intArray77 = new int[] { (byte) 1, (-1), 'a', ' ', (short) -1, (short) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem0.BruteForce(intArray77, (int) (byte) -1);
        java.lang.Class<?> wildcardClass80 = intArray77.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intListList13);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[1, -1, 97, 32, -1, -1]");
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test2789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2789");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem2 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList7 = threeSumProblem2.BruteForce(intArray5, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem1.Hashmap(intArray5, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem11 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray14 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem11.BruteForce(intArray14, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList18 = threeSumProblem10.Hashmap(intArray14, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem1.BruteForce(intArray14, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem22 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray29 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem22.TwoPointer(intArray29, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem21.TwoPointer(intArray29, (int) (byte) 0);
        int[] intArray38 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem21.Hashmap(intArray38, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem1.BruteForce(intArray38, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem43.BruteForce(intArray46, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem1.Hashmap(intArray46, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem51.BruteForce(intArray54, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem1.TwoPointer(intArray54, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem0.TwoPointer(intArray54, 0);
        int[] intArray61 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem0.BruteForce(intArray61, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList7);
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intListList18);
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intListList60);
    }

    @Test
    public void test2790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2790");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem14.BruteForce(intArray17, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem13.Hashmap(intArray17, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem22 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem22.BruteForce(intArray25, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem13.TwoPointer(intArray25, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem31.BruteForce(intArray34, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem30.Hashmap(intArray34, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem39.BruteForce(intArray42, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem30.TwoPointer(intArray42, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem13.Hashmap(intArray42, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem0.Hashmap(intArray42, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem52.BruteForce(intArray55, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem51.Hashmap(intArray55, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem61 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray68 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem61.TwoPointer(intArray68, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem60.TwoPointer(intArray68, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem51.BruteForce(intArray68, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem0.Hashmap(intArray68, (-1));
        int[] intArray77 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem0.TwoPointer(intArray77, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intListList76);
    }

    @Test
    public void test2791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2791");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem10.TwoPointer(intArray17, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray29 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem20.BruteForce(intArray29, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem32 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem32.BruteForce(intArray35, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray35, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem41.BruteForce(intArray44, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem40.Hashmap(intArray44, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem50 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray57 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem50.TwoPointer(intArray57, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem49.TwoPointer(intArray57, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem40.BruteForce(intArray57, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem20.TwoPointer(intArray57, (int) (byte) 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem10.TwoPointer(intArray57, (int) (byte) 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem0.Hashmap(intArray57, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem70 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem71 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray78 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem71.TwoPointer(intArray78, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem70.TwoPointer(intArray78, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem0.Hashmap(intArray78, (int) (byte) 100);
        int[] intArray90 = new int[] { (-1), 10, (-1), '4', 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem0.BruteForce(intArray90, 10);
        java.lang.Class<?> wildcardClass93 = intArray90.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[-1, 10, -1, 52, 97]");
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test2792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2792");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray25 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem18.TwoPointer(intArray25, (int) (short) 1);
        int[] intArray31 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem18.TwoPointer(intArray31, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray42 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem35.TwoPointer(intArray42, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem34.TwoPointer(intArray42, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem18.BruteForce(intArray42, (int) (short) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem12.Hashmap(intArray42, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem0.BruteForce(intArray42, (int) 'a');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem54.BruteForce(intArray57, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem53.Hashmap(intArray57, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem62 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem63 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray70 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem63.TwoPointer(intArray70, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem62.TwoPointer(intArray70, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem53.BruteForce(intArray70, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem0.TwoPointer(intArray70, 1);
        int[] intArray79 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem0.Hashmap(intArray79, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intListList78);
    }

    @Test
    public void test2793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2793");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem14.BruteForce(intArray17, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem13.Hashmap(intArray17, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem22 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem22.BruteForce(intArray25, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem13.TwoPointer(intArray25, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem31.BruteForce(intArray34, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem30.Hashmap(intArray34, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem39.BruteForce(intArray42, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem30.TwoPointer(intArray42, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem13.Hashmap(intArray42, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem0.Hashmap(intArray42, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray60 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem51.BruteForce(intArray60, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem0.Hashmap(intArray60, (int) (short) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem65 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem66 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem66.BruteForce(intArray69, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem65.Hashmap(intArray69, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem75 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray82 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem75.TwoPointer(intArray82, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem74.TwoPointer(intArray82, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem65.BruteForce(intArray82, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem0.Hashmap(intArray82, (int) (short) 1);
        java.lang.Class<?> wildcardClass91 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test2794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2794");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.BruteForce(intArray12, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem17.BruteForce(intArray20, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem23 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray30 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem23.TwoPointer(intArray30, (int) (short) 1);
        int[] intArray36 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem23.TwoPointer(intArray36, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray47 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem40.TwoPointer(intArray47, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem39.TwoPointer(intArray47, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem23.BruteForce(intArray47, (int) (short) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem17.Hashmap(intArray47, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem57 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray64 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem57.TwoPointer(intArray64, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem56.TwoPointer(intArray64, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem17.BruteForce(intArray64, (int) (byte) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem0.Hashmap(intArray64, (int) (byte) 100);
        int[] intArray73 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem0.BruteForce(intArray73, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
    }

    @Test
    public void test2795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2795");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.BruteForce(intArray13, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem22 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem22.BruteForce(intArray25, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem21.Hashmap(intArray25, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem31.BruteForce(intArray34, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem30.Hashmap(intArray34, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem21.BruteForce(intArray34, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray49 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem42.TwoPointer(intArray49, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem41.TwoPointer(intArray49, (int) (byte) 0);
        int[] intArray58 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem41.Hashmap(intArray58, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem21.BruteForce(intArray58, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem63 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem63.BruteForce(intArray66, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem21.Hashmap(intArray66, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem71 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem71.BruteForce(intArray74, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem21.TwoPointer(intArray74, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem20.TwoPointer(intArray74, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem0.TwoPointer(intArray74, (int) (byte) 1);
        int[] intArray83 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem0.Hashmap(intArray83, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
    }

    @Test
    public void test2796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2796");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        int[] intArray13 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem0.TwoPointer(intArray13, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem16 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem17.BruteForce(intArray20, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList24 = threeSumProblem16.BruteForce(intArray20, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem0.Hashmap(intArray20, 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem28 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem28.BruteForce(intArray31, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem27.Hashmap(intArray31, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem37.BruteForce(intArray40, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem36.Hashmap(intArray40, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem45 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem45.BruteForce(intArray48, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem36.TwoPointer(intArray48, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem27.Hashmap(intArray48, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem0.BruteForce(intArray48, (int) (short) 100);
        java.lang.Class<?> wildcardClass57 = intArray48.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intListList24);
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test2797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2797");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.BruteForce(intArray12, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem17.Hashmap(intArray21, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem27.BruteForce(intArray30, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem26.Hashmap(intArray30, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem17.BruteForce(intArray30, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem38 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem38.TwoPointer(intArray45, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem37.TwoPointer(intArray45, (int) (byte) 0);
        int[] intArray54 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem37.Hashmap(intArray54, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem17.BruteForce(intArray54, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem59.BruteForce(intArray62, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem17.Hashmap(intArray62, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem67 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem67.BruteForce(intArray70, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem73 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem73.BruteForce(intArray76, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem67.TwoPointer(intArray76, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem17.BruteForce(intArray76, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem0.Hashmap(intArray76, (int) '#');
        java.lang.Class<?> wildcardClass85 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test2798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2798");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        int[] intArray13 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem0.TwoPointer(intArray13, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem16 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem17.TwoPointer(intArray24, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem16.TwoPointer(intArray24, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem0.BruteForce(intArray24, (int) (short) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem31.TwoPointer(intArray38, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray49 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem42.TwoPointer(intArray49, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem41.TwoPointer(intArray49, (int) (byte) 0);
        int[] intArray58 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem41.Hashmap(intArray58, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem31.BruteForce(intArray58, (int) (byte) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem0.BruteForce(intArray58, (int) (byte) 0);
        java.lang.Class<?> wildcardClass65 = intArray58.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test2799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2799");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem11 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray18 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem11.TwoPointer(intArray18, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem10.TwoPointer(intArray18, (int) (byte) 0);
        int[] intArray27 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem10.Hashmap(intArray27, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem31.TwoPointer(intArray38, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem30.TwoPointer(intArray38, (int) (byte) 0);
        int[] intArray47 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem30.Hashmap(intArray47, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem10.Hashmap(intArray47, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem52.BruteForce(intArray55, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem58 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem58.BruteForce(intArray61, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem52.TwoPointer(intArray61, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem10.BruteForce(intArray61, (int) (byte) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem0.TwoPointer(intArray61, (int) (byte) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem70 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem71 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem72 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray79 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem72.TwoPointer(intArray79, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem71.TwoPointer(intArray79, (int) (byte) 0);
        int[] intArray85 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem71.TwoPointer(intArray85, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem70.TwoPointer(intArray85, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem0.TwoPointer(intArray85, (int) (byte) 1);
        java.lang.Class<?> wildcardClass92 = intListList91.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0]");
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test2800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2800");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.BruteForce(intArray13, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem21.BruteForce(intArray24, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem20.Hashmap(intArray24, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray37 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem30.TwoPointer(intArray37, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem29.TwoPointer(intArray37, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem20.BruteForce(intArray37, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem0.TwoPointer(intArray37, 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray53 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem46.TwoPointer(intArray53, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem56.BruteForce(intArray59, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem62 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem62.BruteForce(intArray65, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem56.TwoPointer(intArray65, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem46.BruteForce(intArray65, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem0.TwoPointer(intArray65, (int) (short) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem75 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem75.BruteForce(intArray78, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem74.Hashmap(intArray78, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem83 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray86 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem83.BruteForce(intArray86, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem74.BruteForce(intArray86, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem0.TwoPointer(intArray86, (int) (short) 10);
        java.lang.Class<?> wildcardClass93 = intListList92.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test2801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2801");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem7 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray14 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem7.TwoPointer(intArray14, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList18 = threeSumProblem6.TwoPointer(intArray14, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem19 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem20.BruteForce(intArray23, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem19.Hashmap(intArray23, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem28 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem28.BruteForce(intArray31, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem19.TwoPointer(intArray31, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem37.BruteForce(intArray40, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem36.Hashmap(intArray40, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem45 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem45.BruteForce(intArray48, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem36.TwoPointer(intArray48, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem19.Hashmap(intArray48, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem6.Hashmap(intArray48, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem57 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem57.BruteForce(intArray60, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem6.TwoPointer(intArray60, (int) (short) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem0.Hashmap(intArray60, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem67 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem67.BruteForce(intArray70, (int) '#');
        int[] intArray76 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem67.BruteForce(intArray76, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem0.BruteForce(intArray76, 0);
        int[] intArray83 = new int[] { (short) 0, (short) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem0.Hashmap(intArray83, 100);
        java.lang.Class<?> wildcardClass86 = intListList85.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intListList18);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 1]");
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test2802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2802");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem7 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray14 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem7.TwoPointer(intArray14, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList18 = threeSumProblem6.TwoPointer(intArray14, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem19 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem20.BruteForce(intArray23, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem19.Hashmap(intArray23, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem28 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray36 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem29.TwoPointer(intArray36, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem28.TwoPointer(intArray36, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem19.BruteForce(intArray36, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem6.BruteForce(intArray36, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem45 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem46.BruteForce(intArray49, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem45.Hashmap(intArray49, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem55.BruteForce(intArray58, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem54.Hashmap(intArray58, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem45.BruteForce(intArray58, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem6.TwoPointer(intArray58, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem0.TwoPointer(intArray58, (int) (byte) 1);
        java.lang.Class<?> wildcardClass69 = intArray58.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intListList18);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test2803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2803");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem14.TwoPointer(intArray21, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem13.TwoPointer(intArray21, (int) (byte) 0);
        int[] intArray30 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem13.Hashmap(intArray30, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem0.Hashmap(intArray30, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem41.BruteForce(intArray44, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem35.TwoPointer(intArray44, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem50 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem50.BruteForce(intArray53, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem49.Hashmap(intArray53, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem58 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem58.BruteForce(intArray61, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem49.TwoPointer(intArray61, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem35.BruteForce(intArray61, (int) ' ');
        int[] intArray74 = new int[] { (short) 100, (byte) 100, '4', (byte) -1, (byte) 0, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem35.Hashmap(intArray74, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem0.Hashmap(intArray74, (int) '4');
        java.lang.Class<?> wildcardClass79 = intListList78.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0, 52, 97, 100, 100]");
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test2804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2804");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem11 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray18 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem11.TwoPointer(intArray18, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem10.TwoPointer(intArray18, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList24 = threeSumProblem0.Hashmap(intArray18, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem25 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray33 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem26.TwoPointer(intArray33, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem25.TwoPointer(intArray33, (int) (byte) 0);
        int[] intArray42 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem25.Hashmap(intArray42, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem45 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem46.BruteForce(intArray49, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem45.Hashmap(intArray49, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem25.TwoPointer(intArray49, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem57 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem58 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray65 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem58.TwoPointer(intArray65, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem57.TwoPointer(intArray65, (int) (byte) 0);
        int[] intArray71 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem57.TwoPointer(intArray71, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem56.TwoPointer(intArray71, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem25.TwoPointer(intArray71, (int) (short) 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem0.TwoPointer(intArray71, (int) '4');
        int[] intArray80 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem0.TwoPointer(intArray80, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intListList24);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0]");
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intListList79);
    }

    @Test
    public void test2805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2805");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray14 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray14, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray26 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem17.BruteForce(intArray26, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem29.BruteForce(intArray32, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem17.Hashmap(intArray32, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem38 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem38.BruteForce(intArray41, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem37.Hashmap(intArray41, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem17.TwoPointer(intArray41, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray55 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem48.TwoPointer(intArray55, (int) (short) 1);
        int[] intArray61 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem48.TwoPointer(intArray61, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem17.TwoPointer(intArray61, 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem66 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray73 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem66.TwoPointer(intArray73, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem76 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem76.BruteForce(intArray79, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem82 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray85 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem82.BruteForce(intArray85, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem76.TwoPointer(intArray85, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem66.BruteForce(intArray85, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem17.TwoPointer(intArray85, (int) (byte) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList95 = threeSumProblem0.BruteForce(intArray85, (int) (short) 1);
        java.lang.Class<?> wildcardClass96 = intArray85.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0]");
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(intListList93);
        org.junit.Assert.assertNotNull(intListList95);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test2806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2806");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem21.BruteForce(intArray24, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem20.Hashmap(intArray24, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem0.TwoPointer(intArray24, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem31.TwoPointer(intArray38, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray49 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem42.TwoPointer(intArray49, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem41.TwoPointer(intArray49, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem31.Hashmap(intArray49, (int) (byte) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem0.BruteForce(intArray49, (int) (byte) -1);
        java.lang.Class<?> wildcardClass58 = intArray49.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test2807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2807");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem2 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList7 = threeSumProblem2.BruteForce(intArray5, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem1.BruteForce(intArray5, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem11 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray18 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem11.TwoPointer(intArray18, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem10.TwoPointer(intArray18, (int) (byte) 0);
        int[] intArray27 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem10.Hashmap(intArray27, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem31.BruteForce(intArray34, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem30.Hashmap(intArray34, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem10.TwoPointer(intArray34, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem1.Hashmap(intArray34, (int) (byte) 10);
        int[] intArray48 = new int[] { (byte) 10, (byte) 100, 'a', '4', 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem1.TwoPointer(intArray48, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem0.TwoPointer(intArray48, (int) '4');
        int[] intArray53 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem0.Hashmap(intArray53, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList7);
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[1, 10, 52, 97, 100]");
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
    }

    @Test
    public void test2808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2808");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem21.BruteForce(intArray24, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem20.Hashmap(intArray24, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem29.BruteForce(intArray32, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem20.TwoPointer(intArray32, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem0.Hashmap(intArray32, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray48 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem41.TwoPointer(intArray48, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem40.TwoPointer(intArray48, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem54.BruteForce(intArray57, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem53.Hashmap(intArray57, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem62 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem63 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray70 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem63.TwoPointer(intArray70, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem62.TwoPointer(intArray70, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem53.BruteForce(intArray70, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem40.BruteForce(intArray70, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem39.Hashmap(intArray70, (int) (byte) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem0.Hashmap(intArray70, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem83 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem84 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray87 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem84.BruteForce(intArray87, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem83.BruteForce(intArray87, (int) (short) 1);
        int[] intArray93 = new int[] { '#' };
        java.util.List<java.util.List<java.lang.Integer>> intListList95 = threeSumProblem83.TwoPointer(intArray93, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList97 = threeSumProblem0.BruteForce(intArray93, (int) '4');
        java.lang.Class<?> wildcardClass98 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[35]");
        org.junit.Assert.assertNotNull(intListList95);
        org.junit.Assert.assertNotNull(intListList97);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test2809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2809");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem10.TwoPointer(intArray17, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem9.TwoPointer(intArray17, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem0.BruteForce(intArray17, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem24 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray31 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem24.TwoPointer(intArray31, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray42 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem35.TwoPointer(intArray42, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem34.TwoPointer(intArray42, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem24.Hashmap(intArray42, (int) (byte) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem0.Hashmap(intArray42, (int) (byte) 0);
        java.lang.Class<?> wildcardClass51 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test2810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2810");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem11 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray18 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem11.TwoPointer(intArray18, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem10.TwoPointer(intArray18, (int) (byte) 0);
        int[] intArray27 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem10.Hashmap(intArray27, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem31.TwoPointer(intArray38, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem30.TwoPointer(intArray38, (int) (byte) 0);
        int[] intArray47 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem30.Hashmap(intArray47, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem10.Hashmap(intArray47, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem52.BruteForce(intArray55, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem58 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem58.BruteForce(intArray61, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem52.TwoPointer(intArray61, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem10.BruteForce(intArray61, (int) (byte) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem0.TwoPointer(intArray61, (int) (byte) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem70 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray77 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem70.TwoPointer(intArray77, (int) (short) 1);
        int[] intArray83 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem70.TwoPointer(intArray83, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem86 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem87 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray90 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem87.BruteForce(intArray90, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem86.BruteForce(intArray90, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem70.Hashmap(intArray90, 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList98 = threeSumProblem0.BruteForce(intArray90, (int) (byte) -1);
        java.lang.Class<?> wildcardClass99 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(intListList96);
        org.junit.Assert.assertNotNull(intListList98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test2811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2811");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray9 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem6.BruteForce(intArray9, (int) '#');
        int[] intArray15 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem6.BruteForce(intArray15, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem6.Hashmap(intArray21, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray35 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem26.BruteForce(intArray35, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem6.TwoPointer(intArray35, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.TwoPointer(intArray35, (int) (short) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem43.BruteForce(intArray46, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem42.BruteForce(intArray46, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray59 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem52.TwoPointer(intArray59, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem51.TwoPointer(intArray59, (int) (byte) 0);
        int[] intArray68 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem51.Hashmap(intArray68, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem71 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem72 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem72.BruteForce(intArray75, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem71.Hashmap(intArray75, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem51.TwoPointer(intArray75, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem42.Hashmap(intArray75, (int) (byte) 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem0.TwoPointer(intArray75, 1);
        java.lang.Class<?> wildcardClass86 = intArray75.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test2812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2812");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem16 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem16.BruteForce(intArray19, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem10.TwoPointer(intArray19, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem0.BruteForce(intArray19, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray35 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem26.BruteForce(intArray35, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem0.TwoPointer(intArray35, (int) ' ');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray48 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem41.TwoPointer(intArray48, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem40.TwoPointer(intArray48, (int) (byte) 0);
        int[] intArray57 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem40.Hashmap(intArray57, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem61 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem61.BruteForce(intArray64, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem60.Hashmap(intArray64, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem40.TwoPointer(intArray64, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem71 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem72 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem72.BruteForce(intArray75, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem71.Hashmap(intArray75, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem80 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem81 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray84 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem81.BruteForce(intArray84, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem80.Hashmap(intArray84, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem71.BruteForce(intArray84, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem40.BruteForce(intArray84, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem0.BruteForce(intArray84, (int) 'a');
        int[] intArray95 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList97 = threeSumProblem0.Hashmap(intArray95, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(intListList94);
    }

    @Test
    public void test2813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2813");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem7 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem7.BruteForce(intArray10, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem6.Hashmap(intArray10, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem15 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem16 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem16.TwoPointer(intArray23, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem15.TwoPointer(intArray23, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem6.BruteForce(intArray23, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem0.Hashmap(intArray23, (int) (byte) 0);
        int[] intArray32 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem0.Hashmap(intArray32, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intListList31);
    }

    @Test
    public void test2814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2814");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem14.TwoPointer(intArray21, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem13.TwoPointer(intArray21, (int) (byte) 0);
        int[] intArray30 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem13.Hashmap(intArray30, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem0.Hashmap(intArray30, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem41.BruteForce(intArray44, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem35.TwoPointer(intArray44, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem49.BruteForce(intArray52, (int) '#');
        int[] intArray58 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem49.BruteForce(intArray58, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem35.BruteForce(intArray58, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem0.TwoPointer(intArray58, (int) '4');
        int[] intArray71 = new int[] { (byte) 100, (short) 1, (short) 100, (byte) 0, (short) -1, (short) 10 };
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem0.TwoPointer(intArray71, 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem74.BruteForce(intArray77, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem0.TwoPointer(intArray77, (int) ' ');
        java.lang.Class<?> wildcardClass82 = intListList81.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0, 1, 10, 100, 100]");
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test2815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2815");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray29 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem20.BruteForce(intArray29, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem0.TwoPointer(intArray29, (int) ' ');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray43 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem34.BruteForce(intArray43, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem0.BruteForce(intArray43, (int) (short) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray56 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem49.TwoPointer(intArray56, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem48.TwoPointer(intArray56, (int) (byte) 0);
        int[] intArray65 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem48.Hashmap(intArray65, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem68 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem69 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem69.BruteForce(intArray72, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem68.Hashmap(intArray72, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem48.TwoPointer(intArray72, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem0.Hashmap(intArray72, 0);
        java.lang.Class<?> wildcardClass81 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test2816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2816");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem6.TwoPointer(intArray13, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem16 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem17.TwoPointer(intArray24, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem16.TwoPointer(intArray24, (int) (byte) 0);
        int[] intArray33 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem16.Hashmap(intArray33, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray44 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem37.TwoPointer(intArray44, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem36.TwoPointer(intArray44, (int) (byte) 0);
        int[] intArray53 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem36.Hashmap(intArray53, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem16.Hashmap(intArray53, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem58 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem58.BruteForce(intArray61, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem16.Hashmap(intArray61, (int) (byte) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem66 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem67 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem67.BruteForce(intArray70, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem66.Hashmap(intArray70, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem16.Hashmap(intArray70, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem6.BruteForce(intArray70, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem0.TwoPointer(intArray70, 0);
        java.lang.Class<?> wildcardClass81 = intArray70.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test2817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2817");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem6.TwoPointer(intArray13, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem16 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem17.TwoPointer(intArray24, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem16.TwoPointer(intArray24, (int) (byte) 0);
        int[] intArray33 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem16.Hashmap(intArray33, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem37.BruteForce(intArray40, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem36.Hashmap(intArray40, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem45 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem46.BruteForce(intArray49, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem45.Hashmap(intArray49, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem36.BruteForce(intArray49, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem16.Hashmap(intArray49, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem6.TwoPointer(intArray49, (int) (short) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray67 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem60.TwoPointer(intArray67, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem70 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem70.BruteForce(intArray73, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem76 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem76.BruteForce(intArray79, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem70.TwoPointer(intArray79, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem60.BruteForce(intArray79, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem6.Hashmap(intArray79, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem0.BruteForce(intArray79, 10);
        java.lang.Class<?> wildcardClass90 = intArray79.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test2818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2818");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.BruteForce(intArray4, (int) (short) 1);
        int[] intArray10 = new int[] { '#' };
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray10, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem14.TwoPointer(intArray21, (int) (short) 1);
        int[] intArray27 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem14.TwoPointer(intArray27, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem31.TwoPointer(intArray38, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem30.TwoPointer(intArray38, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem14.BruteForce(intArray38, (int) (short) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem45 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray54 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem45.BruteForce(intArray54, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem57 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem57.BruteForce(intArray60, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem45.Hashmap(intArray60, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem65 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem66 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem66.BruteForce(intArray69, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem65.Hashmap(intArray69, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem74.BruteForce(intArray77, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem65.TwoPointer(intArray77, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem45.Hashmap(intArray77, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem14.TwoPointer(intArray77, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem13.TwoPointer(intArray77, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem0.TwoPointer(intArray77, (int) '4');
        int[] intArray90 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem0.TwoPointer(intArray90, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[35]");
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(intListList89);
    }

    @Test
    public void test2819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2819");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem9.TwoPointer(intArray21, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem0.Hashmap(intArray21, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem28 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem28.BruteForce(intArray31, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem0.TwoPointer(intArray31, (int) (short) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem37.BruteForce(intArray40, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem36.Hashmap(intArray40, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem45 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem46.BruteForce(intArray49, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem45.Hashmap(intArray49, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem54.BruteForce(intArray57, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem45.TwoPointer(intArray57, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem36.Hashmap(intArray57, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem64 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem64.BruteForce(intArray67, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem36.TwoPointer(intArray67, (int) (short) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem0.BruteForce(intArray67, (int) (short) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem75 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem75.BruteForce(intArray78, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem74.BruteForce(intArray78, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem0.TwoPointer(intArray78, (int) '#');
        java.lang.Class<?> wildcardClass85 = intArray78.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test2820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2820");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem21.BruteForce(intArray24, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem20.Hashmap(intArray24, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray37 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem30.TwoPointer(intArray37, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem29.TwoPointer(intArray37, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem20.BruteForce(intArray37, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem0.TwoPointer(intArray37, (int) (byte) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem46.BruteForce(intArray49, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem52.BruteForce(intArray55, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem46.TwoPointer(intArray55, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem0.Hashmap(intArray55, 0);
        java.lang.Class<?> wildcardClass62 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test2821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2821");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem17.BruteForce(intArray21, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem0.TwoPointer(intArray21, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem28 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray36 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem29.TwoPointer(intArray36, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem28.TwoPointer(intArray36, (int) (byte) 0);
        int[] intArray45 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem28.Hashmap(intArray45, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem49.BruteForce(intArray52, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem48.Hashmap(intArray52, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem57 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem58 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem58.BruteForce(intArray61, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem57.Hashmap(intArray61, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem48.BruteForce(intArray61, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem28.Hashmap(intArray61, (-1));
        int[] intArray73 = new int[] { (short) 10, (short) 100, (byte) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem28.BruteForce(intArray73, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem0.TwoPointer(intArray73, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem78 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray81 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem78.BruteForce(intArray81, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem84 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray87 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem84.BruteForce(intArray87, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem78.TwoPointer(intArray87, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem0.TwoPointer(intArray87, (int) (byte) 1);
        java.lang.Class<?> wildcardClass94 = intArray87.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(intListList93);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test2822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2822");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray29 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem20.BruteForce(intArray29, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem0.BruteForce(intArray29, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray41 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem34.TwoPointer(intArray41, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem0.TwoPointer(intArray41, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem47 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray54 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem47.TwoPointer(intArray54, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem46.TwoPointer(intArray54, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem60.BruteForce(intArray63, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem59.Hashmap(intArray63, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem68 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem68.BruteForce(intArray71, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem59.TwoPointer(intArray71, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem76 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem77 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem77.BruteForce(intArray80, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem76.Hashmap(intArray80, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem85 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray88 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem85.BruteForce(intArray88, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem76.TwoPointer(intArray88, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem59.Hashmap(intArray88, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem46.Hashmap(intArray88, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList98 = threeSumProblem0.TwoPointer(intArray88, (int) (byte) 1);
        java.lang.Class<?> wildcardClass99 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(intListList96);
        org.junit.Assert.assertNotNull(intListList98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test2823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2823");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem14.BruteForce(intArray17, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem13.Hashmap(intArray17, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem22 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem22.BruteForce(intArray25, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem13.TwoPointer(intArray25, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem31.BruteForce(intArray34, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem30.Hashmap(intArray34, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem39.BruteForce(intArray42, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem30.TwoPointer(intArray42, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem13.Hashmap(intArray42, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem0.Hashmap(intArray42, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray58 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem51.TwoPointer(intArray58, (int) (short) 1);
        int[] intArray64 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem51.TwoPointer(intArray64, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem67 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem68 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray75 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem68.TwoPointer(intArray75, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem67.TwoPointer(intArray75, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem51.BruteForce(intArray75, (int) (short) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem0.TwoPointer(intArray75, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem84 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem85 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray92 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem85.TwoPointer(intArray92, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem84.TwoPointer(intArray92, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList98 = threeSumProblem0.Hashmap(intArray92, 0);
        java.lang.Class<?> wildcardClass99 = intListList98.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(intListList96);
        org.junit.Assert.assertNotNull(intListList98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test2824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2824");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem19 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray26 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem19.TwoPointer(intArray26, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem18.TwoPointer(intArray26, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem32 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem32.BruteForce(intArray35, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem31.Hashmap(intArray35, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem40.BruteForce(intArray43, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem31.TwoPointer(intArray43, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem49.BruteForce(intArray52, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem48.Hashmap(intArray52, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem57 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem57.BruteForce(intArray60, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem48.TwoPointer(intArray60, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem31.Hashmap(intArray60, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem18.Hashmap(intArray60, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem69 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem69.BruteForce(intArray72, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem18.TwoPointer(intArray72, (int) (short) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem12.Hashmap(intArray72, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem0.TwoPointer(intArray72, 0);
        java.lang.Class<?> wildcardClass81 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test2825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2825");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem9.TwoPointer(intArray21, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem0.Hashmap(intArray21, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem28 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem29.BruteForce(intArray32, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem28.Hashmap(intArray32, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem37.BruteForce(intArray40, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem28.TwoPointer(intArray40, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem45 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray53 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem46.TwoPointer(intArray53, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem45.TwoPointer(intArray53, (int) (byte) 0);
        int[] intArray62 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem45.Hashmap(intArray62, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem28.Hashmap(intArray62, (int) ' ');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem67 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem68 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray75 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem68.TwoPointer(intArray75, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem67.TwoPointer(intArray75, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem28.Hashmap(intArray75, (int) (byte) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem82 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem83 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray90 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem83.TwoPointer(intArray90, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem82.TwoPointer(intArray90, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem28.Hashmap(intArray90, (int) (short) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList98 = threeSumProblem0.Hashmap(intArray90, 10);
        java.lang.Class<?> wildcardClass99 = intArray90.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(intListList96);
        org.junit.Assert.assertNotNull(intListList98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test2826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2826");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.BruteForce(intArray4, (int) (short) 1);
        int[] intArray10 = new int[] { '#' };
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray10, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem14.TwoPointer(intArray21, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem13.TwoPointer(intArray21, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem26.BruteForce(intArray29, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem32 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem32.BruteForce(intArray35, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem26.TwoPointer(intArray35, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray49 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem40.BruteForce(intArray49, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem26.BruteForce(intArray49, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem13.Hashmap(intArray49, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem0.TwoPointer(intArray49, (int) '#');
        java.lang.Class<?> wildcardClass58 = intListList57.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[35]");
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test2827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2827");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem14.TwoPointer(intArray21, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem13.TwoPointer(intArray21, (int) (byte) 0);
        int[] intArray30 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem13.Hashmap(intArray30, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem0.Hashmap(intArray30, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem41.BruteForce(intArray44, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem35.TwoPointer(intArray44, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem49.BruteForce(intArray52, (int) '#');
        int[] intArray58 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem49.BruteForce(intArray58, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem35.BruteForce(intArray58, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem0.TwoPointer(intArray58, (int) '4');
        int[] intArray65 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem0.BruteForce(intArray65, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intListList64);
    }

    @Test
    public void test2828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2828");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.BruteForce(intArray4, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray18 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem9.BruteForce(intArray18, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem0.BruteForce(intArray18, (int) (short) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem23 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem24 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem24.BruteForce(intArray27, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem23.Hashmap(intArray27, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem32 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem32.BruteForce(intArray35, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem23.TwoPointer(intArray35, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem41.BruteForce(intArray44, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem40.Hashmap(intArray44, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem50 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem50.BruteForce(intArray53, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem49.Hashmap(intArray53, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem58 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem59.BruteForce(intArray62, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem58.Hashmap(intArray62, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem49.BruteForce(intArray62, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem69 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem70 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray77 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem70.TwoPointer(intArray77, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem69.TwoPointer(intArray77, (int) (byte) 0);
        int[] intArray86 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem69.Hashmap(intArray86, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem49.BruteForce(intArray86, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem40.TwoPointer(intArray86, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem23.Hashmap(intArray86, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem0.TwoPointer(intArray86, 10);
        java.lang.Class<?> wildcardClass97 = intListList96.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(intListList96);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test2829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2829");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem9.TwoPointer(intArray21, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem0.Hashmap(intArray21, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem28 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem29.BruteForce(intArray32, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem28.Hashmap(intArray32, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem37.BruteForce(intArray40, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem28.TwoPointer(intArray40, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem0.TwoPointer(intArray40, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem47 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem48.BruteForce(intArray51, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem47.BruteForce(intArray51, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem0.Hashmap(intArray51, (int) (short) -1);
        int[] intArray58 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem0.BruteForce(intArray58, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intListList57);
    }

    @Test
    public void test2830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2830");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem2 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList7 = threeSumProblem2.BruteForce(intArray5, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem1.BruteForce(intArray5, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem11 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray18 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem11.TwoPointer(intArray18, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem10.TwoPointer(intArray18, (int) (byte) 0);
        int[] intArray27 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem10.Hashmap(intArray27, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem31.BruteForce(intArray34, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem30.Hashmap(intArray34, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem10.TwoPointer(intArray34, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem1.Hashmap(intArray34, (int) (byte) 10);
        int[] intArray48 = new int[] { (byte) 10, (byte) 100, 'a', '4', 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem1.TwoPointer(intArray48, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem0.TwoPointer(intArray48, (int) '4');
        java.lang.Class<?> wildcardClass53 = intArray48.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList7);
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[1, 10, 52, 97, 100]");
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test2831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2831");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray9 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem6.BruteForce(intArray9, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList13 = threeSumProblem0.TwoPointer(intArray9, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem14.BruteForce(intArray17, (int) '#');
        int[] intArray23 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem14.BruteForce(intArray23, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem0.BruteForce(intArray23, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem28 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray36 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem29.TwoPointer(intArray36, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem28.TwoPointer(intArray36, (int) (byte) 0);
        int[] intArray42 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem28.TwoPointer(intArray42, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem45 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem45.BruteForce(intArray48, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem51.BruteForce(intArray54, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem45.TwoPointer(intArray54, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem60.BruteForce(intArray63, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem59.Hashmap(intArray63, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem68 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem68.BruteForce(intArray71, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem59.TwoPointer(intArray71, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem45.BruteForce(intArray71, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem28.Hashmap(intArray71, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem0.BruteForce(intArray71, (int) '#');
        java.lang.Class<?> wildcardClass82 = intListList81.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intListList13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0]");
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test2832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2832");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem2 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList7 = threeSumProblem2.BruteForce(intArray5, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem1.Hashmap(intArray5, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem1.TwoPointer(intArray13, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem19 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList24 = threeSumProblem19.BruteForce(intArray22, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem18.Hashmap(intArray22, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem27.BruteForce(intArray30, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem18.TwoPointer(intArray30, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem1.Hashmap(intArray30, (int) 'a');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem38 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem38.BruteForce(intArray41, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem37.Hashmap(intArray41, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem46.BruteForce(intArray49, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem37.TwoPointer(intArray49, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem55.BruteForce(intArray58, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem54.Hashmap(intArray58, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem63 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem63.BruteForce(intArray66, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem54.TwoPointer(intArray66, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem37.Hashmap(intArray66, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem1.Hashmap(intArray66, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem75 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem76 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem76.BruteForce(intArray79, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem75.Hashmap(intArray79, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem1.TwoPointer(intArray79, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem0.BruteForce(intArray79, 10);
        java.lang.Class<?> wildcardClass88 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList7);
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList24);
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test2833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2833");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem21.BruteForce(intArray24, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem20.Hashmap(intArray24, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem0.TwoPointer(intArray24, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem31.TwoPointer(intArray38, (int) (short) 1);
        int[] intArray44 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem31.TwoPointer(intArray44, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem0.TwoPointer(intArray44, 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray56 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem49.TwoPointer(intArray56, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem59.BruteForce(intArray62, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem65 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem65.BruteForce(intArray68, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem59.TwoPointer(intArray68, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem49.BruteForce(intArray68, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem0.TwoPointer(intArray68, (int) (byte) 1);
        int[] intArray77 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem0.TwoPointer(intArray77, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intListList76);
    }

    @Test
    public void test2834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2834");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem14.TwoPointer(intArray21, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem13.TwoPointer(intArray21, (int) (byte) 0);
        int[] intArray30 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem13.Hashmap(intArray30, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem0.Hashmap(intArray30, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem41.BruteForce(intArray44, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem35.TwoPointer(intArray44, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem49.BruteForce(intArray52, (int) '#');
        int[] intArray58 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem49.BruteForce(intArray58, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem35.BruteForce(intArray58, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem0.TwoPointer(intArray58, (int) '4');
        int[] intArray71 = new int[] { (byte) 100, (short) 1, (short) 100, (byte) 0, (short) -1, (short) 10 };
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem0.TwoPointer(intArray71, 100);
        int[] intArray74 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem0.TwoPointer(intArray74, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0, 1, 10, 100, 100]");
        org.junit.Assert.assertNotNull(intListList73);
    }

    @Test
    public void test2835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2835");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray26 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem17.BruteForce(intArray26, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem29.BruteForce(intArray32, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem17.Hashmap(intArray32, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray46 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem37.BruteForce(intArray46, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem17.BruteForce(intArray46, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem0.Hashmap(intArray46, (int) ' ');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray62 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem55.TwoPointer(intArray62, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem54.TwoPointer(intArray62, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem67 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem68 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem68.BruteForce(intArray71, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem67.Hashmap(intArray71, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem76 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem77 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray84 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem77.TwoPointer(intArray84, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem76.TwoPointer(intArray84, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem67.BruteForce(intArray84, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem54.BruteForce(intArray84, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem53.Hashmap(intArray84, (int) (byte) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem0.Hashmap(intArray84, 1);
        int[] intArray97 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList99 = threeSumProblem0.TwoPointer(intArray97, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(intListList96);
    }

    @Test
    public void test2836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2836");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem21.BruteForce(intArray24, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem20.Hashmap(intArray24, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem29.BruteForce(intArray32, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem20.TwoPointer(intArray32, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem0.Hashmap(intArray32, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray48 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem41.TwoPointer(intArray48, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem40.TwoPointer(intArray48, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem54.BruteForce(intArray57, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem53.Hashmap(intArray57, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem62 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem63 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray70 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem63.TwoPointer(intArray70, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem62.TwoPointer(intArray70, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem53.BruteForce(intArray70, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem40.BruteForce(intArray70, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem39.Hashmap(intArray70, (int) (byte) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem0.BruteForce(intArray70, 1);
        int[] intArray83 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem0.Hashmap(intArray83, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
    }

    @Test
    public void test2837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2837");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray16 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList18 = threeSumProblem13.BruteForce(intArray16, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem12.BruteForce(intArray16, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray30 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem21.BruteForce(intArray30, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem12.BruteForce(intArray30, (int) (short) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem38 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem38.BruteForce(intArray41, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem37.Hashmap(intArray41, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem47 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem47.BruteForce(intArray50, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem46.Hashmap(intArray50, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem37.BruteForce(intArray50, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem57 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem58 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem58.BruteForce(intArray61, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem57.Hashmap(intArray61, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem66 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem67 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray74 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem67.TwoPointer(intArray74, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem66.TwoPointer(intArray74, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem57.BruteForce(intArray74, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem37.TwoPointer(intArray74, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem0.BruteForce(intArray74, 10);
        java.lang.Class<?> wildcardClass85 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList18);
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test2838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2838");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem2 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray9 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem2.TwoPointer(intArray9, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList13 = threeSumProblem1.TwoPointer(intArray9, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem15 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem15.BruteForce(intArray18, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem14.Hashmap(intArray18, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem23 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem24 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray31 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem24.TwoPointer(intArray31, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem23.TwoPointer(intArray31, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem14.BruteForce(intArray31, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem1.BruteForce(intArray31, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.Hashmap(intArray31, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem42.BruteForce(intArray45, (int) '#');
        int[] intArray51 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem42.BruteForce(intArray51, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem54.BruteForce(intArray57, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem42.Hashmap(intArray57, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem62 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem63 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem63.BruteForce(intArray66, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem62.Hashmap(intArray66, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem71 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem72 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray79 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem72.TwoPointer(intArray79, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem71.TwoPointer(intArray79, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem62.BruteForce(intArray79, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem42.TwoPointer(intArray79, (int) (byte) 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem0.BruteForce(intArray79, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem90 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray93 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList95 = threeSumProblem90.BruteForce(intArray93, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList97 = threeSumProblem0.Hashmap(intArray93, (int) (short) -1);
        java.lang.Class<?> wildcardClass98 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intListList13);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList95);
        org.junit.Assert.assertNotNull(intListList97);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test2839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2839");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem9.TwoPointer(intArray21, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem0.Hashmap(intArray21, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem28 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem29.BruteForce(intArray32, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem28.Hashmap(intArray32, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem37.BruteForce(intArray40, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem28.TwoPointer(intArray40, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem0.TwoPointer(intArray40, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem47 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem48.BruteForce(intArray51, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem47.Hashmap(intArray51, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem57 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem57.BruteForce(intArray60, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem56.Hashmap(intArray60, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem47.BruteForce(intArray60, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem0.TwoPointer(intArray60, (int) (byte) 100);
        java.lang.Class<?> wildcardClass69 = intListList68.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test2840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2840");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem11 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray18 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem11.TwoPointer(intArray18, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem10.TwoPointer(intArray18, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList24 = threeSumProblem0.Hashmap(intArray18, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem25 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem25.BruteForce(intArray28, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem31.BruteForce(intArray34, (int) '#');
        int[] intArray40 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem31.BruteForce(intArray40, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem43.BruteForce(intArray46, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem31.Hashmap(intArray46, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem52.BruteForce(intArray55, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem51.Hashmap(intArray55, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem60.BruteForce(intArray63, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem51.TwoPointer(intArray63, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem31.Hashmap(intArray63, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem25.TwoPointer(intArray63, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem0.TwoPointer(intArray63, (int) '4');
        java.lang.Class<?> wildcardClass74 = intListList73.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intListList24);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test2841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2841");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray9 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem6.BruteForce(intArray9, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList13 = threeSumProblem0.TwoPointer(intArray9, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem15 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray22 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList24 = threeSumProblem15.TwoPointer(intArray22, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem14.TwoPointer(intArray22, (int) (byte) 0);
        int[] intArray28 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem14.TwoPointer(intArray28, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem32 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray39 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem32.TwoPointer(intArray39, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem31.TwoPointer(intArray39, (int) (byte) 0);
        int[] intArray48 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem31.Hashmap(intArray48, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray59 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem52.TwoPointer(intArray59, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem51.TwoPointer(intArray59, (int) (byte) 0);
        int[] intArray68 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem51.Hashmap(intArray68, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem31.Hashmap(intArray68, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem73 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem73.BruteForce(intArray76, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem31.Hashmap(intArray76, (int) (byte) 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem14.TwoPointer(intArray76, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem83 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray90 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem83.TwoPointer(intArray90, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem14.Hashmap(intArray90, (int) (byte) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem0.Hashmap(intArray90, (int) (byte) 0);
        java.lang.Class<?> wildcardClass97 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intListList13);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList24);
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(intListList96);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test2842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2842");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.BruteForce(intArray4, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem10.TwoPointer(intArray17, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem9.TwoPointer(intArray17, (int) (byte) 0);
        int[] intArray26 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem9.Hashmap(intArray26, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem30.BruteForce(intArray33, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem29.Hashmap(intArray33, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem38 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem39.BruteForce(intArray42, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem38.Hashmap(intArray42, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem29.BruteForce(intArray42, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem9.Hashmap(intArray42, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem0.TwoPointer(intArray42, (int) (byte) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray61 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem54.TwoPointer(intArray61, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem53.TwoPointer(intArray61, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem66 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray73 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem66.TwoPointer(intArray73, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem53.Hashmap(intArray73, (int) (byte) 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem0.BruteForce(intArray73, 1);
        int[] intArray80 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem0.TwoPointer(intArray80, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intListList79);
    }

    @Test
    public void test2843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2843");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem14.TwoPointer(intArray21, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem13.TwoPointer(intArray21, (int) (byte) 0);
        int[] intArray27 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem13.TwoPointer(intArray27, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem31.BruteForce(intArray34, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem30.Hashmap(intArray34, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem40.BruteForce(intArray43, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem39.Hashmap(intArray43, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem30.BruteForce(intArray43, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem50 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray58 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem51.TwoPointer(intArray58, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem50.TwoPointer(intArray58, (int) (byte) 0);
        int[] intArray67 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem50.Hashmap(intArray67, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem30.BruteForce(intArray67, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem13.Hashmap(intArray67, (int) 'a');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem75 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem75.BruteForce(intArray78, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem74.Hashmap(intArray78, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem13.TwoPointer(intArray78, 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem0.Hashmap(intArray78, 0);
        java.lang.Class<?> wildcardClass87 = intArray78.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0]");
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test2844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2844");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem33 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem34.BruteForce(intArray37, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem33.Hashmap(intArray37, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem42.BruteForce(intArray45, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem33.TwoPointer(intArray45, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem50 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem51.BruteForce(intArray54, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem50.Hashmap(intArray54, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem59.BruteForce(intArray62, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem50.TwoPointer(intArray62, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem33.Hashmap(intArray62, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem20.Hashmap(intArray62, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem71 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem71.BruteForce(intArray74, (int) '#');
        int[] intArray80 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem71.BruteForce(intArray80, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem20.Hashmap(intArray80, (int) (short) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem0.Hashmap(intArray80, (int) (byte) -1);
        java.lang.Class<?> wildcardClass87 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test2845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2845");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem7 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem7.BruteForce(intArray10, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem6.Hashmap(intArray10, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem15 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem16 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem16.TwoPointer(intArray23, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem15.TwoPointer(intArray23, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem6.BruteForce(intArray23, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem0.Hashmap(intArray23, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem32 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray39 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem32.TwoPointer(intArray39, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem42.BruteForce(intArray45, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem48.BruteForce(intArray51, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem42.TwoPointer(intArray51, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray65 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem56.BruteForce(intArray65, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem42.BruteForce(intArray65, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem32.BruteForce(intArray65, 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem0.Hashmap(intArray65, 0);
        java.lang.Class<?> wildcardClass74 = intArray65.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test2846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2846");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        int[] intArray37 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray37, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray48 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem41.TwoPointer(intArray48, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem40.TwoPointer(intArray48, (int) (byte) 0);
        int[] intArray57 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem40.Hashmap(intArray57, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem20.Hashmap(intArray57, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem62 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem62.BruteForce(intArray65, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem68 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem68.BruteForce(intArray71, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem62.TwoPointer(intArray71, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem20.BruteForce(intArray71, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem78 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem79 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem79.BruteForce(intArray82, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem78.Hashmap(intArray82, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem87 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray90 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem87.BruteForce(intArray90, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem78.TwoPointer(intArray90, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem20.TwoPointer(intArray90, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList98 = threeSumProblem0.BruteForce(intArray90, 0);
        java.lang.Class<?> wildcardClass99 = intListList98.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(intListList96);
        org.junit.Assert.assertNotNull(intListList98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test2847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2847");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem20.BruteForce(intArray23, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray33 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem26.TwoPointer(intArray33, (int) (short) 1);
        int[] intArray39 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem26.TwoPointer(intArray39, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray50 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem43.TwoPointer(intArray50, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem42.TwoPointer(intArray50, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem26.BruteForce(intArray50, (int) (short) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem20.Hashmap(intArray50, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray67 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem60.TwoPointer(intArray67, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem59.TwoPointer(intArray67, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem20.BruteForce(intArray67, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem75 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem75.BruteForce(intArray78, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem74.Hashmap(intArray78, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem83 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem84 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray87 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem84.BruteForce(intArray87, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem83.Hashmap(intArray87, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem74.BruteForce(intArray87, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList95 = threeSumProblem20.Hashmap(intArray87, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList97 = threeSumProblem0.BruteForce(intArray87, (int) (byte) 100);
        java.lang.Class<?> wildcardClass98 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(intListList93);
        org.junit.Assert.assertNotNull(intListList95);
        org.junit.Assert.assertNotNull(intListList97);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test2848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2848");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.BruteForce(intArray4, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem10.TwoPointer(intArray17, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem9.TwoPointer(intArray17, (int) (byte) 0);
        int[] intArray26 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem9.Hashmap(intArray26, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem30.BruteForce(intArray33, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem29.Hashmap(intArray33, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem9.TwoPointer(intArray33, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.Hashmap(intArray33, (int) (byte) 10);
        int[] intArray47 = new int[] { (byte) 10, (byte) 100, 'a', '4', 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem0.TwoPointer(intArray47, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem50 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem50.BruteForce(intArray53, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem56.BruteForce(intArray59, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem50.TwoPointer(intArray59, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem64 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem65 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem65.BruteForce(intArray68, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem64.Hashmap(intArray68, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem73 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray81 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem74.TwoPointer(intArray81, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem73.TwoPointer(intArray81, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem64.BruteForce(intArray81, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem50.TwoPointer(intArray81, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem0.BruteForce(intArray81, (int) '#');
        java.lang.Class<?> wildcardClass92 = intArray81.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[1, 10, 52, 97, 100]");
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test2849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2849");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem2 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray9 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem2.TwoPointer(intArray9, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList13 = threeSumProblem1.TwoPointer(intArray9, (int) (byte) 0);
        int[] intArray15 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem1.TwoPointer(intArray15, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem19 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray26 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem19.TwoPointer(intArray26, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem18.TwoPointer(intArray26, (int) (byte) 0);
        int[] intArray35 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem18.Hashmap(intArray35, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem1.TwoPointer(intArray35, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem41.BruteForce(intArray44, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem40.Hashmap(intArray44, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem50 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem50.BruteForce(intArray53, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem49.Hashmap(intArray53, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem40.BruteForce(intArray53, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem61 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray68 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem61.TwoPointer(intArray68, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem60.TwoPointer(intArray68, (int) (byte) 0);
        int[] intArray77 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem60.Hashmap(intArray77, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem40.BruteForce(intArray77, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem82 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem83 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray86 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem83.BruteForce(intArray86, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem82.Hashmap(intArray86, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem40.Hashmap(intArray86, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem1.TwoPointer(intArray86, (int) (byte) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem0.TwoPointer(intArray86, (int) (byte) 1);
        java.lang.Class<?> wildcardClass97 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intListList13);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(intListList96);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test2850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2850");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem9.TwoPointer(intArray21, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem0.Hashmap(intArray21, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem28 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem29.BruteForce(intArray32, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem28.Hashmap(intArray32, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem37.BruteForce(intArray40, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem28.TwoPointer(intArray40, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem0.TwoPointer(intArray40, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem47 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem48.BruteForce(intArray51, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem47.BruteForce(intArray51, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem0.Hashmap(intArray51, (int) (short) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem58 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem59.BruteForce(intArray62, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem58.Hashmap(intArray62, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem0.Hashmap(intArray62, (int) ' ');
        java.lang.Class<?> wildcardClass69 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test2851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2851");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray9 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem6.BruteForce(intArray9, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList13 = threeSumProblem0.TwoPointer(intArray9, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem15 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem15.BruteForce(intArray18, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem14.Hashmap(intArray18, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem23 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray26 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem23.BruteForce(intArray26, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem14.TwoPointer(intArray26, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem0.BruteForce(intArray26, (int) ' ');
        int[] intArray39 = new int[] { (short) 100, (byte) 100, '4', (byte) -1, (byte) 0, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.Hashmap(intArray39, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem43.BruteForce(intArray46, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem42.Hashmap(intArray46, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem52.BruteForce(intArray55, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem51.Hashmap(intArray55, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem42.BruteForce(intArray55, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem62 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem63 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray70 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem63.TwoPointer(intArray70, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem62.TwoPointer(intArray70, (int) (byte) 0);
        int[] intArray79 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem62.Hashmap(intArray79, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem42.BruteForce(intArray79, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem84 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem85 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray88 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem85.BruteForce(intArray88, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem84.Hashmap(intArray88, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem42.BruteForce(intArray88, (int) (short) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem0.BruteForce(intArray88, (int) 'a');
        java.lang.Class<?> wildcardClass97 = intArray88.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intListList13);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0, 52, 97, 100, 100]");
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(intListList96);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test2852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2852");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray9 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem6.BruteForce(intArray9, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList13 = threeSumProblem0.TwoPointer(intArray9, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem15 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem15.BruteForce(intArray18, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem14.Hashmap(intArray18, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem23 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray26 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem23.BruteForce(intArray26, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem14.TwoPointer(intArray26, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem0.BruteForce(intArray26, (int) ' ');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem33 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem34.BruteForce(intArray37, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem33.Hashmap(intArray37, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem43.BruteForce(intArray46, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem42.Hashmap(intArray46, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem51.BruteForce(intArray54, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem42.TwoPointer(intArray54, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem33.Hashmap(intArray54, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem61 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem62 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem62.BruteForce(intArray65, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem61.Hashmap(intArray65, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem70 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem71 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem71.BruteForce(intArray74, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem70.Hashmap(intArray74, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem79 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem79.BruteForce(intArray82, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem70.TwoPointer(intArray82, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem61.Hashmap(intArray82, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem33.TwoPointer(intArray82, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem0.Hashmap(intArray82, (int) (byte) 1);
        int[] intArray93 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList95 = threeSumProblem0.Hashmap(intArray93, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intListList13);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(intListList92);
    }

    @Test
    public void test2853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2853");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.BruteForce(intArray12, 1);
        int[] intArray17 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
    }

    @Test
    public void test2854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2854");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        int[] intArray37 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray37, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.Hashmap(intArray37, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem43.BruteForce(intArray46, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem42.Hashmap(intArray46, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem51.BruteForce(intArray54, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem42.TwoPointer(intArray54, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem60.BruteForce(intArray63, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem59.Hashmap(intArray63, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem68 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem68.BruteForce(intArray71, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem59.TwoPointer(intArray71, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem42.Hashmap(intArray71, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem0.TwoPointer(intArray71, (int) (byte) 10);
        int[] intArray80 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem0.Hashmap(intArray80, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intListList79);
    }

    @Test
    public void test2855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2855");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem21.BruteForce(intArray24, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem20.Hashmap(intArray24, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem0.TwoPointer(intArray24, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem31.TwoPointer(intArray38, (int) (short) 1);
        int[] intArray44 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem31.TwoPointer(intArray44, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem0.TwoPointer(intArray44, 10);
        int[] intArray51 = new int[] { 10, (short) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem0.TwoPointer(intArray51, (int) (byte) -1);
        java.lang.Class<?> wildcardClass54 = intArray51.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 10]");
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test2856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2856");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem17.Hashmap(intArray21, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem26.BruteForce(intArray29, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem17.TwoPointer(intArray29, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem34.Hashmap(intArray38, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem43.BruteForce(intArray46, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem34.TwoPointer(intArray46, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem17.Hashmap(intArray46, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem0.BruteForce(intArray46, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem56.BruteForce(intArray59, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem55.Hashmap(intArray59, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem64 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem64.BruteForce(intArray67, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem55.TwoPointer(intArray67, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem0.Hashmap(intArray67, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem75 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem75.BruteForce(intArray78, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem74.Hashmap(intArray78, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem83 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem84 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray87 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem84.BruteForce(intArray87, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem83.Hashmap(intArray87, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem74.BruteForce(intArray87, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList95 = threeSumProblem0.TwoPointer(intArray87, (int) (short) -1);
        int[] intArray96 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList98 = threeSumProblem0.Hashmap(intArray96, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(intListList93);
        org.junit.Assert.assertNotNull(intListList95);
    }

    @Test
    public void test2857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2857");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem11 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray18 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem11.TwoPointer(intArray18, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem10.TwoPointer(intArray18, (int) (byte) 0);
        int[] intArray27 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem10.Hashmap(intArray27, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem31.BruteForce(intArray34, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem30.Hashmap(intArray34, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem10.TwoPointer(intArray34, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem42.BruteForce(intArray45, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem41.Hashmap(intArray45, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem50 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem51.BruteForce(intArray54, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem50.Hashmap(intArray54, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem41.BruteForce(intArray54, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem10.BruteForce(intArray54, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem0.TwoPointer(intArray54, (int) (short) 1);
        int[] intArray65 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem0.TwoPointer(intArray65, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intListList64);
    }

    @Test
    public void test2858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2858");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.BruteForce(intArray4, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem10.TwoPointer(intArray17, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem9.TwoPointer(intArray17, (int) (byte) 0);
        int[] intArray26 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem9.Hashmap(intArray26, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem30.BruteForce(intArray33, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem29.Hashmap(intArray33, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem38 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem39.BruteForce(intArray42, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem38.Hashmap(intArray42, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem29.BruteForce(intArray42, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem9.Hashmap(intArray42, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem0.TwoPointer(intArray42, (int) (byte) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray61 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem54.TwoPointer(intArray61, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem53.TwoPointer(intArray61, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem0.TwoPointer(intArray61, (int) (short) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem68 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem69 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem70 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray77 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem70.TwoPointer(intArray77, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem69.TwoPointer(intArray77, (int) (byte) 0);
        int[] intArray83 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem69.TwoPointer(intArray83, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem68.TwoPointer(intArray83, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem0.BruteForce(intArray83, (int) (byte) 100);
        java.lang.Class<?> wildcardClass90 = intArray83.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0]");
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test2859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2859");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        int[] intArray13 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem0.TwoPointer(intArray13, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem16 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem17.TwoPointer(intArray24, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem16.TwoPointer(intArray24, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem0.BruteForce(intArray24, (int) (short) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem32 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem32.BruteForce(intArray35, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem31.Hashmap(intArray35, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem40.BruteForce(intArray43, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem31.TwoPointer(intArray43, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem0.Hashmap(intArray43, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem50 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray58 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem51.TwoPointer(intArray58, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem50.TwoPointer(intArray58, (int) (byte) 0);
        int[] intArray67 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem50.Hashmap(intArray67, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem70 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem71 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem71.BruteForce(intArray74, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem70.Hashmap(intArray74, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem79 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem80 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray83 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem80.BruteForce(intArray83, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem79.Hashmap(intArray83, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem70.BruteForce(intArray83, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem50.Hashmap(intArray83, (-1));
        int[] intArray95 = new int[] { (short) 10, (short) 100, (byte) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList97 = threeSumProblem50.BruteForce(intArray95, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList99 = threeSumProblem0.Hashmap(intArray95, (int) (byte) 100);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList97);
        org.junit.Assert.assertNotNull(intListList99);
    }

    @Test
    public void test2860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2860");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem2 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList7 = threeSumProblem2.BruteForce(intArray5, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem1.Hashmap(intArray5, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem1.TwoPointer(intArray13, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem19 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList24 = threeSumProblem19.BruteForce(intArray22, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem18.Hashmap(intArray22, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem27.BruteForce(intArray30, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem18.TwoPointer(intArray30, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem1.Hashmap(intArray30, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem0.Hashmap(intArray30, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray47 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem40.TwoPointer(intArray47, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem39.TwoPointer(intArray47, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray60 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem53.TwoPointer(intArray60, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem52.TwoPointer(intArray60, (int) (byte) 0);
        int[] intArray69 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem52.Hashmap(intArray69, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem39.Hashmap(intArray69, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem74.BruteForce(intArray77, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem39.TwoPointer(intArray77, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem0.BruteForce(intArray77, (int) (byte) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem84 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem85 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray92 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem85.TwoPointer(intArray92, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem84.TwoPointer(intArray92, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList98 = threeSumProblem0.Hashmap(intArray92, 10);
        java.lang.Class<?> wildcardClass99 = intArray92.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList7);
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList24);
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(intListList96);
        org.junit.Assert.assertNotNull(intListList98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test2861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2861");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray16 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList18 = threeSumProblem13.BruteForce(intArray16, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem19 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList24 = threeSumProblem19.BruteForce(intArray22, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem13.TwoPointer(intArray22, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem28 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem28.BruteForce(intArray31, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem27.Hashmap(intArray31, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem37.BruteForce(intArray40, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem36.Hashmap(intArray40, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem27.BruteForce(intArray40, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem47 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray55 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem48.TwoPointer(intArray55, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem47.TwoPointer(intArray55, (int) (byte) 0);
        int[] intArray64 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem47.Hashmap(intArray64, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem27.BruteForce(intArray64, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem69 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem70 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem70.BruteForce(intArray73, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem69.Hashmap(intArray73, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem78 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem79 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem79.BruteForce(intArray82, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem78.Hashmap(intArray82, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem69.BruteForce(intArray82, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem27.TwoPointer(intArray82, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem13.TwoPointer(intArray82, (int) (byte) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem0.TwoPointer(intArray82, (int) ' ');
        java.lang.Class<?> wildcardClass95 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList18);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList24);
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test2862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2862");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem11 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray18 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem11.TwoPointer(intArray18, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem10.TwoPointer(intArray18, (int) (byte) 0);
        int[] intArray27 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem10.Hashmap(intArray27, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem0.BruteForce(intArray27, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem32 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem33 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem33.BruteForce(intArray36, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem32.Hashmap(intArray36, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem41.BruteForce(intArray44, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem32.TwoPointer(intArray44, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem50 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem50.BruteForce(intArray53, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem49.BruteForce(intArray53, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem32.TwoPointer(intArray53, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem61 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem61.BruteForce(intArray64, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem60.Hashmap(intArray64, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem32.BruteForce(intArray64, (int) (byte) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem71 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem72 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem72.BruteForce(intArray75, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem71.Hashmap(intArray75, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem80 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray83 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem80.BruteForce(intArray83, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem71.TwoPointer(intArray83, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem32.TwoPointer(intArray83, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem0.TwoPointer(intArray83, 0);
        java.lang.Class<?> wildcardClass92 = intListList91.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test2863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2863");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem14.TwoPointer(intArray21, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem13.TwoPointer(intArray21, (int) (byte) 0);
        int[] intArray30 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem13.Hashmap(intArray30, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem0.Hashmap(intArray30, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem36.BruteForce(intArray39, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem35.Hashmap(intArray39, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem44 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem44.BruteForce(intArray47, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem35.TwoPointer(intArray47, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem53.BruteForce(intArray56, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem52.Hashmap(intArray56, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem61 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem61.BruteForce(intArray64, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem52.TwoPointer(intArray64, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem69 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem70 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem70.BruteForce(intArray73, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem69.Hashmap(intArray73, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem78 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray81 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem78.BruteForce(intArray81, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem69.TwoPointer(intArray81, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem52.Hashmap(intArray81, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem35.BruteForce(intArray81, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem0.BruteForce(intArray81, (int) (byte) 0);
        int[] intArray92 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem0.BruteForce(intArray92, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(intListList91);
    }

    @Test
    public void test2864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2864");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem7 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem7.BruteForce(intArray10, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem6.Hashmap(intArray10, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem15 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem16 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem16.TwoPointer(intArray23, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem15.TwoPointer(intArray23, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem6.BruteForce(intArray23, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem0.Hashmap(intArray23, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem32 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray39 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem32.TwoPointer(intArray39, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem42.BruteForce(intArray45, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem48.BruteForce(intArray51, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem42.TwoPointer(intArray51, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray65 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem56.BruteForce(intArray65, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem42.BruteForce(intArray65, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem32.BruteForce(intArray65, 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem0.Hashmap(intArray65, 0);
        java.lang.Class<?> wildcardClass74 = intListList73.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test2865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2865");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem11 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray18 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem11.TwoPointer(intArray18, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem10.TwoPointer(intArray18, (int) (byte) 0);
        int[] intArray24 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem10.TwoPointer(intArray24, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem28 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray35 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem28.TwoPointer(intArray35, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem27.TwoPointer(intArray35, (int) (byte) 0);
        int[] intArray44 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem27.Hashmap(intArray44, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem10.TwoPointer(intArray44, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem49.BruteForce(intArray52, (int) '#');
        int[] intArray58 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem49.BruteForce(intArray58, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem61 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem61.BruteForce(intArray64, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem49.Hashmap(intArray64, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem69 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem70 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem70.BruteForce(intArray73, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem69.Hashmap(intArray73, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem78 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray81 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem78.BruteForce(intArray81, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem69.TwoPointer(intArray81, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem49.Hashmap(intArray81, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem10.Hashmap(intArray81, (int) (byte) 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem0.TwoPointer(intArray81, 0);
        int[] intArray92 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem0.TwoPointer(intArray92, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(intListList91);
    }

    @Test
    public void test2866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2866");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem2 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList7 = threeSumProblem2.BruteForce(intArray5, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem1.Hashmap(intArray5, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem1.TwoPointer(intArray13, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem19 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList24 = threeSumProblem19.BruteForce(intArray22, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem18.Hashmap(intArray22, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem27.BruteForce(intArray30, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem18.TwoPointer(intArray30, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem1.Hashmap(intArray30, (int) 'a');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem38 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem38.BruteForce(intArray41, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem37.Hashmap(intArray41, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem46.BruteForce(intArray49, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem37.TwoPointer(intArray49, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem55.BruteForce(intArray58, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem54.Hashmap(intArray58, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem63 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem63.BruteForce(intArray66, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem54.TwoPointer(intArray66, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem37.Hashmap(intArray66, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem1.Hashmap(intArray66, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem0.TwoPointer(intArray66, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem77 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem78 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray81 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem78.BruteForce(intArray81, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem77.Hashmap(intArray81, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem0.TwoPointer(intArray81, (int) '4');
        java.lang.Class<?> wildcardClass88 = intListList87.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList7);
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList24);
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test2867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2867");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray9 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem6.BruteForce(intArray9, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList13 = threeSumProblem0.TwoPointer(intArray9, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem15 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem15.BruteForce(intArray18, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem14.Hashmap(intArray18, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem23 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem24 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray31 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem24.TwoPointer(intArray31, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem23.TwoPointer(intArray31, (int) (byte) 0);
        int[] intArray40 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem23.Hashmap(intArray40, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem44 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray51 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem44.TwoPointer(intArray51, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem43.TwoPointer(intArray51, (int) (byte) 0);
        int[] intArray60 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem43.Hashmap(intArray60, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem23.Hashmap(intArray60, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem14.Hashmap(intArray60, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem67 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem68 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray75 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem68.TwoPointer(intArray75, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem67.TwoPointer(intArray75, (int) (byte) 0);
        int[] intArray81 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem67.TwoPointer(intArray81, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem14.Hashmap(intArray81, 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem0.TwoPointer(intArray81, (int) (short) -1);
        java.lang.Class<?> wildcardClass88 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intListList13);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0]");
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test2868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2868");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray20 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem13.TwoPointer(intArray20, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList24 = threeSumProblem0.Hashmap(intArray20, (int) (byte) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem25 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem26.BruteForce(intArray29, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem25.Hashmap(intArray29, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem34.Hashmap(intArray38, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem25.BruteForce(intArray38, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem45 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray53 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem46.TwoPointer(intArray53, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem45.TwoPointer(intArray53, (int) (byte) 0);
        int[] intArray62 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem45.Hashmap(intArray62, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem25.BruteForce(intArray62, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem67 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem67.BruteForce(intArray70, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem25.Hashmap(intArray70, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem75 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem75.BruteForce(intArray78, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem81 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray84 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem81.BruteForce(intArray84, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem75.TwoPointer(intArray84, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem25.BruteForce(intArray84, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem0.Hashmap(intArray84, (int) (byte) -1);
        java.lang.Class<?> wildcardClass93 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intListList24);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test2869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2869");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray9 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem6.BruteForce(intArray9, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList13 = threeSumProblem0.TwoPointer(intArray9, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem15 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem15.BruteForce(intArray18, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem14.Hashmap(intArray18, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem23 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray26 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem23.BruteForce(intArray26, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray37 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem30.TwoPointer(intArray37, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem29.TwoPointer(intArray37, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray50 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem43.TwoPointer(intArray50, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem42.TwoPointer(intArray50, (int) (byte) 0);
        int[] intArray59 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem42.Hashmap(intArray59, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem29.Hashmap(intArray59, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem64 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem64.BruteForce(intArray67, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem70 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem70.BruteForce(intArray73, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem64.TwoPointer(intArray73, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem78 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray81 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem78.BruteForce(intArray81, (int) '#');
        int[] intArray87 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem78.BruteForce(intArray87, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem64.BruteForce(intArray87, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem29.TwoPointer(intArray87, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList95 = threeSumProblem23.TwoPointer(intArray87, (int) (byte) 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList97 = threeSumProblem14.TwoPointer(intArray87, (int) (short) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList99 = threeSumProblem0.Hashmap(intArray87, (int) (short) 1);
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intListList13);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(intListList93);
        org.junit.Assert.assertNotNull(intListList95);
        org.junit.Assert.assertNotNull(intListList97);
        org.junit.Assert.assertNotNull(intListList99);
    }

    @Test
    public void test2870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2870");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray26 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem17.BruteForce(intArray26, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem29.BruteForce(intArray32, (int) '#');
        int[] intArray38 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem29.BruteForce(intArray38, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem41.BruteForce(intArray44, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem29.Hashmap(intArray44, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem49.BruteForce(intArray52, (int) '#');
        int[] intArray58 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem49.BruteForce(intArray58, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem29.BruteForce(intArray58, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem63 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem64 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray71 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem64.TwoPointer(intArray71, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem63.TwoPointer(intArray71, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem29.Hashmap(intArray71, (int) (short) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem17.Hashmap(intArray71, (int) (short) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem0.TwoPointer(intArray71, (int) (byte) -1);
        int[] intArray82 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem0.TwoPointer(intArray82, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
    }

    @Test
    public void test2871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2871");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem21.BruteForce(intArray24, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem20.Hashmap(intArray24, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem30.BruteForce(intArray33, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem29.Hashmap(intArray33, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.BruteForce(intArray33, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.Hashmap(intArray33, (-1));
        int[] intArray42 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem0.Hashmap(intArray42, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
    }

    @Test
    public void test2872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2872");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem2 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList7 = threeSumProblem2.BruteForce(intArray5, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem1.Hashmap(intArray5, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem11 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray14 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem11.BruteForce(intArray14, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList18 = threeSumProblem10.Hashmap(intArray14, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem19 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList24 = threeSumProblem19.BruteForce(intArray22, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem10.TwoPointer(intArray22, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem28 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem28.BruteForce(intArray31, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem27.Hashmap(intArray31, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem36.BruteForce(intArray39, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem27.TwoPointer(intArray39, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem10.Hashmap(intArray39, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem1.BruteForce(intArray39, 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem49.BruteForce(intArray52, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem48.Hashmap(intArray52, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem57 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem57.BruteForce(intArray60, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem48.TwoPointer(intArray60, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem65 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem66 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem66.BruteForce(intArray69, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem65.Hashmap(intArray69, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem74.BruteForce(intArray77, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem65.TwoPointer(intArray77, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem48.Hashmap(intArray77, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem1.BruteForce(intArray77, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem0.TwoPointer(intArray77, (int) (byte) -1);
        java.lang.Class<?> wildcardClass88 = intArray77.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList7);
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intListList18);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList24);
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test2873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2873");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem11 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray18 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem11.TwoPointer(intArray18, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem10.TwoPointer(intArray18, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList24 = threeSumProblem0.Hashmap(intArray18, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem25 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem25.BruteForce(intArray28, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem31.BruteForce(intArray34, (int) '#');
        int[] intArray40 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem31.BruteForce(intArray40, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem43.BruteForce(intArray46, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem31.Hashmap(intArray46, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem52.BruteForce(intArray55, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem51.Hashmap(intArray55, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem60.BruteForce(intArray63, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem51.TwoPointer(intArray63, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem31.Hashmap(intArray63, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem25.TwoPointer(intArray63, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem0.TwoPointer(intArray63, (int) '4');
        java.lang.Class<?> wildcardClass74 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intListList24);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test2874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2874");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray29 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem20.BruteForce(intArray29, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem0.TwoPointer(intArray29, (int) ' ');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem34.Hashmap(intArray38, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem43.BruteForce(intArray46, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem34.TwoPointer(intArray46, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem52.BruteForce(intArray55, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem51.BruteForce(intArray55, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem34.TwoPointer(intArray55, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem62 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem63 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem63.BruteForce(intArray66, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem62.Hashmap(intArray66, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem34.BruteForce(intArray66, (int) (byte) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem0.BruteForce(intArray66, (int) (short) 100);
        java.lang.Class<?> wildcardClass75 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test2875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2875");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.BruteForce(intArray13, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        int[] intArray37 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray37, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.BruteForce(intArray37, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem43.BruteForce(intArray46, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem42.Hashmap(intArray46, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem0.Hashmap(intArray46, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray61 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem54.TwoPointer(intArray61, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem53.TwoPointer(intArray61, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem66 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray73 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem66.TwoPointer(intArray73, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem53.Hashmap(intArray73, (int) (byte) 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem0.TwoPointer(intArray73, (int) (short) 100);
        java.lang.Class<?> wildcardClass80 = intListList79.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test2876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2876");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        int[] intArray13 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem0.TwoPointer(intArray13, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem16 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem17.BruteForce(intArray20, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList24 = threeSumProblem16.BruteForce(intArray20, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem0.Hashmap(intArray20, 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray36 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem27.BruteForce(intArray36, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem39.BruteForce(intArray42, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem27.Hashmap(intArray42, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem47 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem47.BruteForce(intArray50, (int) '#');
        int[] intArray56 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem47.BruteForce(intArray56, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem27.TwoPointer(intArray56, (int) ' ');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem61 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem62 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem62.BruteForce(intArray65, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem61.Hashmap(intArray65, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem70 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem70.BruteForce(intArray73, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem61.TwoPointer(intArray73, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem27.BruteForce(intArray73, (int) 'a');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem80 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem81 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray84 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem81.BruteForce(intArray84, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem80.Hashmap(intArray84, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem27.Hashmap(intArray84, (int) (short) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem0.BruteForce(intArray84, (int) 'a');
        java.lang.Class<?> wildcardClass93 = intListList92.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intListList24);
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test2877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2877");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray9 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem6.BruteForce(intArray9, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList13 = threeSumProblem0.TwoPointer(intArray9, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem15 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray22 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList24 = threeSumProblem15.TwoPointer(intArray22, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem14.TwoPointer(intArray22, (int) (byte) 0);
        int[] intArray28 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem14.TwoPointer(intArray28, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem32 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem32.BruteForce(intArray35, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem31.Hashmap(intArray35, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem41.BruteForce(intArray44, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem40.Hashmap(intArray44, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem31.BruteForce(intArray44, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray59 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem52.TwoPointer(intArray59, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem51.TwoPointer(intArray59, (int) (byte) 0);
        int[] intArray68 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem51.Hashmap(intArray68, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem31.BruteForce(intArray68, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem14.Hashmap(intArray68, (int) 'a');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem75 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem76 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem76.BruteForce(intArray79, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem75.Hashmap(intArray79, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem14.TwoPointer(intArray79, 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem0.TwoPointer(intArray79, (int) (byte) 1);
        java.lang.Class<?> wildcardClass88 = intListList87.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intListList13);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList24);
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test2878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2878");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray9 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem6.BruteForce(intArray9, (int) '#');
        int[] intArray15 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem6.BruteForce(intArray15, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem6.Hashmap(intArray21, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray35 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem26.BruteForce(intArray35, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem6.TwoPointer(intArray35, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.TwoPointer(intArray35, (int) (short) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem43.BruteForce(intArray46, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem42.BruteForce(intArray46, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray60 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem51.BruteForce(intArray60, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem42.BruteForce(intArray60, (int) (short) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem65 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem66 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray73 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem66.TwoPointer(intArray73, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem65.TwoPointer(intArray73, (int) (byte) 0);
        int[] intArray79 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem65.TwoPointer(intArray79, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem42.BruteForce(intArray79, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem0.BruteForce(intArray79, (int) (short) 100);
        java.lang.Class<?> wildcardClass86 = intArray79.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0]");
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test2879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2879");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray14 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray14, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray26 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem17.BruteForce(intArray26, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem29.BruteForce(intArray32, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem17.Hashmap(intArray32, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray46 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem37.BruteForce(intArray46, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem17.TwoPointer(intArray46, (int) ' ');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem52.BruteForce(intArray55, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem51.Hashmap(intArray55, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem60.BruteForce(intArray63, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem51.TwoPointer(intArray63, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem17.TwoPointer(intArray63, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem0.Hashmap(intArray63, (int) 'a');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem72 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem73 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem73.BruteForce(intArray76, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem72.BruteForce(intArray76, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem0.BruteForce(intArray76, (int) 'a');
        java.lang.Class<?> wildcardClass83 = intArray76.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0]");
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test2880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2880");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem14.BruteForce(intArray17, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem13.Hashmap(intArray17, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem22 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem23 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray30 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem23.TwoPointer(intArray30, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem22.TwoPointer(intArray30, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem13.BruteForce(intArray30, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem0.BruteForce(intArray30, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem39.BruteForce(intArray42, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem45 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray54 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem45.BruteForce(intArray54, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem57 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem57.BruteForce(intArray60, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem45.Hashmap(intArray60, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem65 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem65.BruteForce(intArray68, (int) '#');
        int[] intArray74 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem65.BruteForce(intArray74, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem45.TwoPointer(intArray74, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem39.TwoPointer(intArray74, 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem0.BruteForce(intArray74, (int) (byte) 0);
        java.lang.Class<?> wildcardClass83 = intListList82.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test2881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2881");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem21.BruteForce(intArray24, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem20.Hashmap(intArray24, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem30.BruteForce(intArray33, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem29.Hashmap(intArray33, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.BruteForce(intArray33, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray48 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem41.TwoPointer(intArray48, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem40.TwoPointer(intArray48, (int) (byte) 0);
        int[] intArray57 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem40.Hashmap(intArray57, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem20.BruteForce(intArray57, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem0.Hashmap(intArray57, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem64 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem64.BruteForce(intArray67, (int) '#');
        int[] intArray73 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem64.BruteForce(intArray73, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem76 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem76.BruteForce(intArray79, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem64.Hashmap(intArray79, (int) (byte) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem0.BruteForce(intArray79, (-1));
        int[] intArray86 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem0.BruteForce(intArray86, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
    }

    @Test
    public void test2882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2882");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem21.BruteForce(intArray24, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem20.Hashmap(intArray24, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem29.BruteForce(intArray32, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem20.TwoPointer(intArray32, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem38 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem38.BruteForce(intArray41, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem37.BruteForce(intArray41, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem20.TwoPointer(intArray41, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem49.BruteForce(intArray52, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem48.Hashmap(intArray52, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem20.BruteForce(intArray52, (int) (byte) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem59.BruteForce(intArray62, (int) '#');
        int[] intArray68 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem59.BruteForce(intArray68, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem71 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem71.BruteForce(intArray74, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem59.Hashmap(intArray74, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem79 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray88 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem79.BruteForce(intArray88, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem59.TwoPointer(intArray88, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem20.TwoPointer(intArray88, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem0.TwoPointer(intArray88, 100);
        java.lang.Class<?> wildcardClass97 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(intListList96);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test2883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2883");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem2 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList7 = threeSumProblem2.BruteForce(intArray5, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem1.Hashmap(intArray5, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem11 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray14 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem11.BruteForce(intArray14, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList18 = threeSumProblem10.Hashmap(intArray14, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem19 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList24 = threeSumProblem19.BruteForce(intArray22, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem10.TwoPointer(intArray22, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem28 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem28.BruteForce(intArray31, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem27.Hashmap(intArray31, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem36.BruteForce(intArray39, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem27.TwoPointer(intArray39, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem10.Hashmap(intArray39, (int) 'a');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem47 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem47.BruteForce(intArray50, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem46.Hashmap(intArray50, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem55.BruteForce(intArray58, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem46.TwoPointer(intArray58, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem63 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem64 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem64.BruteForce(intArray67, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem63.Hashmap(intArray67, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem72 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem72.BruteForce(intArray75, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem63.TwoPointer(intArray75, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem46.Hashmap(intArray75, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem10.Hashmap(intArray75, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem1.TwoPointer(intArray75, (int) (byte) 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem0.TwoPointer(intArray75, (int) (byte) 10);
        int[] intArray88 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem0.Hashmap(intArray88, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList7);
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intListList18);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList24);
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intListList87);
    }

    @Test
    public void test2884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2884");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem11 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray18 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem11.TwoPointer(intArray18, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem10.TwoPointer(intArray18, (int) (byte) 0);
        int[] intArray27 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem10.Hashmap(intArray27, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem31.BruteForce(intArray34, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem30.Hashmap(intArray34, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem10.TwoPointer(intArray34, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem42.BruteForce(intArray45, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem41.Hashmap(intArray45, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem50 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem51.BruteForce(intArray54, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem50.Hashmap(intArray54, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem41.BruteForce(intArray54, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem10.BruteForce(intArray54, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem0.TwoPointer(intArray54, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem65 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray72 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem65.TwoPointer(intArray72, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem75 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem76 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray83 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem76.TwoPointer(intArray83, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem75.TwoPointer(intArray83, (int) (byte) 0);
        int[] intArray92 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem75.Hashmap(intArray92, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem65.BruteForce(intArray92, (int) (byte) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList98 = threeSumProblem0.BruteForce(intArray92, 0);
        java.lang.Class<?> wildcardClass99 = intListList98.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(intListList96);
        org.junit.Assert.assertNotNull(intListList98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test2885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2885");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        int[] intArray13 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem0.TwoPointer(intArray13, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem16 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray25 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem16.BruteForce(intArray25, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem28 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem28.BruteForce(intArray31, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem16.Hashmap(intArray31, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray45 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem36.BruteForce(intArray45, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem16.BruteForce(intArray45, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem50 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray57 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem50.TwoPointer(intArray57, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem16.TwoPointer(intArray57, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem0.BruteForce(intArray57, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem64 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem65 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem65.BruteForce(intArray68, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem64.Hashmap(intArray68, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem73 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem74.BruteForce(intArray77, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem73.Hashmap(intArray77, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem64.BruteForce(intArray77, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem0.TwoPointer(intArray77, (int) (byte) 10);
        int[] intArray86 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem0.TwoPointer(intArray86, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
    }

    @Test
    public void test2886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2886");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.BruteForce(intArray4, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem10.TwoPointer(intArray17, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem9.TwoPointer(intArray17, (int) (byte) 0);
        int[] intArray23 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem9.TwoPointer(intArray23, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem27.BruteForce(intArray30, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem26.Hashmap(intArray30, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem36.BruteForce(intArray39, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem35.Hashmap(intArray39, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem26.BruteForce(intArray39, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem47 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray54 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem47.TwoPointer(intArray54, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem46.TwoPointer(intArray54, (int) (byte) 0);
        int[] intArray63 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem46.Hashmap(intArray63, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem26.BruteForce(intArray63, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem9.Hashmap(intArray63, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem0.TwoPointer(intArray63, (int) (short) 10);
        int[] intArray72 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem0.Hashmap(intArray72, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
    }

    @Test
    public void test2887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2887");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem21.BruteForce(intArray24, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem20.Hashmap(intArray24, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem0.TwoPointer(intArray24, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem32 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem33 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray40 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem33.TwoPointer(intArray40, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem32.TwoPointer(intArray40, (int) (byte) 0);
        int[] intArray46 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem32.TwoPointer(intArray46, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem31.TwoPointer(intArray46, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem0.TwoPointer(intArray46, (int) (short) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem54.BruteForce(intArray57, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem53.Hashmap(intArray57, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem62 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem62.BruteForce(intArray65, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem53.TwoPointer(intArray65, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem70 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem71 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem71.BruteForce(intArray74, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem70.BruteForce(intArray74, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem53.TwoPointer(intArray74, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem81 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem82 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray85 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem82.BruteForce(intArray85, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem81.Hashmap(intArray85, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem53.BruteForce(intArray85, (int) (byte) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem0.BruteForce(intArray85, (int) (byte) 0);
        int[] intArray94 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem0.TwoPointer(intArray94, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(intListList93);
    }

    @Test
    public void test2888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2888");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.BruteForce(intArray13, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem21.BruteForce(intArray24, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem20.Hashmap(intArray24, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem30.BruteForce(intArray33, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem29.Hashmap(intArray33, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.BruteForce(intArray33, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray48 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem41.TwoPointer(intArray48, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem40.TwoPointer(intArray48, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray60 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem53.TwoPointer(intArray60, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem40.Hashmap(intArray60, (int) (byte) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem65 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray72 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem65.TwoPointer(intArray72, (int) (short) 1);
        int[] intArray78 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem65.TwoPointer(intArray78, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem81 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem82 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray85 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem82.BruteForce(intArray85, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem81.BruteForce(intArray85, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem65.Hashmap(intArray85, 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem40.Hashmap(intArray85, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList95 = threeSumProblem20.BruteForce(intArray85, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList97 = threeSumProblem0.TwoPointer(intArray85, (int) (short) 10);
        java.lang.Class<?> wildcardClass98 = intArray85.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(intListList93);
        org.junit.Assert.assertNotNull(intListList95);
        org.junit.Assert.assertNotNull(intListList97);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test2889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2889");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray29 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem20.BruteForce(intArray29, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem0.TwoPointer(intArray29, (int) ' ');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem34.Hashmap(intArray38, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem44 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray51 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem44.TwoPointer(intArray51, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem43.TwoPointer(intArray51, (int) (byte) 0);
        int[] intArray60 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem43.Hashmap(intArray60, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem63 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem64 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray71 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem64.TwoPointer(intArray71, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem63.TwoPointer(intArray71, (int) (byte) 0);
        int[] intArray80 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem63.Hashmap(intArray80, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem43.Hashmap(intArray80, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem34.Hashmap(intArray80, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem0.BruteForce(intArray80, (int) (short) 10);
        java.lang.Class<?> wildcardClass89 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test2890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2890");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.BruteForce(intArray13, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem33 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray40 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem33.TwoPointer(intArray40, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem20.Hashmap(intArray40, (int) (byte) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem45 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray52 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem45.TwoPointer(intArray52, (int) (short) 1);
        int[] intArray58 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem45.TwoPointer(intArray58, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem61 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem62 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem62.BruteForce(intArray65, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem61.BruteForce(intArray65, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem45.Hashmap(intArray65, 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem20.Hashmap(intArray65, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem0.BruteForce(intArray65, (int) (byte) -1);
        java.lang.Class<?> wildcardClass76 = intListList75.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test2891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2891");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem17.Hashmap(intArray21, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem27.BruteForce(intArray30, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem26.Hashmap(intArray30, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem26.TwoPointer(intArray38, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem17.Hashmap(intArray38, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem45 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem46.BruteForce(intArray49, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem45.Hashmap(intArray49, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem55.BruteForce(intArray58, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem54.Hashmap(intArray58, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem63 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem63.BruteForce(intArray66, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem54.TwoPointer(intArray66, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem45.Hashmap(intArray66, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem17.TwoPointer(intArray66, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem0.Hashmap(intArray66, (int) (byte) 100);
        int[] intArray77 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem0.TwoPointer(intArray77, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intListList76);
    }

    @Test
    public void test2892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2892");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray10 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem1.BruteForce(intArray10, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray16 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList18 = threeSumProblem13.BruteForce(intArray16, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem1.Hashmap(intArray16, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem22 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem22.BruteForce(intArray25, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem21.Hashmap(intArray25, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem1.TwoPointer(intArray25, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem32 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem32.BruteForce(intArray35, (int) '#');
        int[] intArray41 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem32.BruteForce(intArray41, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem44 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem44.BruteForce(intArray47, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem32.Hashmap(intArray47, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem53.BruteForce(intArray56, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem52.Hashmap(intArray56, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem61 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem61.BruteForce(intArray64, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem52.TwoPointer(intArray64, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem32.Hashmap(intArray64, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem1.Hashmap(intArray64, 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem0.BruteForce(intArray64, (int) (byte) 1);
        java.lang.Class<?> wildcardClass75 = intArray64.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList18);
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test2893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2893");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem17.Hashmap(intArray21, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem26.BruteForce(intArray29, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem17.TwoPointer(intArray29, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem34.Hashmap(intArray38, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem43.BruteForce(intArray46, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem34.TwoPointer(intArray46, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem17.Hashmap(intArray46, (int) 'a');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray62 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem53.BruteForce(intArray62, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem65 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem65.BruteForce(intArray68, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem53.Hashmap(intArray68, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem73 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray82 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem73.BruteForce(intArray82, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem53.TwoPointer(intArray82, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem17.Hashmap(intArray82, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem0.TwoPointer(intArray82, (-1));
        int[] intArray91 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem0.Hashmap(intArray91, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intListList90);
    }

    @Test
    public void test2894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2894");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray9 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem6.BruteForce(intArray9, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList13 = threeSumProblem0.TwoPointer(intArray9, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem15 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem15.BruteForce(intArray18, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem14.Hashmap(intArray18, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem23 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray26 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem23.BruteForce(intArray26, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem14.TwoPointer(intArray26, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem0.BruteForce(intArray26, (int) ' ');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem33 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem34.BruteForce(intArray37, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem33.Hashmap(intArray37, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem43.BruteForce(intArray46, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem42.Hashmap(intArray46, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem51.BruteForce(intArray54, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem42.TwoPointer(intArray54, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem33.Hashmap(intArray54, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem61 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem62 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem62.BruteForce(intArray65, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem61.Hashmap(intArray65, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem70 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem71 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem71.BruteForce(intArray74, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem70.Hashmap(intArray74, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem79 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem79.BruteForce(intArray82, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem70.TwoPointer(intArray82, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem61.Hashmap(intArray82, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem33.TwoPointer(intArray82, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem0.Hashmap(intArray82, (int) (byte) 1);
        java.lang.Class<?> wildcardClass93 = intArray82.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intListList13);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test2895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2895");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem2 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray9 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem2.TwoPointer(intArray9, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList13 = threeSumProblem1.TwoPointer(intArray9, (int) (byte) 0);
        int[] intArray15 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem1.TwoPointer(intArray15, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.TwoPointer(intArray15, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem21.BruteForce(intArray24, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem20.Hashmap(intArray24, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem30.BruteForce(intArray33, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem29.Hashmap(intArray33, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.BruteForce(intArray33, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray48 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem41.TwoPointer(intArray48, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem40.TwoPointer(intArray48, (int) (byte) 0);
        int[] intArray57 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem40.Hashmap(intArray57, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem20.BruteForce(intArray57, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem62 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem63 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem63.BruteForce(intArray66, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem62.Hashmap(intArray66, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem20.Hashmap(intArray66, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem73 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray82 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem73.BruteForce(intArray82, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem20.Hashmap(intArray82, (int) (byte) 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem0.Hashmap(intArray82, (int) '4');
        java.lang.Class<?> wildcardClass89 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intListList13);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test2896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2896");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.BruteForce(intArray13, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        int[] intArray37 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray37, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.BruteForce(intArray37, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem43.BruteForce(intArray46, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem42.Hashmap(intArray46, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem52.BruteForce(intArray55, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem51.Hashmap(intArray55, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem42.BruteForce(intArray55, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem0.TwoPointer(intArray55, (int) ' ');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem64 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem64.BruteForce(intArray67, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem70 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem71 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem71.BruteForce(intArray74, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem70.Hashmap(intArray74, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem79 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem80 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray87 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem80.TwoPointer(intArray87, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem79.TwoPointer(intArray87, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem70.BruteForce(intArray87, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList95 = threeSumProblem64.Hashmap(intArray87, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList97 = threeSumProblem0.Hashmap(intArray87, 1);
        java.lang.Class<?> wildcardClass98 = intListList97.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(intListList93);
        org.junit.Assert.assertNotNull(intListList95);
        org.junit.Assert.assertNotNull(intListList97);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test2897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2897");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray29 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem20.BruteForce(intArray29, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem0.TwoPointer(intArray29, (int) ' ');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem34.Hashmap(intArray38, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem44 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray51 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem44.TwoPointer(intArray51, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem43.TwoPointer(intArray51, (int) (byte) 0);
        int[] intArray60 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem43.Hashmap(intArray60, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem63 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem64 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray71 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem64.TwoPointer(intArray71, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem63.TwoPointer(intArray71, (int) (byte) 0);
        int[] intArray80 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem63.Hashmap(intArray80, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem43.Hashmap(intArray80, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem34.Hashmap(intArray80, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem0.BruteForce(intArray80, (int) (short) 10);
        java.lang.Class<?> wildcardClass89 = intArray80.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test2898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2898");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem11 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray18 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem11.TwoPointer(intArray18, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem10.TwoPointer(intArray18, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList24 = threeSumProblem0.Hashmap(intArray18, (int) (byte) 100);
        int[] intArray25 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem0.Hashmap(intArray25, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intListList24);
    }

    @Test
    public void test2899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2899");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem14.TwoPointer(intArray21, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem13.TwoPointer(intArray21, (int) (byte) 0);
        int[] intArray30 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem13.Hashmap(intArray30, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem0.Hashmap(intArray30, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem0.TwoPointer(intArray38, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray52 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem43.BruteForce(intArray52, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem55.BruteForce(intArray58, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem43.Hashmap(intArray58, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem63 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray72 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem63.BruteForce(intArray72, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem43.BruteForce(intArray72, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem77 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray84 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem77.TwoPointer(intArray84, (int) (short) 1);
        int[] intArray90 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem77.TwoPointer(intArray90, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem43.Hashmap(intArray90, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem0.Hashmap(intArray90, (int) (byte) -1);
        java.lang.Class<?> wildcardClass97 = intListList96.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(intListList96);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test2900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2900");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray20 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem13.TwoPointer(intArray20, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList24 = threeSumProblem0.Hashmap(intArray20, (int) (byte) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem25 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray34 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem25.BruteForce(intArray34, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem37.BruteForce(intArray40, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem25.Hashmap(intArray40, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem45 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem46.BruteForce(intArray49, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem45.Hashmap(intArray49, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem25.TwoPointer(intArray49, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem0.BruteForce(intArray49, 1);
        int[] intArray58 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem0.Hashmap(intArray58, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intListList24);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intListList57);
    }

    @Test
    public void test2901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2901");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem14.TwoPointer(intArray21, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem13.TwoPointer(intArray21, (int) (byte) 0);
        int[] intArray27 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem13.TwoPointer(intArray27, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem31.TwoPointer(intArray38, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem30.TwoPointer(intArray38, (int) (byte) 0);
        int[] intArray47 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem30.Hashmap(intArray47, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem13.TwoPointer(intArray47, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray61 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem52.BruteForce(intArray61, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem64 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem64.BruteForce(intArray67, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem52.Hashmap(intArray67, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem72 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem73 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem73.BruteForce(intArray76, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem72.Hashmap(intArray76, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem81 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray84 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem81.BruteForce(intArray84, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem72.TwoPointer(intArray84, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem52.Hashmap(intArray84, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem13.Hashmap(intArray84, (int) (byte) 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem0.BruteForce(intArray84, (int) 'a');
        java.lang.Class<?> wildcardClass95 = intArray84.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0]");
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test2902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2902");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem21.BruteForce(intArray24, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem20.Hashmap(intArray24, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem30.BruteForce(intArray33, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem29.Hashmap(intArray33, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.BruteForce(intArray33, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.Hashmap(intArray33, (-1));
        int[] intArray42 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem0.Hashmap(intArray42, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
    }

    @Test
    public void test2903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2903");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        int[] intArray13 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem0.TwoPointer(intArray13, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem16 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem16.TwoPointer(intArray23, (int) (short) 1);
        int[] intArray29 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem16.TwoPointer(intArray29, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem32 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem32.BruteForce(intArray35, (int) '#');
        int[] intArray41 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem32.BruteForce(intArray41, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem44 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem44.BruteForce(intArray47, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem32.Hashmap(intArray47, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray61 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem52.BruteForce(intArray61, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem32.BruteForce(intArray61, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem66 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray73 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem66.TwoPointer(intArray73, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem32.TwoPointer(intArray73, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem16.BruteForce(intArray73, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem0.Hashmap(intArray73, (int) '#');
        java.lang.Class<?> wildcardClass82 = intArray73.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test2904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2904");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        int[] intArray37 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray37, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.Hashmap(intArray37, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem42.BruteForce(intArray45, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem0.Hashmap(intArray45, (int) (byte) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem50 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem51.BruteForce(intArray54, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem50.Hashmap(intArray54, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem0.Hashmap(intArray54, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem61 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray68 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem61.TwoPointer(intArray68, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem0.BruteForce(intArray68, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem73 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray80 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem73.TwoPointer(intArray80, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem0.BruteForce(intArray80, (int) '#');
        java.lang.Class<?> wildcardClass85 = intListList84.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test2905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2905");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray16 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList18 = threeSumProblem13.BruteForce(intArray16, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem12.BruteForce(intArray16, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray30 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem21.BruteForce(intArray30, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem12.BruteForce(intArray30, (int) (short) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray46 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem37.BruteForce(intArray46, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem49.BruteForce(intArray52, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem37.Hashmap(intArray52, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem57 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem58 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem58.BruteForce(intArray61, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem57.Hashmap(intArray61, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem66 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem67 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray74 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem67.TwoPointer(intArray74, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem66.TwoPointer(intArray74, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem57.BruteForce(intArray74, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem37.TwoPointer(intArray74, (int) (byte) 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem0.Hashmap(intArray74, (int) (byte) 1);
        java.lang.Class<?> wildcardClass85 = intListList84.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList18);
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test2906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2906");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray29 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem20.BruteForce(intArray29, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem0.BruteForce(intArray29, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray41 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem34.TwoPointer(intArray41, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem0.TwoPointer(intArray41, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray53 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem46.TwoPointer(intArray53, (int) (short) 1);
        int[] intArray59 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem46.TwoPointer(intArray59, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem0.Hashmap(intArray59, (int) (short) 1);
        int[] intArray64 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem0.TwoPointer(intArray64, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
    }

    @Test
    public void test2907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2907");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.BruteForce(intArray4, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray18 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem9.BruteForce(intArray18, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem0.BruteForce(intArray18, (int) (short) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem23 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem24 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem24.BruteForce(intArray27, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem23.Hashmap(intArray27, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem32 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem33 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem33.BruteForce(intArray36, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem32.Hashmap(intArray36, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem42.BruteForce(intArray45, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem41.Hashmap(intArray45, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem32.BruteForce(intArray45, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray60 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem53.TwoPointer(intArray60, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem52.TwoPointer(intArray60, (int) (byte) 0);
        int[] intArray69 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem52.Hashmap(intArray69, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem32.BruteForce(intArray69, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem23.TwoPointer(intArray69, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem0.TwoPointer(intArray69, (int) (short) 10);
        java.lang.Class<?> wildcardClass78 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test2908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2908");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        int[] intArray37 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray37, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.Hashmap(intArray37, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem42.BruteForce(intArray45, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem48.BruteForce(intArray51, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem42.TwoPointer(intArray51, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem0.BruteForce(intArray51, (int) (byte) 100);
        int[] intArray63 = new int[] { '#', 10, (byte) 0, 10, ' ' };
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem0.Hashmap(intArray63, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem66 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem67 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem67.BruteForce(intArray70, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem66.BruteForce(intArray70, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem0.TwoPointer(intArray70, 10);
        java.lang.Class<?> wildcardClass77 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 10, 10, 32, 35]");
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test2909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2909");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem2 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray9 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem2.TwoPointer(intArray9, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList13 = threeSumProblem1.TwoPointer(intArray9, (int) (byte) 0);
        int[] intArray15 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem1.TwoPointer(intArray15, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.TwoPointer(intArray15, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem21.BruteForce(intArray24, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem20.Hashmap(intArray24, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem30.BruteForce(intArray33, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem29.Hashmap(intArray33, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.BruteForce(intArray33, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray48 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem41.TwoPointer(intArray48, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem40.TwoPointer(intArray48, (int) (byte) 0);
        int[] intArray57 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem40.Hashmap(intArray57, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem20.BruteForce(intArray57, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem62 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem63 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem63.BruteForce(intArray66, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem62.Hashmap(intArray66, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem20.Hashmap(intArray66, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem73 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray82 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem73.BruteForce(intArray82, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem20.Hashmap(intArray82, (int) (byte) 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem0.Hashmap(intArray82, (int) '4');
        java.lang.Class<?> wildcardClass89 = intArray82.getClass();
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intListList13);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test2910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2910");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem16 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem16.BruteForce(intArray19, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem10.TwoPointer(intArray19, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem0.BruteForce(intArray19, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray34 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem27.TwoPointer(intArray34, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem26.TwoPointer(intArray34, (int) (byte) 0);
        int[] intArray40 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem26.TwoPointer(intArray40, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem44 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray51 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem44.TwoPointer(intArray51, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem43.TwoPointer(intArray51, (int) (byte) 0);
        int[] intArray60 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem43.Hashmap(intArray60, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem26.TwoPointer(intArray60, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem0.BruteForce(intArray60, (int) (byte) 1);
        java.lang.Class<?> wildcardClass67 = intListList66.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0]");
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test2911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2911");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        int[] intArray13 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem0.TwoPointer(intArray13, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem16 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem17.TwoPointer(intArray24, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem16.TwoPointer(intArray24, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem0.BruteForce(intArray24, (int) (short) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem32 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem33 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray40 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem33.TwoPointer(intArray40, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem32.TwoPointer(intArray40, (int) (byte) 0);
        int[] intArray46 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem32.TwoPointer(intArray46, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem31.TwoPointer(intArray46, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem0.TwoPointer(intArray46, (int) (short) 0);
        java.lang.Class<?> wildcardClass53 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test2912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2912");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem9.TwoPointer(intArray21, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem0.Hashmap(intArray21, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem28 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem28.BruteForce(intArray31, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem0.TwoPointer(intArray31, (int) (short) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem36.BruteForce(intArray39, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray49 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem42.TwoPointer(intArray49, (int) (short) 1);
        int[] intArray55 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem42.TwoPointer(intArray55, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem58 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray66 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem59.TwoPointer(intArray66, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem58.TwoPointer(intArray66, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem42.BruteForce(intArray66, (int) (short) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem36.Hashmap(intArray66, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem75 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem76 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray83 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem76.TwoPointer(intArray83, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem75.TwoPointer(intArray83, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem36.BruteForce(intArray83, (int) (byte) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem0.TwoPointer(intArray83, 1);
        java.lang.Class<?> wildcardClass92 = intListList91.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test2913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2913");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem2 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList7 = threeSumProblem2.BruteForce(intArray5, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem1.Hashmap(intArray5, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem1.TwoPointer(intArray13, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem19 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList24 = threeSumProblem19.BruteForce(intArray22, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem18.Hashmap(intArray22, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem27.BruteForce(intArray30, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem18.TwoPointer(intArray30, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem1.Hashmap(intArray30, (int) 'a');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem38 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem38.BruteForce(intArray41, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem37.Hashmap(intArray41, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem46.BruteForce(intArray49, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem37.TwoPointer(intArray49, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem55.BruteForce(intArray58, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem54.Hashmap(intArray58, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem63 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem63.BruteForce(intArray66, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem54.TwoPointer(intArray66, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem37.Hashmap(intArray66, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem1.Hashmap(intArray66, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem0.TwoPointer(intArray66, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem77 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem78 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray81 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem78.BruteForce(intArray81, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem77.Hashmap(intArray81, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem0.TwoPointer(intArray81, (int) '4');
        java.lang.Class<?> wildcardClass88 = intArray81.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList7);
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList24);
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test2914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2914");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray14 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray14, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray25 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem18.TwoPointer(intArray25, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem17.TwoPointer(intArray25, (int) (byte) 0);
        int[] intArray34 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem17.Hashmap(intArray34, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem0.TwoPointer(intArray34, 0);
        int[] intArray39 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.BruteForce(intArray39, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0]");
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
    }

    @Test
    public void test2915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2915");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray14 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray14, (int) (byte) 0);
        int[] intArray17 = new int[] {};
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.BruteForce(intArray17, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray27 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem20.TwoPointer(intArray27, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem30.BruteForce(intArray33, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem36.BruteForce(intArray39, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem30.TwoPointer(intArray39, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem44 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem44.BruteForce(intArray47, (int) '#');
        int[] intArray53 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem44.BruteForce(intArray53, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem30.BruteForce(intArray53, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem20.BruteForce(intArray53, 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem0.BruteForce(intArray53, (int) (short) 10);
        java.lang.Class<?> wildcardClass62 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0]");
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test2916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2916");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem9.TwoPointer(intArray21, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem0.Hashmap(intArray21, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem28 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem28.BruteForce(intArray31, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem0.TwoPointer(intArray31, (int) (short) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem37.BruteForce(intArray40, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem36.Hashmap(intArray40, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem45 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem46.BruteForce(intArray49, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem45.Hashmap(intArray49, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem54.BruteForce(intArray57, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem45.TwoPointer(intArray57, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem36.Hashmap(intArray57, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem64 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem64.BruteForce(intArray67, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem36.TwoPointer(intArray67, (int) (short) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem0.BruteForce(intArray67, (int) (short) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem75 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem75.BruteForce(intArray78, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem74.BruteForce(intArray78, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem0.TwoPointer(intArray78, (int) '#');
        java.lang.Class<?> wildcardClass85 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test2917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2917");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem16 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem16.BruteForce(intArray19, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem10.TwoPointer(intArray19, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem0.BruteForce(intArray19, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray35 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem26.BruteForce(intArray35, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem0.TwoPointer(intArray35, (int) ' ');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray48 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem41.TwoPointer(intArray48, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem40.TwoPointer(intArray48, (int) (byte) 0);
        int[] intArray57 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem40.Hashmap(intArray57, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem61 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem61.BruteForce(intArray64, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem60.Hashmap(intArray64, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem40.TwoPointer(intArray64, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem71 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem72 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem72.BruteForce(intArray75, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem71.Hashmap(intArray75, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem80 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem81 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray84 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem81.BruteForce(intArray84, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem80.Hashmap(intArray84, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem71.BruteForce(intArray84, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem40.BruteForce(intArray84, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem0.BruteForce(intArray84, (int) 'a');
        int[] intArray95 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList97 = threeSumProblem0.Hashmap(intArray95, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(intListList94);
    }

    @Test
    public void test2918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2918");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray29 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem20.BruteForce(intArray29, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem0.BruteForce(intArray29, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem34.BruteForce(intArray37, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem40.BruteForce(intArray43, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem34.TwoPointer(intArray43, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem49.BruteForce(intArray52, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem48.Hashmap(intArray52, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem57 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem57.BruteForce(intArray60, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem48.TwoPointer(intArray60, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem34.BruteForce(intArray60, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem0.BruteForce(intArray60, (int) (byte) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem69 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem70 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem70.BruteForce(intArray73, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem69.BruteForce(intArray73, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem78 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray81 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem78.BruteForce(intArray81, (int) '#');
        int[] intArray87 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem78.BruteForce(intArray87, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem69.BruteForce(intArray87, (int) (short) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem0.Hashmap(intArray87, (int) (short) 1);
        java.lang.Class<?> wildcardClass94 = intListList93.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(intListList93);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test2919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2919");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray9 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem6.BruteForce(intArray9, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList13 = threeSumProblem0.TwoPointer(intArray9, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem15 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem15.BruteForce(intArray18, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem14.Hashmap(intArray18, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem23 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray26 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem23.BruteForce(intArray26, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem14.TwoPointer(intArray26, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem32 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem32.BruteForce(intArray35, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem31.BruteForce(intArray35, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem14.TwoPointer(intArray35, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem43.BruteForce(intArray46, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem42.Hashmap(intArray46, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem14.BruteForce(intArray46, (int) (byte) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem53.BruteForce(intArray56, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem14.TwoPointer(intArray56, (int) (byte) 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem0.Hashmap(intArray56, (int) (byte) 0);
        java.lang.Class<?> wildcardClass63 = intListList62.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intListList13);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test2920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2920");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem17.BruteForce(intArray21, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem0.TwoPointer(intArray21, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem28 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem29.BruteForce(intArray32, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem28.Hashmap(intArray32, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem0.BruteForce(intArray32, (int) (byte) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem40.BruteForce(intArray43, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem39.BruteForce(intArray43, (int) (short) 1);
        int[] intArray49 = new int[] { '#' };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem39.TwoPointer(intArray49, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem0.TwoPointer(intArray49, (int) (short) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray62 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem55.TwoPointer(intArray62, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem54.TwoPointer(intArray62, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem67 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem68 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem68.BruteForce(intArray71, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem67.Hashmap(intArray71, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem76 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem77 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray84 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem77.TwoPointer(intArray84, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem76.TwoPointer(intArray84, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem67.BruteForce(intArray84, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem54.BruteForce(intArray84, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem0.Hashmap(intArray84, (int) (short) 0);
        java.lang.Class<?> wildcardClass95 = intArray84.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[35]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test2921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2921");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem15 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem16 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem16.TwoPointer(intArray23, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem15.TwoPointer(intArray23, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem28 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray36 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem29.TwoPointer(intArray36, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem28.TwoPointer(intArray36, (int) (byte) 0);
        int[] intArray45 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem28.Hashmap(intArray45, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem15.Hashmap(intArray45, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem50 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem50.BruteForce(intArray53, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem56.BruteForce(intArray59, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem50.TwoPointer(intArray59, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem64 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem64.BruteForce(intArray67, (int) '#');
        int[] intArray73 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem64.BruteForce(intArray73, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem50.BruteForce(intArray73, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem15.TwoPointer(intArray73, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem9.TwoPointer(intArray73, (int) (byte) 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem0.TwoPointer(intArray73, (int) (short) -1);
        java.lang.Class<?> wildcardClass84 = intListList83.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test2922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2922");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem21.BruteForce(intArray24, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem20.Hashmap(intArray24, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem30.BruteForce(intArray33, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem29.Hashmap(intArray33, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.BruteForce(intArray33, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.Hashmap(intArray33, (-1));
        int[] intArray45 = new int[] { (short) 10, (short) 100, (byte) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem0.BruteForce(intArray45, (int) ' ');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray56 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem49.TwoPointer(intArray56, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem48.TwoPointer(intArray56, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem61 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem62 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray69 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem62.TwoPointer(intArray69, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem61.TwoPointer(intArray69, (int) (byte) 0);
        int[] intArray78 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem61.Hashmap(intArray78, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem48.Hashmap(intArray78, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem0.Hashmap(intArray78, (int) (byte) -1);
        java.lang.Class<?> wildcardClass85 = intListList84.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[10, 100, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test2923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2923");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        int[] intArray13 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem0.TwoPointer(intArray13, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem16 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem17.BruteForce(intArray20, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList24 = threeSumProblem16.BruteForce(intArray20, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem0.Hashmap(intArray20, 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray36 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem27.BruteForce(intArray36, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem39.BruteForce(intArray42, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem27.Hashmap(intArray42, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem47 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem47.BruteForce(intArray50, (int) '#');
        int[] intArray56 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem47.BruteForce(intArray56, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem27.TwoPointer(intArray56, (int) ' ');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem61 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray70 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem61.BruteForce(intArray70, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem27.BruteForce(intArray70, (int) (short) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem0.TwoPointer(intArray70, (int) 'a');
        java.lang.Class<?> wildcardClass77 = intListList76.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intListList24);
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test2924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2924");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem9.TwoPointer(intArray21, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem0.Hashmap(intArray21, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem28 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem29.BruteForce(intArray32, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem28.Hashmap(intArray32, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem37.BruteForce(intArray40, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem28.TwoPointer(intArray40, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem0.TwoPointer(intArray40, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem47 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem48.BruteForce(intArray51, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem47.BruteForce(intArray51, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem0.Hashmap(intArray51, (int) (short) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem58 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem59.BruteForce(intArray62, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem58.BruteForce(intArray62, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem0.TwoPointer(intArray62, (int) '#');
        java.lang.Class<?> wildcardClass69 = intListList68.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test2925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2925");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem6.TwoPointer(intArray13, (int) (short) 1);
        int[] intArray19 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem6.TwoPointer(intArray19, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem22 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem23 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray30 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem23.TwoPointer(intArray30, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem22.TwoPointer(intArray30, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem6.BruteForce(intArray30, (int) (short) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem0.Hashmap(intArray30, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem39.BruteForce(intArray42, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem45 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem45.BruteForce(intArray48, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem39.TwoPointer(intArray48, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem54.BruteForce(intArray57, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem53.Hashmap(intArray57, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem62 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem62.BruteForce(intArray65, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem53.TwoPointer(intArray65, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem39.BruteForce(intArray65, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem0.Hashmap(intArray65, (int) 'a');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem75 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem75.BruteForce(intArray78, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem74.Hashmap(intArray78, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem83 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray86 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem83.BruteForce(intArray86, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem74.BruteForce(intArray86, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem0.Hashmap(intArray86, (int) (byte) 100);
        java.lang.Class<?> wildcardClass93 = intListList92.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test2926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2926");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem11 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray18 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem11.TwoPointer(intArray18, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem10.TwoPointer(intArray18, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList24 = threeSumProblem0.Hashmap(intArray18, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem25 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray32 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem25.TwoPointer(intArray32, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray43 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem36.TwoPointer(intArray43, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem35.TwoPointer(intArray43, (int) (byte) 0);
        int[] intArray52 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem35.Hashmap(intArray52, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem56.BruteForce(intArray59, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem55.Hashmap(intArray59, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem64 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem65 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem65.BruteForce(intArray68, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem64.Hashmap(intArray68, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem55.BruteForce(intArray68, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem35.Hashmap(intArray68, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem25.TwoPointer(intArray68, (int) (short) 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem0.Hashmap(intArray68, (int) (short) 1);
        java.lang.Class<?> wildcardClass81 = intArray68.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intListList24);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test2927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2927");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.BruteForce(intArray4, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem19 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList24 = threeSumProblem19.BruteForce(intArray22, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem18.Hashmap(intArray22, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem27.BruteForce(intArray30, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem18.TwoPointer(intArray30, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem9.Hashmap(intArray30, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem38 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem38.BruteForce(intArray41, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem37.Hashmap(intArray41, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem46.BruteForce(intArray49, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem37.TwoPointer(intArray49, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem9.TwoPointer(intArray49, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem0.TwoPointer(intArray49, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem58 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem58.BruteForce(intArray61, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem64 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem64.BruteForce(intArray67, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem58.TwoPointer(intArray67, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem72 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem73 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem73.BruteForce(intArray76, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem72.Hashmap(intArray76, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem81 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem82 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray89 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem82.TwoPointer(intArray89, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem81.TwoPointer(intArray89, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList95 = threeSumProblem72.BruteForce(intArray89, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList97 = threeSumProblem58.TwoPointer(intArray89, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList99 = threeSumProblem0.TwoPointer(intArray89, 0);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList24);
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(intListList93);
        org.junit.Assert.assertNotNull(intListList95);
        org.junit.Assert.assertNotNull(intListList97);
        org.junit.Assert.assertNotNull(intListList99);
    }

    @Test
    public void test2928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2928");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem7 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem7.BruteForce(intArray10, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem6.Hashmap(intArray10, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem15 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem16 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem16.BruteForce(intArray19, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem15.Hashmap(intArray19, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem24 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem24.BruteForce(intArray27, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem15.TwoPointer(intArray27, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem6.Hashmap(intArray27, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem34.Hashmap(intArray38, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem44 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem44.BruteForce(intArray47, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem43.Hashmap(intArray47, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem52.BruteForce(intArray55, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem43.TwoPointer(intArray55, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem34.Hashmap(intArray55, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem6.TwoPointer(intArray55, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem64 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem65 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem65.BruteForce(intArray68, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem64.BruteForce(intArray68, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem73 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray82 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem73.BruteForce(intArray82, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem64.BruteForce(intArray82, (int) (short) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem6.Hashmap(intArray82, (int) (byte) 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem0.TwoPointer(intArray82, (-1));
        java.lang.Class<?> wildcardClass91 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test2929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2929");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray29 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem20.BruteForce(intArray29, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem0.BruteForce(intArray29, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray43 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem34.BruteForce(intArray43, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem46.BruteForce(intArray49, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem34.Hashmap(intArray49, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray63 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem54.BruteForce(intArray63, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem34.BruteForce(intArray63, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem0.BruteForce(intArray63, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem70 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem71 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray78 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem71.TwoPointer(intArray78, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem70.TwoPointer(intArray78, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem83 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray90 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem83.TwoPointer(intArray90, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem70.Hashmap(intArray90, (int) (byte) 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem0.Hashmap(intArray90, 100);
        java.lang.Class<?> wildcardClass97 = intListList96.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(intListList96);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test2930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2930");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem21.BruteForce(intArray24, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem20.Hashmap(intArray24, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem29.BruteForce(intArray32, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem20.TwoPointer(intArray32, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem0.Hashmap(intArray32, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem40.BruteForce(intArray43, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem39.Hashmap(intArray43, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem49.BruteForce(intArray52, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem48.Hashmap(intArray52, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem39.BruteForce(intArray52, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray67 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem60.TwoPointer(intArray67, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem59.TwoPointer(intArray67, (int) (byte) 0);
        int[] intArray76 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem59.Hashmap(intArray76, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem39.BruteForce(intArray76, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem0.TwoPointer(intArray76, (int) (byte) 0);
        java.lang.Class<?> wildcardClass83 = intArray76.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test2931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2931");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem7 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem7.BruteForce(intArray10, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem6.Hashmap(intArray10, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem15 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem15.BruteForce(intArray18, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem6.TwoPointer(intArray18, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem23 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem24 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem24.BruteForce(intArray27, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem23.BruteForce(intArray27, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem6.TwoPointer(intArray27, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem34.Hashmap(intArray38, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem44 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem44.BruteForce(intArray47, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem43.Hashmap(intArray47, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem34.BruteForce(intArray47, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray62 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem55.TwoPointer(intArray62, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem54.TwoPointer(intArray62, (int) (byte) 0);
        int[] intArray71 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem54.Hashmap(intArray71, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem34.BruteForce(intArray71, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem76 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem76.BruteForce(intArray79, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem34.Hashmap(intArray79, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem84 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray87 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem84.BruteForce(intArray87, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem34.TwoPointer(intArray87, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem6.TwoPointer(intArray87, (int) (short) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList95 = threeSumProblem0.TwoPointer(intArray87, 10);
        int[] intArray96 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList98 = threeSumProblem0.TwoPointer(intArray96, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(intListList93);
        org.junit.Assert.assertNotNull(intListList95);
    }

    @Test
    public void test2932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2932");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem14.BruteForce(intArray17, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem13.Hashmap(intArray17, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem22 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem22.BruteForce(intArray25, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem13.TwoPointer(intArray25, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem31.BruteForce(intArray34, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem30.Hashmap(intArray34, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem39.BruteForce(intArray42, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem30.TwoPointer(intArray42, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem13.Hashmap(intArray42, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem0.Hashmap(intArray42, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem51.BruteForce(intArray54, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem0.TwoPointer(intArray54, (int) (short) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem60.BruteForce(intArray63, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem59.Hashmap(intArray63, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem68 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem68.BruteForce(intArray71, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem59.TwoPointer(intArray71, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem76 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem77 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem77.BruteForce(intArray80, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem76.Hashmap(intArray80, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem85 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray88 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem85.BruteForce(intArray88, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem76.TwoPointer(intArray88, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem59.Hashmap(intArray88, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem0.BruteForce(intArray88, (int) 'a');
        java.lang.Class<?> wildcardClass97 = intArray88.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(intListList96);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test2933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2933");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem16 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem16.BruteForce(intArray19, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem10.TwoPointer(intArray19, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem24 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray33 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem24.BruteForce(intArray33, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem10.BruteForce(intArray33, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem0.BruteForce(intArray33, 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem41.BruteForce(intArray44, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem40.Hashmap(intArray44, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem50 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem50.BruteForce(intArray53, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem49.Hashmap(intArray53, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem40.BruteForce(intArray53, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem61 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray68 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem61.TwoPointer(intArray68, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem60.TwoPointer(intArray68, (int) (byte) 0);
        int[] intArray77 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem60.Hashmap(intArray77, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem40.BruteForce(intArray77, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem0.Hashmap(intArray77, (int) (byte) 100);
        int[] intArray84 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem0.Hashmap(intArray84, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
    }

    @Test
    public void test2934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2934");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray16 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList18 = threeSumProblem13.BruteForce(intArray16, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem19 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList24 = threeSumProblem19.BruteForce(intArray22, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem13.TwoPointer(intArray22, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray36 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem27.BruteForce(intArray36, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem13.BruteForce(intArray36, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem0.Hashmap(intArray36, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray50 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem43.TwoPointer(intArray50, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem53.BruteForce(intArray56, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem59.BruteForce(intArray62, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem53.TwoPointer(intArray62, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem43.BruteForce(intArray62, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem69 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem69.BruteForce(intArray72, (int) '#');
        int[] intArray78 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem69.BruteForce(intArray78, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem43.TwoPointer(intArray78, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem0.TwoPointer(intArray78, (int) (short) 10);
        java.lang.Class<?> wildcardClass85 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList18);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList24);
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test2935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2935");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        int[] intArray37 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray37, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.Hashmap(intArray37, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem43.BruteForce(intArray46, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem42.Hashmap(intArray46, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem51.BruteForce(intArray54, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem42.TwoPointer(intArray54, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem59.BruteForce(intArray62, (int) '#');
        int[] intArray68 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem59.BruteForce(intArray68, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem71 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem71.BruteForce(intArray74, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem59.Hashmap(intArray74, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem79 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray88 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem79.BruteForce(intArray88, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem59.BruteForce(intArray88, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem42.Hashmap(intArray88, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem0.Hashmap(intArray88, (int) '4');
        int[] intArray97 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList99 = threeSumProblem0.TwoPointer(intArray97, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(intListList96);
    }

    @Test
    public void test2936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2936");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem11 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray18 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem11.TwoPointer(intArray18, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem10.TwoPointer(intArray18, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList24 = threeSumProblem0.Hashmap(intArray18, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem25 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray32 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem25.TwoPointer(intArray32, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray43 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem36.TwoPointer(intArray43, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem35.TwoPointer(intArray43, (int) (byte) 0);
        int[] intArray52 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem35.Hashmap(intArray52, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem56.BruteForce(intArray59, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem55.Hashmap(intArray59, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem64 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem65 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem65.BruteForce(intArray68, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem64.Hashmap(intArray68, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem55.BruteForce(intArray68, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem35.Hashmap(intArray68, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem25.TwoPointer(intArray68, (int) (short) 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem0.Hashmap(intArray68, (int) (short) 1);
        java.lang.Class<?> wildcardClass81 = intListList80.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intListList24);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test2937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2937");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray9 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem6.BruteForce(intArray9, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem6.TwoPointer(intArray15, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem21.BruteForce(intArray24, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem20.Hashmap(intArray24, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem29.BruteForce(intArray32, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem20.TwoPointer(intArray32, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem6.BruteForce(intArray32, (int) ' ');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem40.BruteForce(intArray43, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem39.Hashmap(intArray43, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem48.BruteForce(intArray51, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem39.TwoPointer(intArray51, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem57 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem57.BruteForce(intArray60, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem56.Hashmap(intArray60, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem65 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem65.BruteForce(intArray68, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem56.TwoPointer(intArray68, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem39.Hashmap(intArray68, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem6.Hashmap(intArray68, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem0.TwoPointer(intArray68, (int) '#');
        int[] intArray79 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem0.BruteForce(intArray79, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intListList78);
    }

    @Test
    public void test2938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2938");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        int[] intArray21 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem12.BruteForce(intArray21, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem24 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem24.BruteForce(intArray27, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem12.Hashmap(intArray27, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem32 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem32.BruteForce(intArray35, (int) '#');
        int[] intArray41 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem32.BruteForce(intArray41, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem12.BruteForce(intArray41, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray53 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem46.TwoPointer(intArray53, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem12.TwoPointer(intArray53, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem58 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray65 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem58.TwoPointer(intArray65, (int) (short) 1);
        int[] intArray71 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem58.TwoPointer(intArray71, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem12.Hashmap(intArray71, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem0.Hashmap(intArray71, (int) (byte) 100);
        java.lang.Class<?> wildcardClass78 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test2939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2939");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        int[] intArray13 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem0.TwoPointer(intArray13, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem16 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem17.TwoPointer(intArray24, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem16.TwoPointer(intArray24, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem0.BruteForce(intArray24, (int) (short) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem32 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem33 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray40 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem33.TwoPointer(intArray40, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem32.TwoPointer(intArray40, (int) (byte) 0);
        int[] intArray46 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem32.TwoPointer(intArray46, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem31.TwoPointer(intArray46, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem0.TwoPointer(intArray46, (int) (short) 0);
        int[] intArray53 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem0.BruteForce(intArray53, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
    }

    @Test
    public void test2940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2940");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem21.BruteForce(intArray24, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem20.Hashmap(intArray24, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem0.TwoPointer(intArray24, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem32 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem32.BruteForce(intArray35, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem31.Hashmap(intArray35, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem41.BruteForce(intArray44, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem40.Hashmap(intArray44, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem31.BruteForce(intArray44, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem0.BruteForce(intArray44, (int) ' ');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem53.BruteForce(intArray56, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray66 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem59.TwoPointer(intArray66, (int) (short) 1);
        int[] intArray72 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem59.TwoPointer(intArray72, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem75 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem76 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray83 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem76.TwoPointer(intArray83, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem75.TwoPointer(intArray83, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem59.BruteForce(intArray83, (int) (short) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem53.Hashmap(intArray83, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem0.TwoPointer(intArray83, (int) (short) 1);
        java.lang.Class<?> wildcardClass94 = intListList93.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(intListList93);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test2941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2941");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem7 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem7.BruteForce(intArray10, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem6.BruteForce(intArray10, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem15 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray24 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem15.BruteForce(intArray24, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem6.BruteForce(intArray24, (int) (short) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem30.BruteForce(intArray33, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem29.Hashmap(intArray33, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem38 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem39.BruteForce(intArray42, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem38.Hashmap(intArray42, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem47 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem48.BruteForce(intArray51, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem47.Hashmap(intArray51, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem38.BruteForce(intArray51, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem58 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray66 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem59.TwoPointer(intArray66, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem58.TwoPointer(intArray66, (int) (byte) 0);
        int[] intArray75 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem58.Hashmap(intArray75, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem38.BruteForce(intArray75, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem29.TwoPointer(intArray75, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem6.TwoPointer(intArray75, (int) (short) 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem0.Hashmap(intArray75, 10);
        java.lang.Class<?> wildcardClass86 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test2942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2942");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray14 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray14, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray25 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem18.TwoPointer(intArray25, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem17.TwoPointer(intArray25, (int) (byte) 0);
        int[] intArray34 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem17.Hashmap(intArray34, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem0.TwoPointer(intArray34, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem40.BruteForce(intArray43, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem39.Hashmap(intArray43, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem49.BruteForce(intArray52, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem48.Hashmap(intArray52, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem39.BruteForce(intArray52, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray67 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem60.TwoPointer(intArray67, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem59.TwoPointer(intArray67, (int) (byte) 0);
        int[] intArray76 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem59.Hashmap(intArray76, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem39.BruteForce(intArray76, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem81 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem82 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray85 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem82.BruteForce(intArray85, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem81.Hashmap(intArray85, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem39.Hashmap(intArray85, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem0.TwoPointer(intArray85, (int) (byte) 100);
        java.lang.Class<?> wildcardClass94 = intListList93.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0]");
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(intListList93);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test2943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2943");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem11 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray18 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem11.TwoPointer(intArray18, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem10.TwoPointer(intArray18, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList24 = threeSumProblem0.Hashmap(intArray18, (int) (byte) 100);
        int[] intArray25 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem0.BruteForce(intArray25, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intListList24);
    }

    @Test
    public void test2944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2944");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray16 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList18 = threeSumProblem13.BruteForce(intArray16, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem19 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList24 = threeSumProblem19.BruteForce(intArray22, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem13.TwoPointer(intArray22, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray36 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem27.BruteForce(intArray36, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem13.BruteForce(intArray36, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem41.BruteForce(intArray44, (int) '#');
        int[] intArray50 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem41.BruteForce(intArray50, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem53.BruteForce(intArray56, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray66 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem59.TwoPointer(intArray66, (int) (short) 1);
        int[] intArray72 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem59.TwoPointer(intArray72, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem75 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem76 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray83 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem76.TwoPointer(intArray83, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem75.TwoPointer(intArray83, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem59.BruteForce(intArray83, (int) (short) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem53.Hashmap(intArray83, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem41.BruteForce(intArray83, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList95 = threeSumProblem13.TwoPointer(intArray83, 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList97 = threeSumProblem0.TwoPointer(intArray83, 1);
        java.lang.Class<?> wildcardClass98 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList18);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList24);
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(intListList93);
        org.junit.Assert.assertNotNull(intListList95);
        org.junit.Assert.assertNotNull(intListList97);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test2945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2945");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray9 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem6.BruteForce(intArray9, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList13 = threeSumProblem0.TwoPointer(intArray9, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem15 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem15.BruteForce(intArray18, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem14.Hashmap(intArray18, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem23 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem24 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray31 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem24.TwoPointer(intArray31, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem23.TwoPointer(intArray31, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem14.BruteForce(intArray31, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem0.TwoPointer(intArray31, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray49 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem40.BruteForce(intArray49, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem52.BruteForce(intArray55, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem40.Hashmap(intArray55, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem61 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem61.BruteForce(intArray64, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem60.Hashmap(intArray64, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem69 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem70 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray77 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem70.TwoPointer(intArray77, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem69.TwoPointer(intArray77, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem60.BruteForce(intArray77, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem40.TwoPointer(intArray77, (int) (byte) 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem0.Hashmap(intArray77, (int) (short) 100);
        java.lang.Class<?> wildcardClass88 = intListList87.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intListList13);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test2946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2946");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem7 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem7.BruteForce(intArray10, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem6.BruteForce(intArray10, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem15 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray24 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem15.BruteForce(intArray24, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem6.BruteForce(intArray24, (int) (short) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem30.BruteForce(intArray33, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem29.Hashmap(intArray33, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem38 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem39.BruteForce(intArray42, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem38.Hashmap(intArray42, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem47 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem48.BruteForce(intArray51, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem47.Hashmap(intArray51, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem38.BruteForce(intArray51, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem58 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray66 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem59.TwoPointer(intArray66, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem58.TwoPointer(intArray66, (int) (byte) 0);
        int[] intArray75 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem58.Hashmap(intArray75, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem38.BruteForce(intArray75, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem29.TwoPointer(intArray75, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem6.TwoPointer(intArray75, (int) (short) 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem0.Hashmap(intArray75, 10);
        java.lang.Class<?> wildcardClass86 = intListList85.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test2947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2947");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray27 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem20.TwoPointer(intArray27, (int) (short) 1);
        int[] intArray33 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem20.TwoPointer(intArray33, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem37.BruteForce(intArray40, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem36.Hashmap(intArray40, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem45 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray53 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem46.TwoPointer(intArray53, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem45.TwoPointer(intArray53, (int) (byte) 0);
        int[] intArray62 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem45.Hashmap(intArray62, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem65 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem66 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray73 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem66.TwoPointer(intArray73, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem65.TwoPointer(intArray73, (int) (byte) 0);
        int[] intArray82 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem65.Hashmap(intArray82, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem45.Hashmap(intArray82, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem36.Hashmap(intArray82, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem20.BruteForce(intArray82, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem0.Hashmap(intArray82, (int) '4');
        int[] intArray93 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList95 = threeSumProblem0.BruteForce(intArray93, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(intListList92);
    }

    @Test
    public void test2948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2948");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem14.BruteForce(intArray17, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem13.Hashmap(intArray17, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem22 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem23 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray30 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem23.TwoPointer(intArray30, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem22.TwoPointer(intArray30, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem13.BruteForce(intArray30, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem0.BruteForce(intArray30, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem40.BruteForce(intArray43, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem39.Hashmap(intArray43, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem49.BruteForce(intArray52, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem48.Hashmap(intArray52, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem57 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem57.BruteForce(intArray60, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem48.TwoPointer(intArray60, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem65 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem66 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem66.BruteForce(intArray69, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem65.Hashmap(intArray69, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem74.BruteForce(intArray77, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem65.TwoPointer(intArray77, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem48.Hashmap(intArray77, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem39.BruteForce(intArray77, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem0.TwoPointer(intArray77, 0);
        int[] intArray88 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem0.BruteForce(intArray88, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intListList87);
    }

    @Test
    public void test2949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2949");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem2 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray9 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem2.TwoPointer(intArray9, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList13 = threeSumProblem1.TwoPointer(intArray9, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem15 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem15.BruteForce(intArray18, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem14.Hashmap(intArray18, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem23 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray26 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem23.BruteForce(intArray26, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem14.TwoPointer(intArray26, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem32 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem32.BruteForce(intArray35, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem31.Hashmap(intArray35, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem40.BruteForce(intArray43, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem31.TwoPointer(intArray43, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem14.Hashmap(intArray43, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem1.Hashmap(intArray43, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem53.BruteForce(intArray56, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem52.Hashmap(intArray56, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem61 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem61.BruteForce(intArray64, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem52.TwoPointer(intArray64, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem69 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem70 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem70.BruteForce(intArray73, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem69.BruteForce(intArray73, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem52.TwoPointer(intArray73, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem80 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem81 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray84 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem81.BruteForce(intArray84, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem80.Hashmap(intArray84, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem52.BruteForce(intArray84, (int) (byte) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem1.BruteForce(intArray84, 1);
        int[] intArray95 = new int[] { '4', (byte) 100 };
        java.util.List<java.util.List<java.lang.Integer>> intListList97 = threeSumProblem1.TwoPointer(intArray95, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList99 = threeSumProblem0.BruteForce(intArray95, (int) (byte) 100);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intListList13);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[52, 100]");
        org.junit.Assert.assertNotNull(intListList97);
        org.junit.Assert.assertNotNull(intListList99);
    }

    @Test
    public void test2950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2950");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        int[] intArray37 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray37, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray48 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem41.TwoPointer(intArray48, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem40.TwoPointer(intArray48, (int) (byte) 0);
        int[] intArray57 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem40.Hashmap(intArray57, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem20.Hashmap(intArray57, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem62 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem63 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem63.BruteForce(intArray66, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem62.Hashmap(intArray66, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem71 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem72 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem72.BruteForce(intArray75, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem71.Hashmap(intArray75, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem62.BruteForce(intArray75, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem20.Hashmap(intArray75, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem0.Hashmap(intArray75, (int) (short) 1);
        int[] intArray86 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem0.BruteForce(intArray86, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
    }

    @Test
    public void test2951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2951");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        int[] intArray37 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray37, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.Hashmap(intArray37, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem42.BruteForce(intArray45, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem0.Hashmap(intArray45, (int) (byte) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem50 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem51.BruteForce(intArray54, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem50.Hashmap(intArray54, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem0.Hashmap(intArray54, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem61 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray68 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem61.TwoPointer(intArray68, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem0.BruteForce(intArray68, (int) '4');
        java.lang.Class<?> wildcardClass73 = intListList72.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test2952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2952");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem16 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem16.BruteForce(intArray19, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem10.TwoPointer(intArray19, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem0.BruteForce(intArray19, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray34 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem27.TwoPointer(intArray34, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem26.TwoPointer(intArray34, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem40.BruteForce(intArray43, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem39.Hashmap(intArray43, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray56 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem49.TwoPointer(intArray56, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem48.TwoPointer(intArray56, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem39.BruteForce(intArray56, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem26.BruteForce(intArray56, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem0.TwoPointer(intArray56, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem67 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem68 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray75 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem68.TwoPointer(intArray75, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem67.TwoPointer(intArray75, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem0.BruteForce(intArray75, (int) (byte) 10);
        java.lang.Class<?> wildcardClass82 = intListList81.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test2953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2953");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem9.TwoPointer(intArray21, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem0.Hashmap(intArray21, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem28 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray36 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem29.TwoPointer(intArray36, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem28.TwoPointer(intArray36, (int) (byte) 0);
        int[] intArray42 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem28.TwoPointer(intArray42, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem0.Hashmap(intArray42, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem47 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem48.BruteForce(intArray51, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem47.Hashmap(intArray51, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem0.Hashmap(intArray51, (int) (short) 100);
        java.lang.Class<?> wildcardClass58 = intArray51.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0]");
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test2954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2954");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem21.BruteForce(intArray24, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem20.Hashmap(intArray24, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem29.BruteForce(intArray32, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem20.TwoPointer(intArray32, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem0.Hashmap(intArray32, (int) (byte) -1);
        int[] intArray39 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.TwoPointer(intArray39, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
    }

    @Test
    public void test2955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2955");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem21.BruteForce(intArray24, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem20.Hashmap(intArray24, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem0.TwoPointer(intArray24, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem32 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem32.BruteForce(intArray35, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem31.Hashmap(intArray35, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem40.BruteForce(intArray43, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem31.TwoPointer(intArray43, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem0.TwoPointer(intArray43, (-1));
        java.lang.Class<?> wildcardClass50 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test2956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2956");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray29 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem20.BruteForce(intArray29, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem0.TwoPointer(intArray29, (int) ' ');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem34.Hashmap(intArray38, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem43.BruteForce(intArray46, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem34.TwoPointer(intArray46, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem0.TwoPointer(intArray46, (int) (short) 1);
        java.lang.Class<?> wildcardClass53 = intListList52.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test2957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2957");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem7 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray14 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem7.TwoPointer(intArray14, (int) (short) 1);
        int[] intArray20 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem7.TwoPointer(intArray20, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem23 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem24 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray31 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem24.TwoPointer(intArray31, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem23.TwoPointer(intArray31, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem7.BruteForce(intArray31, (int) (short) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem38 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray47 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem38.BruteForce(intArray47, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem50 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem50.BruteForce(intArray53, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem38.Hashmap(intArray53, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem58 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem59.BruteForce(intArray62, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem58.Hashmap(intArray62, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem67 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem67.BruteForce(intArray70, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem58.TwoPointer(intArray70, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem38.Hashmap(intArray70, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem7.TwoPointer(intArray70, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem6.TwoPointer(intArray70, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem0.BruteForce(intArray70, (int) (short) -1);
        java.lang.Class<?> wildcardClass83 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test2958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2958");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem9.TwoPointer(intArray21, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem27.BruteForce(intArray30, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem26.Hashmap(intArray30, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem26.TwoPointer(intArray38, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem9.Hashmap(intArray38, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem0.BruteForce(intArray38, 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem47 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray54 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem47.TwoPointer(intArray54, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem57 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem57.BruteForce(intArray60, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem63 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem63.BruteForce(intArray66, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem57.TwoPointer(intArray66, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem47.BruteForce(intArray66, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem0.TwoPointer(intArray66, 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem75 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem75.BruteForce(intArray78, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem0.TwoPointer(intArray78, 1);
        java.lang.Class<?> wildcardClass83 = intListList82.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test2959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2959");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem14.TwoPointer(intArray21, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem13.TwoPointer(intArray21, (int) (byte) 0);
        int[] intArray30 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem13.Hashmap(intArray30, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem0.Hashmap(intArray30, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem0.TwoPointer(intArray38, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem44 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray51 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem44.TwoPointer(intArray51, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem43.TwoPointer(intArray51, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray63 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem56.TwoPointer(intArray63, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem43.Hashmap(intArray63, (int) (byte) 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem0.BruteForce(intArray63, (int) (short) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem70 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem70.BruteForce(intArray73, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem76 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem76.BruteForce(intArray79, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem70.TwoPointer(intArray79, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem0.BruteForce(intArray79, 0);
        java.lang.Class<?> wildcardClass86 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test2960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2960");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem14.BruteForce(intArray17, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem13.BruteForce(intArray17, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem22 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem22.BruteForce(intArray25, (int) '#');
        int[] intArray31 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem22.BruteForce(intArray31, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem13.BruteForce(intArray31, (int) (short) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray44 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem37.TwoPointer(intArray44, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem36.TwoPointer(intArray44, (int) (byte) 0);
        int[] intArray50 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem36.TwoPointer(intArray50, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem13.BruteForce(intArray50, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem56.BruteForce(intArray59, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem55.Hashmap(intArray59, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem64 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem64.BruteForce(intArray67, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem55.TwoPointer(intArray67, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem72 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem73 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem73.BruteForce(intArray76, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem72.BruteForce(intArray76, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem55.TwoPointer(intArray76, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem83 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem84 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray87 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem84.BruteForce(intArray87, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem83.Hashmap(intArray87, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem55.BruteForce(intArray87, (int) (byte) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList95 = threeSumProblem13.BruteForce(intArray87, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList97 = threeSumProblem0.BruteForce(intArray87, 0);
        java.lang.Class<?> wildcardClass98 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0]");
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(intListList93);
        org.junit.Assert.assertNotNull(intListList95);
        org.junit.Assert.assertNotNull(intListList97);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test2961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2961");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem17.BruteForce(intArray21, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem0.TwoPointer(intArray21, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem28 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem29.BruteForce(intArray32, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem28.Hashmap(intArray32, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem0.BruteForce(intArray32, (int) (byte) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem39.BruteForce(intArray42, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem0.TwoPointer(intArray42, (int) (byte) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem47 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem48.BruteForce(intArray51, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem47.BruteForce(intArray51, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem57 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray64 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem57.TwoPointer(intArray64, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem56.TwoPointer(intArray64, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem47.TwoPointer(intArray64, (int) (byte) 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem0.BruteForce(intArray64, (int) '#');
        int[] intArray73 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem0.BruteForce(intArray73, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
    }

    @Test
    public void test2962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2962");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.BruteForce(intArray4, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem9.TwoPointer(intArray21, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray34 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem27.TwoPointer(intArray34, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem26.TwoPointer(intArray34, (int) (byte) 0);
        int[] intArray43 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem26.Hashmap(intArray43, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem9.Hashmap(intArray43, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem0.Hashmap(intArray43, (int) (byte) 1);
        java.lang.Class<?> wildcardClass50 = intListList49.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test2963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2963");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.BruteForce(intArray12, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem17.BruteForce(intArray20, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem23 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray26 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem23.BruteForce(intArray26, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem29.BruteForce(intArray32, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem23.TwoPointer(intArray32, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem38 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem38.BruteForce(intArray41, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem37.Hashmap(intArray41, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem46.BruteForce(intArray49, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem37.TwoPointer(intArray49, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem23.BruteForce(intArray49, (int) ' ');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem57 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem57.BruteForce(intArray60, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem56.Hashmap(intArray60, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem65 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem65.BruteForce(intArray68, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem56.TwoPointer(intArray68, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem73 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem74.BruteForce(intArray77, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem73.Hashmap(intArray77, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem82 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray85 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem82.BruteForce(intArray85, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem73.TwoPointer(intArray85, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem56.Hashmap(intArray85, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem23.Hashmap(intArray85, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList95 = threeSumProblem17.TwoPointer(intArray85, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList97 = threeSumProblem0.TwoPointer(intArray85, (int) (byte) 10);
        java.lang.Class<?> wildcardClass98 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(intListList93);
        org.junit.Assert.assertNotNull(intListList95);
        org.junit.Assert.assertNotNull(intListList97);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test2964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2964");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem19 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList24 = threeSumProblem19.BruteForce(intArray22, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem18.Hashmap(intArray22, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem9.BruteForce(intArray22, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray37 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem30.TwoPointer(intArray37, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem29.TwoPointer(intArray37, (int) (byte) 0);
        int[] intArray46 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem29.Hashmap(intArray46, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem9.BruteForce(intArray46, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem52.BruteForce(intArray55, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem51.Hashmap(intArray55, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem9.BruteForce(intArray55, (int) (short) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem0.Hashmap(intArray55, (int) 'a');
        int[] intArray64 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem0.TwoPointer(intArray64, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList24);
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
    }

    @Test
    public void test2965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2965");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem33 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem34.BruteForce(intArray37, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem33.Hashmap(intArray37, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem42.BruteForce(intArray45, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem33.TwoPointer(intArray45, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem50 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem51.BruteForce(intArray54, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem50.Hashmap(intArray54, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem59.BruteForce(intArray62, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem50.TwoPointer(intArray62, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem33.Hashmap(intArray62, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem20.Hashmap(intArray62, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem0.BruteForce(intArray62, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem73 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem74.BruteForce(intArray77, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem73.BruteForce(intArray77, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem82 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem83 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray90 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem83.TwoPointer(intArray90, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem82.TwoPointer(intArray90, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem73.TwoPointer(intArray90, (int) (byte) 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList98 = threeSumProblem0.TwoPointer(intArray90, (int) (short) 10);
        java.lang.Class<?> wildcardClass99 = intListList98.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(intListList96);
        org.junit.Assert.assertNotNull(intListList98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test2966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2966");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        int[] intArray13 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem0.TwoPointer(intArray13, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem16 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem16.TwoPointer(intArray23, (int) (short) 1);
        int[] intArray29 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem16.TwoPointer(intArray29, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem32 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem32.BruteForce(intArray35, (int) '#');
        int[] intArray41 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem32.BruteForce(intArray41, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem44 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem44.BruteForce(intArray47, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem32.Hashmap(intArray47, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray61 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem52.BruteForce(intArray61, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem32.BruteForce(intArray61, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem66 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray73 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem66.TwoPointer(intArray73, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem32.TwoPointer(intArray73, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem16.BruteForce(intArray73, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem0.Hashmap(intArray73, (int) '#');
        java.lang.Class<?> wildcardClass82 = intListList81.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test2967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2967");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem11 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray18 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem11.TwoPointer(intArray18, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem10.TwoPointer(intArray18, (int) (byte) 0);
        int[] intArray27 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem10.Hashmap(intArray27, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem31.TwoPointer(intArray38, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem30.TwoPointer(intArray38, (int) (byte) 0);
        int[] intArray47 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem30.Hashmap(intArray47, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem10.Hashmap(intArray47, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem52.BruteForce(intArray55, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem10.Hashmap(intArray55, (int) (byte) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem61 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem61.BruteForce(intArray64, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem60.Hashmap(intArray64, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem10.Hashmap(intArray64, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem0.BruteForce(intArray64, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem73 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem73.BruteForce(intArray76, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem0.Hashmap(intArray76, (int) '4');
        java.lang.Class<?> wildcardClass81 = intListList80.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test2968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2968");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem11 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray18 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem11.TwoPointer(intArray18, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem10.TwoPointer(intArray18, (int) (byte) 0);
        int[] intArray27 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem10.Hashmap(intArray27, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem31.BruteForce(intArray34, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem30.Hashmap(intArray34, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem40.BruteForce(intArray43, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem39.Hashmap(intArray43, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem30.BruteForce(intArray43, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem10.Hashmap(intArray43, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem0.TwoPointer(intArray43, (int) (short) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray61 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem54.TwoPointer(intArray61, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem64 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem64.BruteForce(intArray67, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem70 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem70.BruteForce(intArray73, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem64.TwoPointer(intArray73, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem54.BruteForce(intArray73, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem0.Hashmap(intArray73, 0);
        int[] intArray82 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem0.Hashmap(intArray82, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
    }

    @Test
    public void test2969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2969");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray29 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem20.BruteForce(intArray29, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem0.BruteForce(intArray29, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray42 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem35.TwoPointer(intArray42, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem34.TwoPointer(intArray42, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem0.Hashmap(intArray42, (int) (short) 100);
        int[] intArray49 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem0.TwoPointer(intArray49, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
    }

    @Test
    public void test2970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2970");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        int[] intArray37 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray37, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.Hashmap(intArray37, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem42.BruteForce(intArray45, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem0.Hashmap(intArray45, (int) (byte) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem50 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem51.BruteForce(intArray54, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem50.Hashmap(intArray54, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem0.Hashmap(intArray54, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem61 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray68 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem61.TwoPointer(intArray68, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem0.TwoPointer(intArray68, 0);
        java.lang.Class<?> wildcardClass73 = intArray68.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test2971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2971");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        int[] intArray37 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray37, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.Hashmap(intArray37, 0);
        int[] intArray42 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem0.BruteForce(intArray42, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
    }

    @Test
    public void test2972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2972");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray9 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem6.BruteForce(intArray9, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem6.TwoPointer(intArray15, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem21.BruteForce(intArray24, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem20.Hashmap(intArray24, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem29.BruteForce(intArray32, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem20.TwoPointer(intArray32, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem6.BruteForce(intArray32, (int) ' ');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem40.BruteForce(intArray43, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem39.Hashmap(intArray43, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem48.BruteForce(intArray51, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem39.TwoPointer(intArray51, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem57 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem57.BruteForce(intArray60, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem56.Hashmap(intArray60, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem65 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem65.BruteForce(intArray68, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem56.TwoPointer(intArray68, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem39.Hashmap(intArray68, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem6.Hashmap(intArray68, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem0.TwoPointer(intArray68, (int) '#');
        java.lang.Class<?> wildcardClass79 = intArray68.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test2973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2973");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem2 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray9 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem2.TwoPointer(intArray9, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList13 = threeSumProblem1.TwoPointer(intArray9, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem15 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem15.BruteForce(intArray18, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem14.Hashmap(intArray18, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem23 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem24 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray31 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem24.TwoPointer(intArray31, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem23.TwoPointer(intArray31, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem14.BruteForce(intArray31, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem1.BruteForce(intArray31, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.Hashmap(intArray31, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem43.BruteForce(intArray46, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem42.Hashmap(intArray46, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem51.BruteForce(intArray54, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem42.TwoPointer(intArray54, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem60.BruteForce(intArray63, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem59.BruteForce(intArray63, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem42.TwoPointer(intArray63, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem70 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem71 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem71.BruteForce(intArray74, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem70.Hashmap(intArray74, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem42.BruteForce(intArray74, (int) (byte) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem81 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray84 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem81.BruteForce(intArray84, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem42.TwoPointer(intArray84, (int) (byte) 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem0.TwoPointer(intArray84, (int) '4');
        int[] intArray91 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem0.Hashmap(intArray91, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intListList13);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intListList90);
    }

    @Test
    public void test2974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2974");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem14.TwoPointer(intArray21, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem13.TwoPointer(intArray21, (int) (byte) 0);
        int[] intArray30 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem13.Hashmap(intArray30, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem0.Hashmap(intArray30, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem41.BruteForce(intArray44, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem35.TwoPointer(intArray44, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem49.BruteForce(intArray52, (int) '#');
        int[] intArray58 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem49.BruteForce(intArray58, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem35.BruteForce(intArray58, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem0.TwoPointer(intArray58, (int) '4');
        int[] intArray71 = new int[] { (byte) 100, (short) 1, (short) 100, (byte) 0, (short) -1, (short) 10 };
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem0.TwoPointer(intArray71, 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray81 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem74.TwoPointer(intArray81, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem0.TwoPointer(intArray81, 0);
        java.lang.Class<?> wildcardClass86 = intListList85.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0, 1, 10, 100, 100]");
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test2975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2975");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray29 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem20.BruteForce(intArray29, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem0.BruteForce(intArray29, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray42 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem35.TwoPointer(intArray42, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem34.TwoPointer(intArray42, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem0.Hashmap(intArray42, (int) (short) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray56 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem49.TwoPointer(intArray56, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem59.BruteForce(intArray62, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem65 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem65.BruteForce(intArray68, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem59.TwoPointer(intArray68, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem49.BruteForce(intArray68, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem0.Hashmap(intArray68, (int) '4');
        int[] intArray77 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem0.TwoPointer(intArray77, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intListList76);
    }

    @Test
    public void test2976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2976");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem9.TwoPointer(intArray21, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem27.BruteForce(intArray30, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem26.Hashmap(intArray30, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem26.TwoPointer(intArray38, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem9.Hashmap(intArray38, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem0.BruteForce(intArray38, 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem47 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem48.BruteForce(intArray51, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem47.Hashmap(intArray51, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem56.BruteForce(intArray59, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem47.TwoPointer(intArray59, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem64 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem65 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem65.BruteForce(intArray68, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem64.Hashmap(intArray68, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem73 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem73.BruteForce(intArray76, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem64.TwoPointer(intArray76, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem47.Hashmap(intArray76, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem0.BruteForce(intArray76, 10);
        int[] intArray85 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem0.Hashmap(intArray85, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
    }

    @Test
    public void test2977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2977");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem2 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList7 = threeSumProblem2.BruteForce(intArray5, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem1.Hashmap(intArray5, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem11 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray14 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem11.BruteForce(intArray14, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList18 = threeSumProblem10.Hashmap(intArray14, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem19 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList24 = threeSumProblem19.BruteForce(intArray22, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem10.TwoPointer(intArray22, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem28 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem28.BruteForce(intArray31, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem27.Hashmap(intArray31, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem36.BruteForce(intArray39, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem27.TwoPointer(intArray39, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem10.Hashmap(intArray39, (int) 'a');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem47 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem47.BruteForce(intArray50, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem46.Hashmap(intArray50, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem55.BruteForce(intArray58, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem46.TwoPointer(intArray58, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem63 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem64 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem64.BruteForce(intArray67, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem63.Hashmap(intArray67, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem72 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem72.BruteForce(intArray75, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem63.TwoPointer(intArray75, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem46.Hashmap(intArray75, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem10.Hashmap(intArray75, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem1.TwoPointer(intArray75, (int) (byte) 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem0.TwoPointer(intArray75, (int) (byte) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem88 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem89 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray92 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem89.BruteForce(intArray92, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem88.Hashmap(intArray92, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList98 = threeSumProblem0.Hashmap(intArray92, (int) (byte) 0);
        java.lang.Class<?> wildcardClass99 = intArray92.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList7);
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intListList18);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList24);
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(intListList96);
        org.junit.Assert.assertNotNull(intListList98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test2978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2978");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem21.BruteForce(intArray24, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem20.Hashmap(intArray24, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem0.TwoPointer(intArray24, 1);
        int[] intArray31 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem0.TwoPointer(intArray31, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intListList30);
    }

    @Test
    public void test2979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2979");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.BruteForce(intArray4, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray18 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem9.BruteForce(intArray18, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem0.BruteForce(intArray18, (int) (short) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem23 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem24 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem24.BruteForce(intArray27, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem23.Hashmap(intArray27, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem32 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem33 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem33.BruteForce(intArray36, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem32.Hashmap(intArray36, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem42.BruteForce(intArray45, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem41.Hashmap(intArray45, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem32.BruteForce(intArray45, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray60 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem53.TwoPointer(intArray60, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem52.TwoPointer(intArray60, (int) (byte) 0);
        int[] intArray69 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem52.Hashmap(intArray69, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem32.BruteForce(intArray69, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem23.TwoPointer(intArray69, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem0.TwoPointer(intArray69, (int) (short) 10);
        java.lang.Class<?> wildcardClass78 = intArray69.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test2980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2980");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem16 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem16.BruteForce(intArray19, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem10.TwoPointer(intArray19, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem0.BruteForce(intArray19, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray34 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem27.TwoPointer(intArray34, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem26.TwoPointer(intArray34, (int) (byte) 0);
        int[] intArray40 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem26.TwoPointer(intArray40, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem44 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray51 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem44.TwoPointer(intArray51, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem43.TwoPointer(intArray51, (int) (byte) 0);
        int[] intArray60 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem43.Hashmap(intArray60, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem26.TwoPointer(intArray60, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem0.BruteForce(intArray60, (int) (byte) 1);
        int[] intArray73 = new int[] { 1, (byte) 10, (byte) 10, (short) 0, 0, (-1) };
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem0.Hashmap(intArray73, (int) '4');
        int[] intArray78 = new int[] { 1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem0.TwoPointer(intArray78, (int) 'a');
        int[] intArray81 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem0.Hashmap(intArray81, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0]");
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0, 0, 1, 10, 10]");
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[1, 97]");
        org.junit.Assert.assertNotNull(intListList80);
    }

    @Test
    public void test2981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2981");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem21.BruteForce(intArray24, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem20.Hashmap(intArray24, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem29.BruteForce(intArray32, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem20.TwoPointer(intArray32, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem0.Hashmap(intArray32, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem40.BruteForce(intArray43, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem39.Hashmap(intArray43, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem49.BruteForce(intArray52, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem48.Hashmap(intArray52, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem39.BruteForce(intArray52, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray67 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem60.TwoPointer(intArray67, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem59.TwoPointer(intArray67, (int) (byte) 0);
        int[] intArray76 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem59.Hashmap(intArray76, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem39.BruteForce(intArray76, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem81 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray84 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem81.BruteForce(intArray84, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem39.Hashmap(intArray84, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem89 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray92 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem89.BruteForce(intArray92, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem39.TwoPointer(intArray92, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList98 = threeSumProblem0.TwoPointer(intArray92, (int) (byte) 10);
        java.lang.Class<?> wildcardClass99 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(intListList96);
        org.junit.Assert.assertNotNull(intListList98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test2982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2982");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem11 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray18 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem11.TwoPointer(intArray18, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem10.TwoPointer(intArray18, (int) (byte) 0);
        int[] intArray27 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem10.Hashmap(intArray27, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem31.BruteForce(intArray34, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem30.Hashmap(intArray34, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem40.BruteForce(intArray43, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem39.Hashmap(intArray43, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem30.BruteForce(intArray43, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem10.Hashmap(intArray43, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem0.TwoPointer(intArray43, (int) (short) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem54.BruteForce(intArray57, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem60.BruteForce(intArray63, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem54.TwoPointer(intArray63, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem68 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem68.BruteForce(intArray71, (int) '#');
        int[] intArray77 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem68.BruteForce(intArray77, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem54.BruteForce(intArray77, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem0.BruteForce(intArray77, (int) (byte) 1);
        java.lang.Class<?> wildcardClass84 = intListList83.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test2983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2983");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        int[] intArray13 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem0.TwoPointer(intArray13, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem16 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray25 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem16.BruteForce(intArray25, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem28 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem28.BruteForce(intArray31, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem16.Hashmap(intArray31, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray45 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem36.BruteForce(intArray45, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem16.BruteForce(intArray45, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem50 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray57 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem50.TwoPointer(intArray57, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem16.TwoPointer(intArray57, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem0.BruteForce(intArray57, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem64 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem65 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray72 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem65.TwoPointer(intArray72, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem64.TwoPointer(intArray72, (int) (byte) 0);
        int[] intArray81 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem64.Hashmap(intArray81, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem0.BruteForce(intArray81, 0);
        java.lang.Class<?> wildcardClass86 = intArray81.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test2984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2984");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem16 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem16.BruteForce(intArray19, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem10.TwoPointer(intArray19, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem0.BruteForce(intArray19, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray35 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem26.BruteForce(intArray35, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem0.TwoPointer(intArray35, (int) ' ');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray48 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem41.TwoPointer(intArray48, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem40.TwoPointer(intArray48, (int) (byte) 0);
        int[] intArray57 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem40.Hashmap(intArray57, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem61 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem61.BruteForce(intArray64, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem60.Hashmap(intArray64, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem40.TwoPointer(intArray64, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem71 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem72 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem72.BruteForce(intArray75, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem71.Hashmap(intArray75, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem80 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem81 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray84 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem81.BruteForce(intArray84, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem80.Hashmap(intArray84, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem71.BruteForce(intArray84, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem40.BruteForce(intArray84, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem0.BruteForce(intArray84, (int) 'a');
        java.lang.Class<?> wildcardClass95 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test2985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2985");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        int[] intArray13 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem0.TwoPointer(intArray13, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem16 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem17.TwoPointer(intArray24, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem16.TwoPointer(intArray24, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem0.BruteForce(intArray24, (int) (short) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem31.TwoPointer(intArray38, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray49 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem42.TwoPointer(intArray49, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem41.TwoPointer(intArray49, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem31.Hashmap(intArray49, (int) (byte) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem0.BruteForce(intArray49, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem58 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray65 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem58.TwoPointer(intArray65, (int) (short) 1);
        int[] intArray71 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem58.TwoPointer(intArray71, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem0.BruteForce(intArray71, (int) ' ');
        java.lang.Class<?> wildcardClass76 = intListList75.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test2986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2986");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem20.BruteForce(intArray23, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray33 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem26.TwoPointer(intArray33, (int) (short) 1);
        int[] intArray39 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem26.TwoPointer(intArray39, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray50 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem43.TwoPointer(intArray50, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem42.TwoPointer(intArray50, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem26.BruteForce(intArray50, (int) (short) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem20.Hashmap(intArray50, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray67 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem60.TwoPointer(intArray67, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem59.TwoPointer(intArray67, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem20.BruteForce(intArray67, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem75 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem75.BruteForce(intArray78, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem74.Hashmap(intArray78, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem83 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem84 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray87 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem84.BruteForce(intArray87, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem83.Hashmap(intArray87, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem74.BruteForce(intArray87, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList95 = threeSumProblem20.Hashmap(intArray87, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList97 = threeSumProblem0.BruteForce(intArray87, (int) (byte) 100);
        java.lang.Class<?> wildcardClass98 = intListList97.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(intListList93);
        org.junit.Assert.assertNotNull(intListList95);
        org.junit.Assert.assertNotNull(intListList97);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test2987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2987");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray9 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem6.BruteForce(intArray9, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList13 = threeSumProblem0.TwoPointer(intArray9, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem14.BruteForce(intArray17, (int) '#');
        int[] intArray23 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem14.BruteForce(intArray23, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem0.BruteForce(intArray23, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem28 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem29.BruteForce(intArray32, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem28.Hashmap(intArray32, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem38 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem38.BruteForce(intArray41, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem37.Hashmap(intArray41, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem28.BruteForce(intArray41, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray56 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem49.TwoPointer(intArray56, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem48.TwoPointer(intArray56, (int) (byte) 0);
        int[] intArray65 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem48.Hashmap(intArray65, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem28.BruteForce(intArray65, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem70 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem70.BruteForce(intArray73, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem28.Hashmap(intArray73, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem0.TwoPointer(intArray73, (int) 'a');
        java.lang.Class<?> wildcardClass80 = intListList79.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intListList13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test2988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2988");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem16 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem16.BruteForce(intArray19, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem10.TwoPointer(intArray19, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem0.BruteForce(intArray19, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray34 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem27.TwoPointer(intArray34, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem26.TwoPointer(intArray34, (int) (byte) 0);
        int[] intArray40 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem26.TwoPointer(intArray40, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem44 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray51 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem44.TwoPointer(intArray51, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem43.TwoPointer(intArray51, (int) (byte) 0);
        int[] intArray60 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem43.Hashmap(intArray60, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem26.TwoPointer(intArray60, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem0.BruteForce(intArray60, (int) (byte) 1);
        int[] intArray67 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem0.TwoPointer(intArray67, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0]");
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
    }

    @Test
    public void test2989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2989");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem21.BruteForce(intArray24, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem20.Hashmap(intArray24, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem0.TwoPointer(intArray24, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem32 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray39 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem32.TwoPointer(intArray39, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem31.TwoPointer(intArray39, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem44 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem45 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem45.BruteForce(intArray48, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem44.Hashmap(intArray48, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem53.BruteForce(intArray56, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem44.TwoPointer(intArray56, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem61 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem62 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem62.BruteForce(intArray65, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem61.Hashmap(intArray65, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem70 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem70.BruteForce(intArray73, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem61.TwoPointer(intArray73, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem44.Hashmap(intArray73, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem31.Hashmap(intArray73, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem82 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray85 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem82.BruteForce(intArray85, (int) '#');
        int[] intArray91 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem82.BruteForce(intArray91, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList95 = threeSumProblem31.Hashmap(intArray91, (int) (short) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList97 = threeSumProblem0.Hashmap(intArray91, 100);
        java.lang.Class<?> wildcardClass98 = intArray91.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList93);
        org.junit.Assert.assertNotNull(intListList95);
        org.junit.Assert.assertNotNull(intListList97);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test2990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2990");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.BruteForce(intArray13, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem33 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray40 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem33.TwoPointer(intArray40, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem20.Hashmap(intArray40, (int) (byte) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem45 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray52 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem45.TwoPointer(intArray52, (int) (short) 1);
        int[] intArray58 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem45.TwoPointer(intArray58, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem61 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem62 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem62.BruteForce(intArray65, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem61.BruteForce(intArray65, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem45.Hashmap(intArray65, 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem20.Hashmap(intArray65, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem0.BruteForce(intArray65, (int) (byte) -1);
        int[] intArray76 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem0.Hashmap(intArray76, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
    }

    @Test
    public void test2991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2991");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem14.TwoPointer(intArray21, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem13.TwoPointer(intArray21, (int) (byte) 0);
        int[] intArray27 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem13.TwoPointer(intArray27, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem31.BruteForce(intArray34, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem30.Hashmap(intArray34, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem40.BruteForce(intArray43, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem39.Hashmap(intArray43, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem30.BruteForce(intArray43, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem50 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray58 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem51.TwoPointer(intArray58, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem50.TwoPointer(intArray58, (int) (byte) 0);
        int[] intArray67 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem50.Hashmap(intArray67, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem30.BruteForce(intArray67, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem13.Hashmap(intArray67, (int) 'a');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem75 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem75.BruteForce(intArray78, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem74.Hashmap(intArray78, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem13.TwoPointer(intArray78, 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem0.Hashmap(intArray78, 0);
        java.lang.Class<?> wildcardClass87 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0]");
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test2992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2992");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem16 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem16.BruteForce(intArray19, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem10.TwoPointer(intArray19, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem0.BruteForce(intArray19, (int) '4');
        int[] intArray26 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem0.Hashmap(intArray26, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
    }

    @Test
    public void test2993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2993");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.BruteForce(intArray4, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem10.TwoPointer(intArray17, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem9.TwoPointer(intArray17, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem0.TwoPointer(intArray17, (int) (byte) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem24 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray33 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem24.BruteForce(intArray33, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem36.BruteForce(intArray39, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem24.Hashmap(intArray39, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem44 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem45 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem45.BruteForce(intArray48, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem44.Hashmap(intArray48, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray61 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem54.TwoPointer(intArray61, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem53.TwoPointer(intArray61, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem44.BruteForce(intArray61, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem24.TwoPointer(intArray61, (int) (byte) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem70 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem70.BruteForce(intArray73, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem76 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem76.BruteForce(intArray79, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem70.TwoPointer(intArray79, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem24.Hashmap(intArray79, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem0.Hashmap(intArray79, 1);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intListList87);
    }

    @Test
    public void test2994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2994");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem14.TwoPointer(intArray21, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem13.TwoPointer(intArray21, (int) (byte) 0);
        int[] intArray30 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem13.Hashmap(intArray30, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem0.TwoPointer(intArray30, (int) ' ');
        java.lang.Class<?> wildcardClass35 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test2995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2995");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray14 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray14, (int) (byte) 0);
        int[] intArray17 = new int[] {};
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.BruteForce(intArray17, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        int[] intArray34 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem20.TwoPointer(intArray34, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray46 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem37.BruteForce(intArray46, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem50 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem50.BruteForce(intArray53, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem49.BruteForce(intArray53, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem58 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem58.BruteForce(intArray61, (int) '#');
        int[] intArray67 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem58.BruteForce(intArray67, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem49.BruteForce(intArray67, (int) (short) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem37.BruteForce(intArray67, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem20.Hashmap(intArray67, (int) (short) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem0.Hashmap(intArray67, (int) ' ');
        int[] intArray78 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem0.Hashmap(intArray78, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0]");
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intListList77);
    }

    @Test
    public void test2996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2996");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem17.BruteForce(intArray21, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem0.TwoPointer(intArray21, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem28 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem28.BruteForce(intArray31, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray41 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem34.TwoPointer(intArray41, (int) (short) 1);
        int[] intArray47 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem34.TwoPointer(intArray47, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem50 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray58 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem51.TwoPointer(intArray58, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem50.TwoPointer(intArray58, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem34.BruteForce(intArray58, (int) (short) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem28.Hashmap(intArray58, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem67 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem67.BruteForce(intArray70, (int) '#');
        int[] intArray76 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem67.BruteForce(intArray76, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem79 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem79.BruteForce(intArray82, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem67.Hashmap(intArray82, (int) (byte) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem28.TwoPointer(intArray82, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem0.BruteForce(intArray82, (int) (short) 100);
        java.lang.Class<?> wildcardClass91 = intListList90.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test2997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2997");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem14.BruteForce(intArray17, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem13.Hashmap(intArray17, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem22 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem22.BruteForce(intArray25, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem13.TwoPointer(intArray25, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem31.BruteForce(intArray34, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem30.Hashmap(intArray34, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem39.BruteForce(intArray42, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem30.TwoPointer(intArray42, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem13.Hashmap(intArray42, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem0.Hashmap(intArray42, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem51.BruteForce(intArray54, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem0.TwoPointer(intArray54, (int) (short) -1);
        int[] intArray59 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem0.Hashmap(intArray59, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
    }

    @Test
    public void test2998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2998");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.BruteForce(intArray13, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        int[] intArray37 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray37, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.BruteForce(intArray37, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem42.BruteForce(intArray45, (int) '#');
        int[] intArray51 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem42.BruteForce(intArray51, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem54.BruteForce(intArray57, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem42.Hashmap(intArray57, (int) (byte) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem0.Hashmap(intArray57, 0);
        java.lang.Class<?> wildcardClass64 = intListList63.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test2999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2999");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        int[] intArray21 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem12.BruteForce(intArray21, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem24 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem24.BruteForce(intArray27, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem12.Hashmap(intArray27, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem32 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem32.BruteForce(intArray35, (int) '#');
        int[] intArray41 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem32.BruteForce(intArray41, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem12.BruteForce(intArray41, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray53 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem46.TwoPointer(intArray53, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem12.TwoPointer(intArray53, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem58 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray65 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem58.TwoPointer(intArray65, (int) (short) 1);
        int[] intArray71 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem58.TwoPointer(intArray71, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem12.Hashmap(intArray71, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem0.Hashmap(intArray71, (int) (byte) 100);
        java.lang.Class<?> wildcardClass78 = intArray71.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test3000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test3000");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem7 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem7.BruteForce(intArray10, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem6.Hashmap(intArray10, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem15 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem16 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem16.TwoPointer(intArray23, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem15.TwoPointer(intArray23, (int) (byte) 0);
        int[] intArray32 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem15.Hashmap(intArray32, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray43 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem36.TwoPointer(intArray43, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem35.TwoPointer(intArray43, (int) (byte) 0);
        int[] intArray52 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem35.Hashmap(intArray52, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem15.Hashmap(intArray52, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem6.Hashmap(intArray52, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray67 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem60.TwoPointer(intArray67, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem59.TwoPointer(intArray67, (int) (byte) 0);
        int[] intArray73 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem59.TwoPointer(intArray73, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem6.Hashmap(intArray73, 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem0.TwoPointer(intArray73, (int) (byte) 10);
        int[] intArray80 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem0.BruteForce(intArray80, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0]");
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intListList79);
    }
}

