package ThreeSumProblem;

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest4 {

    public static boolean debug = false;

    @Test
    public void test2001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2001");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.BruteForce(intArray13, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        int[] intArray37 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray37, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.BruteForce(intArray37, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem42.BruteForce(intArray45, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem0.Hashmap(intArray45, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem50 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem50.BruteForce(intArray53, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem0.TwoPointer(intArray53, (int) ' ');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem58 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem59.BruteForce(intArray62, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem58.Hashmap(intArray62, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem67 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem67.BruteForce(intArray70, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem58.BruteForce(intArray70, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem0.BruteForce(intArray70, 0);
        java.lang.Class<?> wildcardClass77 = intListList76.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test2002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2002");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem7 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray14 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem7.TwoPointer(intArray14, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList18 = threeSumProblem6.TwoPointer(intArray14, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem19 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem20.BruteForce(intArray23, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem19.Hashmap(intArray23, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem28 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem28.BruteForce(intArray31, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem19.TwoPointer(intArray31, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem37.BruteForce(intArray40, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem36.Hashmap(intArray40, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem45 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem45.BruteForce(intArray48, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem36.TwoPointer(intArray48, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem19.Hashmap(intArray48, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem6.Hashmap(intArray48, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem57 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem57.BruteForce(intArray60, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem6.TwoPointer(intArray60, (int) (short) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem0.Hashmap(intArray60, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem67 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem68 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem68.BruteForce(intArray71, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem67.Hashmap(intArray71, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem0.Hashmap(intArray71, (int) (short) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem78 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem79 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray86 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem79.TwoPointer(intArray86, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem78.TwoPointer(intArray86, (int) (byte) 0);
        int[] intArray95 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList97 = threeSumProblem78.Hashmap(intArray95, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList99 = threeSumProblem0.Hashmap(intArray95, (int) '#');
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intListList18);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList97);
        org.junit.Assert.assertNotNull(intListList99);
    }

    @Test
    public void test2003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2003");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem9.TwoPointer(intArray21, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem0.Hashmap(intArray21, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem28 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem28.BruteForce(intArray31, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem0.TwoPointer(intArray31, (int) (short) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem37.BruteForce(intArray40, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem36.Hashmap(intArray40, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem45 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem46.BruteForce(intArray49, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem45.Hashmap(intArray49, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem54.BruteForce(intArray57, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem45.TwoPointer(intArray57, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem36.Hashmap(intArray57, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem64 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem65 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem65.BruteForce(intArray68, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem64.Hashmap(intArray68, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem73 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem74.BruteForce(intArray77, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem73.Hashmap(intArray77, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem82 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray85 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem82.BruteForce(intArray85, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem73.TwoPointer(intArray85, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem64.Hashmap(intArray85, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem36.TwoPointer(intArray85, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList95 = threeSumProblem0.BruteForce(intArray85, 0);
        java.lang.Class<?> wildcardClass96 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(intListList93);
        org.junit.Assert.assertNotNull(intListList95);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test2004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2004");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray9 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem6.BruteForce(intArray9, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList13 = threeSumProblem0.TwoPointer(intArray9, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem15 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem15.BruteForce(intArray18, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem14.Hashmap(intArray18, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem23 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem24 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem24.BruteForce(intArray27, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem23.Hashmap(intArray27, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem14.BruteForce(intArray27, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray42 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem35.TwoPointer(intArray42, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem34.TwoPointer(intArray42, (int) (byte) 0);
        int[] intArray51 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem34.Hashmap(intArray51, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem14.BruteForce(intArray51, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem57 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem57.BruteForce(intArray60, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem56.Hashmap(intArray60, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem65 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem66 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem66.BruteForce(intArray69, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem65.Hashmap(intArray69, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem56.BruteForce(intArray69, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem14.TwoPointer(intArray69, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem0.Hashmap(intArray69, (int) (short) 1);
        java.lang.Class<?> wildcardClass80 = intListList79.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intListList13);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test2005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2005");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem17.Hashmap(intArray21, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem26.BruteForce(intArray29, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem17.TwoPointer(intArray29, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem34.Hashmap(intArray38, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem43.BruteForce(intArray46, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem34.TwoPointer(intArray46, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem17.Hashmap(intArray46, (int) 'a');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray62 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem53.BruteForce(intArray62, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem65 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem65.BruteForce(intArray68, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem53.Hashmap(intArray68, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem73 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray82 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem73.BruteForce(intArray82, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem53.TwoPointer(intArray82, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem17.Hashmap(intArray82, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem0.TwoPointer(intArray82, (-1));
        java.lang.Class<?> wildcardClass91 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test2006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2006");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.BruteForce(intArray13, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        int[] intArray37 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray37, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.BruteForce(intArray37, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem42.BruteForce(intArray45, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem0.Hashmap(intArray45, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem50 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem50.BruteForce(intArray53, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem0.TwoPointer(intArray53, (int) ' ');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem58 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray65 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem58.TwoPointer(intArray65, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem68 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem68.BruteForce(intArray71, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem74.BruteForce(intArray77, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem68.TwoPointer(intArray77, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem58.BruteForce(intArray77, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem0.BruteForce(intArray77, (int) (byte) -1);
        java.lang.Class<?> wildcardClass86 = intListList85.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test2007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2007");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray29 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem20.BruteForce(intArray29, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem0.TwoPointer(intArray29, (int) ' ');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray42 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem35.TwoPointer(intArray42, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem34.TwoPointer(intArray42, (int) (byte) 0);
        int[] intArray51 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem34.Hashmap(intArray51, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray62 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem55.TwoPointer(intArray62, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem54.TwoPointer(intArray62, (int) (byte) 0);
        int[] intArray71 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem54.Hashmap(intArray71, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem34.Hashmap(intArray71, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem76 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem76.BruteForce(intArray79, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem82 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray85 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem82.BruteForce(intArray85, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem76.TwoPointer(intArray85, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem34.BruteForce(intArray85, (int) (byte) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem0.Hashmap(intArray85, (-1));
        int[] intArray94 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem0.Hashmap(intArray94, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(intListList93);
    }

    @Test
    public void test2008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2008");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem9.TwoPointer(intArray21, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem0.Hashmap(intArray21, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem28 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem29.BruteForce(intArray32, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem28.Hashmap(intArray32, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem37.BruteForce(intArray40, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem28.TwoPointer(intArray40, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem0.TwoPointer(intArray40, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem47 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem47.BruteForce(intArray50, (int) '#');
        int[] intArray56 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem47.BruteForce(intArray56, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem59.BruteForce(intArray62, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem47.Hashmap(intArray62, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem67 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem67.BruteForce(intArray70, (int) '#');
        int[] intArray76 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem67.BruteForce(intArray76, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem47.TwoPointer(intArray76, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem0.BruteForce(intArray76, (int) (byte) 10);
        java.lang.Class<?> wildcardClass83 = intArray76.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test2009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2009");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem9.TwoPointer(intArray21, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem27.BruteForce(intArray30, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem26.Hashmap(intArray30, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem26.TwoPointer(intArray38, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem9.Hashmap(intArray38, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem0.BruteForce(intArray38, 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem47 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem48.BruteForce(intArray51, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem47.Hashmap(intArray51, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem57 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem57.BruteForce(intArray60, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem56.Hashmap(intArray60, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem47.BruteForce(intArray60, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem67 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem68 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray75 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem68.TwoPointer(intArray75, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem67.TwoPointer(intArray75, (int) (byte) 0);
        int[] intArray84 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem67.Hashmap(intArray84, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem47.BruteForce(intArray84, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem89 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray92 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem89.BruteForce(intArray92, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem47.Hashmap(intArray92, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList98 = threeSumProblem0.BruteForce(intArray92, 0);
        java.lang.Class<?> wildcardClass99 = intListList98.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(intListList96);
        org.junit.Assert.assertNotNull(intListList98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test2010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2010");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        int[] intArray21 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem12.BruteForce(intArray21, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem24 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem24.BruteForce(intArray27, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem12.Hashmap(intArray27, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem32 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem33 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray40 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem33.TwoPointer(intArray40, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem32.TwoPointer(intArray40, (int) (byte) 0);
        int[] intArray46 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem32.TwoPointer(intArray46, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem50 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray57 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem50.TwoPointer(intArray57, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem49.TwoPointer(intArray57, (int) (byte) 0);
        int[] intArray66 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem49.Hashmap(intArray66, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem32.TwoPointer(intArray66, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem12.Hashmap(intArray66, (int) (byte) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem73 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray80 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem73.TwoPointer(intArray80, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem12.Hashmap(intArray80, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem0.TwoPointer(intArray80, (int) (short) 10);
        java.lang.Class<?> wildcardClass87 = intListList86.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test2011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2011");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray27 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem20.TwoPointer(intArray27, (int) (short) 1);
        int[] intArray33 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem20.TwoPointer(intArray33, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray45 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem36.BruteForce(intArray45, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem48.BruteForce(intArray51, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem36.Hashmap(intArray51, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray65 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem56.BruteForce(intArray65, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem36.BruteForce(intArray65, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem70 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray77 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem70.TwoPointer(intArray77, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem36.TwoPointer(intArray77, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem20.BruteForce(intArray77, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem0.BruteForce(intArray77, (int) (short) 100);
        java.lang.Class<?> wildcardClass86 = intListList85.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test2012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2012");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.BruteForce(intArray4, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem19 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList24 = threeSumProblem19.BruteForce(intArray22, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem18.Hashmap(intArray22, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem9.BruteForce(intArray22, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray37 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem30.TwoPointer(intArray37, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem29.TwoPointer(intArray37, (int) (byte) 0);
        int[] intArray46 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem29.Hashmap(intArray46, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem9.BruteForce(intArray46, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray58 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem51.TwoPointer(intArray58, (int) (short) 1);
        int[] intArray64 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem51.TwoPointer(intArray64, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem9.TwoPointer(intArray64, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem0.Hashmap(intArray64, 10);
        java.lang.Class<?> wildcardClass71 = intListList70.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList24);
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test2013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2013");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem11 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray18 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem11.TwoPointer(intArray18, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem10.TwoPointer(intArray18, (int) (byte) 0);
        int[] intArray27 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem10.Hashmap(intArray27, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem31.BruteForce(intArray34, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem30.Hashmap(intArray34, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem40.BruteForce(intArray43, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem39.Hashmap(intArray43, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem30.BruteForce(intArray43, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem10.Hashmap(intArray43, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem0.TwoPointer(intArray43, (int) (short) 10);
        int[] intArray54 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem0.TwoPointer(intArray54, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
    }

    @Test
    public void test2014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2014");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem11 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray18 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem11.TwoPointer(intArray18, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem10.TwoPointer(intArray18, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList24 = threeSumProblem0.Hashmap(intArray18, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem25 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray34 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem25.BruteForce(intArray34, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem37.BruteForce(intArray40, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem25.Hashmap(intArray40, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem45 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem46.BruteForce(intArray49, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem45.Hashmap(intArray49, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem54.BruteForce(intArray57, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem45.TwoPointer(intArray57, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem25.Hashmap(intArray57, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem64 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem65 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray72 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem65.TwoPointer(intArray72, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem64.TwoPointer(intArray72, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem25.TwoPointer(intArray72, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem0.BruteForce(intArray72, (int) (short) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem81 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray84 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem81.BruteForce(intArray84, (int) '#');
        int[] intArray90 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem81.BruteForce(intArray90, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem0.BruteForce(intArray90, (int) '#');
        java.lang.Class<?> wildcardClass95 = intListList94.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intListList24);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test2015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2015");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem14.BruteForce(intArray17, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem13.Hashmap(intArray17, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem22 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem22.BruteForce(intArray25, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem13.TwoPointer(intArray25, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem31.BruteForce(intArray34, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem30.Hashmap(intArray34, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem39.BruteForce(intArray42, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem30.TwoPointer(intArray42, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem13.Hashmap(intArray42, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem0.Hashmap(intArray42, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray58 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem51.TwoPointer(intArray58, (int) (short) 1);
        int[] intArray64 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem51.TwoPointer(intArray64, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem67 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem68 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray75 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem68.TwoPointer(intArray75, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem67.TwoPointer(intArray75, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem51.BruteForce(intArray75, (int) (short) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem0.TwoPointer(intArray75, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem84 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray87 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem84.BruteForce(intArray87, (int) '#');
        int[] intArray93 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList95 = threeSumProblem84.BruteForce(intArray93, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList97 = threeSumProblem0.BruteForce(intArray93, (int) (byte) 100);
        java.lang.Class<?> wildcardClass98 = intArray93.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList95);
        org.junit.Assert.assertNotNull(intListList97);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test2016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2016");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray29 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem20.BruteForce(intArray29, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem0.BruteForce(intArray29, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray41 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem34.TwoPointer(intArray41, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem0.TwoPointer(intArray41, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem47 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray55 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem48.TwoPointer(intArray55, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem47.TwoPointer(intArray55, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem61 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem61.BruteForce(intArray64, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem60.Hashmap(intArray64, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem69 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem70 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray77 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem70.TwoPointer(intArray77, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem69.TwoPointer(intArray77, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem60.BruteForce(intArray77, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem47.BruteForce(intArray77, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem46.Hashmap(intArray77, (int) (byte) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem0.Hashmap(intArray77, (int) (byte) 0);
        java.lang.Class<?> wildcardClass90 = intArray77.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test2017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2017");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        int[] intArray21 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem12.BruteForce(intArray21, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem24 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem24.BruteForce(intArray27, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem12.Hashmap(intArray27, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem32 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem33 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem33.BruteForce(intArray36, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem32.Hashmap(intArray36, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray49 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem42.TwoPointer(intArray49, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem41.TwoPointer(intArray49, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem32.BruteForce(intArray49, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem12.TwoPointer(intArray49, (int) (byte) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem58 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem58.BruteForce(intArray61, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem64 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem64.BruteForce(intArray67, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem58.TwoPointer(intArray67, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem12.Hashmap(intArray67, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem75 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray82 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem75.TwoPointer(intArray82, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem74.TwoPointer(intArray82, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem12.TwoPointer(intArray82, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem0.BruteForce(intArray82, (int) ' ');
        int[] intArray95 = new int[] { (short) 100, (byte) 0, 0, 100 };
        java.util.List<java.util.List<java.lang.Integer>> intListList97 = threeSumProblem0.Hashmap(intArray95, 100);
        java.lang.Class<?> wildcardClass98 = intListList97.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0, 100, 100]");
        org.junit.Assert.assertNotNull(intListList97);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test2018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2018");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.BruteForce(intArray4, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem10.TwoPointer(intArray17, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem9.TwoPointer(intArray17, (int) (byte) 0);
        int[] intArray23 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem9.TwoPointer(intArray23, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem27.BruteForce(intArray30, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem26.Hashmap(intArray30, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem36.BruteForce(intArray39, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem35.Hashmap(intArray39, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem26.BruteForce(intArray39, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem47 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray54 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem47.TwoPointer(intArray54, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem46.TwoPointer(intArray54, (int) (byte) 0);
        int[] intArray63 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem46.Hashmap(intArray63, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem26.BruteForce(intArray63, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem9.Hashmap(intArray63, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem0.TwoPointer(intArray63, (int) (short) 10);
        java.lang.Class<?> wildcardClass72 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test2019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2019");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem21.BruteForce(intArray24, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem20.Hashmap(intArray24, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray37 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem30.TwoPointer(intArray37, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem29.TwoPointer(intArray37, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem20.BruteForce(intArray37, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem0.TwoPointer(intArray37, (int) (byte) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem47 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem47.BruteForce(intArray50, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem46.Hashmap(intArray50, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem56.BruteForce(intArray59, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem55.Hashmap(intArray59, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem46.BruteForce(intArray59, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem66 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem67 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem67.BruteForce(intArray70, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem66.Hashmap(intArray70, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem75 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem76 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray83 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem76.TwoPointer(intArray83, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem75.TwoPointer(intArray83, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem66.BruteForce(intArray83, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem46.TwoPointer(intArray83, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem0.Hashmap(intArray83, 0);
        int[] intArray94 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem0.BruteForce(intArray94, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(intListList93);
    }

    @Test
    public void test2020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2020");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem10.TwoPointer(intArray17, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem9.TwoPointer(intArray17, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem0.BruteForce(intArray17, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem24 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray33 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem24.BruteForce(intArray33, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray45 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem36.BruteForce(intArray45, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem48.BruteForce(intArray51, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem36.Hashmap(intArray51, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray65 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem56.BruteForce(intArray65, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem36.BruteForce(intArray65, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem70 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem71 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray78 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem71.TwoPointer(intArray78, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem70.TwoPointer(intArray78, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem36.Hashmap(intArray78, (int) (short) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem24.Hashmap(intArray78, (int) (short) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem0.BruteForce(intArray78, (int) (short) 100);
        int[] intArray89 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem0.TwoPointer(intArray89, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
    }

    @Test
    public void test2021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2021");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray25 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem18.TwoPointer(intArray25, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem17.TwoPointer(intArray25, (int) (byte) 0);
        int[] intArray34 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem17.Hashmap(intArray34, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem0.Hashmap(intArray34, (int) ' ');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray47 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem40.TwoPointer(intArray47, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem39.TwoPointer(intArray47, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem0.BruteForce(intArray47, 100);
        int[] intArray54 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem0.BruteForce(intArray54, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
    }

    @Test
    public void test2022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2022");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        int[] intArray20 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem0.BruteForce(intArray20, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
    }

    @Test
    public void test2023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2023");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem11 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray18 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem11.TwoPointer(intArray18, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem10.TwoPointer(intArray18, (int) (byte) 0);
        int[] intArray24 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem10.TwoPointer(intArray24, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem28 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray35 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem28.TwoPointer(intArray35, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem27.TwoPointer(intArray35, (int) (byte) 0);
        int[] intArray44 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem27.Hashmap(intArray44, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem10.TwoPointer(intArray44, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem49.BruteForce(intArray52, (int) '#');
        int[] intArray58 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem49.BruteForce(intArray58, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem61 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem61.BruteForce(intArray64, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem49.Hashmap(intArray64, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem69 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem70 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem70.BruteForce(intArray73, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem69.Hashmap(intArray73, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem78 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray81 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem78.BruteForce(intArray81, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem69.TwoPointer(intArray81, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem49.Hashmap(intArray81, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem10.Hashmap(intArray81, (int) (byte) 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem0.TwoPointer(intArray81, 0);
        int[] intArray92 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem0.TwoPointer(intArray92, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(intListList91);
    }

    @Test
    public void test2024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2024");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem19 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray26 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem19.TwoPointer(intArray26, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem18.TwoPointer(intArray26, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem9.BruteForce(intArray26, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem33 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem33.BruteForce(intArray36, (int) '#');
        int[] intArray42 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem33.BruteForce(intArray42, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem45 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem45.BruteForce(intArray48, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem33.Hashmap(intArray48, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray62 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem53.BruteForce(intArray62, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem33.TwoPointer(intArray62, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem9.BruteForce(intArray62, (int) (short) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem0.BruteForce(intArray62, 0);
        java.lang.Class<?> wildcardClass71 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test2025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2025");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem10.TwoPointer(intArray17, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray29 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem20.BruteForce(intArray29, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem32 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem32.BruteForce(intArray35, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray35, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem41.BruteForce(intArray44, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem40.Hashmap(intArray44, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem50 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray57 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem50.TwoPointer(intArray57, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem49.TwoPointer(intArray57, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem40.BruteForce(intArray57, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem20.TwoPointer(intArray57, (int) (byte) 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem10.TwoPointer(intArray57, (int) (byte) 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem0.Hashmap(intArray57, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem70 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem71 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray78 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem71.TwoPointer(intArray78, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem70.TwoPointer(intArray78, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem0.Hashmap(intArray78, (int) (byte) 100);
        int[] intArray89 = new int[] { (short) 1, (short) 1, '4', (byte) 100 };
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem0.TwoPointer(intArray89, (int) (short) 0);
        java.lang.Class<?> wildcardClass92 = intArray89.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[1, 1, 52, 100]");
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test2026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2026");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.BruteForce(intArray12, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem17.BruteForce(intArray20, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem23 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray30 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem23.TwoPointer(intArray30, (int) (short) 1);
        int[] intArray36 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem23.TwoPointer(intArray36, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray47 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem40.TwoPointer(intArray47, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem39.TwoPointer(intArray47, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem23.BruteForce(intArray47, (int) (short) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem17.Hashmap(intArray47, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem57 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray64 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem57.TwoPointer(intArray64, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem56.TwoPointer(intArray64, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem17.BruteForce(intArray64, (int) (byte) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem0.Hashmap(intArray64, (int) (byte) 100);
        java.lang.Class<?> wildcardClass73 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test2027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2027");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem14.BruteForce(intArray17, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem13.BruteForce(intArray17, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem22 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray29 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem22.TwoPointer(intArray29, (int) (short) 1);
        int[] intArray35 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem22.TwoPointer(intArray35, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem38 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray47 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem38.BruteForce(intArray47, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem50 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem50.BruteForce(intArray53, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray63 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem56.TwoPointer(intArray63, (int) (short) 1);
        int[] intArray69 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem56.TwoPointer(intArray69, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem72 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem73 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray80 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem73.TwoPointer(intArray80, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem72.TwoPointer(intArray80, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem56.BruteForce(intArray80, (int) (short) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem50.Hashmap(intArray80, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem38.BruteForce(intArray80, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem22.Hashmap(intArray80, (int) (short) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem13.Hashmap(intArray80, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem0.Hashmap(intArray80, (int) '4');
        java.lang.Class<?> wildcardClass97 = intArray80.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(intListList96);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test2028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2028");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem9.TwoPointer(intArray21, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem0.Hashmap(intArray21, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem28 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem29.BruteForce(intArray32, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem28.Hashmap(intArray32, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem38 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem38.BruteForce(intArray41, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem37.Hashmap(intArray41, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem28.BruteForce(intArray41, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem49.BruteForce(intArray52, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem48.Hashmap(intArray52, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem57 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem58 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray65 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem58.TwoPointer(intArray65, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem57.TwoPointer(intArray65, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem48.BruteForce(intArray65, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem28.TwoPointer(intArray65, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem0.TwoPointer(intArray65, (int) (short) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem76 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem77 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray84 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem77.TwoPointer(intArray84, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem76.TwoPointer(intArray84, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem0.TwoPointer(intArray84, (int) '4');
        int[] intArray91 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem0.TwoPointer(intArray91, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intListList90);
    }

    @Test
    public void test2029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2029");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        int[] intArray13 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem0.TwoPointer(intArray13, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem16 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem17.TwoPointer(intArray24, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem16.TwoPointer(intArray24, (int) (byte) 0);
        int[] intArray30 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem16.TwoPointer(intArray30, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem0.TwoPointer(intArray30, (int) (short) 0);
        java.lang.Class<?> wildcardClass35 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test2030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2030");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray29 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem20.BruteForce(intArray29, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem0.TwoPointer(intArray29, (int) ' ');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray42 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem35.TwoPointer(intArray42, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem34.TwoPointer(intArray42, (int) (byte) 0);
        int[] intArray51 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem34.Hashmap(intArray51, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray62 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem55.TwoPointer(intArray62, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem54.TwoPointer(intArray62, (int) (byte) 0);
        int[] intArray71 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem54.Hashmap(intArray71, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem34.Hashmap(intArray71, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem76 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem76.BruteForce(intArray79, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem82 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray85 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem82.BruteForce(intArray85, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem76.TwoPointer(intArray85, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem34.BruteForce(intArray85, (int) (byte) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem0.Hashmap(intArray85, (-1));
        int[] intArray94 = new int[] {};
        java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem0.TwoPointer(intArray94, (int) (short) 10);
        int[] intArray97 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList99 = threeSumProblem0.Hashmap(intArray97, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(intListList93);
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[]");
        org.junit.Assert.assertNotNull(intListList96);
    }

    @Test
    public void test2031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2031");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem17.Hashmap(intArray21, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem26.BruteForce(intArray29, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem17.TwoPointer(intArray29, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem34.Hashmap(intArray38, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem43.BruteForce(intArray46, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem34.TwoPointer(intArray46, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem17.Hashmap(intArray46, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem0.BruteForce(intArray46, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray63 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem56.TwoPointer(intArray63, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem55.TwoPointer(intArray63, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem0.TwoPointer(intArray63, (int) (short) 1);
        java.lang.Class<?> wildcardClass70 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test2032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2032");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem11 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray18 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem11.TwoPointer(intArray18, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem10.TwoPointer(intArray18, (int) (byte) 0);
        int[] intArray27 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem10.Hashmap(intArray27, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem31.TwoPointer(intArray38, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem30.TwoPointer(intArray38, (int) (byte) 0);
        int[] intArray47 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem30.Hashmap(intArray47, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem10.Hashmap(intArray47, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem52.BruteForce(intArray55, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem58 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem58.BruteForce(intArray61, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem52.TwoPointer(intArray61, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem10.BruteForce(intArray61, (int) (byte) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem0.TwoPointer(intArray61, (int) (byte) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem70 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem71 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem71.BruteForce(intArray74, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem70.Hashmap(intArray74, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem79 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem79.BruteForce(intArray82, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem70.TwoPointer(intArray82, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem0.BruteForce(intArray82, (int) (byte) 0);
        int[] intArray89 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem0.BruteForce(intArray89, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
    }

    @Test
    public void test2033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2033");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        int[] intArray13 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem0.TwoPointer(intArray13, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem16 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem17.BruteForce(intArray20, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList24 = threeSumProblem16.BruteForce(intArray20, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem0.Hashmap(intArray20, 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray36 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem27.BruteForce(intArray36, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem39.BruteForce(intArray42, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem27.Hashmap(intArray42, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem47 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem47.BruteForce(intArray50, (int) '#');
        int[] intArray56 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem47.BruteForce(intArray56, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem27.TwoPointer(intArray56, (int) ' ');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem61 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray70 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem61.BruteForce(intArray70, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem27.BruteForce(intArray70, (int) (short) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem0.TwoPointer(intArray70, (int) 'a');
        java.lang.Class<?> wildcardClass77 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intListList24);
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test2034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2034");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.BruteForce(intArray4, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem10.TwoPointer(intArray17, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem9.TwoPointer(intArray17, (int) (byte) 0);
        int[] intArray26 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem9.Hashmap(intArray26, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem30.BruteForce(intArray33, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem29.Hashmap(intArray33, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem38 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem39.BruteForce(intArray42, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem38.Hashmap(intArray42, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem29.BruteForce(intArray42, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem9.Hashmap(intArray42, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem0.TwoPointer(intArray42, (int) (byte) 1);
        java.lang.Class<?> wildcardClass53 = intListList52.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test2035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2035");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem17.Hashmap(intArray21, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem26.BruteForce(intArray29, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem17.TwoPointer(intArray29, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem34.Hashmap(intArray38, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem43.BruteForce(intArray46, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem34.TwoPointer(intArray46, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem17.Hashmap(intArray46, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem0.BruteForce(intArray46, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem55.BruteForce(intArray58, (int) '#');
        int[] intArray64 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem55.BruteForce(intArray64, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem67 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem67.BruteForce(intArray70, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem55.Hashmap(intArray70, (int) (byte) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem0.TwoPointer(intArray70, 100);
        java.lang.Class<?> wildcardClass77 = intListList76.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test2036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2036");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem16 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem16.BruteForce(intArray19, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem10.TwoPointer(intArray19, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem0.BruteForce(intArray19, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray34 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem27.TwoPointer(intArray34, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem26.TwoPointer(intArray34, (int) (byte) 0);
        int[] intArray43 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem26.Hashmap(intArray43, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem47 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray54 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem47.TwoPointer(intArray54, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem46.TwoPointer(intArray54, (int) (byte) 0);
        int[] intArray63 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem46.Hashmap(intArray63, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem26.Hashmap(intArray63, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem68 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem68.BruteForce(intArray71, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem74.BruteForce(intArray77, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem68.TwoPointer(intArray77, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem26.BruteForce(intArray77, (int) (byte) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem0.Hashmap(intArray77, (int) (byte) 100);
        java.lang.Class<?> wildcardClass86 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test2037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2037");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        int[] intArray13 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem0.TwoPointer(intArray13, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem16 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem17.BruteForce(intArray20, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList24 = threeSumProblem16.Hashmap(intArray20, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem25 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem25.BruteForce(intArray28, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem16.TwoPointer(intArray28, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem33 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem34.BruteForce(intArray37, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem33.Hashmap(intArray37, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem42.BruteForce(intArray45, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem33.TwoPointer(intArray45, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem50 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem51.BruteForce(intArray54, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem50.Hashmap(intArray54, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem59.BruteForce(intArray62, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem50.TwoPointer(intArray62, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem33.Hashmap(intArray62, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem16.BruteForce(intArray62, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem71 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem71.BruteForce(intArray74, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem77 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem77.BruteForce(intArray80, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem71.TwoPointer(intArray80, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem16.Hashmap(intArray80, (int) (short) 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem0.TwoPointer(intArray80, 10);
        int[] intArray89 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem0.BruteForce(intArray89, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intListList24);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
    }

    @Test
    public void test2038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2038");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray29 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem20.BruteForce(intArray29, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem0.BruteForce(intArray29, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray43 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem34.BruteForce(intArray43, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem46.BruteForce(intArray49, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem34.Hashmap(intArray49, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem55.BruteForce(intArray58, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem54.Hashmap(intArray58, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem34.TwoPointer(intArray58, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem0.BruteForce(intArray58, 10);
        java.lang.Class<?> wildcardClass67 = intListList66.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test2039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2039");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray29 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem20.BruteForce(intArray29, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem0.BruteForce(intArray29, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray41 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem34.TwoPointer(intArray41, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem0.TwoPointer(intArray41, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem47 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray54 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem47.TwoPointer(intArray54, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem46.TwoPointer(intArray54, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray67 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem60.TwoPointer(intArray67, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem59.TwoPointer(intArray67, (int) (byte) 0);
        int[] intArray76 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem59.Hashmap(intArray76, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem46.Hashmap(intArray76, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem0.TwoPointer(intArray76, (int) (short) 10);
        java.lang.Class<?> wildcardClass83 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test2040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2040");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        int[] intArray14 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem1.TwoPointer(intArray14, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray25 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem18.TwoPointer(intArray25, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem17.TwoPointer(intArray25, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem1.BruteForce(intArray25, (int) (short) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem32 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem32.BruteForce(intArray35, (int) '#');
        int[] intArray41 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem32.BruteForce(intArray41, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem44 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem44.BruteForce(intArray47, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem32.Hashmap(intArray47, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem53.BruteForce(intArray56, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem52.Hashmap(intArray56, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem61 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem61.BruteForce(intArray64, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem52.TwoPointer(intArray64, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem32.Hashmap(intArray64, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem1.TwoPointer(intArray64, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem0.TwoPointer(intArray64, 0);
        int[] intArray75 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem0.Hashmap(intArray75, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intListList74);
    }

    @Test
    public void test2041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2041");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray13 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem0.BruteForce(intArray13, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
    }

    @Test
    public void test2042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2042");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem9.TwoPointer(intArray21, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem0.Hashmap(intArray21, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem28 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem28.BruteForce(intArray31, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem0.TwoPointer(intArray31, (int) (short) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem37.BruteForce(intArray40, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem36.Hashmap(intArray40, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem45 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem46.BruteForce(intArray49, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem45.Hashmap(intArray49, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem54.BruteForce(intArray57, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem45.TwoPointer(intArray57, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem36.Hashmap(intArray57, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem64 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem64.BruteForce(intArray67, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem36.TwoPointer(intArray67, (int) (short) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem0.BruteForce(intArray67, (int) (short) 10);
        java.lang.Class<?> wildcardClass74 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test2043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2043");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem11 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray14 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem11.BruteForce(intArray14, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList18 = threeSumProblem10.Hashmap(intArray14, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem19 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList24 = threeSumProblem19.BruteForce(intArray22, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem10.TwoPointer(intArray22, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem28 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem28.BruteForce(intArray31, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem27.Hashmap(intArray31, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem36.BruteForce(intArray39, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem27.TwoPointer(intArray39, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem10.Hashmap(intArray39, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem0.Hashmap(intArray39, (int) (short) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem49.BruteForce(intArray52, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem48.BruteForce(intArray52, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem57 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem57.BruteForce(intArray60, (int) '#');
        int[] intArray66 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem57.BruteForce(intArray66, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem48.BruteForce(intArray66, (int) (short) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem71 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem72 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray79 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem72.TwoPointer(intArray79, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem71.TwoPointer(intArray79, (int) (byte) 0);
        int[] intArray85 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem71.TwoPointer(intArray85, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem48.BruteForce(intArray85, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem0.Hashmap(intArray85, (int) ' ');
        java.lang.Class<?> wildcardClass92 = intListList91.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intListList18);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList24);
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0]");
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test2044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2044");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        int[] intArray13 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem0.TwoPointer(intArray13, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem16 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray25 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem16.BruteForce(intArray25, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem28 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem28.BruteForce(intArray31, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem16.Hashmap(intArray31, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray44 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem37.TwoPointer(intArray44, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem36.TwoPointer(intArray44, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem50 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem50.BruteForce(intArray53, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem49.Hashmap(intArray53, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem58 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem58.BruteForce(intArray61, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem49.TwoPointer(intArray61, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem66 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem67 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem67.BruteForce(intArray70, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem66.Hashmap(intArray70, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem75 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem75.BruteForce(intArray78, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem66.TwoPointer(intArray78, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem49.Hashmap(intArray78, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem36.Hashmap(intArray78, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem16.BruteForce(intArray78, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem0.Hashmap(intArray78, (int) (short) 100);
        int[] intArray91 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem0.BruteForce(intArray91, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intListList90);
    }

    @Test
    public void test2045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2045");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        int[] intArray13 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem0.TwoPointer(intArray13, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem16 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem17.BruteForce(intArray20, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList24 = threeSumProblem16.BruteForce(intArray20, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem0.Hashmap(intArray20, 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray36 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem27.BruteForce(intArray36, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem39.BruteForce(intArray42, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem27.Hashmap(intArray42, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem47 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem47.BruteForce(intArray50, (int) '#');
        int[] intArray56 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem47.BruteForce(intArray56, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem27.TwoPointer(intArray56, (int) ' ');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem61 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem62 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem62.BruteForce(intArray65, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem61.Hashmap(intArray65, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem70 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem70.BruteForce(intArray73, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem61.TwoPointer(intArray73, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem27.BruteForce(intArray73, (int) 'a');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem80 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem81 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray84 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem81.BruteForce(intArray84, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem80.Hashmap(intArray84, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem27.Hashmap(intArray84, (int) (short) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem0.BruteForce(intArray84, (int) 'a');
        int[] intArray93 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList95 = threeSumProblem0.TwoPointer(intArray93, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intListList24);
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(intListList92);
    }

    @Test
    public void test2046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2046");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem11 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray18 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem11.TwoPointer(intArray18, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem10.TwoPointer(intArray18, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList24 = threeSumProblem0.Hashmap(intArray18, (int) (byte) 100);
        java.lang.Class<?> wildcardClass25 = intListList24.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intListList24);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test2047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2047");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem21.BruteForce(intArray24, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem20.BruteForce(intArray24, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem29.BruteForce(intArray32, (int) '#');
        int[] intArray38 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem29.BruteForce(intArray38, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem20.BruteForce(intArray38, (int) (short) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray52 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem43.BruteForce(intArray52, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem55.BruteForce(intArray58, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem61 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray68 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem61.TwoPointer(intArray68, (int) (short) 1);
        int[] intArray74 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem61.TwoPointer(intArray74, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem77 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem78 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray85 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem78.TwoPointer(intArray85, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem77.TwoPointer(intArray85, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem61.BruteForce(intArray85, (int) (short) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem55.Hashmap(intArray85, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList95 = threeSumProblem43.BruteForce(intArray85, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList97 = threeSumProblem20.TwoPointer(intArray85, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList99 = threeSumProblem0.TwoPointer(intArray85, (int) (byte) 100);
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(intListList93);
        org.junit.Assert.assertNotNull(intListList95);
        org.junit.Assert.assertNotNull(intListList97);
        org.junit.Assert.assertNotNull(intListList99);
    }

    @Test
    public void test2048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2048");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem11 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray18 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem11.TwoPointer(intArray18, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem10.TwoPointer(intArray18, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList24 = threeSumProblem0.Hashmap(intArray18, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem25 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray32 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem25.TwoPointer(intArray32, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray43 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem36.TwoPointer(intArray43, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem35.TwoPointer(intArray43, (int) (byte) 0);
        int[] intArray52 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem35.Hashmap(intArray52, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem56.BruteForce(intArray59, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem55.Hashmap(intArray59, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem64 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem65 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem65.BruteForce(intArray68, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem64.Hashmap(intArray68, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem55.BruteForce(intArray68, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem35.Hashmap(intArray68, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem25.TwoPointer(intArray68, (int) (short) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem79 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem79.BruteForce(intArray82, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem85 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray88 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem85.BruteForce(intArray88, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem79.TwoPointer(intArray88, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem25.BruteForce(intArray88, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem0.Hashmap(intArray88, (-1));
        int[] intArray97 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList99 = threeSumProblem0.BruteForce(intArray97, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intListList24);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(intListList96);
    }

    @Test
    public void test2049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2049");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.BruteForce(intArray13, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        int[] intArray37 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray37, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.BruteForce(intArray37, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem42.BruteForce(intArray45, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem0.Hashmap(intArray45, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem50 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray59 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem52.TwoPointer(intArray59, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem51.TwoPointer(intArray59, (int) (byte) 0);
        int[] intArray65 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem51.TwoPointer(intArray65, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem50.TwoPointer(intArray65, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem0.TwoPointer(intArray65, (int) ' ');
        java.lang.Class<?> wildcardClass72 = intListList71.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test2050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2050");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray9 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem6.BruteForce(intArray9, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList13 = threeSumProblem0.TwoPointer(intArray9, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem14.BruteForce(intArray17, (int) '#');
        int[] intArray23 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem14.BruteForce(intArray23, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem0.BruteForce(intArray23, (int) '4');
        int[] intArray28 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem0.BruteForce(intArray28, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intListList13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intListList27);
    }

    @Test
    public void test2051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2051");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray16 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList18 = threeSumProblem13.BruteForce(intArray16, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem12.BruteForce(intArray16, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray30 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem21.BruteForce(intArray30, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem12.BruteForce(intArray30, (int) (short) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray46 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem37.BruteForce(intArray46, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem49.BruteForce(intArray52, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem37.Hashmap(intArray52, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem57 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem58 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem58.BruteForce(intArray61, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem57.Hashmap(intArray61, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem66 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem67 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray74 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem67.TwoPointer(intArray74, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem66.TwoPointer(intArray74, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem57.BruteForce(intArray74, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem37.TwoPointer(intArray74, (int) (byte) 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem0.Hashmap(intArray74, (int) (byte) 1);
        int[] intArray85 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem0.BruteForce(intArray85, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList18);
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
    }

    @Test
    public void test2052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2052");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray25 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem18.TwoPointer(intArray25, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem17.TwoPointer(intArray25, (int) (byte) 0);
        int[] intArray34 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem17.Hashmap(intArray34, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem0.Hashmap(intArray34, (int) ' ');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray47 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem40.TwoPointer(intArray47, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem39.TwoPointer(intArray47, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem0.Hashmap(intArray47, (int) (byte) 10);
        java.lang.Class<?> wildcardClass54 = intListList53.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test2053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2053");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray9 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem6.BruteForce(intArray9, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList13 = threeSumProblem0.TwoPointer(intArray9, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem14.BruteForce(intArray17, (int) '#');
        int[] intArray23 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem14.BruteForce(intArray23, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem0.BruteForce(intArray23, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem28 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray36 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem29.TwoPointer(intArray36, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem28.TwoPointer(intArray36, (int) (byte) 0);
        int[] intArray45 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem28.Hashmap(intArray45, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray56 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem49.TwoPointer(intArray56, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem48.TwoPointer(intArray56, (int) (byte) 0);
        int[] intArray65 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem48.Hashmap(intArray65, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem28.Hashmap(intArray65, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem70 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem70.BruteForce(intArray73, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem76 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem76.BruteForce(intArray79, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem70.TwoPointer(intArray79, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem28.BruteForce(intArray79, (int) (byte) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem0.TwoPointer(intArray79, (int) (short) 10);
        java.lang.Class<?> wildcardClass88 = intListList87.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intListList13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test2054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2054");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray16 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList18 = threeSumProblem13.BruteForce(intArray16, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem19 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray27 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem20.TwoPointer(intArray27, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem19.TwoPointer(intArray27, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem32 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem33 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem33.BruteForce(intArray36, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem32.Hashmap(intArray36, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem41.BruteForce(intArray44, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem32.TwoPointer(intArray44, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem50 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem50.BruteForce(intArray53, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem49.Hashmap(intArray53, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem58 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem58.BruteForce(intArray61, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem49.TwoPointer(intArray61, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem32.Hashmap(intArray61, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem19.Hashmap(intArray61, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem70 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem70.BruteForce(intArray73, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem19.TwoPointer(intArray73, (int) (short) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem13.Hashmap(intArray73, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem0.TwoPointer(intArray73, (int) (byte) 0);
        java.lang.Class<?> wildcardClass82 = intListList81.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList18);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test2055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2055");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray29 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem20.BruteForce(intArray29, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem32 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem32.BruteForce(intArray35, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray35, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray49 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem40.BruteForce(intArray49, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem20.BruteForce(intArray49, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray61 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem54.TwoPointer(intArray61, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem20.TwoPointer(intArray61, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem66 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray73 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem66.TwoPointer(intArray73, (int) (short) 1);
        int[] intArray79 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem66.TwoPointer(intArray79, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem20.Hashmap(intArray79, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem0.Hashmap(intArray79, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem86 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray89 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem86.BruteForce(intArray89, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem0.Hashmap(intArray89, (int) (short) -1);
        int[] intArray94 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem0.TwoPointer(intArray94, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(intListList93);
    }

    @Test
    public void test2056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2056");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem9.TwoPointer(intArray21, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem0.Hashmap(intArray21, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem28 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem29.BruteForce(intArray32, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem28.Hashmap(intArray32, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem38 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem38.BruteForce(intArray41, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem37.Hashmap(intArray41, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem46.BruteForce(intArray49, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem37.TwoPointer(intArray49, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem28.Hashmap(intArray49, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem56.BruteForce(intArray59, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem28.TwoPointer(intArray59, (int) (short) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem0.BruteForce(intArray59, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem66 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem67 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray74 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem67.TwoPointer(intArray74, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem66.TwoPointer(intArray74, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem0.Hashmap(intArray74, 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem81 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray88 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem81.TwoPointer(intArray88, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem0.TwoPointer(intArray88, (int) '#');
        int[] intArray93 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList95 = threeSumProblem0.Hashmap(intArray93, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(intListList92);
    }

    @Test
    public void test2057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2057");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem11 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray14 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem11.BruteForce(intArray14, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList18 = threeSumProblem10.Hashmap(intArray14, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem19 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem20.BruteForce(intArray23, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem19.Hashmap(intArray23, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem10.BruteForce(intArray23, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem31.TwoPointer(intArray38, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem30.TwoPointer(intArray38, (int) (byte) 0);
        int[] intArray47 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem30.Hashmap(intArray47, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem10.BruteForce(intArray47, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem52.BruteForce(intArray55, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem10.Hashmap(intArray55, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem60.BruteForce(intArray63, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem10.TwoPointer(intArray63, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem9.TwoPointer(intArray63, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem0.Hashmap(intArray63, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem72 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray79 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem72.TwoPointer(intArray79, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem0.Hashmap(intArray79, 1);
        int[] intArray84 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem0.TwoPointer(intArray84, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intListList18);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
    }

    @Test
    public void test2058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2058");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray9 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem6.BruteForce(intArray9, (int) '#');
        int[] intArray15 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem6.BruteForce(intArray15, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem6.Hashmap(intArray21, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray35 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem26.BruteForce(intArray35, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem6.TwoPointer(intArray35, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.TwoPointer(intArray35, (int) (short) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem43.BruteForce(intArray46, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem42.BruteForce(intArray46, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray60 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem51.BruteForce(intArray60, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem42.BruteForce(intArray60, (int) (short) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem65 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem66 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray73 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem66.TwoPointer(intArray73, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem65.TwoPointer(intArray73, (int) (byte) 0);
        int[] intArray79 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem65.TwoPointer(intArray79, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem42.BruteForce(intArray79, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem0.BruteForce(intArray79, (int) (short) 100);
        int[] intArray86 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem0.TwoPointer(intArray86, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0]");
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
    }

    @Test
    public void test2059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2059");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray9 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem6.BruteForce(intArray9, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList13 = threeSumProblem0.TwoPointer(intArray9, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem15 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem15.BruteForce(intArray18, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem14.Hashmap(intArray18, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem23 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray26 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem23.BruteForce(intArray26, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem14.TwoPointer(intArray26, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem0.BruteForce(intArray26, (int) ' ');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem33 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem34.BruteForce(intArray37, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem33.Hashmap(intArray37, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem43.BruteForce(intArray46, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem42.Hashmap(intArray46, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem51.BruteForce(intArray54, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem42.TwoPointer(intArray54, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem33.Hashmap(intArray54, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem61 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem62 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem62.BruteForce(intArray65, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem61.Hashmap(intArray65, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem70 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem71 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem71.BruteForce(intArray74, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem70.Hashmap(intArray74, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem79 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem79.BruteForce(intArray82, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem70.TwoPointer(intArray82, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem61.Hashmap(intArray82, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem33.TwoPointer(intArray82, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem0.BruteForce(intArray82, 0);
        java.lang.Class<?> wildcardClass93 = intListList92.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intListList13);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test2060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2060");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem14.TwoPointer(intArray21, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem13.TwoPointer(intArray21, (int) (byte) 0);
        int[] intArray30 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem13.Hashmap(intArray30, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem0.Hashmap(intArray30, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem0.TwoPointer(intArray38, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray52 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem43.BruteForce(intArray52, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem55.BruteForce(intArray58, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem43.Hashmap(intArray58, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem63 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray72 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem63.BruteForce(intArray72, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem43.BruteForce(intArray72, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem77 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray84 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem77.TwoPointer(intArray84, (int) (short) 1);
        int[] intArray90 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem77.TwoPointer(intArray90, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem43.Hashmap(intArray90, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem0.Hashmap(intArray90, (int) (byte) -1);
        java.lang.Class<?> wildcardClass97 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(intListList96);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test2061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2061");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem21.BruteForce(intArray24, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem20.Hashmap(intArray24, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem0.TwoPointer(intArray24, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem32 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem32.BruteForce(intArray35, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem31.Hashmap(intArray35, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem41.BruteForce(intArray44, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem40.Hashmap(intArray44, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem31.BruteForce(intArray44, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem0.BruteForce(intArray44, (int) ' ');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray62 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem55.TwoPointer(intArray62, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem54.TwoPointer(intArray62, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem67 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem68 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem68.BruteForce(intArray71, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem67.Hashmap(intArray71, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem76 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem77 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray84 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem77.TwoPointer(intArray84, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem76.TwoPointer(intArray84, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem67.BruteForce(intArray84, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem54.BruteForce(intArray84, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem53.Hashmap(intArray84, (int) (byte) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem0.BruteForce(intArray84, (int) (short) 0);
        java.lang.Class<?> wildcardClass97 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(intListList96);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test2062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2062");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray14 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray14, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray25 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem18.TwoPointer(intArray25, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem17.TwoPointer(intArray25, (int) (byte) 0);
        int[] intArray34 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem17.Hashmap(intArray34, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem38 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem38.TwoPointer(intArray45, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem37.TwoPointer(intArray45, (int) (byte) 0);
        int[] intArray54 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem37.Hashmap(intArray54, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem17.Hashmap(intArray54, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem59.BruteForce(intArray62, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem17.Hashmap(intArray62, (int) (byte) 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem0.TwoPointer(intArray62, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem69 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray76 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem69.TwoPointer(intArray76, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem0.Hashmap(intArray76, (int) (byte) 100);
        java.lang.Class<?> wildcardClass81 = intArray76.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0]");
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test2063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2063");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem21.BruteForce(intArray24, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem20.Hashmap(intArray24, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem30.BruteForce(intArray33, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem29.Hashmap(intArray33, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.BruteForce(intArray33, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.Hashmap(intArray33, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem42.BruteForce(intArray45, (int) '#');
        int[] intArray51 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem42.BruteForce(intArray51, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem54.BruteForce(intArray57, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem42.Hashmap(intArray57, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem62 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem63 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem63.BruteForce(intArray66, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem62.Hashmap(intArray66, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem71 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem72 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray79 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem72.TwoPointer(intArray79, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem71.TwoPointer(intArray79, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem62.BruteForce(intArray79, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem42.TwoPointer(intArray79, (int) (byte) 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem0.Hashmap(intArray79, (int) (short) 10);
        java.lang.Class<?> wildcardClass90 = intListList89.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test2064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2064");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem9.TwoPointer(intArray21, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem27.BruteForce(intArray30, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem26.Hashmap(intArray30, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem26.TwoPointer(intArray38, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem9.Hashmap(intArray38, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem0.BruteForce(intArray38, 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem47 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray54 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem47.TwoPointer(intArray54, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem57 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem57.BruteForce(intArray60, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem63 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem63.BruteForce(intArray66, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem57.TwoPointer(intArray66, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem47.BruteForce(intArray66, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem0.TwoPointer(intArray66, 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem75 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem76 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem76.BruteForce(intArray79, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem75.BruteForce(intArray79, (int) (short) 1);
        int[] intArray85 = new int[] { '#' };
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem75.TwoPointer(intArray85, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem0.Hashmap(intArray85, (int) (short) 1);
        int[] intArray90 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem0.BruteForce(intArray90, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[35]");
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(intListList89);
    }

    @Test
    public void test2065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2065");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray9 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem6.BruteForce(intArray9, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList13 = threeSumProblem0.TwoPointer(intArray9, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem14.BruteForce(intArray17, (int) '#');
        int[] intArray23 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem14.BruteForce(intArray23, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem0.BruteForce(intArray23, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem28 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem28.BruteForce(intArray31, (int) '#');
        int[] intArray37 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem28.BruteForce(intArray37, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem40.BruteForce(intArray43, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray53 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem46.TwoPointer(intArray53, (int) (short) 1);
        int[] intArray59 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem46.TwoPointer(intArray59, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem62 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem63 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray70 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem63.TwoPointer(intArray70, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem62.TwoPointer(intArray70, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem46.BruteForce(intArray70, (int) (short) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem40.Hashmap(intArray70, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem28.BruteForce(intArray70, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem0.TwoPointer(intArray70, 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem83 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray86 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem83.BruteForce(intArray86, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem89 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray92 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem89.BruteForce(intArray92, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem83.TwoPointer(intArray92, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList98 = threeSumProblem0.TwoPointer(intArray92, (int) ' ');
        java.lang.Class<?> wildcardClass99 = intListList98.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intListList13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(intListList96);
        org.junit.Assert.assertNotNull(intListList98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test2066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2066");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray9 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem6.BruteForce(intArray9, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList13 = threeSumProblem0.TwoPointer(intArray9, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem15 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem15.BruteForce(intArray18, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem14.Hashmap(intArray18, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem23 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray26 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem23.BruteForce(intArray26, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem14.TwoPointer(intArray26, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem0.BruteForce(intArray26, (int) ' ');
        int[] intArray39 = new int[] { (short) 100, (byte) 100, '4', (byte) -1, (byte) 0, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.Hashmap(intArray39, (int) (byte) 0);
        java.lang.Class<?> wildcardClass42 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intListList13);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0, 52, 97, 100, 100]");
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test2067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2067");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        int[] intArray13 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem0.TwoPointer(intArray13, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem16 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem16.TwoPointer(intArray23, (int) (short) 1);
        int[] intArray29 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem16.TwoPointer(intArray29, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem32 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem33 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem33.BruteForce(intArray36, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem32.Hashmap(intArray36, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray49 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem42.TwoPointer(intArray49, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem41.TwoPointer(intArray49, (int) (byte) 0);
        int[] intArray58 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem41.Hashmap(intArray58, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem61 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem62 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray69 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem62.TwoPointer(intArray69, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem61.TwoPointer(intArray69, (int) (byte) 0);
        int[] intArray78 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem61.Hashmap(intArray78, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem41.Hashmap(intArray78, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem32.Hashmap(intArray78, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem16.BruteForce(intArray78, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem0.Hashmap(intArray78, (int) (byte) 0);
        java.lang.Class<?> wildcardClass89 = intArray78.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test2068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2068");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.BruteForce(intArray13, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray29 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem20.BruteForce(intArray29, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem32 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem32.BruteForce(intArray35, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray35, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray49 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem40.BruteForce(intArray49, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem20.BruteForce(intArray49, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray61 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem54.TwoPointer(intArray61, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem20.TwoPointer(intArray61, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem66 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray73 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem66.TwoPointer(intArray73, (int) (short) 1);
        int[] intArray79 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem66.TwoPointer(intArray79, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem20.BruteForce(intArray79, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem0.Hashmap(intArray79, 10);
        java.lang.Class<?> wildcardClass86 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test2069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2069");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem16 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem16.BruteForce(intArray19, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem10.TwoPointer(intArray19, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem0.BruteForce(intArray19, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray34 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem27.TwoPointer(intArray34, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem26.TwoPointer(intArray34, (int) (byte) 0);
        int[] intArray40 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem26.TwoPointer(intArray40, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem44 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray51 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem44.TwoPointer(intArray51, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem43.TwoPointer(intArray51, (int) (byte) 0);
        int[] intArray60 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem43.Hashmap(intArray60, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem26.TwoPointer(intArray60, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem0.BruteForce(intArray60, (int) (byte) 1);
        int[] intArray67 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem0.TwoPointer(intArray67, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0]");
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
    }

    @Test
    public void test2070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2070");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        int[] intArray37 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray37, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.Hashmap(intArray37, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem43.BruteForce(intArray46, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem42.Hashmap(intArray46, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem52.BruteForce(intArray55, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem51.Hashmap(intArray55, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem42.BruteForce(intArray55, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem0.BruteForce(intArray55, (int) (byte) 0);
        int[] intArray64 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem0.TwoPointer(intArray64, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
    }

    @Test
    public void test2071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2071");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem10.TwoPointer(intArray17, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem9.TwoPointer(intArray17, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem0.BruteForce(intArray17, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem24 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray33 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem24.BruteForce(intArray33, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray45 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem36.BruteForce(intArray45, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem48.BruteForce(intArray51, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem36.Hashmap(intArray51, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray65 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem56.BruteForce(intArray65, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem36.BruteForce(intArray65, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem70 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem71 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray78 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem71.TwoPointer(intArray78, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem70.TwoPointer(intArray78, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem36.Hashmap(intArray78, (int) (short) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem24.Hashmap(intArray78, (int) (short) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem0.TwoPointer(intArray78, (int) 'a');
        java.lang.Class<?> wildcardClass89 = intListList88.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test2072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2072");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray19 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem10.BruteForce(intArray19, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem22 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem22.BruteForce(intArray25, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem10.Hashmap(intArray25, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem31.BruteForce(intArray34, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem30.Hashmap(intArray34, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray47 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem40.TwoPointer(intArray47, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem39.TwoPointer(intArray47, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem30.BruteForce(intArray47, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem10.TwoPointer(intArray47, (int) (byte) 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem0.TwoPointer(intArray47, (int) (byte) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem58 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem59.BruteForce(intArray62, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem58.BruteForce(intArray62, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem0.BruteForce(intArray62, (int) (short) 0);
        java.lang.Class<?> wildcardClass69 = intArray62.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test2073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2073");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem11 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray18 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem11.TwoPointer(intArray18, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem10.TwoPointer(intArray18, (int) (byte) 0);
        int[] intArray27 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem10.Hashmap(intArray27, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem0.BruteForce(intArray27, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem32 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem33 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem33.BruteForce(intArray36, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem32.Hashmap(intArray36, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem41.BruteForce(intArray44, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem32.TwoPointer(intArray44, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem50 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem50.BruteForce(intArray53, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem49.BruteForce(intArray53, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem32.TwoPointer(intArray53, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem61 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem61.BruteForce(intArray64, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem60.Hashmap(intArray64, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem32.BruteForce(intArray64, (int) (byte) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem71 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem72 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem72.BruteForce(intArray75, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem71.Hashmap(intArray75, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem80 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray83 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem80.BruteForce(intArray83, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem71.TwoPointer(intArray83, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem32.TwoPointer(intArray83, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem0.TwoPointer(intArray83, 0);
        java.lang.Class<?> wildcardClass92 = intArray83.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test2074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2074");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem22 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray29 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem22.TwoPointer(intArray29, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem21.TwoPointer(intArray29, (int) (byte) 0);
        int[] intArray35 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem21.TwoPointer(intArray35, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.TwoPointer(intArray35, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.BruteForce(intArray35, (int) '4');
        java.lang.Class<?> wildcardClass42 = intListList41.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0]");
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test2075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2075");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem11 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray18 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem11.TwoPointer(intArray18, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem10.TwoPointer(intArray18, (int) (byte) 0);
        int[] intArray27 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem10.Hashmap(intArray27, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem31.BruteForce(intArray34, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem30.Hashmap(intArray34, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem10.TwoPointer(intArray34, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem42.BruteForce(intArray45, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem41.Hashmap(intArray45, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem50 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem51.BruteForce(intArray54, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem50.Hashmap(intArray54, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem41.BruteForce(intArray54, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem10.BruteForce(intArray54, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem0.TwoPointer(intArray54, (int) (short) 1);
        int[] intArray69 = new int[] { (short) -1, '#', (short) 1, '4' };
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem0.Hashmap(intArray69, (int) (short) -1);
        java.lang.Class<?> wildcardClass72 = intListList71.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 1, 35, 52]");
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test2076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2076");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem11 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray18 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem11.TwoPointer(intArray18, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem10.TwoPointer(intArray18, (int) (byte) 0);
        int[] intArray27 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem10.Hashmap(intArray27, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem31.BruteForce(intArray34, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem30.Hashmap(intArray34, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem40.BruteForce(intArray43, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem39.Hashmap(intArray43, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem30.BruteForce(intArray43, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem10.Hashmap(intArray43, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem0.TwoPointer(intArray43, (int) (short) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem54.BruteForce(intArray57, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem60.BruteForce(intArray63, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem54.TwoPointer(intArray63, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem0.BruteForce(intArray63, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem70 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem71 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem71.BruteForce(intArray74, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem70.BruteForce(intArray74, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem0.TwoPointer(intArray74, (int) (short) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem81 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem82 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray89 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem82.TwoPointer(intArray89, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem81.TwoPointer(intArray89, (int) (byte) 0);
        int[] intArray95 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList97 = threeSumProblem81.TwoPointer(intArray95, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList99 = threeSumProblem0.TwoPointer(intArray95, (int) '#');
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(intListList93);
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0]");
        org.junit.Assert.assertNotNull(intListList97);
        org.junit.Assert.assertNotNull(intListList99);
    }

    @Test
    public void test2077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2077");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.BruteForce(intArray13, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        int[] intArray37 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray37, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.BruteForce(intArray37, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray49 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem42.TwoPointer(intArray49, (int) (short) 1);
        int[] intArray55 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem42.TwoPointer(intArray55, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem0.TwoPointer(intArray55, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem61 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem61.BruteForce(intArray64, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem60.Hashmap(intArray64, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem69 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem70 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem70.BruteForce(intArray73, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem69.Hashmap(intArray73, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem60.BruteForce(intArray73, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem0.TwoPointer(intArray73, (int) 'a');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem82 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray89 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem82.TwoPointer(intArray89, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem0.BruteForce(intArray89, 0);
        java.lang.Class<?> wildcardClass94 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(intListList93);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test2078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2078");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        int[] intArray13 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem0.TwoPointer(intArray13, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem16 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem17.TwoPointer(intArray24, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem16.TwoPointer(intArray24, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem0.BruteForce(intArray24, (int) (short) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem32 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem32.BruteForce(intArray35, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem31.Hashmap(intArray35, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem40.BruteForce(intArray43, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem31.TwoPointer(intArray43, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem0.Hashmap(intArray43, (-1));
        java.lang.Class<?> wildcardClass50 = intArray43.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test2079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2079");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.BruteForce(intArray13, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        int[] intArray37 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray37, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.BruteForce(intArray37, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem42.BruteForce(intArray45, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem0.Hashmap(intArray45, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem50 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem50.BruteForce(intArray53, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem0.TwoPointer(intArray53, (int) ' ');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem58 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray65 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem58.TwoPointer(intArray65, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem0.TwoPointer(intArray65, 100);
        java.lang.Class<?> wildcardClass70 = intListList69.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test2080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2080");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem11 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray18 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem11.TwoPointer(intArray18, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem10.TwoPointer(intArray18, (int) (byte) 0);
        int[] intArray27 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem10.Hashmap(intArray27, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem31.TwoPointer(intArray38, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem30.TwoPointer(intArray38, (int) (byte) 0);
        int[] intArray47 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem30.Hashmap(intArray47, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem10.Hashmap(intArray47, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem52.BruteForce(intArray55, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem58 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem58.BruteForce(intArray61, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem52.TwoPointer(intArray61, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem10.BruteForce(intArray61, (int) (byte) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem0.TwoPointer(intArray61, (int) (byte) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem70 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray77 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem70.TwoPointer(intArray77, (int) (short) 1);
        int[] intArray83 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem70.TwoPointer(intArray83, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem86 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem87 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray90 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem87.BruteForce(intArray90, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem86.BruteForce(intArray90, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem70.Hashmap(intArray90, 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList98 = threeSumProblem0.BruteForce(intArray90, (int) (byte) -1);
        java.lang.Class<?> wildcardClass99 = intListList98.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(intListList96);
        org.junit.Assert.assertNotNull(intListList98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test2081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2081");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem21.BruteForce(intArray24, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem20.Hashmap(intArray24, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem29.BruteForce(intArray32, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem20.TwoPointer(intArray32, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem0.Hashmap(intArray32, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray47 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem40.TwoPointer(intArray47, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem39.TwoPointer(intArray47, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem52.BruteForce(intArray55, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem58 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem58.BruteForce(intArray61, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem52.TwoPointer(intArray61, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem66 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem66.BruteForce(intArray69, (int) '#');
        int[] intArray75 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem66.BruteForce(intArray75, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem52.BruteForce(intArray75, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem39.Hashmap(intArray75, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem0.TwoPointer(intArray75, (int) (byte) 1);
        java.lang.Class<?> wildcardClass84 = intListList83.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test2082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2082");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem9.TwoPointer(intArray21, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem0.Hashmap(intArray21, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem28 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem29.BruteForce(intArray32, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem28.Hashmap(intArray32, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem37.BruteForce(intArray40, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem28.TwoPointer(intArray40, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem0.TwoPointer(intArray40, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem47 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem48.BruteForce(intArray51, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem47.BruteForce(intArray51, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem0.Hashmap(intArray51, (int) (short) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem58 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem59.BruteForce(intArray62, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem58.Hashmap(intArray62, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem67 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem67.BruteForce(intArray70, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem58.TwoPointer(intArray70, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem0.TwoPointer(intArray70, (-1));
        java.lang.Class<?> wildcardClass77 = intListList76.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test2083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2083");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem16 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem16.BruteForce(intArray19, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem10.TwoPointer(intArray19, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem0.BruteForce(intArray19, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray34 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem27.TwoPointer(intArray34, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem26.TwoPointer(intArray34, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem40.BruteForce(intArray43, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem39.Hashmap(intArray43, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray56 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem49.TwoPointer(intArray56, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem48.TwoPointer(intArray56, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem39.BruteForce(intArray56, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem26.BruteForce(intArray56, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem0.TwoPointer(intArray56, 0);
        int[] intArray67 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem0.BruteForce(intArray67, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
    }

    @Test
    public void test2084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2084");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem17.Hashmap(intArray21, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem26.BruteForce(intArray29, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem17.TwoPointer(intArray29, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem0.Hashmap(intArray29, (int) 'a');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray43 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem36.TwoPointer(intArray43, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem47 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray54 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem47.TwoPointer(intArray54, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem46.TwoPointer(intArray54, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem36.Hashmap(intArray54, (int) (byte) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem0.Hashmap(intArray54, (int) (byte) 10);
        int[] intArray63 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem0.Hashmap(intArray63, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intListList62);
    }

    @Test
    public void test2085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2085");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray14 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray14, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray25 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem18.TwoPointer(intArray25, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem17.TwoPointer(intArray25, (int) (byte) 0);
        int[] intArray34 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem17.Hashmap(intArray34, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem0.TwoPointer(intArray34, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem39.BruteForce(intArray42, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem45 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem45.BruteForce(intArray48, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem39.TwoPointer(intArray48, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem54.BruteForce(intArray57, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem53.Hashmap(intArray57, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem62 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem62.BruteForce(intArray65, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem53.TwoPointer(intArray65, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem39.BruteForce(intArray65, (int) ' ');
        int[] intArray78 = new int[] { (short) 100, (byte) 100, '4', (byte) -1, (byte) 0, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem39.Hashmap(intArray78, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem0.BruteForce(intArray78, (int) (short) 100);
        java.lang.Class<?> wildcardClass83 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0]");
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0, 52, 97, 100, 100]");
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test2086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2086");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem33 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray41 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem34.TwoPointer(intArray41, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem33.TwoPointer(intArray41, (int) (byte) 0);
        int[] intArray50 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem33.Hashmap(intArray50, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem20.Hashmap(intArray50, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem0.Hashmap(intArray50, 0);
        java.lang.Class<?> wildcardClass57 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test2087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2087");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem6.TwoPointer(intArray13, (int) (short) 1);
        int[] intArray19 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem6.TwoPointer(intArray19, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem22 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem23 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray30 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem23.TwoPointer(intArray30, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem22.TwoPointer(intArray30, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem6.BruteForce(intArray30, (int) (short) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem0.Hashmap(intArray30, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray47 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem40.TwoPointer(intArray47, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem39.TwoPointer(intArray47, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem0.BruteForce(intArray47, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem55.BruteForce(intArray58, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem54.Hashmap(intArray58, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem63 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem64 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem64.BruteForce(intArray67, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem63.Hashmap(intArray67, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem54.BruteForce(intArray67, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem0.Hashmap(intArray67, (-1));
        int[] intArray76 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem0.BruteForce(intArray76, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
    }

    @Test
    public void test2088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2088");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        int[] intArray13 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem0.TwoPointer(intArray13, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem16 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray25 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem16.BruteForce(intArray25, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem28 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem28.BruteForce(intArray31, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem16.Hashmap(intArray31, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray45 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem36.BruteForce(intArray45, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem16.BruteForce(intArray45, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem50 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray57 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem50.TwoPointer(intArray57, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem16.TwoPointer(intArray57, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem0.BruteForce(intArray57, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem64 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem65 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem65.BruteForce(intArray68, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem64.Hashmap(intArray68, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem73 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem74.BruteForce(intArray77, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem73.Hashmap(intArray77, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem64.BruteForce(intArray77, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem0.TwoPointer(intArray77, (int) (byte) 10);
        java.lang.Class<?> wildcardClass86 = intArray77.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test2089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2089");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.BruteForce(intArray4, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem10.TwoPointer(intArray17, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem9.TwoPointer(intArray17, (int) (byte) 0);
        int[] intArray26 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem9.Hashmap(intArray26, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem30.BruteForce(intArray33, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem29.Hashmap(intArray33, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem38 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem39.BruteForce(intArray42, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem38.Hashmap(intArray42, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem29.BruteForce(intArray42, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem9.Hashmap(intArray42, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem0.TwoPointer(intArray42, (int) (byte) 1);
        int[] intArray53 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem0.BruteForce(intArray53, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
    }

    @Test
    public void test2090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2090");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem6.TwoPointer(intArray13, (int) (short) 1);
        int[] intArray19 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem6.TwoPointer(intArray19, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem22 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem23 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray30 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem23.TwoPointer(intArray30, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem22.TwoPointer(intArray30, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem6.BruteForce(intArray30, (int) (short) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem0.Hashmap(intArray30, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray47 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem40.TwoPointer(intArray47, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem39.TwoPointer(intArray47, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem0.BruteForce(intArray47, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem55.BruteForce(intArray58, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem54.Hashmap(intArray58, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem63 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem64 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem64.BruteForce(intArray67, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem63.Hashmap(intArray67, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem54.BruteForce(intArray67, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem0.Hashmap(intArray67, (-1));
        java.lang.Class<?> wildcardClass76 = intArray67.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test2091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2091");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        int[] intArray13 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem0.TwoPointer(intArray13, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem16 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem17.BruteForce(intArray20, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList24 = threeSumProblem16.BruteForce(intArray20, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem0.Hashmap(intArray20, 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray36 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem27.BruteForce(intArray36, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem39.BruteForce(intArray42, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem27.Hashmap(intArray42, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem47 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem47.BruteForce(intArray50, (int) '#');
        int[] intArray56 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem47.BruteForce(intArray56, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem27.TwoPointer(intArray56, (int) ' ');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem61 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray70 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem61.BruteForce(intArray70, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem27.BruteForce(intArray70, (int) (short) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem0.TwoPointer(intArray70, (int) 'a');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem77 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem78 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem79 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray86 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem79.TwoPointer(intArray86, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem78.TwoPointer(intArray86, (int) (byte) 0);
        int[] intArray92 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem78.TwoPointer(intArray92, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem77.TwoPointer(intArray92, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList98 = threeSumProblem0.TwoPointer(intArray92, (int) (short) 100);
        java.lang.Class<?> wildcardClass99 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intListList24);
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0]");
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(intListList96);
        org.junit.Assert.assertNotNull(intListList98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test2092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2092");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        int[] intArray13 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem0.TwoPointer(intArray13, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem16 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem17.TwoPointer(intArray24, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem16.TwoPointer(intArray24, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem0.BruteForce(intArray24, (int) (short) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem31.TwoPointer(intArray38, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray49 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem42.TwoPointer(intArray49, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem41.TwoPointer(intArray49, (int) (byte) 0);
        int[] intArray58 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem41.Hashmap(intArray58, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem31.BruteForce(intArray58, (int) (byte) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem0.BruteForce(intArray58, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem65 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem66 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem66.BruteForce(intArray69, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem65.BruteForce(intArray69, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem75 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray82 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem75.TwoPointer(intArray82, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem74.TwoPointer(intArray82, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem65.TwoPointer(intArray82, (int) (byte) 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem0.Hashmap(intArray82, (int) (short) 100);
        java.lang.Class<?> wildcardClass91 = intListList90.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test2093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2093");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray29 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem20.BruteForce(intArray29, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem32 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem32.BruteForce(intArray35, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray35, (int) (byte) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.BruteForce(intArray35, (int) (byte) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem42.BruteForce(intArray45, (int) '#');
        int[] intArray51 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem42.BruteForce(intArray51, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem54.BruteForce(intArray57, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem42.Hashmap(intArray57, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem62 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem62.BruteForce(intArray65, (int) '#');
        int[] intArray71 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem62.BruteForce(intArray71, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem42.TwoPointer(intArray71, (int) ' ');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem76 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem77 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem77.BruteForce(intArray80, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem76.Hashmap(intArray80, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem85 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray88 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem85.BruteForce(intArray88, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem76.TwoPointer(intArray88, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem42.BruteForce(intArray88, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem0.Hashmap(intArray88, (int) (byte) -1);
        java.lang.Class<?> wildcardClass97 = intListList96.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(intListList96);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test2094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2094");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray9 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem6.BruteForce(intArray9, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList13 = threeSumProblem0.TwoPointer(intArray9, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem15 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem15.BruteForce(intArray18, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem14.Hashmap(intArray18, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem23 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem24 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem24.BruteForce(intArray27, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem23.Hashmap(intArray27, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem32 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem32.BruteForce(intArray35, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem23.TwoPointer(intArray35, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem41.BruteForce(intArray44, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem40.Hashmap(intArray44, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem49.BruteForce(intArray52, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem40.TwoPointer(intArray52, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem23.Hashmap(intArray52, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem14.BruteForce(intArray52, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem0.Hashmap(intArray52, 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem63 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray70 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem63.TwoPointer(intArray70, (int) (short) 1);
        int[] intArray76 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem63.TwoPointer(intArray76, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem0.BruteForce(intArray76, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem81 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray84 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem81.BruteForce(intArray84, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem0.Hashmap(intArray84, 10);
        int[] intArray91 = new int[] { 10, 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem0.Hashmap(intArray91, (int) (short) 1);
        int[] intArray94 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem0.TwoPointer(intArray94, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intListList13);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 10]");
        org.junit.Assert.assertNotNull(intListList93);
    }

    @Test
    public void test2095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2095");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem11 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray18 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem11.TwoPointer(intArray18, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem10.TwoPointer(intArray18, (int) (byte) 0);
        int[] intArray27 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem10.Hashmap(intArray27, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem0.BruteForce(intArray27, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem32 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem33 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem33.BruteForce(intArray36, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem32.Hashmap(intArray36, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem41.BruteForce(intArray44, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem32.TwoPointer(intArray44, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem50 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray57 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem50.TwoPointer(intArray57, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem49.TwoPointer(intArray57, (int) (byte) 0);
        int[] intArray66 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem49.Hashmap(intArray66, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem32.Hashmap(intArray66, (int) ' ');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem71 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem72 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray79 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem72.TwoPointer(intArray79, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem71.TwoPointer(intArray79, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem32.BruteForce(intArray79, 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem0.TwoPointer(intArray79, (int) (short) 0);
        java.lang.Class<?> wildcardClass88 = intListList87.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test2096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2096");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem17.BruteForce(intArray21, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem0.TwoPointer(intArray21, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem28 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem29.BruteForce(intArray32, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem28.Hashmap(intArray32, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem0.BruteForce(intArray32, (int) (byte) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem40.BruteForce(intArray43, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem39.BruteForce(intArray43, (int) (short) 1);
        int[] intArray49 = new int[] { '#' };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem39.TwoPointer(intArray49, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem0.TwoPointer(intArray49, (int) (short) 10);
        java.lang.Class<?> wildcardClass54 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[35]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test2097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2097");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem10.TwoPointer(intArray17, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem9.TwoPointer(intArray17, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem0.BruteForce(intArray17, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem24 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray31 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem24.TwoPointer(intArray31, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray42 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem35.TwoPointer(intArray42, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem34.TwoPointer(intArray42, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem24.Hashmap(intArray42, (int) (byte) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem0.Hashmap(intArray42, (int) (byte) 0);
        int[] intArray51 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem0.Hashmap(intArray51, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
    }

    @Test
    public void test2098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2098");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray14 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray14, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray25 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem18.TwoPointer(intArray25, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem17.TwoPointer(intArray25, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem31.BruteForce(intArray34, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem30.Hashmap(intArray34, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray47 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem40.TwoPointer(intArray47, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem39.TwoPointer(intArray47, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem30.BruteForce(intArray47, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem17.BruteForce(intArray47, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem0.TwoPointer(intArray47, (int) (byte) -1);
        int[] intArray58 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem0.BruteForce(intArray58, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0]");
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intListList57);
    }

    @Test
    public void test2099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2099");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem21.BruteForce(intArray24, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem20.Hashmap(intArray24, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem29.BruteForce(intArray32, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem20.TwoPointer(intArray32, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem0.Hashmap(intArray32, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray47 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem40.TwoPointer(intArray47, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem39.TwoPointer(intArray47, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem52.BruteForce(intArray55, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem58 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem58.BruteForce(intArray61, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem52.TwoPointer(intArray61, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem66 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem66.BruteForce(intArray69, (int) '#');
        int[] intArray75 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem66.BruteForce(intArray75, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem52.BruteForce(intArray75, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem39.Hashmap(intArray75, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem0.TwoPointer(intArray75, (int) (byte) 1);
        int[] intArray84 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem0.BruteForce(intArray84, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
    }

    @Test
    public void test2100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2100");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem17.Hashmap(intArray21, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem26.BruteForce(intArray29, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem17.TwoPointer(intArray29, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem0.Hashmap(intArray29, (int) 'a');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray45 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem36.BruteForce(intArray45, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem48.BruteForce(intArray51, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem36.Hashmap(intArray51, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray65 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem56.BruteForce(intArray65, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem36.TwoPointer(intArray65, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem0.Hashmap(intArray65, (int) (byte) -1);
        int[] intArray72 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem0.Hashmap(intArray72, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
    }

    @Test
    public void test2101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2101");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.BruteForce(intArray13, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        int[] intArray37 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray37, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.BruteForce(intArray37, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem42.BruteForce(intArray45, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem0.Hashmap(intArray45, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem50 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem51.BruteForce(intArray54, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem50.BruteForce(intArray54, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray67 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem60.TwoPointer(intArray67, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem59.TwoPointer(intArray67, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem50.TwoPointer(intArray67, (int) (byte) 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem0.BruteForce(intArray67, (int) ' ');
        java.lang.Class<?> wildcardClass76 = intArray67.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test2102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2102");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem2 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList7 = threeSumProblem2.BruteForce(intArray5, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem1.Hashmap(intArray5, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem1.TwoPointer(intArray13, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray27 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem18.BruteForce(intArray27, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem30.BruteForce(intArray33, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem18.Hashmap(intArray33, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem38 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray47 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem38.BruteForce(intArray47, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem18.BruteForce(intArray47, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem1.Hashmap(intArray47, (int) ' ');
        int[] intArray57 = new int[] { (byte) 0, (byte) 10, 10 };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem1.BruteForce(intArray57, (int) (short) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem61 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray68 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem61.TwoPointer(intArray68, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem60.TwoPointer(intArray68, (int) (byte) 0);
        int[] intArray77 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem60.Hashmap(intArray77, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem80 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem81 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray84 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem81.BruteForce(intArray84, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem80.Hashmap(intArray84, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem60.TwoPointer(intArray84, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem1.BruteForce(intArray84, (int) (short) 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem0.BruteForce(intArray84, (int) (byte) 0);
        java.lang.Class<?> wildcardClass95 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList7);
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 10, 10]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test2103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2103");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem17.Hashmap(intArray21, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem26.BruteForce(intArray29, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem17.TwoPointer(intArray29, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem0.Hashmap(intArray29, (int) 'a');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem37.BruteForce(intArray40, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem36.Hashmap(intArray40, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem45 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem45.BruteForce(intArray48, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem36.TwoPointer(intArray48, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem54.BruteForce(intArray57, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem53.Hashmap(intArray57, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem62 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem62.BruteForce(intArray65, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem53.TwoPointer(intArray65, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem36.Hashmap(intArray65, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem0.Hashmap(intArray65, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem75 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem75.BruteForce(intArray78, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem74.Hashmap(intArray78, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem0.TwoPointer(intArray78, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem85 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray92 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem85.TwoPointer(intArray92, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem0.TwoPointer(intArray92, (int) (short) 0);
        int[] intArray97 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList99 = threeSumProblem0.BruteForce(intArray97, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(intListList96);
    }

    @Test
    public void test2104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2104");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray29 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem20.BruteForce(intArray29, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem32 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem32.BruteForce(intArray35, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray35, (int) (byte) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.BruteForce(intArray35, (int) (byte) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem42.BruteForce(intArray45, (int) '#');
        int[] intArray51 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem42.BruteForce(intArray51, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem54.BruteForce(intArray57, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem42.Hashmap(intArray57, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem62 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem62.BruteForce(intArray65, (int) '#');
        int[] intArray71 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem62.BruteForce(intArray71, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem42.TwoPointer(intArray71, (int) ' ');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem76 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem77 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem77.BruteForce(intArray80, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem76.Hashmap(intArray80, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem85 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray88 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem85.BruteForce(intArray88, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem76.TwoPointer(intArray88, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem42.BruteForce(intArray88, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem0.Hashmap(intArray88, (int) (byte) -1);
        java.lang.Class<?> wildcardClass97 = intArray88.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(intListList96);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test2105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2105");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem16 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem16.BruteForce(intArray19, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem10.TwoPointer(intArray19, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem0.BruteForce(intArray19, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray35 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem26.BruteForce(intArray35, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem38 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem38.BruteForce(intArray41, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem26.Hashmap(intArray41, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem47 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem47.BruteForce(intArray50, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem46.Hashmap(intArray50, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem55.BruteForce(intArray58, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem46.TwoPointer(intArray58, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem26.Hashmap(intArray58, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem0.BruteForce(intArray58, (int) 'a');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem67 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray74 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem67.TwoPointer(intArray74, (int) (short) 1);
        int[] intArray80 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem67.TwoPointer(intArray80, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem0.TwoPointer(intArray80, (int) (short) 0);
        java.lang.Class<?> wildcardClass85 = intListList84.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test2106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2106");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem16 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem16.BruteForce(intArray19, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem10.TwoPointer(intArray19, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem0.BruteForce(intArray19, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray34 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem27.TwoPointer(intArray34, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem26.TwoPointer(intArray34, (int) (byte) 0);
        int[] intArray43 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem26.Hashmap(intArray43, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem47 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray54 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem47.TwoPointer(intArray54, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem46.TwoPointer(intArray54, (int) (byte) 0);
        int[] intArray63 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem46.Hashmap(intArray63, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem26.Hashmap(intArray63, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem68 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem68.BruteForce(intArray71, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem74.BruteForce(intArray77, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem68.TwoPointer(intArray77, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem26.BruteForce(intArray77, (int) (byte) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem0.Hashmap(intArray77, (int) (byte) 100);
        java.lang.Class<?> wildcardClass86 = intArray77.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test2107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2107");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.BruteForce(intArray4, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem10.TwoPointer(intArray17, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem9.TwoPointer(intArray17, (int) (byte) 0);
        int[] intArray23 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem9.TwoPointer(intArray23, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem27.BruteForce(intArray30, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem26.Hashmap(intArray30, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem36.BruteForce(intArray39, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem35.Hashmap(intArray39, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem26.BruteForce(intArray39, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem47 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray54 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem47.TwoPointer(intArray54, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem46.TwoPointer(intArray54, (int) (byte) 0);
        int[] intArray63 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem46.Hashmap(intArray63, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem26.BruteForce(intArray63, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem9.Hashmap(intArray63, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem0.TwoPointer(intArray63, (int) (short) 10);
        int[] intArray72 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem0.BruteForce(intArray72, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
    }

    @Test
    public void test2108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2108");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem14.BruteForce(intArray17, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem13.Hashmap(intArray17, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem22 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem22.BruteForce(intArray25, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem13.TwoPointer(intArray25, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem31.BruteForce(intArray34, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem30.Hashmap(intArray34, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem39.BruteForce(intArray42, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem30.TwoPointer(intArray42, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem13.Hashmap(intArray42, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem0.Hashmap(intArray42, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray58 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem51.TwoPointer(intArray58, (int) (short) 1);
        int[] intArray64 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem51.TwoPointer(intArray64, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem67 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem68 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray75 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem68.TwoPointer(intArray75, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem67.TwoPointer(intArray75, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem51.BruteForce(intArray75, (int) (short) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem0.TwoPointer(intArray75, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem84 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray87 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem84.BruteForce(intArray87, (int) '#');
        int[] intArray93 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList95 = threeSumProblem84.BruteForce(intArray93, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList97 = threeSumProblem0.BruteForce(intArray93, (int) (byte) 100);
        java.lang.Class<?> wildcardClass98 = intListList97.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList95);
        org.junit.Assert.assertNotNull(intListList97);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test2109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2109");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.BruteForce(intArray4, (int) (short) 1);
        int[] intArray10 = new int[] { '#' };
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray10, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray20 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem13.TwoPointer(intArray20, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem23 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray26 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem23.BruteForce(intArray26, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem29.BruteForce(intArray32, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem23.TwoPointer(intArray32, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem13.BruteForce(intArray32, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem39.BruteForce(intArray42, (int) '#');
        int[] intArray48 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem39.BruteForce(intArray48, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem51.BruteForce(intArray54, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem39.Hashmap(intArray54, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem60.BruteForce(intArray63, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem59.Hashmap(intArray63, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem68 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem68.BruteForce(intArray71, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem59.TwoPointer(intArray71, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem39.Hashmap(intArray71, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem13.BruteForce(intArray71, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem0.TwoPointer(intArray71, (int) (short) 100);
        java.lang.Class<?> wildcardClass82 = intArray71.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[35]");
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test2110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2110");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem7 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem7.BruteForce(intArray10, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem6.Hashmap(intArray10, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem15 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem16 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem16.TwoPointer(intArray23, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem15.TwoPointer(intArray23, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem6.BruteForce(intArray23, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem0.Hashmap(intArray23, (int) (byte) 0);
        int[] intArray32 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem0.Hashmap(intArray32, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intListList31);
    }

    @Test
    public void test2111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2111");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem21.BruteForce(intArray24, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem20.Hashmap(intArray24, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem0.TwoPointer(intArray24, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem32 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem32.BruteForce(intArray35, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem31.Hashmap(intArray35, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem41.BruteForce(intArray44, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem40.Hashmap(intArray44, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem31.BruteForce(intArray44, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem0.BruteForce(intArray44, (int) ' ');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray62 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem55.TwoPointer(intArray62, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem54.TwoPointer(intArray62, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem67 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem68 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem68.BruteForce(intArray71, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem67.Hashmap(intArray71, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem76 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem77 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray84 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem77.TwoPointer(intArray84, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem76.TwoPointer(intArray84, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem67.BruteForce(intArray84, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem54.BruteForce(intArray84, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem53.Hashmap(intArray84, (int) (byte) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem0.BruteForce(intArray84, (int) (short) 0);
        int[] intArray97 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList99 = threeSumProblem0.Hashmap(intArray97, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(intListList96);
    }

    @Test
    public void test2112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2112");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem22 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray29 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem22.TwoPointer(intArray29, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem21.TwoPointer(intArray29, (int) (byte) 0);
        int[] intArray35 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem21.TwoPointer(intArray35, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.TwoPointer(intArray35, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.BruteForce(intArray35, (int) '4');
        java.lang.Class<?> wildcardClass42 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0]");
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test2113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2113");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem14.TwoPointer(intArray21, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem13.TwoPointer(intArray21, (int) (byte) 0);
        int[] intArray30 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem13.Hashmap(intArray30, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem0.Hashmap(intArray30, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray43 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem36.TwoPointer(intArray43, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem35.TwoPointer(intArray43, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray56 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem49.TwoPointer(intArray56, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem48.TwoPointer(intArray56, (int) (byte) 0);
        int[] intArray65 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem48.Hashmap(intArray65, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem35.Hashmap(intArray65, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem0.TwoPointer(intArray65, (int) '4');
        java.lang.Class<?> wildcardClass72 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test2114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2114");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray14 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray14, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray26 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem17.BruteForce(intArray26, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem30.BruteForce(intArray33, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem29.BruteForce(intArray33, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem38 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray47 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem38.BruteForce(intArray47, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem29.BruteForce(intArray47, (int) (short) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem17.BruteForce(intArray47, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem0.Hashmap(intArray47, (int) (short) -1);
        java.lang.Class<?> wildcardClass56 = intListList55.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0]");
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test2115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2115");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem11 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray14 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem11.BruteForce(intArray14, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList18 = threeSumProblem10.Hashmap(intArray14, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem19 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList24 = threeSumProblem19.BruteForce(intArray22, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem10.TwoPointer(intArray22, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem28 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem28.BruteForce(intArray31, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem27.Hashmap(intArray31, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem36.BruteForce(intArray39, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem27.TwoPointer(intArray39, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem10.Hashmap(intArray39, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem0.Hashmap(intArray39, (int) (short) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem49.BruteForce(intArray52, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem48.BruteForce(intArray52, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem57 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem57.BruteForce(intArray60, (int) '#');
        int[] intArray66 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem57.BruteForce(intArray66, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem48.BruteForce(intArray66, (int) (short) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem71 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem72 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray79 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem72.TwoPointer(intArray79, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem71.TwoPointer(intArray79, (int) (byte) 0);
        int[] intArray85 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem71.TwoPointer(intArray85, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem48.BruteForce(intArray85, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem0.Hashmap(intArray85, (int) ' ');
        int[] intArray92 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem0.BruteForce(intArray92, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intListList18);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList24);
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0]");
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(intListList91);
    }

    @Test
    public void test2116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2116");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.BruteForce(intArray13, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem21.BruteForce(intArray24, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem20.Hashmap(intArray24, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray36 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem29.TwoPointer(intArray36, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem39.BruteForce(intArray42, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem45 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem45.BruteForce(intArray48, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem39.TwoPointer(intArray48, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem29.BruteForce(intArray48, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem55.BruteForce(intArray58, (int) '#');
        int[] intArray64 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem55.BruteForce(intArray64, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem67 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem67.BruteForce(intArray70, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem55.Hashmap(intArray70, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem75 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem76 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem76.BruteForce(intArray79, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem75.Hashmap(intArray79, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem84 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray87 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem84.BruteForce(intArray87, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem75.TwoPointer(intArray87, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem55.Hashmap(intArray87, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList95 = threeSumProblem29.BruteForce(intArray87, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList97 = threeSumProblem20.Hashmap(intArray87, (int) (short) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList99 = threeSumProblem0.TwoPointer(intArray87, (int) (byte) 1);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(intListList93);
        org.junit.Assert.assertNotNull(intListList95);
        org.junit.Assert.assertNotNull(intListList97);
        org.junit.Assert.assertNotNull(intListList99);
    }

    @Test
    public void test2117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2117");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray29 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem20.BruteForce(intArray29, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem32 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem32.BruteForce(intArray35, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray35, (int) (byte) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.BruteForce(intArray35, (int) (byte) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem42.BruteForce(intArray45, (int) '#');
        int[] intArray51 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem42.BruteForce(intArray51, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem54.BruteForce(intArray57, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem42.Hashmap(intArray57, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem62 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem62.BruteForce(intArray65, (int) '#');
        int[] intArray71 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem62.BruteForce(intArray71, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem42.TwoPointer(intArray71, (int) ' ');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem76 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem77 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem77.BruteForce(intArray80, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem76.Hashmap(intArray80, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem85 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray88 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem85.BruteForce(intArray88, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem76.TwoPointer(intArray88, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem42.BruteForce(intArray88, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem0.Hashmap(intArray88, (int) (byte) -1);
        int[] intArray97 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList99 = threeSumProblem0.BruteForce(intArray97, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(intListList96);
    }

    @Test
    public void test2118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2118");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray29 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem20.BruteForce(intArray29, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem0.BruteForce(intArray29, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray41 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem34.TwoPointer(intArray41, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem0.TwoPointer(intArray41, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray53 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem46.TwoPointer(intArray53, (int) (short) 1);
        int[] intArray59 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem46.TwoPointer(intArray59, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem0.Hashmap(intArray59, (int) (short) 1);
        int[] intArray64 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem0.TwoPointer(intArray64, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
    }

    @Test
    public void test2119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2119");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem17.Hashmap(intArray21, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem26.BruteForce(intArray29, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem17.TwoPointer(intArray29, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem0.Hashmap(intArray29, (int) 'a');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray43 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem36.TwoPointer(intArray43, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem47 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray54 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem47.TwoPointer(intArray54, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem46.TwoPointer(intArray54, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem36.Hashmap(intArray54, (int) (byte) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem0.Hashmap(intArray54, (int) (byte) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem63 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem64 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem64.BruteForce(intArray67, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem63.BruteForce(intArray67, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem72 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem72.BruteForce(intArray75, (int) '#');
        int[] intArray81 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem72.BruteForce(intArray81, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem63.BruteForce(intArray81, (int) (short) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem0.BruteForce(intArray81, (int) (short) 0);
        int[] intArray88 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem0.TwoPointer(intArray88, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intListList87);
    }

    @Test
    public void test2120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2120");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.BruteForce(intArray13, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem33 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray40 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem33.TwoPointer(intArray40, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem20.Hashmap(intArray40, (int) (byte) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem45 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray52 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem45.TwoPointer(intArray52, (int) (short) 1);
        int[] intArray58 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem45.TwoPointer(intArray58, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem61 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem62 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem62.BruteForce(intArray65, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem61.BruteForce(intArray65, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem45.Hashmap(intArray65, 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem20.Hashmap(intArray65, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem0.BruteForce(intArray65, (int) (byte) -1);
        java.lang.Class<?> wildcardClass76 = intArray65.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test2121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2121");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem14.TwoPointer(intArray21, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem13.TwoPointer(intArray21, (int) (byte) 0);
        int[] intArray30 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem13.Hashmap(intArray30, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem0.Hashmap(intArray30, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray43 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem36.TwoPointer(intArray43, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem35.TwoPointer(intArray43, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray56 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem49.TwoPointer(intArray56, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem48.TwoPointer(intArray56, (int) (byte) 0);
        int[] intArray65 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem48.Hashmap(intArray65, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem35.Hashmap(intArray65, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem0.TwoPointer(intArray65, (int) '4');
        int[] intArray72 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem0.TwoPointer(intArray72, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
    }

    @Test
    public void test2122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2122");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem11 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray14 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem11.BruteForce(intArray14, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList18 = threeSumProblem10.Hashmap(intArray14, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem19 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList24 = threeSumProblem19.BruteForce(intArray22, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem10.TwoPointer(intArray22, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem28 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem28.BruteForce(intArray31, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem27.Hashmap(intArray31, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem36.BruteForce(intArray39, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem27.TwoPointer(intArray39, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem10.Hashmap(intArray39, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem0.Hashmap(intArray39, (int) (short) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem49.BruteForce(intArray52, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem48.BruteForce(intArray52, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem57 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem57.BruteForce(intArray60, (int) '#');
        int[] intArray66 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem57.BruteForce(intArray66, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem48.BruteForce(intArray66, (int) (short) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem71 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem72 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray79 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem72.TwoPointer(intArray79, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem71.TwoPointer(intArray79, (int) (byte) 0);
        int[] intArray85 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem71.TwoPointer(intArray85, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem48.BruteForce(intArray85, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem0.Hashmap(intArray85, (int) ' ');
        java.lang.Class<?> wildcardClass92 = intArray85.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intListList18);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList24);
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0]");
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test2123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2123");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem33 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem34.BruteForce(intArray37, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem33.Hashmap(intArray37, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem42.BruteForce(intArray45, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem33.TwoPointer(intArray45, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem50 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem51.BruteForce(intArray54, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem50.Hashmap(intArray54, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem59.BruteForce(intArray62, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem50.TwoPointer(intArray62, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem33.Hashmap(intArray62, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem20.Hashmap(intArray62, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem71 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem71.BruteForce(intArray74, (int) '#');
        int[] intArray80 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem71.BruteForce(intArray80, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem20.Hashmap(intArray80, (int) (short) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem0.Hashmap(intArray80, (int) (byte) -1);
        java.lang.Class<?> wildcardClass87 = intListList86.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test2124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2124");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.BruteForce(intArray12, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray26 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem17.BruteForce(intArray26, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem29.BruteForce(intArray32, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem17.Hashmap(intArray32, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem38 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem38.BruteForce(intArray41, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem37.Hashmap(intArray41, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem47 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray54 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem47.TwoPointer(intArray54, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem46.TwoPointer(intArray54, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem37.BruteForce(intArray54, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem17.TwoPointer(intArray54, (int) (byte) 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem0.Hashmap(intArray54, (int) ' ');
        java.lang.Class<?> wildcardClass65 = intListList64.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test2125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2125");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray26 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem17.BruteForce(intArray26, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem29.BruteForce(intArray32, (int) '#');
        int[] intArray38 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem29.BruteForce(intArray38, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem41.BruteForce(intArray44, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem29.Hashmap(intArray44, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem49.BruteForce(intArray52, (int) '#');
        int[] intArray58 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem49.BruteForce(intArray58, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem29.BruteForce(intArray58, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem63 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem64 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray71 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem64.TwoPointer(intArray71, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem63.TwoPointer(intArray71, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem29.Hashmap(intArray71, (int) (short) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem17.Hashmap(intArray71, (int) (short) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem0.TwoPointer(intArray71, (int) (byte) -1);
        java.lang.Class<?> wildcardClass82 = intListList81.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test2126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2126");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem16 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem16.BruteForce(intArray19, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem10.TwoPointer(intArray19, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem24 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray33 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem24.BruteForce(intArray33, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem10.BruteForce(intArray33, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem0.BruteForce(intArray33, 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray49 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem40.BruteForce(intArray49, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem52.BruteForce(intArray55, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem40.Hashmap(intArray55, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem60.BruteForce(intArray63, (int) '#');
        int[] intArray69 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem60.BruteForce(intArray69, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem40.TwoPointer(intArray69, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem0.Hashmap(intArray69, 0);
        java.lang.Class<?> wildcardClass76 = intArray69.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test2127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2127");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.BruteForce(intArray4, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem10.TwoPointer(intArray17, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem9.TwoPointer(intArray17, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem0.TwoPointer(intArray17, (int) (byte) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem24 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray31 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem24.TwoPointer(intArray31, (int) (short) 1);
        int[] intArray37 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem24.TwoPointer(intArray37, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem41.BruteForce(intArray44, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem40.BruteForce(intArray44, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem24.Hashmap(intArray44, 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem0.Hashmap(intArray44, (int) (short) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem53.BruteForce(intArray56, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem59.BruteForce(intArray62, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem53.TwoPointer(intArray62, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem0.Hashmap(intArray62, (int) '#');
        int[] intArray69 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem0.BruteForce(intArray69, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intListList68);
    }

    @Test
    public void test2128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2128");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem17.Hashmap(intArray21, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem27.BruteForce(intArray30, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem26.Hashmap(intArray30, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem26.TwoPointer(intArray38, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem17.Hashmap(intArray38, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem45 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem46.BruteForce(intArray49, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem45.Hashmap(intArray49, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem54.BruteForce(intArray57, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem45.TwoPointer(intArray57, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem17.TwoPointer(intArray57, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem64 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem65 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem65.BruteForce(intArray68, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem64.BruteForce(intArray68, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem17.Hashmap(intArray68, (int) (short) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem0.TwoPointer(intArray68, (int) (byte) 10);
        java.lang.Class<?> wildcardClass77 = intArray68.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test2129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2129");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray29 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem20.BruteForce(intArray29, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem32 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem32.BruteForce(intArray35, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray35, (int) (byte) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.BruteForce(intArray35, (int) (byte) 10);
        java.lang.Class<?> wildcardClass42 = intListList41.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test2130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2130");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem21.BruteForce(intArray24, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem20.Hashmap(intArray24, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray37 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem30.TwoPointer(intArray37, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem29.TwoPointer(intArray37, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem20.BruteForce(intArray37, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem0.TwoPointer(intArray37, (int) (byte) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem47 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem47.BruteForce(intArray50, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem46.Hashmap(intArray50, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem56.BruteForce(intArray59, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem55.Hashmap(intArray59, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem46.BruteForce(intArray59, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem66 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem67 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem67.BruteForce(intArray70, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem66.Hashmap(intArray70, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem75 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem76 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray83 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem76.TwoPointer(intArray83, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem75.TwoPointer(intArray83, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem66.BruteForce(intArray83, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem46.TwoPointer(intArray83, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem0.Hashmap(intArray83, 0);
        int[] intArray94 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem0.BruteForce(intArray94, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(intListList93);
    }

    @Test
    public void test2131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2131");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem14.BruteForce(intArray17, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem13.Hashmap(intArray17, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem22 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem23 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray26 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem23.BruteForce(intArray26, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem22.Hashmap(intArray26, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem13.BruteForce(intArray26, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem33 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray41 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem34.TwoPointer(intArray41, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem33.TwoPointer(intArray41, (int) (byte) 0);
        int[] intArray50 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem33.Hashmap(intArray50, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem13.BruteForce(intArray50, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem55.BruteForce(intArray58, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem13.Hashmap(intArray58, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem63 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem63.BruteForce(intArray66, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem13.TwoPointer(intArray66, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem0.Hashmap(intArray66, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem73 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem74.BruteForce(intArray77, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem73.Hashmap(intArray77, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem82 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem83 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray90 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem83.TwoPointer(intArray90, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem82.TwoPointer(intArray90, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem73.BruteForce(intArray90, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList98 = threeSumProblem0.TwoPointer(intArray90, (int) (short) 10);
        java.lang.Class<?> wildcardClass99 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(intListList96);
        org.junit.Assert.assertNotNull(intListList98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test2132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2132");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        int[] intArray37 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray37, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.Hashmap(intArray37, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem42.BruteForce(intArray45, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem0.Hashmap(intArray45, (int) (byte) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem50 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem51.BruteForce(intArray54, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem50.Hashmap(intArray54, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem0.Hashmap(intArray54, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem61 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray68 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem61.TwoPointer(intArray68, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem0.TwoPointer(intArray68, 0);
        java.lang.Class<?> wildcardClass73 = intListList72.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test2133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2133");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.BruteForce(intArray13, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem22 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem22.BruteForce(intArray25, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem21.Hashmap(intArray25, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem31.BruteForce(intArray34, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem30.Hashmap(intArray34, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem21.BruteForce(intArray34, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray49 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem42.TwoPointer(intArray49, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem41.TwoPointer(intArray49, (int) (byte) 0);
        int[] intArray58 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem41.Hashmap(intArray58, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem21.BruteForce(intArray58, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem63 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem63.BruteForce(intArray66, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem21.Hashmap(intArray66, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem71 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem71.BruteForce(intArray74, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem21.TwoPointer(intArray74, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem20.TwoPointer(intArray74, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem0.TwoPointer(intArray74, (int) (byte) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem83 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem84 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray91 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem84.TwoPointer(intArray91, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList95 = threeSumProblem83.TwoPointer(intArray91, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList97 = threeSumProblem0.BruteForce(intArray91, (int) (short) -1);
        java.lang.Class<?> wildcardClass98 = intListList97.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList93);
        org.junit.Assert.assertNotNull(intListList95);
        org.junit.Assert.assertNotNull(intListList97);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test2134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2134");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem17.Hashmap(intArray21, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem26.BruteForce(intArray29, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem17.TwoPointer(intArray29, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem34.BruteForce(intArray38, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem17.TwoPointer(intArray38, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem45 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem46.BruteForce(intArray49, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem45.Hashmap(intArray49, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem17.BruteForce(intArray49, (int) (byte) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem56.BruteForce(intArray59, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem17.TwoPointer(intArray59, (int) (byte) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem64 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem65 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem65.BruteForce(intArray68, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem64.Hashmap(intArray68, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem73 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem73.BruteForce(intArray76, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem64.TwoPointer(intArray76, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem17.Hashmap(intArray76, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem0.BruteForce(intArray76, (int) (byte) 0);
        java.lang.Class<?> wildcardClass85 = intListList84.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test2135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2135");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem11 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray18 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem11.TwoPointer(intArray18, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem10.TwoPointer(intArray18, (int) (byte) 0);
        int[] intArray27 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem10.Hashmap(intArray27, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem0.BruteForce(intArray27, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem32 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem33 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem33.BruteForce(intArray36, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem32.Hashmap(intArray36, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem41.BruteForce(intArray44, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem32.TwoPointer(intArray44, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem50 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray57 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem50.TwoPointer(intArray57, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem49.TwoPointer(intArray57, (int) (byte) 0);
        int[] intArray66 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem49.Hashmap(intArray66, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem32.Hashmap(intArray66, (int) ' ');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem71 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem72 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray79 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem72.TwoPointer(intArray79, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem71.TwoPointer(intArray79, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem32.BruteForce(intArray79, 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem0.TwoPointer(intArray79, (int) (short) 0);
        java.lang.Class<?> wildcardClass88 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test2136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2136");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        int[] intArray34 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem20.TwoPointer(intArray34, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem38 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem38.TwoPointer(intArray45, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem37.TwoPointer(intArray45, (int) (byte) 0);
        int[] intArray54 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem37.Hashmap(intArray54, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem20.TwoPointer(intArray54, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem0.Hashmap(intArray54, (int) (short) -1);
        java.lang.Class<?> wildcardClass61 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test2137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2137");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.BruteForce(intArray4, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem10.TwoPointer(intArray17, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem9.TwoPointer(intArray17, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem0.TwoPointer(intArray17, (int) (byte) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem24 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray31 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem24.TwoPointer(intArray31, (int) (short) 1);
        int[] intArray37 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem24.TwoPointer(intArray37, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem41.BruteForce(intArray44, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem40.BruteForce(intArray44, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem24.Hashmap(intArray44, 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem0.Hashmap(intArray44, (int) (short) 100);
        java.lang.Class<?> wildcardClass53 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test2138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2138");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.BruteForce(intArray13, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        int[] intArray37 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray37, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.BruteForce(intArray37, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem43.BruteForce(intArray46, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem42.Hashmap(intArray46, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem52.BruteForce(intArray55, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem51.Hashmap(intArray55, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem42.BruteForce(intArray55, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem0.TwoPointer(intArray55, (int) ' ');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem64 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem64.BruteForce(intArray67, (int) '#');
        int[] intArray73 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem64.BruteForce(intArray73, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem76 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem76.BruteForce(intArray79, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem64.Hashmap(intArray79, (int) (byte) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem0.Hashmap(intArray79, (int) (byte) 100);
        java.lang.Class<?> wildcardClass86 = intArray79.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test2139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2139");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem2 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList7 = threeSumProblem2.BruteForce(intArray5, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem1.Hashmap(intArray5, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem1.TwoPointer(intArray13, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem19 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList24 = threeSumProblem19.BruteForce(intArray22, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem18.Hashmap(intArray22, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem27.BruteForce(intArray30, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem18.TwoPointer(intArray30, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem1.Hashmap(intArray30, (int) 'a');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem38 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem38.BruteForce(intArray41, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem37.Hashmap(intArray41, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem46.BruteForce(intArray49, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem37.TwoPointer(intArray49, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem55.BruteForce(intArray58, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem54.Hashmap(intArray58, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem63 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem63.BruteForce(intArray66, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem54.TwoPointer(intArray66, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem37.Hashmap(intArray66, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem1.Hashmap(intArray66, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem0.TwoPointer(intArray66, (int) '#');
        int[] intArray79 = new int[] { 10, (byte) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem0.BruteForce(intArray79, (int) (short) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem82 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem83 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray86 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem83.BruteForce(intArray86, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem82.Hashmap(intArray86, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem0.TwoPointer(intArray86, (int) (short) -1);
        java.lang.Class<?> wildcardClass93 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList7);
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList24);
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[10, 0]");
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test2140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2140");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.BruteForce(intArray13, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem21.BruteForce(intArray24, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem20.Hashmap(intArray24, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray37 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem30.TwoPointer(intArray37, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem29.TwoPointer(intArray37, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem20.BruteForce(intArray37, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem0.TwoPointer(intArray37, 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem47 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem47.BruteForce(intArray50, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem46.Hashmap(intArray50, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem56.BruteForce(intArray59, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem55.Hashmap(intArray59, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem64 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem64.BruteForce(intArray67, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem55.TwoPointer(intArray67, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem46.Hashmap(intArray67, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem74.BruteForce(intArray77, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem46.TwoPointer(intArray77, (int) (short) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem0.Hashmap(intArray77, 100);
        java.lang.Class<?> wildcardClass84 = intListList83.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test2141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2141");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem6.TwoPointer(intArray13, (int) (short) 1);
        int[] intArray19 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem6.TwoPointer(intArray19, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem22 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem23 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray30 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem23.TwoPointer(intArray30, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem22.TwoPointer(intArray30, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem6.BruteForce(intArray30, (int) (short) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem0.Hashmap(intArray30, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem39.BruteForce(intArray42, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem45 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem45.BruteForce(intArray48, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem39.TwoPointer(intArray48, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem54.BruteForce(intArray57, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem53.Hashmap(intArray57, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem62 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem62.BruteForce(intArray65, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem53.TwoPointer(intArray65, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem39.BruteForce(intArray65, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem0.Hashmap(intArray65, (int) 'a');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem75 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray82 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem75.TwoPointer(intArray82, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem74.TwoPointer(intArray82, (int) (byte) 0);
        int[] intArray88 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem74.TwoPointer(intArray88, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem0.TwoPointer(intArray88, (int) (byte) 10);
        java.lang.Class<?> wildcardClass93 = intListList92.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0]");
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test2142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2142");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem11 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray18 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem11.TwoPointer(intArray18, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem10.TwoPointer(intArray18, (int) (byte) 0);
        int[] intArray27 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem10.Hashmap(intArray27, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem31.BruteForce(intArray34, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem30.Hashmap(intArray34, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem40.BruteForce(intArray43, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem39.Hashmap(intArray43, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem30.BruteForce(intArray43, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem10.Hashmap(intArray43, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem0.TwoPointer(intArray43, (int) (short) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray61 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem54.TwoPointer(intArray61, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem64 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem64.BruteForce(intArray67, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem70 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem70.BruteForce(intArray73, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem64.TwoPointer(intArray73, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem54.BruteForce(intArray73, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem0.Hashmap(intArray73, 0);
        java.lang.Class<?> wildcardClass82 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test2143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2143");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem21.BruteForce(intArray24, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem20.Hashmap(intArray24, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem30.BruteForce(intArray33, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem29.Hashmap(intArray33, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.BruteForce(intArray33, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.Hashmap(intArray33, (-1));
        int[] intArray45 = new int[] { (short) 10, (short) 100, (byte) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem0.BruteForce(intArray45, (int) ' ');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem49.BruteForce(intArray52, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem48.Hashmap(intArray52, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem57 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem58 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem58.BruteForce(intArray61, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem57.Hashmap(intArray61, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem66 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem66.BruteForce(intArray69, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem57.TwoPointer(intArray69, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem48.Hashmap(intArray69, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem0.BruteForce(intArray69, 10);
        java.lang.Class<?> wildcardClass78 = intArray69.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[10, 100, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test2144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2144");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray29 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem20.BruteForce(intArray29, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem0.BruteForce(intArray29, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray42 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem35.TwoPointer(intArray42, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem34.TwoPointer(intArray42, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem0.Hashmap(intArray42, (int) (short) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem49.BruteForce(intArray52, (int) '#');
        int[] intArray58 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem49.BruteForce(intArray58, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem61 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem61.BruteForce(intArray64, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem49.Hashmap(intArray64, (int) (byte) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem0.TwoPointer(intArray64, (int) '#');
        java.lang.Class<?> wildcardClass71 = intArray64.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test2145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2145");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray10 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem1.BruteForce(intArray10, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray16 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList18 = threeSumProblem13.BruteForce(intArray16, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem1.Hashmap(intArray16, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray30 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem21.BruteForce(intArray30, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem1.TwoPointer(intArray30, (int) ' ');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray43 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem36.TwoPointer(intArray43, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem35.TwoPointer(intArray43, (int) (byte) 0);
        int[] intArray52 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem35.Hashmap(intArray52, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray63 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem56.TwoPointer(intArray63, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem55.TwoPointer(intArray63, (int) (byte) 0);
        int[] intArray72 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem55.Hashmap(intArray72, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem35.Hashmap(intArray72, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem77 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem77.BruteForce(intArray80, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem35.Hashmap(intArray80, (int) (byte) 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem1.Hashmap(intArray80, (int) (byte) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem0.TwoPointer(intArray80, (int) ' ');
        java.lang.Class<?> wildcardClass89 = intListList88.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList18);
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test2146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2146");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray29 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem20.BruteForce(intArray29, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem0.BruteForce(intArray29, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray41 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem34.TwoPointer(intArray41, (int) (short) 1);
        int[] intArray47 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem34.TwoPointer(intArray47, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem0.Hashmap(intArray47, (int) (byte) -1);
        java.lang.Class<?> wildcardClass52 = intArray47.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test2147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2147");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem14.BruteForce(intArray17, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem13.Hashmap(intArray17, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem22 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem23 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray30 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem23.TwoPointer(intArray30, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem22.TwoPointer(intArray30, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem13.BruteForce(intArray30, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem0.BruteForce(intArray30, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem40.BruteForce(intArray43, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem39.Hashmap(intArray43, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem49.BruteForce(intArray52, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem48.Hashmap(intArray52, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem57 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem57.BruteForce(intArray60, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem48.TwoPointer(intArray60, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem65 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem66 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem66.BruteForce(intArray69, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem65.Hashmap(intArray69, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem74.BruteForce(intArray77, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem65.TwoPointer(intArray77, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem48.Hashmap(intArray77, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem39.BruteForce(intArray77, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem0.TwoPointer(intArray77, 0);
        java.lang.Class<?> wildcardClass88 = intListList87.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test2148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2148");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem21.BruteForce(intArray24, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem20.Hashmap(intArray24, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem0.TwoPointer(intArray24, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem32 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem33 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray40 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem33.TwoPointer(intArray40, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem32.TwoPointer(intArray40, (int) (byte) 0);
        int[] intArray46 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem32.TwoPointer(intArray46, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem31.TwoPointer(intArray46, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem0.BruteForce(intArray46, (-1));
        java.lang.Class<?> wildcardClass53 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test2149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2149");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray25 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem18.TwoPointer(intArray25, (int) (short) 1);
        int[] intArray31 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem18.TwoPointer(intArray31, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray42 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem35.TwoPointer(intArray42, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem34.TwoPointer(intArray42, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem18.BruteForce(intArray42, (int) (short) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem12.Hashmap(intArray42, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem0.BruteForce(intArray42, (int) 'a');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem54.BruteForce(intArray57, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem53.Hashmap(intArray57, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem62 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem63 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray70 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem63.TwoPointer(intArray70, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem62.TwoPointer(intArray70, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem53.BruteForce(intArray70, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem0.TwoPointer(intArray70, 1);
        java.lang.Class<?> wildcardClass79 = intArray70.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test2150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2150");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        int[] intArray37 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray37, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.Hashmap(intArray37, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem42.BruteForce(intArray45, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem0.Hashmap(intArray45, (int) (byte) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem50 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem51.BruteForce(intArray54, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem50.Hashmap(intArray54, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem0.Hashmap(intArray54, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem61 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem62 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem62.BruteForce(intArray65, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem61.Hashmap(intArray65, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem70 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem71 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem71.BruteForce(intArray74, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem70.Hashmap(intArray74, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem79 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem79.BruteForce(intArray82, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem70.TwoPointer(intArray82, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem61.Hashmap(intArray82, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem0.TwoPointer(intArray82, (int) (byte) 0);
        java.lang.Class<?> wildcardClass91 = intArray82.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test2151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2151");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem6.TwoPointer(intArray13, (int) (short) 1);
        int[] intArray19 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem6.TwoPointer(intArray19, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem22 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem23 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray30 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem23.TwoPointer(intArray30, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem22.TwoPointer(intArray30, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem6.BruteForce(intArray30, (int) (short) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem0.Hashmap(intArray30, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem39.BruteForce(intArray42, (int) '#');
        int[] intArray48 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem39.BruteForce(intArray48, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem51.BruteForce(intArray54, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem39.Hashmap(intArray54, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem60.BruteForce(intArray63, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem59.Hashmap(intArray63, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem68 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem68.BruteForce(intArray71, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem59.TwoPointer(intArray71, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem39.Hashmap(intArray71, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem0.BruteForce(intArray71, (int) (byte) 1);
        int[] intArray80 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem0.Hashmap(intArray80, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intListList79);
    }

    @Test
    public void test2152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2152");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.BruteForce(intArray13, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        int[] intArray37 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray37, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.BruteForce(intArray37, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray49 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem42.TwoPointer(intArray49, (int) (short) 1);
        int[] intArray55 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem42.TwoPointer(intArray55, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem0.TwoPointer(intArray55, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem60.BruteForce(intArray63, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem66 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem66.BruteForce(intArray69, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem60.TwoPointer(intArray69, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem0.Hashmap(intArray69, 10);
        int[] intArray76 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem0.Hashmap(intArray76, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
    }

    @Test
    public void test2153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2153");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem21.BruteForce(intArray24, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem20.Hashmap(intArray24, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray37 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem30.TwoPointer(intArray37, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem29.TwoPointer(intArray37, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem20.BruteForce(intArray37, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem0.TwoPointer(intArray37, (int) (byte) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray55 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem46.BruteForce(intArray55, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem58 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem58.BruteForce(intArray61, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem46.Hashmap(intArray61, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem66 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem66.BruteForce(intArray69, (int) '#');
        int[] intArray75 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem66.BruteForce(intArray75, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem46.BruteForce(intArray75, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem80 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray87 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem80.TwoPointer(intArray87, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem46.TwoPointer(intArray87, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem0.BruteForce(intArray87, (int) (short) 1);
        java.lang.Class<?> wildcardClass94 = intListList93.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(intListList93);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test2154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2154");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem14.BruteForce(intArray17, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem13.Hashmap(intArray17, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem22 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem23 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray26 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem23.BruteForce(intArray26, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem22.Hashmap(intArray26, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem13.BruteForce(intArray26, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem33 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray41 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem34.TwoPointer(intArray41, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem33.TwoPointer(intArray41, (int) (byte) 0);
        int[] intArray50 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem33.Hashmap(intArray50, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem13.BruteForce(intArray50, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem55.BruteForce(intArray58, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem13.Hashmap(intArray58, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem63 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem63.BruteForce(intArray66, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem13.TwoPointer(intArray66, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem0.Hashmap(intArray66, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem73 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem74.BruteForce(intArray77, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem73.Hashmap(intArray77, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem82 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem83 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray90 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem83.TwoPointer(intArray90, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem82.TwoPointer(intArray90, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem73.BruteForce(intArray90, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList98 = threeSumProblem0.TwoPointer(intArray90, (int) (short) 10);
        java.lang.Class<?> wildcardClass99 = intListList98.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(intListList96);
        org.junit.Assert.assertNotNull(intListList98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test2155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2155");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem6.TwoPointer(intArray13, (int) (short) 1);
        int[] intArray19 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem6.TwoPointer(intArray19, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem22 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem23 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray30 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem23.TwoPointer(intArray30, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem22.TwoPointer(intArray30, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem6.BruteForce(intArray30, (int) (short) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem0.Hashmap(intArray30, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray47 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem40.TwoPointer(intArray47, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem39.TwoPointer(intArray47, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem0.TwoPointer(intArray47, (int) (short) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray63 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem56.TwoPointer(intArray63, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem55.TwoPointer(intArray63, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem68 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem69 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem69.BruteForce(intArray72, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem68.Hashmap(intArray72, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem77 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem78 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray85 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem78.TwoPointer(intArray85, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem77.TwoPointer(intArray85, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem68.BruteForce(intArray85, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem55.BruteForce(intArray85, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList95 = threeSumProblem54.Hashmap(intArray85, (int) (byte) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList97 = threeSumProblem0.BruteForce(intArray85, 100);
        java.lang.Class<?> wildcardClass98 = intArray85.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(intListList93);
        org.junit.Assert.assertNotNull(intListList95);
        org.junit.Assert.assertNotNull(intListList97);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test2156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2156");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray29 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem20.BruteForce(intArray29, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem0.BruteForce(intArray29, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem34.BruteForce(intArray38, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem44 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray51 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem44.TwoPointer(intArray51, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem43.TwoPointer(intArray51, (int) (byte) 0);
        int[] intArray60 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem43.Hashmap(intArray60, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem63 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem64 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem64.BruteForce(intArray67, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem63.Hashmap(intArray67, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem72 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem73 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem73.BruteForce(intArray76, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem72.Hashmap(intArray76, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem63.BruteForce(intArray76, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem43.Hashmap(intArray76, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem34.TwoPointer(intArray76, (int) (byte) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem0.TwoPointer(intArray76, (int) (short) -1);
        java.lang.Class<?> wildcardClass89 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test2157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2157");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.BruteForce(intArray13, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        int[] intArray37 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray37, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.BruteForce(intArray37, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem42.BruteForce(intArray45, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem0.Hashmap(intArray45, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem50 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem50.BruteForce(intArray53, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem56.BruteForce(intArray59, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem50.TwoPointer(intArray59, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem0.BruteForce(intArray59, 0);
        int[] intArray66 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem0.BruteForce(intArray66, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intListList65);
    }

    @Test
    public void test2158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2158");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem21.BruteForce(intArray24, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem20.Hashmap(intArray24, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray37 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem30.TwoPointer(intArray37, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem29.TwoPointer(intArray37, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem20.BruteForce(intArray37, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem0.TwoPointer(intArray37, (int) (byte) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray55 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem46.BruteForce(intArray55, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem58 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem58.BruteForce(intArray61, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem46.Hashmap(intArray61, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem66 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem67 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem67.BruteForce(intArray70, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem66.Hashmap(intArray70, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem75 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem75.BruteForce(intArray78, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem66.TwoPointer(intArray78, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem46.Hashmap(intArray78, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem0.TwoPointer(intArray78, (int) (short) -1);
        int[] intArray87 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem0.Hashmap(intArray87, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intListList86);
    }

    @Test
    public void test2159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2159");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem17.Hashmap(intArray21, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem26.BruteForce(intArray29, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem17.TwoPointer(intArray29, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem34.Hashmap(intArray38, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem43.BruteForce(intArray46, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem34.TwoPointer(intArray46, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem17.Hashmap(intArray46, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem0.BruteForce(intArray46, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem55.BruteForce(intArray58, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem61 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem61.BruteForce(intArray64, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem55.TwoPointer(intArray64, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem0.Hashmap(intArray64, (int) (short) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem71 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem72 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray79 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem72.TwoPointer(intArray79, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem71.TwoPointer(intArray79, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem0.TwoPointer(intArray79, 0);
        java.lang.Class<?> wildcardClass86 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test2160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2160");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem10.TwoPointer(intArray17, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem9.TwoPointer(intArray17, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem0.BruteForce(intArray17, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem24 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem25 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem25.BruteForce(intArray28, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem24.Hashmap(intArray28, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem33 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem33.BruteForce(intArray36, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem24.TwoPointer(intArray36, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray49 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem42.TwoPointer(intArray49, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem41.TwoPointer(intArray49, (int) (byte) 0);
        int[] intArray58 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem41.Hashmap(intArray58, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem24.Hashmap(intArray58, (int) ' ');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem63 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem64 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray71 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem64.TwoPointer(intArray71, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem63.TwoPointer(intArray71, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem24.BruteForce(intArray71, 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem0.TwoPointer(intArray71, (int) ' ');
        int[] intArray80 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem0.BruteForce(intArray80, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intListList79);
    }

    @Test
    public void test2161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2161");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem9.TwoPointer(intArray21, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem0.Hashmap(intArray21, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem28 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem29.BruteForce(intArray32, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem28.Hashmap(intArray32, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem38 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem38.BruteForce(intArray41, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem37.Hashmap(intArray41, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem46.BruteForce(intArray49, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem37.TwoPointer(intArray49, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem28.Hashmap(intArray49, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem56.BruteForce(intArray59, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem28.TwoPointer(intArray59, (int) (short) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem0.BruteForce(intArray59, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem66 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem67 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray74 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem67.TwoPointer(intArray74, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem66.TwoPointer(intArray74, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem0.Hashmap(intArray74, 100);
        int[] intArray81 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem0.BruteForce(intArray81, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
    }

    @Test
    public void test2162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2162");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray29 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem20.BruteForce(intArray29, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem0.BruteForce(intArray29, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray41 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem34.TwoPointer(intArray41, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem0.TwoPointer(intArray41, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem47 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray54 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem47.TwoPointer(intArray54, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem46.TwoPointer(intArray54, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem60.BruteForce(intArray63, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem59.Hashmap(intArray63, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem68 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem68.BruteForce(intArray71, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem59.TwoPointer(intArray71, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem76 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem77 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem77.BruteForce(intArray80, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem76.Hashmap(intArray80, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem85 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray88 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem85.BruteForce(intArray88, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem76.TwoPointer(intArray88, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem59.Hashmap(intArray88, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem46.Hashmap(intArray88, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList98 = threeSumProblem0.TwoPointer(intArray88, (int) (byte) 1);
        java.lang.Class<?> wildcardClass99 = intListList98.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(intListList96);
        org.junit.Assert.assertNotNull(intListList98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test2163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2163");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem16 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem16.BruteForce(intArray19, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem10.TwoPointer(intArray19, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem0.BruteForce(intArray19, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray33 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem26.TwoPointer(intArray33, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem37.BruteForce(intArray40, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem36.Hashmap(intArray40, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem45 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem45.BruteForce(intArray48, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem36.TwoPointer(intArray48, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem54.BruteForce(intArray57, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem53.Hashmap(intArray57, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem62 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem62.BruteForce(intArray65, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem53.TwoPointer(intArray65, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem36.Hashmap(intArray65, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem26.Hashmap(intArray65, (int) (short) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem0.TwoPointer(intArray65, 0);
        java.lang.Class<?> wildcardClass76 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test2164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2164");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray25 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem18.TwoPointer(intArray25, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem17.TwoPointer(intArray25, (int) (byte) 0);
        int[] intArray34 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem17.Hashmap(intArray34, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem0.Hashmap(intArray34, (int) ' ');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem40.BruteForce(intArray43, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem39.Hashmap(intArray43, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem49.BruteForce(intArray52, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem48.Hashmap(intArray52, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem39.BruteForce(intArray52, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray67 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem60.TwoPointer(intArray67, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem59.TwoPointer(intArray67, (int) (byte) 0);
        int[] intArray76 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem59.Hashmap(intArray76, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem39.BruteForce(intArray76, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem81 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray84 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem81.BruteForce(intArray84, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem39.Hashmap(intArray84, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem89 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray92 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem89.BruteForce(intArray92, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem39.TwoPointer(intArray92, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList98 = threeSumProblem0.TwoPointer(intArray92, (int) (byte) 100);
        java.lang.Class<?> wildcardClass99 = intArray92.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(intListList96);
        org.junit.Assert.assertNotNull(intListList98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test2165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2165");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.BruteForce(intArray13, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        int[] intArray37 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray37, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.BruteForce(intArray37, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray49 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem42.TwoPointer(intArray49, (int) (short) 1);
        int[] intArray55 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem42.TwoPointer(intArray55, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem0.TwoPointer(intArray55, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem61 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem61.BruteForce(intArray64, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem60.Hashmap(intArray64, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem69 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem70 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem70.BruteForce(intArray73, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem69.Hashmap(intArray73, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem60.BruteForce(intArray73, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem0.TwoPointer(intArray73, (int) 'a');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem82 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray89 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem82.TwoPointer(intArray89, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem0.BruteForce(intArray89, 0);
        java.lang.Class<?> wildcardClass94 = intListList93.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(intListList93);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test2166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2166");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray29 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem20.BruteForce(intArray29, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem0.TwoPointer(intArray29, (int) ' ');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray42 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem35.TwoPointer(intArray42, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem34.TwoPointer(intArray42, (int) (byte) 0);
        int[] intArray51 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem34.Hashmap(intArray51, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray62 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem55.TwoPointer(intArray62, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem54.TwoPointer(intArray62, (int) (byte) 0);
        int[] intArray71 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem54.Hashmap(intArray71, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem34.Hashmap(intArray71, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem76 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem76.BruteForce(intArray79, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem34.Hashmap(intArray79, (int) (byte) 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem0.Hashmap(intArray79, (int) (byte) 100);
        int[] intArray86 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem0.BruteForce(intArray86, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
    }

    @Test
    public void test2167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2167");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem9.TwoPointer(intArray21, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem0.Hashmap(intArray21, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem28 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem28.BruteForce(intArray31, (int) '#');
        int[] intArray37 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem28.BruteForce(intArray37, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem40.BruteForce(intArray43, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem28.Hashmap(intArray43, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray56 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem49.TwoPointer(intArray56, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem48.TwoPointer(intArray56, (int) (byte) 0);
        int[] intArray62 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem48.TwoPointer(intArray62, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem65 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem66 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray73 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem66.TwoPointer(intArray73, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem65.TwoPointer(intArray73, (int) (byte) 0);
        int[] intArray82 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem65.Hashmap(intArray82, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem48.TwoPointer(intArray82, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem28.Hashmap(intArray82, (int) (short) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem0.TwoPointer(intArray82, (int) (short) 10);
        java.lang.Class<?> wildcardClass91 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test2168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2168");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray14 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray14, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem17.Hashmap(intArray21, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem27.BruteForce(intArray30, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem26.Hashmap(intArray30, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem17.BruteForce(intArray30, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem38 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem38.TwoPointer(intArray45, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem37.TwoPointer(intArray45, (int) (byte) 0);
        int[] intArray54 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem37.Hashmap(intArray54, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem17.BruteForce(intArray54, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem0.Hashmap(intArray54, (int) 'a');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem61 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem62 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem62.BruteForce(intArray65, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem61.Hashmap(intArray65, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem0.TwoPointer(intArray65, 100);
        java.lang.Class<?> wildcardClass72 = intArray65.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0]");
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test2169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2169");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem21.BruteForce(intArray24, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem20.Hashmap(intArray24, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem29.BruteForce(intArray32, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem20.TwoPointer(intArray32, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem0.Hashmap(intArray32, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray47 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem40.TwoPointer(intArray47, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem39.TwoPointer(intArray47, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem0.TwoPointer(intArray47, (int) (byte) -1);
        java.lang.Class<?> wildcardClass54 = intArray47.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test2170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2170");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem14.TwoPointer(intArray21, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem13.TwoPointer(intArray21, (int) (byte) 0);
        int[] intArray27 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem13.TwoPointer(intArray27, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem31.TwoPointer(intArray38, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem30.TwoPointer(intArray38, (int) (byte) 0);
        int[] intArray47 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem30.Hashmap(intArray47, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem13.TwoPointer(intArray47, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray61 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem52.BruteForce(intArray61, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem64 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem64.BruteForce(intArray67, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem52.Hashmap(intArray67, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem72 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem73 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem73.BruteForce(intArray76, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem72.Hashmap(intArray76, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem81 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray84 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem81.BruteForce(intArray84, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem72.TwoPointer(intArray84, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem52.Hashmap(intArray84, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem13.Hashmap(intArray84, (int) (byte) 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem0.BruteForce(intArray84, (int) 'a');
        java.lang.Class<?> wildcardClass95 = intListList94.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0]");
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test2171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2171");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem16 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem16.BruteForce(intArray19, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem10.TwoPointer(intArray19, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem24 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray33 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem24.BruteForce(intArray33, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem10.BruteForce(intArray33, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem0.BruteForce(intArray33, 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray49 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem40.BruteForce(intArray49, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem52.BruteForce(intArray55, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem40.Hashmap(intArray55, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem60.BruteForce(intArray63, (int) '#');
        int[] intArray69 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem60.BruteForce(intArray69, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem40.TwoPointer(intArray69, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem0.Hashmap(intArray69, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem76 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem77 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray84 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem77.TwoPointer(intArray84, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem76.TwoPointer(intArray84, (int) (byte) 0);
        int[] intArray90 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem76.TwoPointer(intArray90, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem0.TwoPointer(intArray90, (int) (short) 10);
        int[] intArray95 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList97 = threeSumProblem0.Hashmap(intArray95, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0]");
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(intListList94);
    }

    @Test
    public void test2172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2172");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray29 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem20.BruteForce(intArray29, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem32 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem32.BruteForce(intArray35, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray35, (int) (byte) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.BruteForce(intArray35, (int) (byte) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray50 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem43.TwoPointer(intArray50, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem42.TwoPointer(intArray50, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem0.BruteForce(intArray50, 1);
        java.lang.Class<?> wildcardClass57 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test2173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2173");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray9 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem6.BruteForce(intArray9, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList13 = threeSumProblem0.TwoPointer(intArray9, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem15 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem15.BruteForce(intArray18, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem14.Hashmap(intArray18, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem23 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray26 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem23.BruteForce(intArray26, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem14.TwoPointer(intArray26, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem32 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem32.BruteForce(intArray35, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem31.BruteForce(intArray35, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem14.TwoPointer(intArray35, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem43.BruteForce(intArray46, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem42.Hashmap(intArray46, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem14.BruteForce(intArray46, (int) (byte) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem53.BruteForce(intArray56, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem14.TwoPointer(intArray56, (int) (byte) 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem0.Hashmap(intArray56, (int) (byte) 0);
        java.lang.Class<?> wildcardClass63 = intArray56.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intListList13);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test2174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2174");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem14.BruteForce(intArray17, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem13.Hashmap(intArray17, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem22 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem22.BruteForce(intArray25, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem13.TwoPointer(intArray25, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem31.BruteForce(intArray34, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem30.Hashmap(intArray34, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem39.BruteForce(intArray42, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem30.TwoPointer(intArray42, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem13.Hashmap(intArray42, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem0.Hashmap(intArray42, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray59 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem52.TwoPointer(intArray59, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem51.TwoPointer(intArray59, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem64 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray71 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem64.TwoPointer(intArray71, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem51.Hashmap(intArray71, (int) (byte) 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem0.TwoPointer(intArray71, 100);
        java.lang.Class<?> wildcardClass78 = intListList77.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test2175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2175");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray9 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem6.BruteForce(intArray9, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList13 = threeSumProblem0.TwoPointer(intArray9, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem14.BruteForce(intArray17, (int) '#');
        int[] intArray23 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem14.BruteForce(intArray23, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem0.BruteForce(intArray23, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem28 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray36 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem29.TwoPointer(intArray36, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem28.TwoPointer(intArray36, (int) (byte) 0);
        int[] intArray42 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem28.TwoPointer(intArray42, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem45 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem45.BruteForce(intArray48, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem51.BruteForce(intArray54, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem45.TwoPointer(intArray54, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem60.BruteForce(intArray63, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem59.Hashmap(intArray63, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem68 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem68.BruteForce(intArray71, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem59.TwoPointer(intArray71, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem45.BruteForce(intArray71, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem28.Hashmap(intArray71, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem0.BruteForce(intArray71, (int) '#');
        java.lang.Class<?> wildcardClass82 = intArray71.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intListList13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0]");
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test2176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2176");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.BruteForce(intArray13, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem21.BruteForce(intArray24, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem20.Hashmap(intArray24, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray37 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem30.TwoPointer(intArray37, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem29.TwoPointer(intArray37, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem20.BruteForce(intArray37, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem0.TwoPointer(intArray37, 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray53 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem46.TwoPointer(intArray53, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem0.BruteForce(intArray53, 0);
        java.lang.Class<?> wildcardClass58 = intListList57.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test2177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2177");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        int[] intArray13 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem0.TwoPointer(intArray13, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem16 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem17.TwoPointer(intArray24, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem16.TwoPointer(intArray24, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem0.BruteForce(intArray24, (int) (short) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem32 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem32.BruteForce(intArray35, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem31.Hashmap(intArray35, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem40.BruteForce(intArray43, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem31.TwoPointer(intArray43, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem49.BruteForce(intArray52, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem48.BruteForce(intArray52, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem31.TwoPointer(intArray52, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem0.Hashmap(intArray52, (int) ' ');
        java.lang.Class<?> wildcardClass61 = intListList60.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test2178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2178");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray14 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray14, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray25 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem18.TwoPointer(intArray25, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem17.TwoPointer(intArray25, (int) (byte) 0);
        int[] intArray34 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem17.Hashmap(intArray34, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem0.TwoPointer(intArray34, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem40.BruteForce(intArray43, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem39.Hashmap(intArray43, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem48.BruteForce(intArray51, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem39.TwoPointer(intArray51, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray65 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem56.BruteForce(intArray65, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem68 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem68.BruteForce(intArray71, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem56.Hashmap(intArray71, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem76 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem76.BruteForce(intArray79, (int) '#');
        int[] intArray85 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem76.BruteForce(intArray85, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem56.BruteForce(intArray85, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem39.Hashmap(intArray85, (int) ' ');
        int[] intArray95 = new int[] { (byte) 0, (byte) 10, 10 };
        java.util.List<java.util.List<java.lang.Integer>> intListList97 = threeSumProblem39.BruteForce(intArray95, (int) (short) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList99 = threeSumProblem0.BruteForce(intArray95, (int) (byte) 100);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0]");
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 10, 10]");
        org.junit.Assert.assertNotNull(intListList97);
        org.junit.Assert.assertNotNull(intListList99);
    }

    @Test
    public void test2179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2179");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem11 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray18 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem11.TwoPointer(intArray18, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem10.TwoPointer(intArray18, (int) (byte) 0);
        int[] intArray27 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem10.Hashmap(intArray27, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem31.BruteForce(intArray34, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem30.Hashmap(intArray34, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem40.BruteForce(intArray43, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem39.Hashmap(intArray43, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem30.BruteForce(intArray43, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem10.Hashmap(intArray43, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem0.TwoPointer(intArray43, (int) (short) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem54.BruteForce(intArray57, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem60.BruteForce(intArray63, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem54.TwoPointer(intArray63, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem68 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem68.BruteForce(intArray71, (int) '#');
        int[] intArray77 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem68.BruteForce(intArray77, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem54.BruteForce(intArray77, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem0.BruteForce(intArray77, (int) (byte) 1);
        java.lang.Class<?> wildcardClass84 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test2180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2180");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem21.BruteForce(intArray24, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem20.Hashmap(intArray24, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem0.TwoPointer(intArray24, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem32 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem33 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray40 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem33.TwoPointer(intArray40, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem32.TwoPointer(intArray40, (int) (byte) 0);
        int[] intArray46 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem32.TwoPointer(intArray46, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem31.TwoPointer(intArray46, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem0.TwoPointer(intArray46, (int) (short) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray61 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem54.TwoPointer(intArray61, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem53.TwoPointer(intArray61, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem66 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem67 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem67.BruteForce(intArray70, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem66.Hashmap(intArray70, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem75 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem76 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray83 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem76.TwoPointer(intArray83, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem75.TwoPointer(intArray83, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem66.BruteForce(intArray83, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem53.BruteForce(intArray83, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem0.BruteForce(intArray83, (int) (byte) 0);
        java.lang.Class<?> wildcardClass94 = intArray83.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(intListList93);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test2181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2181");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem19 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList24 = threeSumProblem19.BruteForce(intArray22, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem18.Hashmap(intArray22, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem9.BruteForce(intArray22, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray37 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem30.TwoPointer(intArray37, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem29.TwoPointer(intArray37, (int) (byte) 0);
        int[] intArray46 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem29.Hashmap(intArray46, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem9.BruteForce(intArray46, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem0.TwoPointer(intArray46, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray61 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem54.TwoPointer(intArray61, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem53.TwoPointer(intArray61, (int) (byte) 0);
        int[] intArray70 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem53.Hashmap(intArray70, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem73 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray82 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem73.BruteForce(intArray82, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem85 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray88 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem85.BruteForce(intArray88, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem73.Hashmap(intArray88, (int) (byte) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem53.BruteForce(intArray88, (int) (byte) 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem0.Hashmap(intArray88, (int) '#');
        java.lang.Class<?> wildcardClass97 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList24);
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(intListList96);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test2182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2182");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray25 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem18.TwoPointer(intArray25, (int) (short) 1);
        int[] intArray31 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem18.TwoPointer(intArray31, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray42 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem35.TwoPointer(intArray42, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem34.TwoPointer(intArray42, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem18.BruteForce(intArray42, (int) (short) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem12.Hashmap(intArray42, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem0.BruteForce(intArray42, (int) 'a');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem54.BruteForce(intArray57, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem53.Hashmap(intArray57, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem62 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem63 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray70 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem63.TwoPointer(intArray70, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem62.TwoPointer(intArray70, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem53.BruteForce(intArray70, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem0.TwoPointer(intArray70, 1);
        java.lang.Class<?> wildcardClass79 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test2183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2183");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.BruteForce(intArray4, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem10.TwoPointer(intArray17, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem9.TwoPointer(intArray17, (int) (byte) 0);
        int[] intArray26 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem9.Hashmap(intArray26, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem30.BruteForce(intArray33, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem29.Hashmap(intArray33, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem9.TwoPointer(intArray33, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.Hashmap(intArray33, (int) (byte) 10);
        int[] intArray47 = new int[] { (byte) 10, (byte) 100, 'a', '4', 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem0.TwoPointer(intArray47, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem50 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem50.BruteForce(intArray53, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem56.BruteForce(intArray59, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem50.TwoPointer(intArray59, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem64 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem65 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem65.BruteForce(intArray68, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem64.Hashmap(intArray68, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem73 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray81 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem74.TwoPointer(intArray81, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem73.TwoPointer(intArray81, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem64.BruteForce(intArray81, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem50.TwoPointer(intArray81, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem0.BruteForce(intArray81, (int) '#');
        java.lang.Class<?> wildcardClass92 = intListList91.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[1, 10, 52, 97, 100]");
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test2184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2184");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem11 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray18 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem11.TwoPointer(intArray18, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem10.TwoPointer(intArray18, (int) (byte) 0);
        int[] intArray27 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem10.Hashmap(intArray27, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem0.BruteForce(intArray27, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem32 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray39 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem32.TwoPointer(intArray39, (int) (short) 1);
        int[] intArray45 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem32.TwoPointer(intArray45, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray56 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem49.TwoPointer(intArray56, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem48.TwoPointer(intArray56, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem32.BruteForce(intArray56, (int) (short) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem63 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray70 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem63.TwoPointer(intArray70, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem73 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray81 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem74.TwoPointer(intArray81, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem73.TwoPointer(intArray81, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem63.Hashmap(intArray81, (int) (byte) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem32.BruteForce(intArray81, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem0.BruteForce(intArray81, (int) (byte) 1);
        java.lang.Class<?> wildcardClass92 = intListList91.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test2185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2185");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem14.BruteForce(intArray17, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem13.Hashmap(intArray17, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem22 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem22.BruteForce(intArray25, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem13.TwoPointer(intArray25, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem31.BruteForce(intArray34, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem30.Hashmap(intArray34, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem39.BruteForce(intArray42, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem30.TwoPointer(intArray42, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem13.Hashmap(intArray42, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem0.Hashmap(intArray42, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray59 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem52.TwoPointer(intArray59, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem51.TwoPointer(intArray59, (int) (byte) 0);
        int[] intArray65 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem51.TwoPointer(intArray65, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem0.BruteForce(intArray65, (int) (byte) 0);
        java.lang.Class<?> wildcardClass70 = intArray65.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test2186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2186");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray29 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem20.BruteForce(intArray29, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem0.BruteForce(intArray29, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray41 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem34.TwoPointer(intArray41, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem0.TwoPointer(intArray41, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray53 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem46.TwoPointer(intArray53, (int) (short) 1);
        int[] intArray59 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem46.TwoPointer(intArray59, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem0.BruteForce(intArray59, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem64 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem64.BruteForce(intArray67, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem70 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem70.BruteForce(intArray73, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem64.TwoPointer(intArray73, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem78 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem79 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem79.BruteForce(intArray82, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem78.Hashmap(intArray82, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem87 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray90 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem87.BruteForce(intArray90, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem78.TwoPointer(intArray90, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem64.BruteForce(intArray90, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList98 = threeSumProblem0.BruteForce(intArray90, (int) (short) 0);
        java.lang.Class<?> wildcardClass99 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(intListList96);
        org.junit.Assert.assertNotNull(intListList98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test2187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2187");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem19 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList24 = threeSumProblem19.BruteForce(intArray22, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem18.Hashmap(intArray22, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem9.BruteForce(intArray22, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray37 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem30.TwoPointer(intArray37, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem29.TwoPointer(intArray37, (int) (byte) 0);
        int[] intArray46 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem29.Hashmap(intArray46, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem9.BruteForce(intArray46, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem51.BruteForce(intArray54, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem9.Hashmap(intArray54, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem59.BruteForce(intArray62, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem9.TwoPointer(intArray62, (int) ' ');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem67 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray74 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem67.TwoPointer(intArray74, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem77 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem77.BruteForce(intArray80, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem83 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray86 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem83.BruteForce(intArray86, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem77.TwoPointer(intArray86, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem67.BruteForce(intArray86, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem9.BruteForce(intArray86, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem0.BruteForce(intArray86, (int) '#');
        java.lang.Class<?> wildcardClass97 = intListList96.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList24);
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(intListList96);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test2188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2188");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.BruteForce(intArray4, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray18 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem9.BruteForce(intArray18, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem0.BruteForce(intArray18, (int) (short) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem23 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray26 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem23.BruteForce(intArray26, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem29.BruteForce(intArray32, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem23.TwoPointer(intArray32, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem38 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem38.BruteForce(intArray41, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem37.Hashmap(intArray41, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem46.BruteForce(intArray49, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem37.TwoPointer(intArray49, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem23.BruteForce(intArray49, (int) ' ');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem57 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem57.BruteForce(intArray60, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem56.BruteForce(intArray60, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem23.Hashmap(intArray60, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem67 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem68 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem68.BruteForce(intArray71, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem67.Hashmap(intArray71, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem76 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem77 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem77.BruteForce(intArray80, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem76.Hashmap(intArray80, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem85 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray88 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem85.BruteForce(intArray88, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem76.TwoPointer(intArray88, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem67.Hashmap(intArray88, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem23.BruteForce(intArray88, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList98 = threeSumProblem0.TwoPointer(intArray88, 0);
        java.lang.Class<?> wildcardClass99 = intArray88.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(intListList96);
        org.junit.Assert.assertNotNull(intListList98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test2189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2189");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem17.BruteForce(intArray21, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem0.TwoPointer(intArray21, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem28 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem29.BruteForce(intArray32, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem28.Hashmap(intArray32, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem0.BruteForce(intArray32, (int) (byte) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray47 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem40.TwoPointer(intArray47, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem39.TwoPointer(intArray47, (int) (byte) 0);
        int[] intArray53 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem39.TwoPointer(intArray53, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem0.Hashmap(intArray53, 100);
        java.lang.Class<?> wildcardClass58 = intListList57.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0]");
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test2190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2190");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem6.TwoPointer(intArray13, (int) (short) 1);
        int[] intArray19 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem6.TwoPointer(intArray19, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem22 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem23 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray30 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem23.TwoPointer(intArray30, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem22.TwoPointer(intArray30, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem6.BruteForce(intArray30, (int) (short) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem0.Hashmap(intArray30, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem39.BruteForce(intArray42, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem45 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem45.BruteForce(intArray48, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem39.TwoPointer(intArray48, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem54.BruteForce(intArray57, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem53.Hashmap(intArray57, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem62 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem62.BruteForce(intArray65, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem53.TwoPointer(intArray65, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem39.BruteForce(intArray65, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem0.Hashmap(intArray65, (int) 'a');
        int[] intArray74 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem0.BruteForce(intArray74, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
    }

    @Test
    public void test2191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2191");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.BruteForce(intArray4, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem10.TwoPointer(intArray17, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem9.TwoPointer(intArray17, (int) (byte) 0);
        int[] intArray23 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem9.TwoPointer(intArray23, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem27.BruteForce(intArray30, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem26.Hashmap(intArray30, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem36.BruteForce(intArray39, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem35.Hashmap(intArray39, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem26.BruteForce(intArray39, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem47 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray54 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem47.TwoPointer(intArray54, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem46.TwoPointer(intArray54, (int) (byte) 0);
        int[] intArray63 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem46.Hashmap(intArray63, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem26.BruteForce(intArray63, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem9.Hashmap(intArray63, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem0.TwoPointer(intArray63, (int) (short) 10);
        java.lang.Class<?> wildcardClass72 = intListList71.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test2192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2192");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.BruteForce(intArray4, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray16 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList18 = threeSumProblem9.TwoPointer(intArray16, (int) (short) 1);
        int[] intArray22 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList24 = threeSumProblem9.TwoPointer(intArray22, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem25 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray34 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem25.BruteForce(intArray34, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem37.BruteForce(intArray40, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray50 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem43.TwoPointer(intArray50, (int) (short) 1);
        int[] intArray56 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem43.TwoPointer(intArray56, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray67 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem60.TwoPointer(intArray67, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem59.TwoPointer(intArray67, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem43.BruteForce(intArray67, (int) (short) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem37.Hashmap(intArray67, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem25.BruteForce(intArray67, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem9.Hashmap(intArray67, (int) (short) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem0.Hashmap(intArray67, (int) '4');
        java.lang.Class<?> wildcardClass82 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList18);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList24);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test2193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2193");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.BruteForce(intArray4, (int) (short) 1);
        int[] intArray10 = new int[] { '#' };
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray10, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem14.TwoPointer(intArray21, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem13.TwoPointer(intArray21, (int) (byte) 0);
        int[] intArray30 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem13.Hashmap(intArray30, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem33 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray41 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem34.TwoPointer(intArray41, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem33.TwoPointer(intArray41, (int) (byte) 0);
        int[] intArray50 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem33.Hashmap(intArray50, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem13.Hashmap(intArray50, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem55.BruteForce(intArray58, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem13.Hashmap(intArray58, (int) (byte) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem63 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem64 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem64.BruteForce(intArray67, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem63.Hashmap(intArray67, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem13.Hashmap(intArray67, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem0.Hashmap(intArray67, (int) (short) -1);
        java.lang.Class<?> wildcardClass76 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[35]");
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test2194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2194");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem17.Hashmap(intArray21, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem26.BruteForce(intArray29, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem17.TwoPointer(intArray29, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem34.Hashmap(intArray38, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem43.BruteForce(intArray46, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem34.TwoPointer(intArray46, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem17.Hashmap(intArray46, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem0.BruteForce(intArray46, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray63 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem56.TwoPointer(intArray63, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem55.TwoPointer(intArray63, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem0.TwoPointer(intArray63, (int) (short) 1);
        int[] intArray70 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem0.BruteForce(intArray70, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
    }

    @Test
    public void test2195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2195");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        int[] intArray13 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem0.TwoPointer(intArray13, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem16 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray25 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem16.BruteForce(intArray25, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem28 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem28.BruteForce(intArray31, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem16.Hashmap(intArray31, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray45 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem36.BruteForce(intArray45, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem16.BruteForce(intArray45, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem50 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray57 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem50.TwoPointer(intArray57, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem16.TwoPointer(intArray57, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem0.BruteForce(intArray57, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem64 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem65 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem65.BruteForce(intArray68, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem64.Hashmap(intArray68, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem73 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem74.BruteForce(intArray77, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem73.Hashmap(intArray77, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem64.BruteForce(intArray77, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem0.TwoPointer(intArray77, (int) (byte) 10);
        int[] intArray86 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem0.TwoPointer(intArray86, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
    }

    @Test
    public void test2196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2196");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        int[] intArray37 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray37, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.Hashmap(intArray37, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem43.BruteForce(intArray46, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem42.Hashmap(intArray46, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem52.BruteForce(intArray55, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem51.Hashmap(intArray55, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem42.BruteForce(intArray55, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem62 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem63 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray70 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem63.TwoPointer(intArray70, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem62.TwoPointer(intArray70, (int) (byte) 0);
        int[] intArray79 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem62.Hashmap(intArray79, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem42.BruteForce(intArray79, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem84 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem85 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray88 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem85.BruteForce(intArray88, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem84.Hashmap(intArray88, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem42.Hashmap(intArray88, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem0.TwoPointer(intArray88, 0);
        java.lang.Class<?> wildcardClass97 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(intListList96);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test2197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2197");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem19 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray26 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem19.TwoPointer(intArray26, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem18.TwoPointer(intArray26, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem9.BruteForce(intArray26, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem33 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem33.BruteForce(intArray36, (int) '#');
        int[] intArray42 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem33.BruteForce(intArray42, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem45 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem45.BruteForce(intArray48, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem33.Hashmap(intArray48, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray62 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem53.BruteForce(intArray62, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem33.TwoPointer(intArray62, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem9.BruteForce(intArray62, (int) (short) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem0.BruteForce(intArray62, 0);
        java.lang.Class<?> wildcardClass71 = intArray62.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test2198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2198");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem16 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem16.BruteForce(intArray19, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem10.TwoPointer(intArray19, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem0.BruteForce(intArray19, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray34 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem27.TwoPointer(intArray34, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem26.TwoPointer(intArray34, (int) (byte) 0);
        int[] intArray43 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem26.Hashmap(intArray43, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem47 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray54 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem47.TwoPointer(intArray54, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem46.TwoPointer(intArray54, (int) (byte) 0);
        int[] intArray63 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem46.Hashmap(intArray63, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem26.Hashmap(intArray63, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem68 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem69 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem69.BruteForce(intArray72, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem68.Hashmap(intArray72, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem77 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem78 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray81 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem78.BruteForce(intArray81, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem77.Hashmap(intArray81, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem68.BruteForce(intArray81, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem26.BruteForce(intArray81, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem0.Hashmap(intArray81, 10);
        java.lang.Class<?> wildcardClass92 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test2199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2199");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem14.TwoPointer(intArray21, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem13.TwoPointer(intArray21, (int) (byte) 0);
        int[] intArray30 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem13.Hashmap(intArray30, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem0.Hashmap(intArray30, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem41.BruteForce(intArray44, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem35.TwoPointer(intArray44, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem50 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem50.BruteForce(intArray53, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem49.Hashmap(intArray53, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem58 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem58.BruteForce(intArray61, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem49.TwoPointer(intArray61, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem35.BruteForce(intArray61, (int) ' ');
        int[] intArray74 = new int[] { (short) 100, (byte) 100, '4', (byte) -1, (byte) 0, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem35.Hashmap(intArray74, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem0.Hashmap(intArray74, (int) '4');
        int[] intArray79 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem0.Hashmap(intArray79, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0, 52, 97, 100, 100]");
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intListList78);
    }

    @Test
    public void test2200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2200");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem17.Hashmap(intArray21, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray34 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem27.TwoPointer(intArray34, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem26.TwoPointer(intArray34, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem17.BruteForce(intArray34, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem0.BruteForce(intArray34, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray52 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem43.BruteForce(intArray52, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem55.BruteForce(intArray58, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem61 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray68 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem61.TwoPointer(intArray68, (int) (short) 1);
        int[] intArray74 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem61.TwoPointer(intArray74, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem77 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem78 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray85 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem78.TwoPointer(intArray85, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem77.TwoPointer(intArray85, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem61.BruteForce(intArray85, (int) (short) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem55.Hashmap(intArray85, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList95 = threeSumProblem43.BruteForce(intArray85, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList97 = threeSumProblem0.TwoPointer(intArray85, (int) (byte) 100);
        java.lang.Class<?> wildcardClass98 = intListList97.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(intListList93);
        org.junit.Assert.assertNotNull(intListList95);
        org.junit.Assert.assertNotNull(intListList97);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test2201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2201");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem10.TwoPointer(intArray17, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray29 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem20.BruteForce(intArray29, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem32 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem32.BruteForce(intArray35, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray35, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem41.BruteForce(intArray44, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem40.Hashmap(intArray44, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem50 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray57 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem50.TwoPointer(intArray57, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem49.TwoPointer(intArray57, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem40.BruteForce(intArray57, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem20.TwoPointer(intArray57, (int) (byte) 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem10.TwoPointer(intArray57, (int) (byte) 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem0.Hashmap(intArray57, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem70 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem71 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray78 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem71.TwoPointer(intArray78, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem70.TwoPointer(intArray78, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem0.Hashmap(intArray78, (int) (byte) 100);
        int[] intArray89 = new int[] { (short) 1, (short) 1, '4', (byte) 100 };
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem0.TwoPointer(intArray89, (int) (short) 0);
        java.lang.Class<?> wildcardClass92 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[1, 1, 52, 100]");
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test2202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2202");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.BruteForce(intArray13, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        int[] intArray37 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray37, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.BruteForce(intArray37, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem42.BruteForce(intArray45, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem0.Hashmap(intArray45, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem50 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem50.BruteForce(intArray53, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem56.BruteForce(intArray59, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem50.TwoPointer(intArray59, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem0.BruteForce(intArray59, 0);
        java.lang.Class<?> wildcardClass66 = intArray59.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test2203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2203");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.BruteForce(intArray12, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem17.BruteForce(intArray20, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem23 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray30 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem23.TwoPointer(intArray30, (int) (short) 1);
        int[] intArray36 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem23.TwoPointer(intArray36, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray47 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem40.TwoPointer(intArray47, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem39.TwoPointer(intArray47, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem23.BruteForce(intArray47, (int) (short) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem17.Hashmap(intArray47, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem57 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray64 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem57.TwoPointer(intArray64, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem56.TwoPointer(intArray64, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem17.BruteForce(intArray64, (int) (byte) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem0.Hashmap(intArray64, (int) (byte) 100);
        java.lang.Class<?> wildcardClass73 = intListList72.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test2204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2204");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray29 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem20.BruteForce(intArray29, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem32 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem32.BruteForce(intArray35, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray35, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray49 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem40.BruteForce(intArray49, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem20.BruteForce(intArray49, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray61 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem54.TwoPointer(intArray61, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem20.TwoPointer(intArray61, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem66 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray73 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem66.TwoPointer(intArray73, (int) (short) 1);
        int[] intArray79 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem66.TwoPointer(intArray79, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem20.Hashmap(intArray79, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem0.Hashmap(intArray79, (int) '4');
        int[] intArray86 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem0.Hashmap(intArray86, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
    }

    @Test
    public void test2205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2205");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem16 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem16.BruteForce(intArray19, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem10.TwoPointer(intArray19, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem0.BruteForce(intArray19, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray33 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem26.TwoPointer(intArray33, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem36.BruteForce(intArray39, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem42.BruteForce(intArray45, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem36.TwoPointer(intArray45, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem26.BruteForce(intArray45, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray61 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem52.BruteForce(intArray61, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem64 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem64.BruteForce(intArray67, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem52.Hashmap(intArray67, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem72 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem73 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem73.BruteForce(intArray76, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem72.Hashmap(intArray76, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem81 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray84 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem81.BruteForce(intArray84, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem72.TwoPointer(intArray84, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem52.Hashmap(intArray84, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem26.BruteForce(intArray84, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem0.BruteForce(intArray84, (int) 'a');
        java.lang.Class<?> wildcardClass95 = intArray84.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test2206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2206");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem17.Hashmap(intArray21, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem26.BruteForce(intArray29, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem17.TwoPointer(intArray29, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem34.Hashmap(intArray38, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem43.BruteForce(intArray46, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem34.TwoPointer(intArray46, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem17.Hashmap(intArray46, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem0.BruteForce(intArray46, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem55.BruteForce(intArray58, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem61 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem61.BruteForce(intArray64, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem55.TwoPointer(intArray64, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem0.Hashmap(intArray64, (int) (short) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem71 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem72 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray79 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem72.TwoPointer(intArray79, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem71.TwoPointer(intArray79, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem0.TwoPointer(intArray79, 0);
        java.lang.Class<?> wildcardClass86 = intListList85.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test2207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2207");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem14.TwoPointer(intArray21, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem13.TwoPointer(intArray21, (int) (byte) 0);
        int[] intArray30 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem13.Hashmap(intArray30, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem0.Hashmap(intArray30, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray43 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem36.TwoPointer(intArray43, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem35.TwoPointer(intArray43, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray56 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem49.TwoPointer(intArray56, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem48.TwoPointer(intArray56, (int) (byte) 0);
        int[] intArray65 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem48.Hashmap(intArray65, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem35.Hashmap(intArray65, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem0.TwoPointer(intArray65, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem72 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem73 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray80 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem73.TwoPointer(intArray80, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem72.TwoPointer(intArray80, (int) (byte) 0);
        int[] intArray86 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem72.TwoPointer(intArray86, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem0.BruteForce(intArray86, (int) (short) 100);
        java.lang.Class<?> wildcardClass91 = intArray86.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0]");
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test2208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2208");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem9.TwoPointer(intArray21, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem0.Hashmap(intArray21, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem28 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray36 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem29.TwoPointer(intArray36, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem28.TwoPointer(intArray36, (int) (byte) 0);
        int[] intArray42 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem28.TwoPointer(intArray42, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem0.Hashmap(intArray42, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem47 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem48.BruteForce(intArray51, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem47.Hashmap(intArray51, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem0.Hashmap(intArray51, (int) (short) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem58 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem60.BruteForce(intArray63, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem59.Hashmap(intArray63, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem68 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem68.BruteForce(intArray71, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem59.TwoPointer(intArray71, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem76 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem77 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem77.BruteForce(intArray80, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem76.Hashmap(intArray80, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem85 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray88 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem85.BruteForce(intArray88, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem76.TwoPointer(intArray88, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem59.Hashmap(intArray88, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem58.Hashmap(intArray88, (int) (byte) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList98 = threeSumProblem0.TwoPointer(intArray88, 100);
        java.lang.Class<?> wildcardClass99 = intArray88.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0]");
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(intListList96);
        org.junit.Assert.assertNotNull(intListList98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test2209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2209");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.BruteForce(intArray13, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        int[] intArray37 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray37, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.BruteForce(intArray37, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem43.BruteForce(intArray46, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem42.Hashmap(intArray46, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem0.Hashmap(intArray46, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem53.BruteForce(intArray56, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem59.BruteForce(intArray62, (int) '#');
        int[] intArray68 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem59.BruteForce(intArray68, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem71 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem71.BruteForce(intArray74, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem59.Hashmap(intArray74, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem79 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray88 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem79.BruteForce(intArray88, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem59.TwoPointer(intArray88, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem53.TwoPointer(intArray88, 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem0.Hashmap(intArray88, (int) 'a');
        java.lang.Class<?> wildcardClass97 = intListList96.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(intListList96);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test2210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2210");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem9.TwoPointer(intArray21, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray35 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem26.BruteForce(intArray35, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem38 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem38.BruteForce(intArray41, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem26.Hashmap(intArray41, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray55 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem46.BruteForce(intArray55, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem26.BruteForce(intArray55, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem9.Hashmap(intArray55, (int) ' ');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem62 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem63 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem63.BruteForce(intArray66, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem62.Hashmap(intArray66, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem71 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem72 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem72.BruteForce(intArray75, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem71.Hashmap(intArray75, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem62.BruteForce(intArray75, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem9.BruteForce(intArray75, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem0.Hashmap(intArray75, (-1));
        int[] intArray86 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem0.BruteForce(intArray86, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
    }

    @Test
    public void test2211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2211");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray26 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem17.BruteForce(intArray26, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem29.BruteForce(intArray32, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem17.Hashmap(intArray32, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray46 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem37.BruteForce(intArray46, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem17.BruteForce(intArray46, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem0.Hashmap(intArray46, (int) ' ');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem54.BruteForce(intArray57, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem53.Hashmap(intArray57, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem62 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem63 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem63.BruteForce(intArray66, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem62.Hashmap(intArray66, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem53.BruteForce(intArray66, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem0.BruteForce(intArray66, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem75 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem75.BruteForce(intArray78, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem0.Hashmap(intArray78, (int) (short) 10);
        int[] intArray83 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem0.Hashmap(intArray83, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
    }

    @Test
    public void test2212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2212");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.BruteForce(intArray12, 1);
        java.lang.Class<?> wildcardClass17 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test2213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2213");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem21.BruteForce(intArray24, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem20.Hashmap(intArray24, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem30.BruteForce(intArray33, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem29.Hashmap(intArray33, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.BruteForce(intArray33, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.Hashmap(intArray33, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray50 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem43.TwoPointer(intArray50, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem42.TwoPointer(intArray50, (int) (byte) 0);
        int[] intArray56 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem42.TwoPointer(intArray56, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem59.BruteForce(intArray62, (int) '#');
        int[] intArray68 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem59.BruteForce(intArray68, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem71 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem72 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem72.BruteForce(intArray75, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem71.BruteForce(intArray75, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem80 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray83 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem80.BruteForce(intArray83, (int) '#');
        int[] intArray89 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem80.BruteForce(intArray89, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem71.BruteForce(intArray89, (int) (short) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList95 = threeSumProblem59.BruteForce(intArray89, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList97 = threeSumProblem42.Hashmap(intArray89, (int) (short) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList99 = threeSumProblem0.TwoPointer(intArray89, (int) (byte) 100);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0]");
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(intListList93);
        org.junit.Assert.assertNotNull(intListList95);
        org.junit.Assert.assertNotNull(intListList97);
        org.junit.Assert.assertNotNull(intListList99);
    }

    @Test
    public void test2214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2214");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem14.TwoPointer(intArray21, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem13.TwoPointer(intArray21, (int) (byte) 0);
        int[] intArray30 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem13.Hashmap(intArray30, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem0.TwoPointer(intArray30, (int) ' ');
        java.lang.Class<?> wildcardClass35 = intArray30.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test2215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2215");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.BruteForce(intArray4, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem10.TwoPointer(intArray17, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem9.TwoPointer(intArray17, (int) (byte) 0);
        int[] intArray26 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem9.Hashmap(intArray26, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem30.BruteForce(intArray33, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem29.Hashmap(intArray33, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem9.TwoPointer(intArray33, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.Hashmap(intArray33, (int) (byte) 10);
        java.lang.Class<?> wildcardClass42 = intListList41.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test2216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2216");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.BruteForce(intArray4, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem10.TwoPointer(intArray17, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem9.TwoPointer(intArray17, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem0.TwoPointer(intArray17, (int) (byte) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem24 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem25 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem25.BruteForce(intArray28, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem24.Hashmap(intArray28, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem33 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem34.BruteForce(intArray37, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem33.Hashmap(intArray37, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem42.BruteForce(intArray45, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem33.TwoPointer(intArray45, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem24.Hashmap(intArray45, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray60 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem53.TwoPointer(intArray60, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem52.TwoPointer(intArray60, (int) (byte) 0);
        int[] intArray66 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem52.TwoPointer(intArray66, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem24.Hashmap(intArray66, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem0.BruteForce(intArray66, (int) '#');
        java.lang.Class<?> wildcardClass73 = intArray66.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0]");
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test2217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2217");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem2 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList7 = threeSumProblem2.BruteForce(intArray5, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem1.Hashmap(intArray5, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem1.TwoPointer(intArray13, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem19 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList24 = threeSumProblem19.BruteForce(intArray22, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem18.Hashmap(intArray22, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem27.BruteForce(intArray30, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem18.TwoPointer(intArray30, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem1.Hashmap(intArray30, (int) 'a');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem38 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem38.BruteForce(intArray41, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem37.Hashmap(intArray41, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem46.BruteForce(intArray49, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem37.TwoPointer(intArray49, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem55.BruteForce(intArray58, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem54.Hashmap(intArray58, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem63 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem63.BruteForce(intArray66, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem54.TwoPointer(intArray66, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem37.Hashmap(intArray66, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem1.Hashmap(intArray66, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem0.TwoPointer(intArray66, (int) '#');
        int[] intArray79 = new int[] { 10, (byte) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem0.BruteForce(intArray79, (int) (short) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem82 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem83 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray86 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem83.BruteForce(intArray86, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem82.Hashmap(intArray86, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem0.TwoPointer(intArray86, (int) (short) -1);
        int[] intArray93 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList95 = threeSumProblem0.TwoPointer(intArray93, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList7);
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList24);
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[10, 0]");
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(intListList92);
    }

    @Test
    public void test2218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2218");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray20 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem13.TwoPointer(intArray20, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem23 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray26 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem23.BruteForce(intArray26, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem29.BruteForce(intArray32, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem23.TwoPointer(intArray32, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem13.BruteForce(intArray32, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem39.BruteForce(intArray42, (int) '#');
        int[] intArray48 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem39.BruteForce(intArray48, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem51.BruteForce(intArray54, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem39.Hashmap(intArray54, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem60.BruteForce(intArray63, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem59.Hashmap(intArray63, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem68 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem68.BruteForce(intArray71, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem59.TwoPointer(intArray71, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem39.Hashmap(intArray71, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem13.BruteForce(intArray71, (int) 'a');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem80 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray87 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem80.TwoPointer(intArray87, (int) (short) 1);
        int[] intArray93 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList95 = threeSumProblem80.TwoPointer(intArray93, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList97 = threeSumProblem13.TwoPointer(intArray93, (int) (short) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList99 = threeSumProblem0.TwoPointer(intArray93, (int) (short) 10);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList95);
        org.junit.Assert.assertNotNull(intListList97);
        org.junit.Assert.assertNotNull(intListList99);
    }

    @Test
    public void test2219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2219");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem11 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray18 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem11.TwoPointer(intArray18, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem10.TwoPointer(intArray18, (int) (byte) 0);
        int[] intArray24 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem10.TwoPointer(intArray24, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem28 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem28.BruteForce(intArray31, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem27.Hashmap(intArray31, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem37.BruteForce(intArray40, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem36.Hashmap(intArray40, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem27.BruteForce(intArray40, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem47 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray55 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem48.TwoPointer(intArray55, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem47.TwoPointer(intArray55, (int) (byte) 0);
        int[] intArray64 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem47.Hashmap(intArray64, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem27.BruteForce(intArray64, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem10.Hashmap(intArray64, (int) 'a');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem71 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem72 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem72.BruteForce(intArray75, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem71.Hashmap(intArray75, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem10.TwoPointer(intArray75, 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem0.TwoPointer(intArray75, (int) '4');
        java.lang.Class<?> wildcardClass84 = intArray75.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test2220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2220");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem6.TwoPointer(intArray13, (int) (short) 1);
        int[] intArray19 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem6.TwoPointer(intArray19, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem22 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem23 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray30 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem23.TwoPointer(intArray30, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem22.TwoPointer(intArray30, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem6.BruteForce(intArray30, (int) (short) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem0.Hashmap(intArray30, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem39.BruteForce(intArray42, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem45 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem45.BruteForce(intArray48, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem39.TwoPointer(intArray48, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem54.BruteForce(intArray57, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem53.Hashmap(intArray57, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem62 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem62.BruteForce(intArray65, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem53.TwoPointer(intArray65, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem39.BruteForce(intArray65, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem0.Hashmap(intArray65, (int) 'a');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem75 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem75.BruteForce(intArray78, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem74.Hashmap(intArray78, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem83 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray86 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem83.BruteForce(intArray86, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem74.BruteForce(intArray86, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem0.Hashmap(intArray86, (int) (byte) 100);
        int[] intArray93 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList95 = threeSumProblem0.Hashmap(intArray93, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(intListList92);
    }

    @Test
    public void test2221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2221");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem17.Hashmap(intArray21, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem26.BruteForce(intArray29, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem17.TwoPointer(intArray29, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem34.Hashmap(intArray38, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem43.BruteForce(intArray46, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem34.TwoPointer(intArray46, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem17.Hashmap(intArray46, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem0.BruteForce(intArray46, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem56.BruteForce(intArray59, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem55.Hashmap(intArray59, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem64 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem65 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem65.BruteForce(intArray68, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem64.Hashmap(intArray68, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem73 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem73.BruteForce(intArray76, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem64.TwoPointer(intArray76, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem55.Hashmap(intArray76, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem0.BruteForce(intArray76, (int) (byte) 100);
        int[] intArray85 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem0.TwoPointer(intArray85, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
    }

    @Test
    public void test2222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2222");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        int[] intArray37 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray37, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.Hashmap(intArray37, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem42.BruteForce(intArray45, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem0.Hashmap(intArray45, (int) (byte) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem50 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem51.BruteForce(intArray54, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem50.Hashmap(intArray54, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem0.Hashmap(intArray54, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem61 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray68 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem61.TwoPointer(intArray68, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem0.BruteForce(intArray68, (int) '4');
        java.lang.Class<?> wildcardClass73 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test2223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2223");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem19 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList24 = threeSumProblem19.BruteForce(intArray22, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem18.Hashmap(intArray22, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem9.BruteForce(intArray22, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray37 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem30.TwoPointer(intArray37, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem29.TwoPointer(intArray37, (int) (byte) 0);
        int[] intArray46 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem29.Hashmap(intArray46, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem9.BruteForce(intArray46, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem51.BruteForce(intArray54, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem9.Hashmap(intArray54, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem59.BruteForce(intArray62, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem9.TwoPointer(intArray62, (int) ' ');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem67 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray74 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem67.TwoPointer(intArray74, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem77 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem77.BruteForce(intArray80, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem83 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray86 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem83.BruteForce(intArray86, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem77.TwoPointer(intArray86, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem67.BruteForce(intArray86, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem9.BruteForce(intArray86, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem0.BruteForce(intArray86, (int) '#');
        java.lang.Class<?> wildcardClass97 = intArray86.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList24);
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(intListList96);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test2224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2224");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem9.TwoPointer(intArray21, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem0.Hashmap(intArray21, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem28 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem29.BruteForce(intArray32, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem28.Hashmap(intArray32, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem37.BruteForce(intArray40, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem28.TwoPointer(intArray40, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem0.TwoPointer(intArray40, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem47 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem47.BruteForce(intArray50, (int) '#');
        int[] intArray56 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem47.BruteForce(intArray56, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem59.BruteForce(intArray62, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem47.Hashmap(intArray62, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem67 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem67.BruteForce(intArray70, (int) '#');
        int[] intArray76 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem67.BruteForce(intArray76, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem47.TwoPointer(intArray76, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem0.BruteForce(intArray76, (int) (byte) 10);
        java.lang.Class<?> wildcardClass83 = intListList82.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test2225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2225");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem19 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray26 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem19.TwoPointer(intArray26, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem18.TwoPointer(intArray26, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem9.BruteForce(intArray26, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem33 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem33.BruteForce(intArray36, (int) '#');
        int[] intArray42 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem33.BruteForce(intArray42, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem45 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem45.BruteForce(intArray48, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem33.Hashmap(intArray48, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray62 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem53.BruteForce(intArray62, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem33.TwoPointer(intArray62, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem9.BruteForce(intArray62, (int) (short) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem0.BruteForce(intArray62, 0);
        java.lang.Class<?> wildcardClass71 = intListList70.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test2226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2226");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray18 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem9.BruteForce(intArray18, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem21.BruteForce(intArray24, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem9.Hashmap(intArray24, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray37 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem30.TwoPointer(intArray37, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem29.TwoPointer(intArray37, (int) (byte) 0);
        int[] intArray43 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem29.TwoPointer(intArray43, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem47 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray54 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem47.TwoPointer(intArray54, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem46.TwoPointer(intArray54, (int) (byte) 0);
        int[] intArray63 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem46.Hashmap(intArray63, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem29.TwoPointer(intArray63, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem9.Hashmap(intArray63, (int) (byte) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem70 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray77 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem70.TwoPointer(intArray77, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem9.Hashmap(intArray77, (int) 'a');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem82 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem83 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray90 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem83.TwoPointer(intArray90, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem82.TwoPointer(intArray90, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem9.TwoPointer(intArray90, (int) (byte) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList98 = threeSumProblem0.TwoPointer(intArray90, (int) '#');
        java.lang.Class<?> wildcardClass99 = intArray90.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0]");
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(intListList96);
        org.junit.Assert.assertNotNull(intListList98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test2227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2227");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem11 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray18 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem11.TwoPointer(intArray18, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem10.TwoPointer(intArray18, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList24 = threeSumProblem0.Hashmap(intArray18, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem25 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray34 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem25.BruteForce(intArray34, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem37.BruteForce(intArray40, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem25.Hashmap(intArray40, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem45 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem46.BruteForce(intArray49, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem45.Hashmap(intArray49, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem54.BruteForce(intArray57, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem45.TwoPointer(intArray57, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem25.Hashmap(intArray57, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem64 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem65 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray72 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem65.TwoPointer(intArray72, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem64.TwoPointer(intArray72, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem25.TwoPointer(intArray72, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem0.BruteForce(intArray72, (int) (short) 10);
        java.lang.Class<?> wildcardClass81 = intListList80.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intListList24);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test2228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2228");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        int[] intArray37 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray37, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.Hashmap(intArray37, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem42.BruteForce(intArray45, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem48.BruteForce(intArray51, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem42.TwoPointer(intArray51, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem0.BruteForce(intArray51, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem58 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray66 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem59.TwoPointer(intArray66, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem58.TwoPointer(intArray66, (int) (byte) 0);
        int[] intArray72 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem58.TwoPointer(intArray72, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem0.BruteForce(intArray72, (int) 'a');
        int[] intArray77 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem0.BruteForce(intArray77, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0]");
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intListList76);
    }

    @Test
    public void test2229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2229");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem2 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem3 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray6 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem3.BruteForce(intArray6, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem2.Hashmap(intArray6, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem11 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem11.Hashmap(intArray15, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem2.BruteForce(intArray15, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem22 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem23 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray30 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem23.TwoPointer(intArray30, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem22.TwoPointer(intArray30, (int) (byte) 0);
        int[] intArray39 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem22.Hashmap(intArray39, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem2.BruteForce(intArray39, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem44 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem44.BruteForce(intArray47, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem2.Hashmap(intArray47, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem52.BruteForce(intArray55, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem2.TwoPointer(intArray55, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem1.TwoPointer(intArray55, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem62 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem63 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem63.BruteForce(intArray66, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem62.Hashmap(intArray66, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem71 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem71.BruteForce(intArray74, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem62.TwoPointer(intArray74, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem1.Hashmap(intArray74, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem0.BruteForce(intArray74, (int) (byte) 1);
        java.lang.Class<?> wildcardClass83 = intArray74.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test2230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2230");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.BruteForce(intArray12, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem19 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray26 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem19.TwoPointer(intArray26, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem18.TwoPointer(intArray26, (int) (byte) 0);
        int[] intArray32 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem18.TwoPointer(intArray32, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem17.TwoPointer(intArray32, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem38 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem38.TwoPointer(intArray45, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem37.TwoPointer(intArray45, (int) (byte) 0);
        int[] intArray51 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem37.TwoPointer(intArray51, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray62 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem55.TwoPointer(intArray62, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem54.TwoPointer(intArray62, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem67 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem68 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem68.BruteForce(intArray71, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem67.Hashmap(intArray71, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem76 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem77 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray84 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem77.TwoPointer(intArray84, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem76.TwoPointer(intArray84, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem67.BruteForce(intArray84, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem54.BruteForce(intArray84, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem37.TwoPointer(intArray84, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem17.BruteForce(intArray84, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList98 = threeSumProblem0.BruteForce(intArray84, (int) (short) 10);
        java.lang.Class<?> wildcardClass99 = intArray84.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0]");
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0]");
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(intListList96);
        org.junit.Assert.assertNotNull(intListList98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test2231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2231");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray16 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList18 = threeSumProblem13.BruteForce(intArray16, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem19 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem20.BruteForce(intArray23, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem19.Hashmap(intArray23, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem28 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray36 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem29.TwoPointer(intArray36, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem28.TwoPointer(intArray36, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem19.BruteForce(intArray36, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem13.Hashmap(intArray36, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem0.TwoPointer(intArray36, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem47 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem48.BruteForce(intArray51, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem47.Hashmap(intArray51, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem0.BruteForce(intArray51, 100);
        java.lang.Class<?> wildcardClass58 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList18);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test2232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2232");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem16 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem16.BruteForce(intArray19, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem10.TwoPointer(intArray19, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem0.BruteForce(intArray19, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray35 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem26.BruteForce(intArray35, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem38 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem38.BruteForce(intArray41, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem26.Hashmap(intArray41, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray55 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem46.BruteForce(intArray55, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem26.BruteForce(intArray55, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem60.BruteForce(intArray63, (int) '#');
        int[] intArray69 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem60.BruteForce(intArray69, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem72 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem72.BruteForce(intArray75, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem60.Hashmap(intArray75, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem80 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray83 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem80.BruteForce(intArray83, (int) '#');
        int[] intArray89 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem80.BruteForce(intArray89, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem60.BruteForce(intArray89, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList95 = threeSumProblem26.BruteForce(intArray89, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList97 = threeSumProblem0.TwoPointer(intArray89, (int) (byte) -1);
        java.lang.Class<?> wildcardClass98 = intArray89.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(intListList93);
        org.junit.Assert.assertNotNull(intListList95);
        org.junit.Assert.assertNotNull(intListList97);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test2233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2233");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem20.BruteForce(intArray23, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray33 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem26.TwoPointer(intArray33, (int) (short) 1);
        int[] intArray39 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem26.TwoPointer(intArray39, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray50 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem43.TwoPointer(intArray50, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem42.TwoPointer(intArray50, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem26.BruteForce(intArray50, (int) (short) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem20.Hashmap(intArray50, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray67 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem60.TwoPointer(intArray67, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem59.TwoPointer(intArray67, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem20.BruteForce(intArray67, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem75 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem75.BruteForce(intArray78, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem74.Hashmap(intArray78, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem83 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem84 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray87 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem84.BruteForce(intArray87, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem83.Hashmap(intArray87, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem74.BruteForce(intArray87, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList95 = threeSumProblem20.Hashmap(intArray87, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList97 = threeSumProblem0.BruteForce(intArray87, (int) (byte) 100);
        java.lang.Class<?> wildcardClass98 = intArray87.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(intListList93);
        org.junit.Assert.assertNotNull(intListList95);
        org.junit.Assert.assertNotNull(intListList97);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test2234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2234");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.BruteForce(intArray4, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray18 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem9.BruteForce(intArray18, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem0.BruteForce(intArray18, (int) (short) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem23 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem24 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem24.BruteForce(intArray27, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem23.Hashmap(intArray27, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem32 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem33 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem33.BruteForce(intArray36, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem32.Hashmap(intArray36, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem41.BruteForce(intArray44, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem32.TwoPointer(intArray44, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem23.Hashmap(intArray44, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem52.BruteForce(intArray55, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem51.Hashmap(intArray55, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem60.BruteForce(intArray63, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem51.TwoPointer(intArray63, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem23.TwoPointer(intArray63, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem70 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem71 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem71.BruteForce(intArray74, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem70.BruteForce(intArray74, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem23.Hashmap(intArray74, (int) (short) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem0.BruteForce(intArray74, (int) (short) 100);
        java.lang.Class<?> wildcardClass83 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test2235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2235");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem6.TwoPointer(intArray13, (int) (short) 1);
        int[] intArray19 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem6.TwoPointer(intArray19, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem22 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem23 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray30 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem23.TwoPointer(intArray30, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem22.TwoPointer(intArray30, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem6.BruteForce(intArray30, (int) (short) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem0.Hashmap(intArray30, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem39.BruteForce(intArray42, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem45 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem45.BruteForce(intArray48, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem39.TwoPointer(intArray48, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem54.BruteForce(intArray57, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem53.Hashmap(intArray57, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem62 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem62.BruteForce(intArray65, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem53.TwoPointer(intArray65, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem39.BruteForce(intArray65, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem0.Hashmap(intArray65, (int) 'a');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem75 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem75.BruteForce(intArray78, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem74.Hashmap(intArray78, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem83 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray86 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem83.BruteForce(intArray86, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem74.BruteForce(intArray86, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem0.Hashmap(intArray86, (int) (byte) 100);
        java.lang.Class<?> wildcardClass93 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test2236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2236");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.BruteForce(intArray4, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray18 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem9.BruteForce(intArray18, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem0.BruteForce(intArray18, (int) (short) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem23 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem24 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem24.BruteForce(intArray27, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem23.Hashmap(intArray27, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem32 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem33 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem33.BruteForce(intArray36, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem32.Hashmap(intArray36, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem41.BruteForce(intArray44, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem32.TwoPointer(intArray44, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem23.Hashmap(intArray44, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem52.BruteForce(intArray55, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem51.Hashmap(intArray55, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem60.BruteForce(intArray63, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem51.TwoPointer(intArray63, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem23.TwoPointer(intArray63, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem70 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem71 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem71.BruteForce(intArray74, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem70.BruteForce(intArray74, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem23.Hashmap(intArray74, (int) (short) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem0.BruteForce(intArray74, (int) (short) 100);
        java.lang.Class<?> wildcardClass83 = intArray74.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test2237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2237");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray26 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem17.BruteForce(intArray26, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem29.BruteForce(intArray32, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem17.Hashmap(intArray32, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray46 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem37.BruteForce(intArray46, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem17.BruteForce(intArray46, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem0.Hashmap(intArray46, (int) ' ');
        int[] intArray56 = new int[] { (byte) 0, (byte) 10, 10 };
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem0.BruteForce(intArray56, (int) (short) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray67 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem60.TwoPointer(intArray67, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem59.TwoPointer(intArray67, (int) (byte) 0);
        int[] intArray76 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem59.Hashmap(intArray76, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem79 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem80 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray83 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem80.BruteForce(intArray83, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem79.Hashmap(intArray83, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem59.TwoPointer(intArray83, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem0.BruteForce(intArray83, (int) (short) 10);
        java.lang.Class<?> wildcardClass92 = intArray83.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 10, 10]");
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test2238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2238");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray14 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray14, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray26 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem17.BruteForce(intArray26, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem30.BruteForce(intArray33, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem29.BruteForce(intArray33, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem38 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray47 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem38.BruteForce(intArray47, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem29.BruteForce(intArray47, (int) (short) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem17.BruteForce(intArray47, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem0.Hashmap(intArray47, (int) (short) -1);
        java.lang.Class<?> wildcardClass56 = intArray47.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0]");
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test2239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2239");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray16 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList18 = threeSumProblem13.BruteForce(intArray16, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem12.BruteForce(intArray16, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray30 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem21.BruteForce(intArray30, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem12.BruteForce(intArray30, (int) (short) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem38 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem38.BruteForce(intArray41, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem37.Hashmap(intArray41, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem47 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem47.BruteForce(intArray50, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem46.Hashmap(intArray50, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem37.BruteForce(intArray50, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem57 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem58 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray65 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem58.TwoPointer(intArray65, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem57.TwoPointer(intArray65, (int) (byte) 0);
        int[] intArray74 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem57.Hashmap(intArray74, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem37.BruteForce(intArray74, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem79 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray86 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem79.TwoPointer(intArray86, (int) (short) 1);
        int[] intArray92 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem79.TwoPointer(intArray92, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem37.TwoPointer(intArray92, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList98 = threeSumProblem0.Hashmap(intArray92, (int) (short) 100);
        java.lang.Class<?> wildcardClass99 = intListList98.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList18);
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(intListList96);
        org.junit.Assert.assertNotNull(intListList98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test2240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2240");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        int[] intArray34 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem20.TwoPointer(intArray34, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem38 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem38.TwoPointer(intArray45, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem37.TwoPointer(intArray45, (int) (byte) 0);
        int[] intArray54 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem37.Hashmap(intArray54, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem20.TwoPointer(intArray54, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem0.Hashmap(intArray54, (int) (byte) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem61 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray68 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem61.TwoPointer(intArray68, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem0.Hashmap(intArray68, (int) 'a');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem73 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray81 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem74.TwoPointer(intArray81, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem73.TwoPointer(intArray81, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem0.TwoPointer(intArray81, (int) (byte) 100);
        int[] intArray88 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem0.TwoPointer(intArray88, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intListList87);
    }

    @Test
    public void test2241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2241");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray14 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray14, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray25 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem18.TwoPointer(intArray25, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem17.TwoPointer(intArray25, (int) (byte) 0);
        int[] intArray34 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem17.Hashmap(intArray34, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem0.TwoPointer(intArray34, 0);
        java.lang.Class<?> wildcardClass39 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0]");
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test2242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2242");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem6.TwoPointer(intArray13, (int) (short) 1);
        int[] intArray19 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem6.TwoPointer(intArray19, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem22 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem23 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray30 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem23.TwoPointer(intArray30, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem22.TwoPointer(intArray30, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem6.BruteForce(intArray30, (int) (short) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem0.Hashmap(intArray30, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem39.BruteForce(intArray42, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem45 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem45.BruteForce(intArray48, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem39.TwoPointer(intArray48, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem54.BruteForce(intArray57, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem53.Hashmap(intArray57, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem62 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem62.BruteForce(intArray65, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem53.TwoPointer(intArray65, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem39.BruteForce(intArray65, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem0.Hashmap(intArray65, (int) 'a');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem75 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray82 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem75.TwoPointer(intArray82, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem74.TwoPointer(intArray82, (int) (byte) 0);
        int[] intArray88 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem74.TwoPointer(intArray88, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem0.TwoPointer(intArray88, (int) (byte) 10);
        java.lang.Class<?> wildcardClass93 = intArray88.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0]");
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test2243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2243");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        int[] intArray37 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray37, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.Hashmap(intArray37, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray50 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem43.TwoPointer(intArray50, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem42.TwoPointer(intArray50, (int) (byte) 0);
        int[] intArray56 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem42.TwoPointer(intArray56, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem59.BruteForce(intArray62, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem65 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem65.BruteForce(intArray68, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem59.TwoPointer(intArray68, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem73 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem74.BruteForce(intArray77, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem73.Hashmap(intArray77, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem82 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray85 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem82.BruteForce(intArray85, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem73.TwoPointer(intArray85, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem59.BruteForce(intArray85, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem42.Hashmap(intArray85, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList95 = threeSumProblem0.Hashmap(intArray85, (int) (byte) -1);
        java.lang.Class<?> wildcardClass96 = intArray85.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0]");
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(intListList93);
        org.junit.Assert.assertNotNull(intListList95);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test2244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2244");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        int[] intArray13 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem0.TwoPointer(intArray13, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem16 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem17.TwoPointer(intArray24, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem16.TwoPointer(intArray24, (int) (byte) 0);
        int[] intArray30 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem16.TwoPointer(intArray30, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem0.TwoPointer(intArray30, (int) (short) 0);
        java.lang.Class<?> wildcardClass35 = intArray30.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test2245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2245");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray25 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem18.TwoPointer(intArray25, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem17.TwoPointer(intArray25, (int) (byte) 0);
        int[] intArray34 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem17.Hashmap(intArray34, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem0.Hashmap(intArray34, (int) ' ');
        int[] intArray39 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.Hashmap(intArray39, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
    }

    @Test
    public void test2246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2246");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        int[] intArray34 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem20.TwoPointer(intArray34, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem38 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem38.TwoPointer(intArray45, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem37.TwoPointer(intArray45, (int) (byte) 0);
        int[] intArray54 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem37.Hashmap(intArray54, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem20.TwoPointer(intArray54, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem0.Hashmap(intArray54, (int) (byte) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem61 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray68 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem61.TwoPointer(intArray68, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem0.Hashmap(intArray68, (int) 'a');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem73 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray81 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem74.TwoPointer(intArray81, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem73.TwoPointer(intArray81, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem0.BruteForce(intArray81, (int) '4');
        java.lang.Class<?> wildcardClass88 = intArray81.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test2247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2247");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem17.Hashmap(intArray21, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem26.BruteForce(intArray29, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem17.TwoPointer(intArray29, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem0.Hashmap(intArray29, (int) 'a');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem37.BruteForce(intArray40, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem36.Hashmap(intArray40, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem45 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem45.BruteForce(intArray48, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem36.TwoPointer(intArray48, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem54.BruteForce(intArray57, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem53.Hashmap(intArray57, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem62 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem62.BruteForce(intArray65, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem53.TwoPointer(intArray65, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem36.Hashmap(intArray65, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem0.Hashmap(intArray65, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem75 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem75.BruteForce(intArray78, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem74.Hashmap(intArray78, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem0.TwoPointer(intArray78, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem85 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray92 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem85.TwoPointer(intArray92, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem0.TwoPointer(intArray92, (int) (short) 0);
        java.lang.Class<?> wildcardClass97 = intArray92.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(intListList96);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test2248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2248");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        int[] intArray13 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem0.TwoPointer(intArray13, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem16 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem17.BruteForce(intArray20, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList24 = threeSumProblem16.BruteForce(intArray20, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem0.Hashmap(intArray20, 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray34 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem27.TwoPointer(intArray34, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem38 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem38.TwoPointer(intArray45, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem37.TwoPointer(intArray45, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem27.Hashmap(intArray45, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem52.BruteForce(intArray55, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem58 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray65 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem58.TwoPointer(intArray65, (int) (short) 1);
        int[] intArray71 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem58.TwoPointer(intArray71, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem75 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray82 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem75.TwoPointer(intArray82, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem74.TwoPointer(intArray82, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem58.BruteForce(intArray82, (int) (short) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem52.Hashmap(intArray82, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem27.TwoPointer(intArray82, (int) (short) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem0.TwoPointer(intArray82, (int) (byte) 10);
        java.lang.Class<?> wildcardClass95 = intArray82.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intListList24);
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test2249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2249");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        int[] intArray13 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem0.TwoPointer(intArray13, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem16 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem17.TwoPointer(intArray24, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem16.TwoPointer(intArray24, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem0.BruteForce(intArray24, (int) (short) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem31.TwoPointer(intArray38, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray49 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem42.TwoPointer(intArray49, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem41.TwoPointer(intArray49, (int) (byte) 0);
        int[] intArray58 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem41.Hashmap(intArray58, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem31.BruteForce(intArray58, (int) (byte) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem0.BruteForce(intArray58, (int) (byte) 0);
        int[] intArray65 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem0.BruteForce(intArray65, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intListList64);
    }

    @Test
    public void test2250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2250");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray9 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem6.BruteForce(intArray9, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList13 = threeSumProblem0.TwoPointer(intArray9, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem14.BruteForce(intArray17, (int) '#');
        int[] intArray23 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem14.BruteForce(intArray23, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem0.BruteForce(intArray23, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem28 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray36 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem29.TwoPointer(intArray36, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem28.TwoPointer(intArray36, (int) (byte) 0);
        int[] intArray45 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem28.Hashmap(intArray45, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray56 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem49.TwoPointer(intArray56, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem48.TwoPointer(intArray56, (int) (byte) 0);
        int[] intArray65 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem48.Hashmap(intArray65, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem28.Hashmap(intArray65, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem70 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem70.BruteForce(intArray73, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem76 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem76.BruteForce(intArray79, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem70.TwoPointer(intArray79, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem28.BruteForce(intArray79, (int) (byte) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem0.TwoPointer(intArray79, (int) (short) 10);
        int[] intArray88 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem0.BruteForce(intArray88, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intListList13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intListList87);
    }

    @Test
    public void test2251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2251");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.BruteForce(intArray13, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray29 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem20.BruteForce(intArray29, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem32 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem32.BruteForce(intArray35, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray35, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray49 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem40.BruteForce(intArray49, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem20.BruteForce(intArray49, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray61 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem54.TwoPointer(intArray61, (int) (short) 1);
        int[] intArray67 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem54.TwoPointer(intArray67, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem20.Hashmap(intArray67, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem0.BruteForce(intArray67, (int) (byte) 100);
        int[] intArray74 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem0.Hashmap(intArray74, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
    }

    @Test
    public void test2252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2252");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.BruteForce(intArray4, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem10.TwoPointer(intArray17, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem9.TwoPointer(intArray17, (int) (byte) 0);
        int[] intArray26 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem9.Hashmap(intArray26, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem30.BruteForce(intArray33, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem29.Hashmap(intArray33, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem38 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem39.BruteForce(intArray42, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem38.Hashmap(intArray42, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem29.BruteForce(intArray42, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem9.Hashmap(intArray42, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem0.TwoPointer(intArray42, (int) (byte) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray61 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem54.TwoPointer(intArray61, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem53.TwoPointer(intArray61, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem0.TwoPointer(intArray61, (int) (short) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem68 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem69 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem70 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray77 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem70.TwoPointer(intArray77, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem69.TwoPointer(intArray77, (int) (byte) 0);
        int[] intArray83 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem69.TwoPointer(intArray83, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem68.TwoPointer(intArray83, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem0.BruteForce(intArray83, (int) (byte) 100);
        java.lang.Class<?> wildcardClass90 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0]");
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test2253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2253");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem17.BruteForce(intArray21, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem0.TwoPointer(intArray21, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem28 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem29.BruteForce(intArray32, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem28.Hashmap(intArray32, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem0.BruteForce(intArray32, (int) (byte) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem40.BruteForce(intArray43, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem39.BruteForce(intArray43, (int) (short) 1);
        int[] intArray49 = new int[] { '#' };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem39.TwoPointer(intArray49, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem0.TwoPointer(intArray49, (int) (short) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray62 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem55.TwoPointer(intArray62, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem54.TwoPointer(intArray62, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem67 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem68 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem68.BruteForce(intArray71, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem67.Hashmap(intArray71, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem76 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem77 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray84 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem77.TwoPointer(intArray84, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem76.TwoPointer(intArray84, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem67.BruteForce(intArray84, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem54.BruteForce(intArray84, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem0.Hashmap(intArray84, (int) (short) 0);
        int[] intArray95 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList97 = threeSumProblem0.BruteForce(intArray95, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[35]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(intListList94);
    }

    @Test
    public void test2254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2254");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray29 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem20.BruteForce(intArray29, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem32 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem32.BruteForce(intArray35, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray35, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray49 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem40.BruteForce(intArray49, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem20.BruteForce(intArray49, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray61 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem54.TwoPointer(intArray61, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem20.TwoPointer(intArray61, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem66 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray73 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem66.TwoPointer(intArray73, (int) (short) 1);
        int[] intArray79 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem66.TwoPointer(intArray79, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem20.Hashmap(intArray79, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem0.BruteForce(intArray79, (int) ' ');
        java.lang.Class<?> wildcardClass86 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test2255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2255");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem16 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem16.BruteForce(intArray19, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem10.TwoPointer(intArray19, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem0.BruteForce(intArray19, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray35 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem26.BruteForce(intArray35, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem0.TwoPointer(intArray35, (int) ' ');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem40.BruteForce(intArray43, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem47 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem47.BruteForce(intArray50, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem46.Hashmap(intArray50, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray63 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem56.TwoPointer(intArray63, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem55.TwoPointer(intArray63, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem46.BruteForce(intArray63, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem40.Hashmap(intArray63, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem0.TwoPointer(intArray63, (int) (short) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem74.BruteForce(intArray77, (int) '#');
        int[] intArray83 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem74.BruteForce(intArray83, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem86 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray89 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem86.BruteForce(intArray89, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem74.Hashmap(intArray89, (int) (byte) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList95 = threeSumProblem0.TwoPointer(intArray89, (int) '#');
        java.lang.Class<?> wildcardClass96 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(intListList93);
        org.junit.Assert.assertNotNull(intListList95);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test2256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2256");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.BruteForce(intArray4, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem10.TwoPointer(intArray17, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem9.TwoPointer(intArray17, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem0.TwoPointer(intArray17, (int) (byte) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem24 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray31 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem24.TwoPointer(intArray31, (int) (short) 1);
        int[] intArray37 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem24.TwoPointer(intArray37, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem41.BruteForce(intArray44, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem40.BruteForce(intArray44, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem24.Hashmap(intArray44, 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem0.Hashmap(intArray44, (int) (short) 100);
        int[] intArray53 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem0.BruteForce(intArray53, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
    }

    @Test
    public void test2257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2257");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem21.BruteForce(intArray24, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem20.Hashmap(intArray24, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem30.BruteForce(intArray33, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem29.Hashmap(intArray33, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.BruteForce(intArray33, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.Hashmap(intArray33, (-1));
        int[] intArray45 = new int[] { (short) 10, (short) 100, (byte) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem0.BruteForce(intArray45, (int) ' ');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem49.BruteForce(intArray52, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem48.Hashmap(intArray52, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem57 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem58 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem58.BruteForce(intArray61, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem57.Hashmap(intArray61, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem66 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem66.BruteForce(intArray69, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem57.TwoPointer(intArray69, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem48.Hashmap(intArray69, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem0.BruteForce(intArray69, 10);
        java.lang.Class<?> wildcardClass78 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[10, 100, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test2258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2258");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem17.Hashmap(intArray21, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem26.BruteForce(intArray29, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem17.TwoPointer(intArray29, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem0.Hashmap(intArray29, (int) 'a');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem37.BruteForce(intArray40, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem36.BruteForce(intArray40, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem45 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray53 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem46.TwoPointer(intArray53, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem45.TwoPointer(intArray53, (int) (byte) 0);
        int[] intArray62 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem45.Hashmap(intArray62, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem65 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem66 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem66.BruteForce(intArray69, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem65.Hashmap(intArray69, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem45.TwoPointer(intArray69, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem36.Hashmap(intArray69, (int) (byte) 10);
        int[] intArray83 = new int[] { (byte) 10, (byte) 100, 'a', '4', 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem36.TwoPointer(intArray83, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem0.Hashmap(intArray83, (-1));
        java.lang.Class<?> wildcardClass88 = intArray83.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[1, 10, 52, 97, 100]");
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test2259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2259");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray14 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray14, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem17.Hashmap(intArray21, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem26.BruteForce(intArray29, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem17.TwoPointer(intArray29, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem34.Hashmap(intArray38, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem44 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem44.BruteForce(intArray47, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem43.Hashmap(intArray47, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem52.BruteForce(intArray55, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem43.TwoPointer(intArray55, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem34.Hashmap(intArray55, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem62 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem63 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem63.BruteForce(intArray66, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem62.Hashmap(intArray66, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem71 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem72 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem72.BruteForce(intArray75, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem71.Hashmap(intArray75, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem80 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray83 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem80.BruteForce(intArray83, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem71.TwoPointer(intArray83, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem62.Hashmap(intArray83, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem34.TwoPointer(intArray83, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem17.Hashmap(intArray83, (int) (byte) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList95 = threeSumProblem0.TwoPointer(intArray83, 100);
        java.lang.Class<?> wildcardClass96 = intArray83.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0]");
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(intListList93);
        org.junit.Assert.assertNotNull(intListList95);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test2260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2260");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        int[] intArray13 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem0.TwoPointer(intArray13, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem16 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem17.BruteForce(intArray20, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList24 = threeSumProblem16.BruteForce(intArray20, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem0.Hashmap(intArray20, 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray36 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem27.BruteForce(intArray36, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem39.BruteForce(intArray42, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem27.Hashmap(intArray42, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem47 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem47.BruteForce(intArray50, (int) '#');
        int[] intArray56 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem47.BruteForce(intArray56, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem27.TwoPointer(intArray56, (int) ' ');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem61 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray70 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem61.BruteForce(intArray70, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem27.BruteForce(intArray70, (int) (short) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem0.TwoPointer(intArray70, (int) 'a');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem77 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem78 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem79 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray86 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem79.TwoPointer(intArray86, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem78.TwoPointer(intArray86, (int) (byte) 0);
        int[] intArray92 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem78.TwoPointer(intArray92, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem77.TwoPointer(intArray92, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList98 = threeSumProblem0.TwoPointer(intArray92, (int) (short) 100);
        java.lang.Class<?> wildcardClass99 = intArray92.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intListList24);
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0]");
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(intListList96);
        org.junit.Assert.assertNotNull(intListList98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test2261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2261");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray16 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList18 = threeSumProblem13.BruteForce(intArray16, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem19 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem20.BruteForce(intArray23, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem19.Hashmap(intArray23, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem28 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray36 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem29.TwoPointer(intArray36, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem28.TwoPointer(intArray36, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem19.BruteForce(intArray36, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem13.Hashmap(intArray36, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem0.TwoPointer(intArray36, 0);
        java.lang.Class<?> wildcardClass47 = intArray36.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList18);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test2262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2262");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem7 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem7.BruteForce(intArray10, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem6.Hashmap(intArray10, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem15 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem16 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem16.TwoPointer(intArray23, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem15.TwoPointer(intArray23, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem6.BruteForce(intArray23, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem0.Hashmap(intArray23, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem32 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem33 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem33.BruteForce(intArray36, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem32.Hashmap(intArray36, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem42.BruteForce(intArray45, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem41.Hashmap(intArray45, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem32.BruteForce(intArray45, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray60 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem53.TwoPointer(intArray60, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem52.TwoPointer(intArray60, (int) (byte) 0);
        int[] intArray69 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem52.Hashmap(intArray69, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem32.BruteForce(intArray69, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray81 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem74.TwoPointer(intArray81, (int) (short) 1);
        int[] intArray87 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem74.TwoPointer(intArray87, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem32.TwoPointer(intArray87, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem0.BruteForce(intArray87, (int) 'a');
        int[] intArray94 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem0.BruteForce(intArray94, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(intListList93);
    }

    @Test
    public void test2263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2263");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.BruteForce(intArray4, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray18 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem9.BruteForce(intArray18, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem0.BruteForce(intArray18, (int) (short) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem23 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem24 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem24.BruteForce(intArray27, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem23.Hashmap(intArray27, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem32 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem32.BruteForce(intArray35, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem23.TwoPointer(intArray35, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem41.BruteForce(intArray44, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem40.Hashmap(intArray44, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem50 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem50.BruteForce(intArray53, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem49.Hashmap(intArray53, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem58 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem59.BruteForce(intArray62, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem58.Hashmap(intArray62, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem49.BruteForce(intArray62, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem69 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem70 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray77 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem70.TwoPointer(intArray77, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem69.TwoPointer(intArray77, (int) (byte) 0);
        int[] intArray86 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem69.Hashmap(intArray86, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem49.BruteForce(intArray86, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem40.TwoPointer(intArray86, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem23.Hashmap(intArray86, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem0.TwoPointer(intArray86, 10);
        int[] intArray97 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList99 = threeSumProblem0.Hashmap(intArray97, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(intListList96);
    }

    @Test
    public void test2264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2264");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem14.BruteForce(intArray17, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem13.Hashmap(intArray17, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem22 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem22.BruteForce(intArray25, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem13.TwoPointer(intArray25, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem31.BruteForce(intArray34, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem30.Hashmap(intArray34, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem39.BruteForce(intArray42, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem30.TwoPointer(intArray42, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem13.Hashmap(intArray42, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem0.Hashmap(intArray42, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem52.BruteForce(intArray55, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem51.Hashmap(intArray55, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem61 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray68 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem61.TwoPointer(intArray68, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem60.TwoPointer(intArray68, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem51.BruteForce(intArray68, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem0.Hashmap(intArray68, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem77 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem77.BruteForce(intArray80, (int) '#');
        int[] intArray86 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem77.BruteForce(intArray86, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem0.Hashmap(intArray86, (int) '#');
        java.lang.Class<?> wildcardClass91 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test2265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2265");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.BruteForce(intArray4, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem19 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList24 = threeSumProblem19.BruteForce(intArray22, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem18.Hashmap(intArray22, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem27.BruteForce(intArray30, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem18.TwoPointer(intArray30, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem9.Hashmap(intArray30, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem38 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem38.BruteForce(intArray41, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem37.Hashmap(intArray41, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem46.BruteForce(intArray49, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem37.TwoPointer(intArray49, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem9.TwoPointer(intArray49, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem0.TwoPointer(intArray49, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem58 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray66 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem59.TwoPointer(intArray66, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem58.TwoPointer(intArray66, (int) (byte) 0);
        int[] intArray75 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem58.Hashmap(intArray75, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem0.Hashmap(intArray75, (int) '#');
        java.lang.Class<?> wildcardClass80 = intListList79.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList24);
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test2266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2266");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.BruteForce(intArray13, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        int[] intArray37 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray37, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.BruteForce(intArray37, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray49 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem42.TwoPointer(intArray49, (int) (short) 1);
        int[] intArray55 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem42.TwoPointer(intArray55, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem0.TwoPointer(intArray55, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem60.BruteForce(intArray63, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem66 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem66.BruteForce(intArray69, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem60.TwoPointer(intArray69, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem0.Hashmap(intArray69, 10);
        java.lang.Class<?> wildcardClass76 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test2267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2267");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem16 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem16.BruteForce(intArray19, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem10.TwoPointer(intArray19, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem24 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray33 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem24.BruteForce(intArray33, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem10.BruteForce(intArray33, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem0.BruteForce(intArray33, 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem41.BruteForce(intArray44, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem40.Hashmap(intArray44, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem50 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem50.BruteForce(intArray53, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem49.Hashmap(intArray53, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem40.BruteForce(intArray53, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem61 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray68 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem61.TwoPointer(intArray68, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem60.TwoPointer(intArray68, (int) (byte) 0);
        int[] intArray77 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem60.Hashmap(intArray77, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem40.BruteForce(intArray77, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem0.Hashmap(intArray77, (int) (byte) 100);
        java.lang.Class<?> wildcardClass84 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test2268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2268");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem16 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem16.BruteForce(intArray19, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem10.TwoPointer(intArray19, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem0.BruteForce(intArray19, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray35 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem26.BruteForce(intArray35, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem38 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem38.BruteForce(intArray41, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem26.Hashmap(intArray41, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem47 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem47.BruteForce(intArray50, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem46.Hashmap(intArray50, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem55.BruteForce(intArray58, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem46.TwoPointer(intArray58, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem26.Hashmap(intArray58, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem0.BruteForce(intArray58, (int) 'a');
        java.lang.Class<?> wildcardClass67 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test2269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2269");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem2 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray9 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem2.TwoPointer(intArray9, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList13 = threeSumProblem1.TwoPointer(intArray9, (int) (byte) 0);
        int[] intArray18 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem1.Hashmap(intArray18, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem22 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem22.BruteForce(intArray25, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem21.Hashmap(intArray25, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem1.TwoPointer(intArray25, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem32 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem33 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem33.BruteForce(intArray36, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem32.Hashmap(intArray36, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem42.BruteForce(intArray45, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem41.Hashmap(intArray45, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem32.BruteForce(intArray45, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem1.BruteForce(intArray45, (int) ' ');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray63 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem56.TwoPointer(intArray63, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem55.TwoPointer(intArray63, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem68 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem69 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem69.BruteForce(intArray72, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem68.Hashmap(intArray72, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem77 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem78 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray85 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem78.TwoPointer(intArray85, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem77.TwoPointer(intArray85, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem68.BruteForce(intArray85, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem55.BruteForce(intArray85, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList95 = threeSumProblem54.Hashmap(intArray85, (int) (byte) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList97 = threeSumProblem1.BruteForce(intArray85, (int) (short) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList99 = threeSumProblem0.BruteForce(intArray85, (int) '#');
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intListList13);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(intListList93);
        org.junit.Assert.assertNotNull(intListList95);
        org.junit.Assert.assertNotNull(intListList97);
        org.junit.Assert.assertNotNull(intListList99);
    }

    @Test
    public void test2270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2270");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray16 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList18 = threeSumProblem9.TwoPointer(intArray16, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem19 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList24 = threeSumProblem19.BruteForce(intArray22, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem25 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem25.BruteForce(intArray28, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem19.TwoPointer(intArray28, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem9.BruteForce(intArray28, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray44 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem35.BruteForce(intArray44, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem47 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem47.BruteForce(intArray50, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem35.Hashmap(intArray50, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem56.BruteForce(intArray59, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem55.Hashmap(intArray59, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem64 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem64.BruteForce(intArray67, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem55.TwoPointer(intArray67, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem35.Hashmap(intArray67, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem9.BruteForce(intArray67, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem0.Hashmap(intArray67, (int) (short) -1);
        java.lang.Class<?> wildcardClass78 = intListList77.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList18);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList24);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test2271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2271");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        int[] intArray13 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem0.TwoPointer(intArray13, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem16 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem17.BruteForce(intArray20, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList24 = threeSumProblem16.BruteForce(intArray20, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem0.Hashmap(intArray20, 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem28 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem28.BruteForce(intArray31, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem27.Hashmap(intArray31, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem37.BruteForce(intArray40, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem36.Hashmap(intArray40, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem45 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem45.BruteForce(intArray48, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem36.TwoPointer(intArray48, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem27.Hashmap(intArray48, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem0.BruteForce(intArray48, (int) (short) 100);
        int[] intArray57 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem0.Hashmap(intArray57, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intListList24);
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intListList56);
    }

    @Test
    public void test2272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2272");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.BruteForce(intArray13, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        int[] intArray37 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray37, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.BruteForce(intArray37, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray49 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem42.TwoPointer(intArray49, (int) (short) 1);
        int[] intArray55 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem42.TwoPointer(intArray55, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem0.TwoPointer(intArray55, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem60.BruteForce(intArray63, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem66 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem66.BruteForce(intArray69, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem60.TwoPointer(intArray69, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem0.Hashmap(intArray69, 10);
        java.lang.Class<?> wildcardClass76 = intListList75.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test2273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2273");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem33 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray41 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem34.TwoPointer(intArray41, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem33.TwoPointer(intArray41, (int) (byte) 0);
        int[] intArray50 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem33.Hashmap(intArray50, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem20.Hashmap(intArray50, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray63 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem56.TwoPointer(intArray63, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem55.TwoPointer(intArray63, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem68 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem69 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray76 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem69.TwoPointer(intArray76, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem68.TwoPointer(intArray76, (int) (byte) 0);
        int[] intArray85 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem68.Hashmap(intArray85, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem55.Hashmap(intArray85, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem20.TwoPointer(intArray85, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem0.TwoPointer(intArray85, (int) '4');
        int[] intArray94 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem0.BruteForce(intArray94, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(intListList93);
    }

    @Test
    public void test2274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2274");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        int[] intArray13 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem0.TwoPointer(intArray13, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem16 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem17.TwoPointer(intArray24, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem16.TwoPointer(intArray24, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem0.BruteForce(intArray24, (int) (short) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem32 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem32.BruteForce(intArray35, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem31.Hashmap(intArray35, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem40.BruteForce(intArray43, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem31.TwoPointer(intArray43, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem0.Hashmap(intArray43, (-1));
        java.lang.Class<?> wildcardClass50 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test2275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2275");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray19 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem10.BruteForce(intArray19, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem22 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem22.BruteForce(intArray25, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem10.Hashmap(intArray25, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem31.BruteForce(intArray34, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem30.Hashmap(intArray34, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray47 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem40.TwoPointer(intArray47, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem39.TwoPointer(intArray47, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem30.BruteForce(intArray47, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem10.TwoPointer(intArray47, (int) (byte) 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem0.TwoPointer(intArray47, (int) (byte) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem58 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem59.BruteForce(intArray62, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem58.BruteForce(intArray62, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem0.BruteForce(intArray62, (int) (short) 0);
        java.lang.Class<?> wildcardClass69 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test2276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2276");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.BruteForce(intArray13, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem21.BruteForce(intArray24, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem20.Hashmap(intArray24, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray37 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem30.TwoPointer(intArray37, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem29.TwoPointer(intArray37, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem20.BruteForce(intArray37, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem0.TwoPointer(intArray37, 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem47 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem47.BruteForce(intArray50, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem46.Hashmap(intArray50, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem56.BruteForce(intArray59, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem55.Hashmap(intArray59, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem64 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem64.BruteForce(intArray67, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem55.TwoPointer(intArray67, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem46.Hashmap(intArray67, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem74.BruteForce(intArray77, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem46.TwoPointer(intArray77, (int) (short) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem0.Hashmap(intArray77, 100);
        java.lang.Class<?> wildcardClass84 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test2277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2277");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray29 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem20.BruteForce(intArray29, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem0.BruteForce(intArray29, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray42 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem35.TwoPointer(intArray42, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem34.TwoPointer(intArray42, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem0.Hashmap(intArray42, (int) (short) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem49.BruteForce(intArray52, (int) '#');
        int[] intArray58 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem49.BruteForce(intArray58, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem61 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem61.BruteForce(intArray64, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem49.Hashmap(intArray64, (int) (byte) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem0.TwoPointer(intArray64, (int) '#');
        java.lang.Class<?> wildcardClass71 = intListList70.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test2278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2278");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem11 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray14 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem11.BruteForce(intArray14, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList18 = threeSumProblem10.Hashmap(intArray14, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem19 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList24 = threeSumProblem19.BruteForce(intArray22, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem10.TwoPointer(intArray22, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem28 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem28.BruteForce(intArray31, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem27.Hashmap(intArray31, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem36.BruteForce(intArray39, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem27.TwoPointer(intArray39, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem10.Hashmap(intArray39, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem0.Hashmap(intArray39, (int) (short) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray56 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem49.TwoPointer(intArray56, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem48.TwoPointer(intArray56, (int) (byte) 0);
        int[] intArray65 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem48.Hashmap(intArray65, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem68 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem69 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem69.BruteForce(intArray72, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem68.Hashmap(intArray72, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem77 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem78 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray81 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem78.BruteForce(intArray81, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem77.Hashmap(intArray81, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem68.BruteForce(intArray81, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem48.Hashmap(intArray81, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem0.Hashmap(intArray81, (int) ' ');
        java.lang.Class<?> wildcardClass92 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intListList18);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList24);
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test2279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2279");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem17.Hashmap(intArray21, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem26.BruteForce(intArray29, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem17.TwoPointer(intArray29, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem34.Hashmap(intArray38, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem43.BruteForce(intArray46, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem34.TwoPointer(intArray46, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem17.Hashmap(intArray46, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem0.BruteForce(intArray46, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem55.BruteForce(intArray58, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem61 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem61.BruteForce(intArray64, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem55.TwoPointer(intArray64, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem0.Hashmap(intArray64, (int) (short) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem71 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem72 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray79 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem72.TwoPointer(intArray79, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem71.TwoPointer(intArray79, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem0.TwoPointer(intArray79, 0);
        java.lang.Class<?> wildcardClass86 = intArray79.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test2280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2280");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem17.Hashmap(intArray21, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem26.BruteForce(intArray29, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem17.TwoPointer(intArray29, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem34.Hashmap(intArray38, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem43.BruteForce(intArray46, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem34.TwoPointer(intArray46, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem17.Hashmap(intArray46, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem0.BruteForce(intArray46, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem56.BruteForce(intArray59, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem55.Hashmap(intArray59, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem64 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem64.BruteForce(intArray67, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem55.TwoPointer(intArray67, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem0.Hashmap(intArray67, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem75 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray82 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem75.TwoPointer(intArray82, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem74.TwoPointer(intArray82, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem0.TwoPointer(intArray82, (int) (short) 100);
        int[] intArray92 = new int[] { '#', ' ', '4' };
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem0.Hashmap(intArray92, 0);
        java.lang.Class<?> wildcardClass95 = intArray92.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[32, 35, 52]");
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test2281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2281");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray29 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem20.BruteForce(intArray29, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem0.BruteForce(intArray29, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray42 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem35.TwoPointer(intArray42, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem34.TwoPointer(intArray42, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem0.Hashmap(intArray42, (int) (short) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem49.BruteForce(intArray52, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem55.BruteForce(intArray58, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem49.TwoPointer(intArray58, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem63 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem64 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem64.BruteForce(intArray67, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem63.Hashmap(intArray67, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem72 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem72.BruteForce(intArray75, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem63.TwoPointer(intArray75, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem49.BruteForce(intArray75, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem0.BruteForce(intArray75, (int) (short) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem84 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem85 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray92 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem85.TwoPointer(intArray92, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem84.TwoPointer(intArray92, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList98 = threeSumProblem0.Hashmap(intArray92, 10);
        java.lang.Class<?> wildcardClass99 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(intListList96);
        org.junit.Assert.assertNotNull(intListList98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test2282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2282");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray29 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem20.BruteForce(intArray29, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem0.TwoPointer(intArray29, (int) ' ');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem34.Hashmap(intArray38, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem43.BruteForce(intArray46, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem34.TwoPointer(intArray46, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem0.BruteForce(intArray46, (int) 'a');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem54.BruteForce(intArray57, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem53.Hashmap(intArray57, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem62 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem62.BruteForce(intArray65, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem53.TwoPointer(intArray65, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem70 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem71 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem71.BruteForce(intArray74, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem70.Hashmap(intArray74, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem79 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem79.BruteForce(intArray82, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem70.TwoPointer(intArray82, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem53.Hashmap(intArray82, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem0.BruteForce(intArray82, (int) (byte) 0);
        java.lang.Class<?> wildcardClass91 = intArray82.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test2283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2283");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem14.TwoPointer(intArray21, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem13.TwoPointer(intArray21, (int) (byte) 0);
        int[] intArray30 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem13.Hashmap(intArray30, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem0.Hashmap(intArray30, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem41.BruteForce(intArray44, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem35.TwoPointer(intArray44, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem50 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem50.BruteForce(intArray53, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem49.Hashmap(intArray53, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem58 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem58.BruteForce(intArray61, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem49.TwoPointer(intArray61, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem35.BruteForce(intArray61, (int) ' ');
        int[] intArray74 = new int[] { (short) 100, (byte) 100, '4', (byte) -1, (byte) 0, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem35.Hashmap(intArray74, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem0.Hashmap(intArray74, (int) '4');
        java.lang.Class<?> wildcardClass79 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0, 52, 97, 100, 100]");
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test2284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2284");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem21.BruteForce(intArray24, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem20.Hashmap(intArray24, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem0.TwoPointer(intArray24, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem32 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem33 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray40 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem33.TwoPointer(intArray40, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem32.TwoPointer(intArray40, (int) (byte) 0);
        int[] intArray46 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem32.TwoPointer(intArray46, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem31.TwoPointer(intArray46, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem0.TwoPointer(intArray46, (int) (short) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem54.BruteForce(intArray57, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem53.BruteForce(intArray57, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem62 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem62.BruteForce(intArray65, (int) '#');
        int[] intArray71 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem62.BruteForce(intArray71, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem53.BruteForce(intArray71, (int) (short) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem76 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem77 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray84 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem77.TwoPointer(intArray84, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem76.TwoPointer(intArray84, (int) (byte) 0);
        int[] intArray90 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem76.TwoPointer(intArray90, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem53.BruteForce(intArray90, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem0.TwoPointer(intArray90, 0);
        java.lang.Class<?> wildcardClass97 = intArray90.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0]");
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(intListList96);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test2285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2285");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray29 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem20.BruteForce(intArray29, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem32 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem32.BruteForce(intArray35, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray35, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray49 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem40.BruteForce(intArray49, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem20.BruteForce(intArray49, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray61 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem54.TwoPointer(intArray61, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem20.TwoPointer(intArray61, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem66 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray73 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem66.TwoPointer(intArray73, (int) (short) 1);
        int[] intArray79 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem66.TwoPointer(intArray79, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem20.Hashmap(intArray79, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem0.Hashmap(intArray79, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem86 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray89 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem86.BruteForce(intArray89, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem0.Hashmap(intArray89, (int) (short) -1);
        java.lang.Class<?> wildcardClass94 = intListList93.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(intListList93);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test2286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2286");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem17.Hashmap(intArray21, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem26.BruteForce(intArray29, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem17.TwoPointer(intArray29, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem0.Hashmap(intArray29, (int) 'a');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem37.BruteForce(intArray40, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem36.Hashmap(intArray40, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem45 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem45.BruteForce(intArray48, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem36.TwoPointer(intArray48, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem54.BruteForce(intArray57, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem53.Hashmap(intArray57, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem62 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem62.BruteForce(intArray65, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem53.TwoPointer(intArray65, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem36.Hashmap(intArray65, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem0.Hashmap(intArray65, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem75 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem75.BruteForce(intArray78, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem74.Hashmap(intArray78, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem0.TwoPointer(intArray78, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem85 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray92 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem85.TwoPointer(intArray92, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem0.TwoPointer(intArray92, (int) (short) 0);
        java.lang.Class<?> wildcardClass97 = intListList96.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(intListList96);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test2287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2287");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem9.TwoPointer(intArray21, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem27.BruteForce(intArray30, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem26.Hashmap(intArray30, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem26.TwoPointer(intArray38, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem9.Hashmap(intArray38, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem0.BruteForce(intArray38, 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem47 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem48.BruteForce(intArray51, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem47.Hashmap(intArray51, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem57 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem57.BruteForce(intArray60, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem56.Hashmap(intArray60, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem47.BruteForce(intArray60, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem67 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem68 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray75 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem68.TwoPointer(intArray75, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem67.TwoPointer(intArray75, (int) (byte) 0);
        int[] intArray84 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem67.Hashmap(intArray84, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem47.BruteForce(intArray84, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem89 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray92 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem89.BruteForce(intArray92, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem47.Hashmap(intArray92, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList98 = threeSumProblem0.BruteForce(intArray92, 0);
        java.lang.Class<?> wildcardClass99 = intArray92.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(intListList96);
        org.junit.Assert.assertNotNull(intListList98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test2288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2288");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray9 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem6.BruteForce(intArray9, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList13 = threeSumProblem0.TwoPointer(intArray9, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem15 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray22 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList24 = threeSumProblem15.TwoPointer(intArray22, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem14.TwoPointer(intArray22, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem28 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray35 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem28.TwoPointer(intArray35, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem27.TwoPointer(intArray35, (int) (byte) 0);
        int[] intArray44 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem27.Hashmap(intArray44, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem14.Hashmap(intArray44, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem49.BruteForce(intArray52, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem55.BruteForce(intArray58, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem49.TwoPointer(intArray58, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem63 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray72 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem63.BruteForce(intArray72, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem49.BruteForce(intArray72, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem14.TwoPointer(intArray72, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem79 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray86 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem79.TwoPointer(intArray86, (int) (short) 1);
        int[] intArray92 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem79.TwoPointer(intArray92, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem14.TwoPointer(intArray92, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList98 = threeSumProblem0.BruteForce(intArray92, (-1));
        java.lang.Class<?> wildcardClass99 = intArray92.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intListList13);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList24);
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(intListList96);
        org.junit.Assert.assertNotNull(intListList98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test2289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2289");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem21.BruteForce(intArray24, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem20.Hashmap(intArray24, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem0.TwoPointer(intArray24, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem31.BruteForce(intArray34, (int) '#');
        int[] intArray40 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem31.BruteForce(intArray40, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem43.BruteForce(intArray46, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem31.Hashmap(intArray46, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray59 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem52.TwoPointer(intArray59, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem51.TwoPointer(intArray59, (int) (byte) 0);
        int[] intArray65 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem51.TwoPointer(intArray65, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem68 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem69 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray76 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem69.TwoPointer(intArray76, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem68.TwoPointer(intArray76, (int) (byte) 0);
        int[] intArray85 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem68.Hashmap(intArray85, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem51.TwoPointer(intArray85, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem31.Hashmap(intArray85, (int) (byte) 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem0.Hashmap(intArray85, (int) ' ');
        int[] intArray94 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem0.BruteForce(intArray94, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(intListList93);
    }

    @Test
    public void test2290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2290");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        int[] intArray13 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem0.TwoPointer(intArray13, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem16 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem17.TwoPointer(intArray24, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem16.TwoPointer(intArray24, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem0.BruteForce(intArray24, (int) (short) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem31.TwoPointer(intArray38, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray49 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem42.TwoPointer(intArray49, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem41.TwoPointer(intArray49, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem31.Hashmap(intArray49, (int) (byte) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem0.BruteForce(intArray49, 0);
        int[] intArray58 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem0.BruteForce(intArray58, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intListList57);
    }

    @Test
    public void test2291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2291");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray14 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray14, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray25 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem18.TwoPointer(intArray25, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem17.TwoPointer(intArray25, (int) (byte) 0);
        int[] intArray34 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem17.Hashmap(intArray34, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem38 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem38.BruteForce(intArray41, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem37.Hashmap(intArray41, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem17.TwoPointer(intArray41, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem50 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray57 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem50.TwoPointer(intArray57, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem49.TwoPointer(intArray57, (int) (byte) 0);
        int[] intArray63 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem49.TwoPointer(intArray63, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem48.TwoPointer(intArray63, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem17.TwoPointer(intArray63, (int) (short) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem70 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem71 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem71.BruteForce(intArray74, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem70.Hashmap(intArray74, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem79 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem79.BruteForce(intArray82, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem70.BruteForce(intArray82, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem17.BruteForce(intArray82, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem0.BruteForce(intArray82, 10);
        java.lang.Class<?> wildcardClass91 = intListList90.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0]");
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0]");
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test2292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2292");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray16 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList18 = threeSumProblem13.BruteForce(intArray16, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem12.Hashmap(intArray16, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem22 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem22.BruteForce(intArray25, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem21.Hashmap(intArray25, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem30.BruteForce(intArray33, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem21.TwoPointer(intArray33, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem12.Hashmap(intArray33, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem40.BruteForce(intArray43, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem12.TwoPointer(intArray43, (int) (short) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem48.BruteForce(intArray51, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem54.BruteForce(intArray57, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem48.TwoPointer(intArray57, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem62 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem63 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem63.BruteForce(intArray66, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem62.Hashmap(intArray66, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem71 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem71.BruteForce(intArray74, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem62.TwoPointer(intArray74, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem48.BruteForce(intArray74, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem12.Hashmap(intArray74, (int) (short) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem0.Hashmap(intArray74, 0);
        java.lang.Class<?> wildcardClass85 = intListList84.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList18);
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test2293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2293");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.BruteForce(intArray4, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray16 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList18 = threeSumProblem9.TwoPointer(intArray16, (int) (short) 1);
        int[] intArray22 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList24 = threeSumProblem9.TwoPointer(intArray22, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem25 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray34 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem25.BruteForce(intArray34, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem37.BruteForce(intArray40, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray50 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem43.TwoPointer(intArray50, (int) (short) 1);
        int[] intArray56 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem43.TwoPointer(intArray56, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray67 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem60.TwoPointer(intArray67, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem59.TwoPointer(intArray67, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem43.BruteForce(intArray67, (int) (short) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem37.Hashmap(intArray67, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem25.BruteForce(intArray67, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem9.Hashmap(intArray67, (int) (short) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem0.Hashmap(intArray67, (int) '4');
        int[] intArray82 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem0.BruteForce(intArray82, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList18);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList24);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
    }

    @Test
    public void test2294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2294");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        int[] intArray37 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray37, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.Hashmap(intArray37, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem42.BruteForce(intArray45, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem0.Hashmap(intArray45, (int) (byte) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem50 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem50.BruteForce(intArray53, (int) '#');
        int[] intArray59 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem50.BruteForce(intArray59, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem62 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem62.BruteForce(intArray65, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem50.Hashmap(intArray65, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem70 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray79 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem70.BruteForce(intArray79, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem50.TwoPointer(intArray79, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem0.Hashmap(intArray79, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem86 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray89 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem86.BruteForce(intArray89, (int) '#');
        int[] intArray95 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList97 = threeSumProblem86.BruteForce(intArray95, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList99 = threeSumProblem0.TwoPointer(intArray95, (int) (short) 10);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList97);
        org.junit.Assert.assertNotNull(intListList99);
    }

    @Test
    public void test2295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2295");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem21.BruteForce(intArray24, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem20.Hashmap(intArray24, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem0.TwoPointer(intArray24, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem32 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem32.BruteForce(intArray35, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem31.Hashmap(intArray35, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem40.BruteForce(intArray43, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem31.TwoPointer(intArray43, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem0.TwoPointer(intArray43, (-1));
        java.lang.Class<?> wildcardClass50 = intListList49.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test2296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2296");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem21.BruteForce(intArray24, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem20.Hashmap(intArray24, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem0.TwoPointer(intArray24, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem32 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem32.BruteForce(intArray35, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem31.Hashmap(intArray35, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem41.BruteForce(intArray44, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem40.Hashmap(intArray44, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem31.BruteForce(intArray44, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem0.BruteForce(intArray44, (int) ' ');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem54.BruteForce(intArray57, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem53.BruteForce(intArray57, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem62 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem62.BruteForce(intArray65, (int) '#');
        int[] intArray71 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem62.BruteForce(intArray71, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem53.BruteForce(intArray71, (int) (short) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem76 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem77 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray84 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem77.TwoPointer(intArray84, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem76.TwoPointer(intArray84, (int) (byte) 0);
        int[] intArray90 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem76.TwoPointer(intArray90, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem53.BruteForce(intArray90, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem0.TwoPointer(intArray90, (int) (short) 10);
        java.lang.Class<?> wildcardClass97 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0]");
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(intListList96);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test2297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2297");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray16 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList18 = threeSumProblem13.BruteForce(intArray16, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem12.Hashmap(intArray16, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem22 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem22.BruteForce(intArray25, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem21.Hashmap(intArray25, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem30.BruteForce(intArray33, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem21.TwoPointer(intArray33, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem12.Hashmap(intArray33, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem40.BruteForce(intArray43, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem12.TwoPointer(intArray43, (int) (short) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem48.BruteForce(intArray51, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem54.BruteForce(intArray57, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem48.TwoPointer(intArray57, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem62 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem63 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem63.BruteForce(intArray66, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem62.Hashmap(intArray66, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem71 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem71.BruteForce(intArray74, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem62.TwoPointer(intArray74, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem48.BruteForce(intArray74, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem12.Hashmap(intArray74, (int) (short) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem0.TwoPointer(intArray74, (int) '4');
        int[] intArray85 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem0.BruteForce(intArray85, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList18);
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
    }

    @Test
    public void test2298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2298");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray14 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray14, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem17.BruteForce(intArray20, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem23 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray26 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem23.BruteForce(intArray26, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem17.TwoPointer(intArray26, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem32 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem32.BruteForce(intArray35, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem31.Hashmap(intArray35, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem40.BruteForce(intArray43, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem31.TwoPointer(intArray43, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem17.BruteForce(intArray43, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem0.Hashmap(intArray43, 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray60 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem53.TwoPointer(intArray60, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem52.TwoPointer(intArray60, (int) (byte) 0);
        int[] intArray66 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem52.TwoPointer(intArray66, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem69 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem70 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray77 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem70.TwoPointer(intArray77, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem69.TwoPointer(intArray77, (int) (byte) 0);
        int[] intArray86 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem69.Hashmap(intArray86, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem52.TwoPointer(intArray86, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem0.Hashmap(intArray86, (int) (short) 100);
        int[] intArray93 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList95 = threeSumProblem0.Hashmap(intArray93, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0]");
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0]");
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(intListList92);
    }

    @Test
    public void test2299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2299");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem7 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem7.BruteForce(intArray10, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem6.Hashmap(intArray10, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem15 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem16 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem16.BruteForce(intArray19, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem15.Hashmap(intArray19, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem24 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem24.BruteForce(intArray27, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem15.TwoPointer(intArray27, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem6.Hashmap(intArray27, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem34.Hashmap(intArray38, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem44 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem44.BruteForce(intArray47, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem43.Hashmap(intArray47, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem52.BruteForce(intArray55, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem43.TwoPointer(intArray55, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem34.Hashmap(intArray55, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem6.TwoPointer(intArray55, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem64 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem65 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem65.BruteForce(intArray68, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem64.BruteForce(intArray68, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem73 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray82 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem73.BruteForce(intArray82, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem64.BruteForce(intArray82, (int) (short) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem6.Hashmap(intArray82, (int) (byte) 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem0.TwoPointer(intArray82, (-1));
        java.lang.Class<?> wildcardClass91 = intListList90.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test2300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2300");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray20 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem13.TwoPointer(intArray20, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem23 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem24 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray31 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem24.TwoPointer(intArray31, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem23.TwoPointer(intArray31, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem13.Hashmap(intArray31, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem38 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem38.TwoPointer(intArray45, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray56 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem49.TwoPointer(intArray56, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem48.TwoPointer(intArray56, (int) (byte) 0);
        int[] intArray65 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem48.Hashmap(intArray65, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem68 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem69 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem69.BruteForce(intArray72, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem68.Hashmap(intArray72, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem77 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem78 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray81 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem78.BruteForce(intArray81, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem77.Hashmap(intArray81, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem68.BruteForce(intArray81, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem48.Hashmap(intArray81, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem38.TwoPointer(intArray81, (int) (short) 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem13.Hashmap(intArray81, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList95 = threeSumProblem0.Hashmap(intArray81, 10);
        java.lang.Class<?> wildcardClass96 = intArray81.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(intListList93);
        org.junit.Assert.assertNotNull(intListList95);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test2301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2301");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        int[] intArray37 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray37, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.Hashmap(intArray37, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem42.BruteForce(intArray45, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem0.Hashmap(intArray45, (int) (byte) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem50 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem50.BruteForce(intArray53, (int) '#');
        int[] intArray59 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem50.BruteForce(intArray59, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem62 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem62.BruteForce(intArray65, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem50.Hashmap(intArray65, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem70 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray79 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem70.BruteForce(intArray79, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem50.TwoPointer(intArray79, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem0.Hashmap(intArray79, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem86 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem87 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray90 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem87.BruteForce(intArray90, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem86.BruteForce(intArray90, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem0.BruteForce(intArray90, (int) (byte) 10);
        int[] intArray97 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList99 = threeSumProblem0.Hashmap(intArray97, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(intListList96);
    }

    @Test
    public void test2302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2302");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray16 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList18 = threeSumProblem13.BruteForce(intArray16, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem19 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList24 = threeSumProblem19.BruteForce(intArray22, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem13.TwoPointer(intArray22, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray36 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem27.BruteForce(intArray36, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem13.BruteForce(intArray36, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem0.Hashmap(intArray36, 1);
        java.lang.Class<?> wildcardClass43 = intArray36.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList18);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList24);
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test2303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2303");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem9.TwoPointer(intArray21, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem0.Hashmap(intArray21, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem28 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem29.BruteForce(intArray32, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem28.Hashmap(intArray32, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem38 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem38.BruteForce(intArray41, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem37.Hashmap(intArray41, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem46.BruteForce(intArray49, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem37.TwoPointer(intArray49, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem28.Hashmap(intArray49, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem56.BruteForce(intArray59, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem28.TwoPointer(intArray59, (int) (short) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem0.BruteForce(intArray59, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem66 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray73 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem66.TwoPointer(intArray73, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem76 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem77 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray84 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem77.TwoPointer(intArray84, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem76.TwoPointer(intArray84, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem66.Hashmap(intArray84, (int) (byte) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem0.Hashmap(intArray84, (int) '#');
        java.lang.Class<?> wildcardClass93 = intListList92.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test2304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2304");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem11 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray14 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem11.BruteForce(intArray14, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList18 = threeSumProblem10.Hashmap(intArray14, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem19 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem20.BruteForce(intArray23, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem19.Hashmap(intArray23, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem10.BruteForce(intArray23, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem31.TwoPointer(intArray38, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem30.TwoPointer(intArray38, (int) (byte) 0);
        int[] intArray47 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem30.Hashmap(intArray47, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem10.BruteForce(intArray47, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem52.BruteForce(intArray55, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem10.Hashmap(intArray55, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem60.BruteForce(intArray63, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem10.TwoPointer(intArray63, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem9.TwoPointer(intArray63, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem0.Hashmap(intArray63, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem72 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray79 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem72.TwoPointer(intArray79, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem0.Hashmap(intArray79, 1);
        int[] intArray84 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem0.Hashmap(intArray84, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intListList18);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
    }

    @Test
    public void test2305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2305");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem16 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem16.BruteForce(intArray19, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem10.TwoPointer(intArray19, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem0.BruteForce(intArray19, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray34 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem27.TwoPointer(intArray34, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem26.TwoPointer(intArray34, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem40.BruteForce(intArray43, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem39.Hashmap(intArray43, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray56 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem49.TwoPointer(intArray56, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem48.TwoPointer(intArray56, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem39.BruteForce(intArray56, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem26.BruteForce(intArray56, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem0.TwoPointer(intArray56, 0);
        java.lang.Class<?> wildcardClass67 = intListList66.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test2306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2306");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray9 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem6.BruteForce(intArray9, (int) '#');
        int[] intArray15 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem6.BruteForce(intArray15, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem6.Hashmap(intArray21, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray35 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem26.BruteForce(intArray35, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem6.TwoPointer(intArray35, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.TwoPointer(intArray35, (int) (short) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem43.BruteForce(intArray46, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem42.BruteForce(intArray46, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem0.Hashmap(intArray46, (int) '4');
        java.lang.Class<?> wildcardClass53 = intArray46.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test2307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2307");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem21.BruteForce(intArray24, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem20.Hashmap(intArray24, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem0.TwoPointer(intArray24, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem32 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem32.BruteForce(intArray35, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem31.BruteForce(intArray35, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray48 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem41.TwoPointer(intArray48, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem40.TwoPointer(intArray48, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem31.TwoPointer(intArray48, (int) (byte) 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem0.TwoPointer(intArray48, 10);
        int[] intArray57 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem0.TwoPointer(intArray57, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intListList56);
    }

    @Test
    public void test2308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2308");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem6.TwoPointer(intArray13, (int) (short) 1);
        int[] intArray19 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem6.TwoPointer(intArray19, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem22 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem23 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray30 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem23.TwoPointer(intArray30, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem22.TwoPointer(intArray30, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem6.BruteForce(intArray30, (int) (short) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem0.Hashmap(intArray30, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem39.BruteForce(intArray42, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem45 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem45.BruteForce(intArray48, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem39.TwoPointer(intArray48, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem54.BruteForce(intArray57, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem53.Hashmap(intArray57, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem62 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem62.BruteForce(intArray65, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem53.TwoPointer(intArray65, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem39.BruteForce(intArray65, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem0.Hashmap(intArray65, (int) 'a');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem75 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray82 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem75.TwoPointer(intArray82, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem74.TwoPointer(intArray82, (int) (byte) 0);
        int[] intArray88 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem74.TwoPointer(intArray88, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem0.TwoPointer(intArray88, (int) (byte) 10);
        java.lang.Class<?> wildcardClass93 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0]");
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test2309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2309");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.BruteForce(intArray4, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray18 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem9.BruteForce(intArray18, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem0.BruteForce(intArray18, (int) (short) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem23 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem24 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem24.BruteForce(intArray27, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem23.Hashmap(intArray27, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem32 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem33 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem34.BruteForce(intArray37, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem33.Hashmap(intArray37, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem43.BruteForce(intArray46, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem42.Hashmap(intArray46, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem33.BruteForce(intArray46, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray61 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem54.TwoPointer(intArray61, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem53.TwoPointer(intArray61, (int) (byte) 0);
        int[] intArray70 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem53.Hashmap(intArray70, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem33.BruteForce(intArray70, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem75 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem75.BruteForce(intArray78, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem33.Hashmap(intArray78, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem83 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray86 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem83.BruteForce(intArray86, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem33.TwoPointer(intArray86, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem32.TwoPointer(intArray86, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem23.Hashmap(intArray86, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem0.Hashmap(intArray86, 0);
        int[] intArray97 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList99 = threeSumProblem0.TwoPointer(intArray97, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(intListList96);
    }

    @Test
    public void test2310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2310");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        int[] intArray13 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem0.TwoPointer(intArray13, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem16 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem17.Hashmap(intArray21, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem26.BruteForce(intArray29, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem17.TwoPointer(intArray29, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem34.Hashmap(intArray38, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem43.BruteForce(intArray46, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem34.TwoPointer(intArray46, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem17.Hashmap(intArray46, (int) 'a');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem54.BruteForce(intArray57, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem53.Hashmap(intArray57, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem62 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem62.BruteForce(intArray65, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem53.TwoPointer(intArray65, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem70 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem71 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem71.BruteForce(intArray74, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem70.Hashmap(intArray74, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem79 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem79.BruteForce(intArray82, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem70.TwoPointer(intArray82, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem53.Hashmap(intArray82, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem17.Hashmap(intArray82, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem16.TwoPointer(intArray82, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem0.BruteForce(intArray82, (int) (short) 1);
        int[] intArray95 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList97 = threeSumProblem0.BruteForce(intArray95, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(intListList94);
    }

    @Test
    public void test2311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2311");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.BruteForce(intArray13, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        int[] intArray37 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray37, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.BruteForce(intArray37, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem42.BruteForce(intArray45, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem0.Hashmap(intArray45, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem50 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem50.BruteForce(intArray53, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem0.TwoPointer(intArray53, (int) ' ');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem58 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem59.BruteForce(intArray62, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem58.Hashmap(intArray62, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem67 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem67.BruteForce(intArray70, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem58.BruteForce(intArray70, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem0.BruteForce(intArray70, 0);
        int[] intArray77 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem0.Hashmap(intArray77, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intListList76);
    }

    @Test
    public void test2312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2312");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray9 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem6.BruteForce(intArray9, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList13 = threeSumProblem0.TwoPointer(intArray9, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem15 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem15.BruteForce(intArray18, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem14.Hashmap(intArray18, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem23 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray26 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem23.BruteForce(intArray26, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem14.TwoPointer(intArray26, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem32 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem32.BruteForce(intArray35, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem31.Hashmap(intArray35, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem40.BruteForce(intArray43, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem31.TwoPointer(intArray43, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem49.BruteForce(intArray52, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem48.Hashmap(intArray52, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem57 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem57.BruteForce(intArray60, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem48.TwoPointer(intArray60, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem31.Hashmap(intArray60, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem14.BruteForce(intArray60, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem69 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem70 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray77 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem70.TwoPointer(intArray77, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem69.TwoPointer(intArray77, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem14.TwoPointer(intArray77, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem0.TwoPointer(intArray77, (int) (byte) 0);
        java.lang.Class<?> wildcardClass86 = intArray77.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intListList13);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test2313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2313");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem17.Hashmap(intArray21, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem26.BruteForce(intArray29, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem17.TwoPointer(intArray29, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem34.BruteForce(intArray38, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem17.TwoPointer(intArray38, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem45 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem46.BruteForce(intArray49, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem45.Hashmap(intArray49, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem17.BruteForce(intArray49, (int) (byte) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem56.BruteForce(intArray59, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem17.TwoPointer(intArray59, (int) (byte) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem64 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem65 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem65.BruteForce(intArray68, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem64.Hashmap(intArray68, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem73 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem73.BruteForce(intArray76, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem64.TwoPointer(intArray76, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem17.Hashmap(intArray76, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem0.BruteForce(intArray76, (int) (byte) 0);
        java.lang.Class<?> wildcardClass85 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test2314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2314");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem2 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList7 = threeSumProblem2.BruteForce(intArray5, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem1.Hashmap(intArray5, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem1.TwoPointer(intArray13, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem19 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList24 = threeSumProblem19.BruteForce(intArray22, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem18.Hashmap(intArray22, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem27.BruteForce(intArray30, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem18.TwoPointer(intArray30, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem1.Hashmap(intArray30, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem0.Hashmap(intArray30, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray47 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem40.TwoPointer(intArray47, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem39.TwoPointer(intArray47, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray60 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem53.TwoPointer(intArray60, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem52.TwoPointer(intArray60, (int) (byte) 0);
        int[] intArray69 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem52.Hashmap(intArray69, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem39.Hashmap(intArray69, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem74.BruteForce(intArray77, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem39.TwoPointer(intArray77, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem0.BruteForce(intArray77, (int) (byte) 10);
        int[] intArray84 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem0.BruteForce(intArray84, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList7);
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList24);
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
    }

    @Test
    public void test2315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2315");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem17.Hashmap(intArray21, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem26.BruteForce(intArray29, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem17.TwoPointer(intArray29, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem34.Hashmap(intArray38, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem43.BruteForce(intArray46, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem34.TwoPointer(intArray46, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem17.Hashmap(intArray46, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem0.BruteForce(intArray46, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem56.BruteForce(intArray59, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem55.Hashmap(intArray59, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem64 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem64.BruteForce(intArray67, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem55.TwoPointer(intArray67, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem0.Hashmap(intArray67, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem75 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray82 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem75.TwoPointer(intArray82, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem74.TwoPointer(intArray82, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem0.TwoPointer(intArray82, (int) (short) 100);
        int[] intArray92 = new int[] { '#', ' ', '4' };
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem0.Hashmap(intArray92, 0);
        int[] intArray95 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList97 = threeSumProblem0.BruteForce(intArray95, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[32, 35, 52]");
        org.junit.Assert.assertNotNull(intListList94);
    }

    @Test
    public void test2316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2316");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem17.Hashmap(intArray21, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem26.BruteForce(intArray29, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem17.TwoPointer(intArray29, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem0.Hashmap(intArray29, (int) 'a');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem37.BruteForce(intArray40, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem36.Hashmap(intArray40, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem45 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem45.BruteForce(intArray48, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem36.TwoPointer(intArray48, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem54.BruteForce(intArray57, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem53.Hashmap(intArray57, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem62 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem62.BruteForce(intArray65, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem53.TwoPointer(intArray65, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem36.Hashmap(intArray65, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem0.Hashmap(intArray65, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem75 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem75.BruteForce(intArray78, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem74.Hashmap(intArray78, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem0.TwoPointer(intArray78, 0);
        int[] intArray85 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem0.TwoPointer(intArray85, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
    }

    @Test
    public void test2317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2317");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.BruteForce(intArray4, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray18 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem9.BruteForce(intArray18, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem21.BruteForce(intArray24, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem9.Hashmap(intArray24, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem29.BruteForce(intArray32, (int) '#');
        int[] intArray38 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem29.BruteForce(intArray38, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem9.BruteForce(intArray38, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray50 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem43.TwoPointer(intArray50, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem9.TwoPointer(intArray50, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray62 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem55.TwoPointer(intArray62, (int) (short) 1);
        int[] intArray68 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem55.TwoPointer(intArray68, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem9.BruteForce(intArray68, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem0.Hashmap(intArray68, (int) (byte) 1);
        java.lang.Class<?> wildcardClass75 = intListList74.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test2318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2318");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem14.TwoPointer(intArray21, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem13.TwoPointer(intArray21, (int) (byte) 0);
        int[] intArray30 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem13.Hashmap(intArray30, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem0.Hashmap(intArray30, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem36.BruteForce(intArray39, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem35.Hashmap(intArray39, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem44 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem45 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem45.BruteForce(intArray48, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem44.Hashmap(intArray48, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem53.BruteForce(intArray56, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem44.TwoPointer(intArray56, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem35.Hashmap(intArray56, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem0.BruteForce(intArray56, (int) (byte) 10);
        int[] intArray65 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem0.BruteForce(intArray65, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intListList64);
    }

    @Test
    public void test2319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2319");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem10.TwoPointer(intArray17, (int) (short) 1);
        int[] intArray23 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem10.TwoPointer(intArray23, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray34 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem27.TwoPointer(intArray34, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem26.TwoPointer(intArray34, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem10.BruteForce(intArray34, (int) (short) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray48 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem41.TwoPointer(intArray48, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray59 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem52.TwoPointer(intArray59, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem51.TwoPointer(intArray59, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem41.Hashmap(intArray59, (int) (byte) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem10.BruteForce(intArray59, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem68 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray75 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem68.TwoPointer(intArray75, (int) (short) 1);
        int[] intArray81 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem68.TwoPointer(intArray81, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem10.BruteForce(intArray81, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem0.TwoPointer(intArray81, 0);
        java.lang.Class<?> wildcardClass88 = intArray81.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test2320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2320");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray29 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem20.BruteForce(intArray29, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem32 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem32.BruteForce(intArray35, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray35, (int) (byte) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.BruteForce(intArray35, (int) (byte) 10);
        int[] intArray42 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem0.Hashmap(intArray42, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
    }

    @Test
    public void test2321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2321");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray29 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem20.BruteForce(intArray29, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem0.BruteForce(intArray29, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray41 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem34.TwoPointer(intArray41, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem0.TwoPointer(intArray41, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem47 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray55 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem48.TwoPointer(intArray55, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem47.TwoPointer(intArray55, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem61 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem61.BruteForce(intArray64, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem60.Hashmap(intArray64, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem69 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem70 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray77 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem70.TwoPointer(intArray77, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem69.TwoPointer(intArray77, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem60.BruteForce(intArray77, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem47.BruteForce(intArray77, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem46.Hashmap(intArray77, (int) (byte) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem0.Hashmap(intArray77, (int) (byte) 0);
        int[] intArray90 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem0.Hashmap(intArray90, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(intListList89);
    }

    @Test
    public void test2322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2322");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem10.TwoPointer(intArray17, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray29 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem20.BruteForce(intArray29, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem32 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem32.BruteForce(intArray35, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray35, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem41.BruteForce(intArray44, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem40.Hashmap(intArray44, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem50 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray57 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem50.TwoPointer(intArray57, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem49.TwoPointer(intArray57, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem40.BruteForce(intArray57, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem20.TwoPointer(intArray57, (int) (byte) 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem10.TwoPointer(intArray57, (int) (byte) 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem0.Hashmap(intArray57, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem70 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem71 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray78 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem71.TwoPointer(intArray78, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem70.TwoPointer(intArray78, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem0.Hashmap(intArray78, (int) (byte) 100);
        int[] intArray89 = new int[] { (short) 1, (short) 1, '4', (byte) 100 };
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem0.TwoPointer(intArray89, (int) (short) 0);
        int[] intArray92 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem0.Hashmap(intArray92, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[1, 1, 52, 100]");
        org.junit.Assert.assertNotNull(intListList91);
    }

    @Test
    public void test2323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2323");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem9.TwoPointer(intArray21, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem0.Hashmap(intArray21, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem28 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem29.BruteForce(intArray32, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem28.Hashmap(intArray32, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem37.BruteForce(intArray40, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem28.TwoPointer(intArray40, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem0.TwoPointer(intArray40, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem47 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem48.BruteForce(intArray51, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem47.BruteForce(intArray51, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem0.Hashmap(intArray51, (int) (short) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem58 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem58.BruteForce(intArray61, (int) '#');
        int[] intArray67 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem58.BruteForce(intArray67, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem70 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem70.BruteForce(intArray73, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem58.Hashmap(intArray73, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem78 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray81 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem78.BruteForce(intArray81, (int) '#');
        int[] intArray87 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem78.BruteForce(intArray87, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem58.BruteForce(intArray87, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem0.BruteForce(intArray87, (int) (byte) 10);
        java.lang.Class<?> wildcardClass94 = intArray87.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(intListList93);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test2324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2324");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.BruteForce(intArray4, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem10.TwoPointer(intArray17, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem9.TwoPointer(intArray17, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem0.TwoPointer(intArray17, (int) (byte) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem24 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray31 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem24.TwoPointer(intArray31, (int) (short) 1);
        int[] intArray37 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem24.TwoPointer(intArray37, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem41.BruteForce(intArray44, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem40.BruteForce(intArray44, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem24.Hashmap(intArray44, 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem0.Hashmap(intArray44, (int) (short) 100);
        int[] intArray53 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem0.TwoPointer(intArray53, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
    }

    @Test
    public void test2325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2325");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray29 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem20.BruteForce(intArray29, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem0.TwoPointer(intArray29, (int) ' ');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem34.Hashmap(intArray38, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem43.BruteForce(intArray46, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem34.TwoPointer(intArray46, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem0.BruteForce(intArray46, (int) 'a');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem53.BruteForce(intArray56, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem59.BruteForce(intArray62, (int) '#');
        int[] intArray68 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem59.BruteForce(intArray68, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem71 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem71.BruteForce(intArray74, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem59.Hashmap(intArray74, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem79 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray88 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem79.BruteForce(intArray88, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem59.TwoPointer(intArray88, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem53.TwoPointer(intArray88, 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem0.Hashmap(intArray88, (int) (short) 1);
        int[] intArray97 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList99 = threeSumProblem0.BruteForce(intArray97, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(intListList96);
    }

    @Test
    public void test2326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2326");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.BruteForce(intArray4, (int) (short) 1);
        int[] intArray9 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
    }

    @Test
    public void test2327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2327");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        int[] intArray13 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem0.TwoPointer(intArray13, 1);
        int[] intArray16 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList18 = threeSumProblem0.BruteForce(intArray16, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList15);
    }

    @Test
    public void test2328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2328");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.BruteForce(intArray13, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        int[] intArray37 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray37, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.BruteForce(intArray37, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray50 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem43.TwoPointer(intArray50, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem42.TwoPointer(intArray50, (int) (byte) 0);
        int[] intArray59 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem42.Hashmap(intArray59, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem62 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem63 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem63.BruteForce(intArray66, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem62.Hashmap(intArray66, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem42.TwoPointer(intArray66, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem73 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem75 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray82 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem75.TwoPointer(intArray82, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem74.TwoPointer(intArray82, (int) (byte) 0);
        int[] intArray88 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem74.TwoPointer(intArray88, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem73.TwoPointer(intArray88, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem42.TwoPointer(intArray88, (int) (short) 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem0.Hashmap(intArray88, (int) '4');
        java.lang.Class<?> wildcardClass97 = intArray88.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0]");
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(intListList96);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test2329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2329");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray25 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem18.TwoPointer(intArray25, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem17.TwoPointer(intArray25, (int) (byte) 0);
        int[] intArray34 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem17.Hashmap(intArray34, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem0.Hashmap(intArray34, (int) ' ');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray47 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem40.TwoPointer(intArray47, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem39.TwoPointer(intArray47, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem0.Hashmap(intArray47, (int) (byte) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray62 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem55.TwoPointer(intArray62, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem54.TwoPointer(intArray62, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem0.Hashmap(intArray62, (int) (short) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem69 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem70 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray77 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem70.TwoPointer(intArray77, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem69.TwoPointer(intArray77, (int) (byte) 0);
        int[] intArray86 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem69.Hashmap(intArray86, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem0.Hashmap(intArray86, (int) (short) -1);
        java.lang.Class<?> wildcardClass91 = intListList90.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test2330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2330");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray16 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList18 = threeSumProblem13.BruteForce(intArray16, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem12.Hashmap(intArray16, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem22 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem22.BruteForce(intArray25, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem21.Hashmap(intArray25, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem30.BruteForce(intArray33, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem21.TwoPointer(intArray33, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem12.Hashmap(intArray33, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem40.BruteForce(intArray43, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem12.TwoPointer(intArray43, (int) (short) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem48.BruteForce(intArray51, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem54.BruteForce(intArray57, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem48.TwoPointer(intArray57, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem62 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem63 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem63.BruteForce(intArray66, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem62.Hashmap(intArray66, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem71 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem71.BruteForce(intArray74, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem62.TwoPointer(intArray74, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem48.BruteForce(intArray74, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem12.Hashmap(intArray74, (int) (short) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem0.TwoPointer(intArray74, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem85 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem86 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray89 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem86.BruteForce(intArray89, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem85.BruteForce(intArray89, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList95 = threeSumProblem0.BruteForce(intArray89, (int) (short) 0);
        java.lang.Class<?> wildcardClass96 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList18);
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(intListList93);
        org.junit.Assert.assertNotNull(intListList95);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test2331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2331");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem6.TwoPointer(intArray13, (int) (short) 1);
        int[] intArray19 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem6.TwoPointer(intArray19, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem22 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem23 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray30 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem23.TwoPointer(intArray30, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem22.TwoPointer(intArray30, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem6.BruteForce(intArray30, (int) (short) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem0.Hashmap(intArray30, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray47 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem40.TwoPointer(intArray47, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem39.TwoPointer(intArray47, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem0.BruteForce(intArray47, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem55.BruteForce(intArray58, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem54.Hashmap(intArray58, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem63 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem63.BruteForce(intArray66, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem54.TwoPointer(intArray66, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem71 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem72 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem72.BruteForce(intArray75, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem71.Hashmap(intArray75, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem80 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray83 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem80.BruteForce(intArray83, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem71.TwoPointer(intArray83, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem54.Hashmap(intArray83, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem0.BruteForce(intArray83, (int) (short) 0);
        java.lang.Class<?> wildcardClass92 = intListList91.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test2332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2332");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem21.BruteForce(intArray24, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem20.Hashmap(intArray24, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem29.BruteForce(intArray32, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem20.TwoPointer(intArray32, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem0.Hashmap(intArray32, (int) (byte) -1);
        int[] intArray39 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.BruteForce(intArray39, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
    }

    @Test
    public void test2333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2333");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem17.Hashmap(intArray21, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray34 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem27.TwoPointer(intArray34, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem26.TwoPointer(intArray34, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem17.BruteForce(intArray34, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem0.BruteForce(intArray34, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray52 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem43.BruteForce(intArray52, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem55.BruteForce(intArray58, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem61 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray68 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem61.TwoPointer(intArray68, (int) (short) 1);
        int[] intArray74 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem61.TwoPointer(intArray74, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem77 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem78 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray85 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem78.TwoPointer(intArray85, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem77.TwoPointer(intArray85, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem61.BruteForce(intArray85, (int) (short) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem55.Hashmap(intArray85, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList95 = threeSumProblem43.BruteForce(intArray85, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList97 = threeSumProblem0.TwoPointer(intArray85, (int) (byte) 100);
        java.lang.Class<?> wildcardClass98 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(intListList93);
        org.junit.Assert.assertNotNull(intListList95);
        org.junit.Assert.assertNotNull(intListList97);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test2334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2334");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem19 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList24 = threeSumProblem19.BruteForce(intArray22, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem18.Hashmap(intArray22, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem9.BruteForce(intArray22, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray37 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem30.TwoPointer(intArray37, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem29.TwoPointer(intArray37, (int) (byte) 0);
        int[] intArray46 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem29.Hashmap(intArray46, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem9.BruteForce(intArray46, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem0.TwoPointer(intArray46, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray61 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem54.TwoPointer(intArray61, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem53.TwoPointer(intArray61, (int) (byte) 0);
        int[] intArray70 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem53.Hashmap(intArray70, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem73 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray82 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem73.BruteForce(intArray82, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem85 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray88 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem85.BruteForce(intArray88, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem73.Hashmap(intArray88, (int) (byte) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem53.BruteForce(intArray88, (int) (byte) 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem0.Hashmap(intArray88, (int) '#');
        java.lang.Class<?> wildcardClass97 = intArray88.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList24);
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(intListList96);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test2335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2335");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.BruteForce(intArray13, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        int[] intArray37 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray37, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.BruteForce(intArray37, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray50 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem43.TwoPointer(intArray50, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem42.TwoPointer(intArray50, (int) (byte) 0);
        int[] intArray59 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem42.Hashmap(intArray59, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem62 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem63 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem63.BruteForce(intArray66, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem62.Hashmap(intArray66, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem42.TwoPointer(intArray66, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem73 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem75 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray82 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem75.TwoPointer(intArray82, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem74.TwoPointer(intArray82, (int) (byte) 0);
        int[] intArray88 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem74.TwoPointer(intArray88, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem73.TwoPointer(intArray88, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem42.TwoPointer(intArray88, (int) (short) 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem0.Hashmap(intArray88, (int) '4');
        java.lang.Class<?> wildcardClass97 = intListList96.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0]");
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(intListList96);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test2336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2336");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray9 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem6.BruteForce(intArray9, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList13 = threeSumProblem0.TwoPointer(intArray9, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem15 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray22 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList24 = threeSumProblem15.TwoPointer(intArray22, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem14.TwoPointer(intArray22, (int) (byte) 0);
        int[] intArray28 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem14.TwoPointer(intArray28, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem32 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray39 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem32.TwoPointer(intArray39, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem31.TwoPointer(intArray39, (int) (byte) 0);
        int[] intArray48 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem31.Hashmap(intArray48, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray59 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem52.TwoPointer(intArray59, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem51.TwoPointer(intArray59, (int) (byte) 0);
        int[] intArray68 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem51.Hashmap(intArray68, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem31.Hashmap(intArray68, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem73 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem73.BruteForce(intArray76, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem31.Hashmap(intArray76, (int) (byte) 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem14.TwoPointer(intArray76, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem83 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray90 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem83.TwoPointer(intArray90, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem14.Hashmap(intArray90, (int) (byte) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem0.Hashmap(intArray90, (int) (byte) 0);
        java.lang.Class<?> wildcardClass97 = intArray90.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intListList13);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList24);
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(intListList96);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test2337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2337");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        int[] intArray21 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem12.BruteForce(intArray21, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem24 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem24.BruteForce(intArray27, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem12.Hashmap(intArray27, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem32 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem33 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray40 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem33.TwoPointer(intArray40, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem32.TwoPointer(intArray40, (int) (byte) 0);
        int[] intArray46 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem32.TwoPointer(intArray46, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem50 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray57 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem50.TwoPointer(intArray57, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem49.TwoPointer(intArray57, (int) (byte) 0);
        int[] intArray66 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem49.Hashmap(intArray66, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem32.TwoPointer(intArray66, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem12.Hashmap(intArray66, (int) (byte) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem73 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray80 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem73.TwoPointer(intArray80, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem12.Hashmap(intArray80, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem0.TwoPointer(intArray80, (int) (short) 10);
        java.lang.Class<?> wildcardClass87 = intArray80.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test2338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2338");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray9 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem6.BruteForce(intArray9, (int) '#');
        int[] intArray15 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem6.BruteForce(intArray15, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem6.Hashmap(intArray21, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem27.BruteForce(intArray30, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem26.Hashmap(intArray30, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem26.TwoPointer(intArray38, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem6.Hashmap(intArray38, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem0.TwoPointer(intArray38, (int) 'a');
        java.lang.Class<?> wildcardClass47 = intListList46.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test2339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2339");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        int[] intArray37 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray37, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.Hashmap(intArray37, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem42.BruteForce(intArray45, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem48.BruteForce(intArray51, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem42.TwoPointer(intArray51, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem0.BruteForce(intArray51, (int) (byte) 100);
        int[] intArray63 = new int[] { '#', 10, (byte) 0, 10, ' ' };
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem0.Hashmap(intArray63, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem66 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem66.BruteForce(intArray69, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem72 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem73 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem73.BruteForce(intArray76, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem72.Hashmap(intArray76, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem81 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem82 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray89 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem82.TwoPointer(intArray89, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem81.TwoPointer(intArray89, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList95 = threeSumProblem72.BruteForce(intArray89, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList97 = threeSumProblem66.Hashmap(intArray89, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList99 = threeSumProblem0.Hashmap(intArray89, (int) 'a');
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 10, 10, 32, 35]");
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(intListList93);
        org.junit.Assert.assertNotNull(intListList95);
        org.junit.Assert.assertNotNull(intListList97);
        org.junit.Assert.assertNotNull(intListList99);
    }

    @Test
    public void test2340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2340");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem17.Hashmap(intArray21, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem27.BruteForce(intArray30, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem26.Hashmap(intArray30, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem26.TwoPointer(intArray38, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem17.Hashmap(intArray38, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem45 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem46.BruteForce(intArray49, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem45.Hashmap(intArray49, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem55.BruteForce(intArray58, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem54.Hashmap(intArray58, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem63 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem63.BruteForce(intArray66, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem54.TwoPointer(intArray66, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem45.Hashmap(intArray66, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem17.TwoPointer(intArray66, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem0.Hashmap(intArray66, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem77 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray84 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem77.TwoPointer(intArray84, (int) (short) 1);
        int[] intArray90 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem77.TwoPointer(intArray90, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem0.Hashmap(intArray90, (int) 'a');
        java.lang.Class<?> wildcardClass95 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test2341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2341");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray19 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem10.BruteForce(intArray19, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem22 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem22.BruteForce(intArray25, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem10.Hashmap(intArray25, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem31.BruteForce(intArray34, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem30.Hashmap(intArray34, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray47 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem40.TwoPointer(intArray47, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem39.TwoPointer(intArray47, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem30.BruteForce(intArray47, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem10.TwoPointer(intArray47, (int) (byte) 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem0.TwoPointer(intArray47, (int) (byte) 10);
        int[] intArray58 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem0.TwoPointer(intArray58, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intListList57);
    }

    @Test
    public void test2342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2342");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        int[] intArray13 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem0.TwoPointer(intArray13, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem16 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem17.BruteForce(intArray20, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList24 = threeSumProblem16.BruteForce(intArray20, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem0.Hashmap(intArray20, 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray34 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem27.TwoPointer(intArray34, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem38 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem38.TwoPointer(intArray45, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem37.TwoPointer(intArray45, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem27.Hashmap(intArray45, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem52.BruteForce(intArray55, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem58 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray65 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem58.TwoPointer(intArray65, (int) (short) 1);
        int[] intArray71 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem58.TwoPointer(intArray71, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem75 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray82 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem75.TwoPointer(intArray82, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem74.TwoPointer(intArray82, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem58.BruteForce(intArray82, (int) (short) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem52.Hashmap(intArray82, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem27.TwoPointer(intArray82, (int) (short) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem0.TwoPointer(intArray82, (int) (byte) 10);
        int[] intArray95 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList97 = threeSumProblem0.Hashmap(intArray95, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intListList24);
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(intListList94);
    }

    @Test
    public void test2343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2343");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem2 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray9 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem2.TwoPointer(intArray9, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList13 = threeSumProblem1.TwoPointer(intArray9, (int) (byte) 0);
        int[] intArray18 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem1.Hashmap(intArray18, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem22 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray29 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem22.TwoPointer(intArray29, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem21.TwoPointer(intArray29, (int) (byte) 0);
        int[] intArray38 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem21.Hashmap(intArray38, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem1.Hashmap(intArray38, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem43.BruteForce(intArray46, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem1.Hashmap(intArray46, (int) (byte) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray60 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem51.BruteForce(intArray60, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem63 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem63.BruteForce(intArray66, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem51.Hashmap(intArray66, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem71 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem71.BruteForce(intArray74, (int) '#');
        int[] intArray80 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem71.BruteForce(intArray80, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem51.TwoPointer(intArray80, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem1.Hashmap(intArray80, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem0.Hashmap(intArray80, (int) (short) 10);
        int[] intArray89 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem0.Hashmap(intArray89, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intListList13);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
    }

    @Test
    public void test2344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2344");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem9.TwoPointer(intArray21, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem0.Hashmap(intArray21, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem28 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray36 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem29.TwoPointer(intArray36, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem28.TwoPointer(intArray36, (int) (byte) 0);
        int[] intArray42 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem28.TwoPointer(intArray42, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem0.Hashmap(intArray42, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem47 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem48.BruteForce(intArray51, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem47.Hashmap(intArray51, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem0.Hashmap(intArray51, (int) (short) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem58 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem60.BruteForce(intArray63, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem59.Hashmap(intArray63, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem68 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem68.BruteForce(intArray71, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem59.TwoPointer(intArray71, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem76 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem77 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem77.BruteForce(intArray80, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem76.Hashmap(intArray80, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem85 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray88 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem85.BruteForce(intArray88, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem76.TwoPointer(intArray88, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem59.Hashmap(intArray88, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem58.Hashmap(intArray88, (int) (byte) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList98 = threeSumProblem0.TwoPointer(intArray88, 100);
        java.lang.Class<?> wildcardClass99 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0]");
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(intListList96);
        org.junit.Assert.assertNotNull(intListList98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test2345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2345");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray16 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList18 = threeSumProblem13.BruteForce(intArray16, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem12.Hashmap(intArray16, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem22 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem22.BruteForce(intArray25, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem21.Hashmap(intArray25, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem30.BruteForce(intArray33, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem21.TwoPointer(intArray33, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem12.Hashmap(intArray33, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem40.BruteForce(intArray43, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem12.TwoPointer(intArray43, (int) (short) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem48.BruteForce(intArray51, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem54.BruteForce(intArray57, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem48.TwoPointer(intArray57, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem62 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem63 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem63.BruteForce(intArray66, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem62.Hashmap(intArray66, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem71 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem71.BruteForce(intArray74, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem62.TwoPointer(intArray74, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem48.BruteForce(intArray74, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem12.Hashmap(intArray74, (int) (short) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem0.Hashmap(intArray74, 0);
        java.lang.Class<?> wildcardClass85 = intArray74.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList18);
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test2346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2346");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        int[] intArray37 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray37, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.Hashmap(intArray37, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem42.BruteForce(intArray45, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem0.Hashmap(intArray45, (int) (byte) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem50 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem51.BruteForce(intArray54, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem50.Hashmap(intArray54, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem0.Hashmap(intArray54, (int) (byte) 0);
        java.lang.Class<?> wildcardClass61 = intListList60.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test2347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2347");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray10 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem1.BruteForce(intArray10, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem14.TwoPointer(intArray21, (int) (short) 1);
        int[] intArray27 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem14.TwoPointer(intArray27, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem31.TwoPointer(intArray38, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem30.TwoPointer(intArray38, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem14.BruteForce(intArray38, (int) (short) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem45 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray54 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem45.BruteForce(intArray54, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem57 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem57.BruteForce(intArray60, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem45.Hashmap(intArray60, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem65 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem66 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem66.BruteForce(intArray69, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem65.Hashmap(intArray69, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem74.BruteForce(intArray77, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem65.TwoPointer(intArray77, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem45.Hashmap(intArray77, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem14.TwoPointer(intArray77, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem13.TwoPointer(intArray77, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem1.Hashmap(intArray77, (int) (short) 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem0.Hashmap(intArray77, 1);
        java.lang.Class<?> wildcardClass92 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test2348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2348");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem19 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray26 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem19.TwoPointer(intArray26, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem18.TwoPointer(intArray26, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem32 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem32.BruteForce(intArray35, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem31.Hashmap(intArray35, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem40.BruteForce(intArray43, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem31.TwoPointer(intArray43, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem49.BruteForce(intArray52, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem48.Hashmap(intArray52, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem57 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem57.BruteForce(intArray60, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem48.TwoPointer(intArray60, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem31.Hashmap(intArray60, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem18.Hashmap(intArray60, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem69 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem69.BruteForce(intArray72, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem18.TwoPointer(intArray72, (int) (short) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem12.Hashmap(intArray72, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem0.TwoPointer(intArray72, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem81 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray84 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem81.BruteForce(intArray84, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem0.TwoPointer(intArray84, (int) (byte) 1);
        java.lang.Class<?> wildcardClass89 = intListList88.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test2349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2349");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        int[] intArray13 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem0.TwoPointer(intArray13, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem16 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem17.TwoPointer(intArray24, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem16.TwoPointer(intArray24, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem0.BruteForce(intArray24, (int) (short) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem31.TwoPointer(intArray38, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray49 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem42.TwoPointer(intArray49, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem41.TwoPointer(intArray49, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem31.Hashmap(intArray49, (int) (byte) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem0.BruteForce(intArray49, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem58 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem59.BruteForce(intArray62, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem58.Hashmap(intArray62, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem67 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem67.BruteForce(intArray70, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem58.TwoPointer(intArray70, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem75 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem76 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray83 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem76.TwoPointer(intArray83, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem75.TwoPointer(intArray83, (int) (byte) 0);
        int[] intArray92 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem75.Hashmap(intArray92, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem58.Hashmap(intArray92, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList98 = threeSumProblem0.TwoPointer(intArray92, (int) '#');
        java.lang.Class<?> wildcardClass99 = intListList98.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(intListList96);
        org.junit.Assert.assertNotNull(intListList98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test2350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2350");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        int[] intArray37 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray37, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.Hashmap(intArray37, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem42.BruteForce(intArray45, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem48.BruteForce(intArray51, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem42.TwoPointer(intArray51, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem0.BruteForce(intArray51, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem58 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem59.BruteForce(intArray62, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem58.Hashmap(intArray62, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem67 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem68 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray75 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem68.TwoPointer(intArray75, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem67.TwoPointer(intArray75, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem58.BruteForce(intArray75, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem0.TwoPointer(intArray75, (int) (short) -1);
        int[] intArray84 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem0.TwoPointer(intArray84, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
    }

    @Test
    public void test2351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2351");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem9.TwoPointer(intArray21, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem0.Hashmap(intArray21, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem28 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem28.BruteForce(intArray31, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem0.TwoPointer(intArray31, (int) (short) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem37.BruteForce(intArray40, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem36.Hashmap(intArray40, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem45 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem46.BruteForce(intArray49, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem45.Hashmap(intArray49, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem54.BruteForce(intArray57, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem45.TwoPointer(intArray57, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem36.Hashmap(intArray57, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem64 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem64.BruteForce(intArray67, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem36.TwoPointer(intArray67, (int) (short) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem0.BruteForce(intArray67, (int) (short) 10);
        int[] intArray74 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem0.Hashmap(intArray74, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
    }

    @Test
    public void test2352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2352");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem2 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList7 = threeSumProblem2.BruteForce(intArray5, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem1.Hashmap(intArray5, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem1.TwoPointer(intArray13, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem19 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList24 = threeSumProblem19.BruteForce(intArray22, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem18.Hashmap(intArray22, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem27.BruteForce(intArray30, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem18.TwoPointer(intArray30, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem1.Hashmap(intArray30, (int) 'a');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem38 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem38.BruteForce(intArray41, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem37.Hashmap(intArray41, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem46.BruteForce(intArray49, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem37.TwoPointer(intArray49, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem55.BruteForce(intArray58, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem54.Hashmap(intArray58, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem63 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem63.BruteForce(intArray66, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem54.TwoPointer(intArray66, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem37.Hashmap(intArray66, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem1.Hashmap(intArray66, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem75 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem76 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem76.BruteForce(intArray79, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem75.Hashmap(intArray79, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem1.TwoPointer(intArray79, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem0.BruteForce(intArray79, 10);
        java.lang.Class<?> wildcardClass88 = intListList87.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList7);
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList24);
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test2353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2353");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.BruteForce(intArray4, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem10.TwoPointer(intArray17, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem9.TwoPointer(intArray17, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem0.TwoPointer(intArray17, (int) (byte) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem24 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray33 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem24.BruteForce(intArray33, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem36.BruteForce(intArray39, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem24.Hashmap(intArray39, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem44 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem44.BruteForce(intArray47, (int) '#');
        int[] intArray53 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem44.BruteForce(intArray53, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem24.BruteForce(intArray53, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem58 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray66 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem59.TwoPointer(intArray66, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem58.TwoPointer(intArray66, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem24.Hashmap(intArray66, (int) (short) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem73 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray82 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem73.BruteForce(intArray82, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem85 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray88 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem85.BruteForce(intArray88, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem73.Hashmap(intArray88, (int) (byte) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem24.TwoPointer(intArray88, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem0.BruteForce(intArray88, (int) (short) 0);
        java.lang.Class<?> wildcardClass97 = intListList96.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(intListList96);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test2354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2354");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        java.lang.Class<?> wildcardClass13 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test2355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2355");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray19 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem10.BruteForce(intArray19, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem22 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem22.BruteForce(intArray25, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem10.Hashmap(intArray25, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem31.BruteForce(intArray34, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem30.Hashmap(intArray34, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray47 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem40.TwoPointer(intArray47, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem39.TwoPointer(intArray47, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem30.BruteForce(intArray47, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem10.TwoPointer(intArray47, (int) (byte) 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem0.TwoPointer(intArray47, (int) (byte) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem58 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem59.BruteForce(intArray62, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem58.BruteForce(intArray62, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem0.BruteForce(intArray62, (int) (short) 0);
        int[] intArray69 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem0.Hashmap(intArray69, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intListList68);
    }

    @Test
    public void test2356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2356");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem14.BruteForce(intArray17, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem13.Hashmap(intArray17, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem22 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem23 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray30 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem23.TwoPointer(intArray30, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem22.TwoPointer(intArray30, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem13.BruteForce(intArray30, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem0.BruteForce(intArray30, (int) (byte) -1);
        int[] intArray39 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.Hashmap(intArray39, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
    }

    @Test
    public void test2357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2357");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray20 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem13.TwoPointer(intArray20, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList24 = threeSumProblem0.Hashmap(intArray20, (int) (byte) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem25 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray34 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem25.BruteForce(intArray34, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem37.BruteForce(intArray40, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem25.Hashmap(intArray40, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem45 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray54 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem45.BruteForce(intArray54, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem25.BruteForce(intArray54, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray67 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem60.TwoPointer(intArray67, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem59.TwoPointer(intArray67, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem25.Hashmap(intArray67, (int) (short) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem74.BruteForce(intArray77, (int) '#');
        int[] intArray83 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem74.BruteForce(intArray83, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem86 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray89 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem86.BruteForce(intArray89, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem74.Hashmap(intArray89, (int) (byte) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList95 = threeSumProblem25.TwoPointer(intArray89, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList97 = threeSumProblem0.Hashmap(intArray89, (int) (short) 0);
        java.lang.Class<?> wildcardClass98 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intListList24);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(intListList93);
        org.junit.Assert.assertNotNull(intListList95);
        org.junit.Assert.assertNotNull(intListList97);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test2358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2358");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.BruteForce(intArray4, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem10.TwoPointer(intArray17, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem9.TwoPointer(intArray17, (int) (byte) 0);
        int[] intArray26 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem9.Hashmap(intArray26, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem30.BruteForce(intArray33, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem29.Hashmap(intArray33, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem38 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem39.BruteForce(intArray42, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem38.Hashmap(intArray42, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem29.BruteForce(intArray42, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem9.Hashmap(intArray42, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem0.TwoPointer(intArray42, (int) (byte) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray61 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem54.TwoPointer(intArray61, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem53.TwoPointer(intArray61, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem66 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray73 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem66.TwoPointer(intArray73, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem53.Hashmap(intArray73, (int) (byte) 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem0.BruteForce(intArray73, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem80 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem81 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray88 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem81.TwoPointer(intArray88, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem80.TwoPointer(intArray88, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem0.Hashmap(intArray88, (int) (short) -1);
        java.lang.Class<?> wildcardClass95 = intArray88.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test2359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2359");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem7 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem7.BruteForce(intArray10, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem6.BruteForce(intArray10, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem15 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray24 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem15.BruteForce(intArray24, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem6.BruteForce(intArray24, (int) (short) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem30.BruteForce(intArray33, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem29.Hashmap(intArray33, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem38 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem39.BruteForce(intArray42, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem38.Hashmap(intArray42, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem47 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem48.BruteForce(intArray51, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem47.Hashmap(intArray51, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem38.BruteForce(intArray51, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem58 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray66 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem59.TwoPointer(intArray66, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem58.TwoPointer(intArray66, (int) (byte) 0);
        int[] intArray75 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem58.Hashmap(intArray75, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem38.BruteForce(intArray75, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem29.TwoPointer(intArray75, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem6.TwoPointer(intArray75, (int) (short) 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem0.Hashmap(intArray75, 10);
        java.lang.Class<?> wildcardClass86 = intArray75.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test2360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2360");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem17.BruteForce(intArray20, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem23 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray30 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem23.TwoPointer(intArray30, (int) (short) 1);
        int[] intArray36 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem23.TwoPointer(intArray36, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray47 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem40.TwoPointer(intArray47, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem39.TwoPointer(intArray47, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem23.BruteForce(intArray47, (int) (short) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem17.Hashmap(intArray47, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray65 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem56.BruteForce(intArray65, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem68 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem68.BruteForce(intArray71, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem56.Hashmap(intArray71, (int) (byte) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem17.TwoPointer(intArray71, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem0.Hashmap(intArray71, (-1));
        java.lang.Class<?> wildcardClass80 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test2361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2361");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem10.TwoPointer(intArray17, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem9.TwoPointer(intArray17, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem0.BruteForce(intArray17, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem24 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray31 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem24.TwoPointer(intArray31, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray42 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem35.TwoPointer(intArray42, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem34.TwoPointer(intArray42, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem24.Hashmap(intArray42, (int) (byte) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem0.Hashmap(intArray42, (int) (byte) 0);
        java.lang.Class<?> wildcardClass51 = intArray42.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test2362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2362");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem21.BruteForce(intArray24, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem20.Hashmap(intArray24, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem0.TwoPointer(intArray24, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem32 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem32.BruteForce(intArray35, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem31.Hashmap(intArray35, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem41.BruteForce(intArray44, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem40.Hashmap(intArray44, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem31.BruteForce(intArray44, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem0.BruteForce(intArray44, (int) ' ');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray62 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem55.TwoPointer(intArray62, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem54.TwoPointer(intArray62, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem67 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem68 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem68.BruteForce(intArray71, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem67.Hashmap(intArray71, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem76 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem77 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray84 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem77.TwoPointer(intArray84, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem76.TwoPointer(intArray84, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem67.BruteForce(intArray84, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem54.BruteForce(intArray84, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem53.Hashmap(intArray84, (int) (byte) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem0.BruteForce(intArray84, (int) (short) 0);
        java.lang.Class<?> wildcardClass97 = intListList96.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(intListList96);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test2363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2363");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        int[] intArray37 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray37, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.Hashmap(intArray37, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem42.BruteForce(intArray45, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem0.Hashmap(intArray45, (int) (byte) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem50 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem51.BruteForce(intArray54, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem50.Hashmap(intArray54, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem0.Hashmap(intArray54, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem61 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem61.BruteForce(intArray64, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem67 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem67.BruteForce(intArray70, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem61.TwoPointer(intArray70, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem75 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem76 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem76.BruteForce(intArray79, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem75.Hashmap(intArray79, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem84 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray87 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem84.BruteForce(intArray87, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem75.TwoPointer(intArray87, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem61.BruteForce(intArray87, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList95 = threeSumProblem0.BruteForce(intArray87, (int) 'a');
        int[] intArray96 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList98 = threeSumProblem0.BruteForce(intArray96, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(intListList93);
        org.junit.Assert.assertNotNull(intListList95);
    }

    @Test
    public void test2364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2364");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray29 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem20.BruteForce(intArray29, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem0.BruteForce(intArray29, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray41 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem34.TwoPointer(intArray41, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem0.TwoPointer(intArray41, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem47 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray55 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem48.TwoPointer(intArray55, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem47.TwoPointer(intArray55, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem61 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem61.BruteForce(intArray64, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem60.Hashmap(intArray64, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem69 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem70 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray77 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem70.TwoPointer(intArray77, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem69.TwoPointer(intArray77, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem60.BruteForce(intArray77, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem47.BruteForce(intArray77, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem46.Hashmap(intArray77, (int) (byte) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem0.Hashmap(intArray77, (int) (byte) 0);
        java.lang.Class<?> wildcardClass90 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test2365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2365");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray29 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem20.BruteForce(intArray29, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem0.BruteForce(intArray29, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray42 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem35.TwoPointer(intArray42, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem34.TwoPointer(intArray42, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem0.Hashmap(intArray42, (int) (short) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem49.BruteForce(intArray52, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem55.BruteForce(intArray58, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem49.TwoPointer(intArray58, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem63 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem64 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem64.BruteForce(intArray67, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem63.Hashmap(intArray67, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem72 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem72.BruteForce(intArray75, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem63.TwoPointer(intArray75, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem49.BruteForce(intArray75, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem0.BruteForce(intArray75, (int) (short) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem84 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem85 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray92 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem85.TwoPointer(intArray92, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem84.TwoPointer(intArray92, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList98 = threeSumProblem0.Hashmap(intArray92, 10);
        java.lang.Class<?> wildcardClass99 = intArray92.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(intListList96);
        org.junit.Assert.assertNotNull(intListList98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test2366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2366");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem2 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList7 = threeSumProblem2.BruteForce(intArray5, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem1.Hashmap(intArray5, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem1.TwoPointer(intArray13, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem19 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList24 = threeSumProblem19.BruteForce(intArray22, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem18.BruteForce(intArray22, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem1.TwoPointer(intArray22, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem30.BruteForce(intArray33, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem29.Hashmap(intArray33, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem1.BruteForce(intArray33, (int) (byte) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray49 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem40.BruteForce(intArray49, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem52.BruteForce(intArray55, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem40.Hashmap(intArray55, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem60.BruteForce(intArray63, (int) '#');
        int[] intArray69 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem60.BruteForce(intArray69, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem40.BruteForce(intArray69, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray81 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem74.TwoPointer(intArray81, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem40.TwoPointer(intArray81, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem1.TwoPointer(intArray81, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem0.BruteForce(intArray81, 10);
        java.lang.Class<?> wildcardClass90 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList7);
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList24);
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test2367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2367");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem21.BruteForce(intArray24, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem20.Hashmap(intArray24, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem29.BruteForce(intArray32, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem20.TwoPointer(intArray32, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem0.Hashmap(intArray32, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray47 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem40.TwoPointer(intArray47, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem39.TwoPointer(intArray47, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem52.BruteForce(intArray55, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem58 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem58.BruteForce(intArray61, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem52.TwoPointer(intArray61, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem66 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem66.BruteForce(intArray69, (int) '#');
        int[] intArray75 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem66.BruteForce(intArray75, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem52.BruteForce(intArray75, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem39.Hashmap(intArray75, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem0.TwoPointer(intArray75, (int) (byte) 1);
        java.lang.Class<?> wildcardClass84 = intArray75.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test2368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2368");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        int[] intArray13 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem0.TwoPointer(intArray13, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem16 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem17.TwoPointer(intArray24, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem16.TwoPointer(intArray24, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem0.BruteForce(intArray24, (int) (short) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem31.TwoPointer(intArray38, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray49 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem42.TwoPointer(intArray49, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem41.TwoPointer(intArray49, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem31.Hashmap(intArray49, (int) (byte) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem0.BruteForce(intArray49, 0);
        int[] intArray61 = new int[] { (-1), (byte) 100, (byte) 10 };
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem0.Hashmap(intArray61, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem64 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem64.BruteForce(intArray67, (int) '#');
        int[] intArray73 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem64.BruteForce(intArray73, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem76 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem76.BruteForce(intArray79, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem64.Hashmap(intArray79, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem84 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray87 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem84.BruteForce(intArray87, (int) '#');
        int[] intArray93 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList95 = threeSumProblem84.BruteForce(intArray93, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList97 = threeSumProblem64.BruteForce(intArray93, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList99 = threeSumProblem0.BruteForce(intArray93, (int) (byte) 100);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 10, 100]");
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList95);
        org.junit.Assert.assertNotNull(intListList97);
        org.junit.Assert.assertNotNull(intListList99);
    }

    @Test
    public void test2369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2369");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        int[] intArray34 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem20.TwoPointer(intArray34, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem38 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem38.TwoPointer(intArray45, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem37.TwoPointer(intArray45, (int) (byte) 0);
        int[] intArray54 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem37.Hashmap(intArray54, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem20.TwoPointer(intArray54, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem0.Hashmap(intArray54, (int) (byte) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem61 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray68 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem61.TwoPointer(intArray68, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem0.Hashmap(intArray68, (int) 'a');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem73 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray81 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem74.TwoPointer(intArray81, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem73.TwoPointer(intArray81, (int) (byte) 0);
        int[] intArray87 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem73.TwoPointer(intArray87, (int) (byte) 0);
        int[] intArray90 = new int[] {};
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem73.BruteForce(intArray90, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem0.TwoPointer(intArray90, (int) (byte) 100);
        java.lang.Class<?> wildcardClass95 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0]");
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[]");
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test2370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2370");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem7 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem7.BruteForce(intArray10, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem6.BruteForce(intArray10, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem15 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray24 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem15.BruteForce(intArray24, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem6.BruteForce(intArray24, (int) (short) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem30.BruteForce(intArray33, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem29.Hashmap(intArray33, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem38 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem39.BruteForce(intArray42, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem38.Hashmap(intArray42, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem47 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem48.BruteForce(intArray51, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem47.Hashmap(intArray51, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem38.BruteForce(intArray51, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem58 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray66 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem59.TwoPointer(intArray66, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem58.TwoPointer(intArray66, (int) (byte) 0);
        int[] intArray75 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem58.Hashmap(intArray75, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem38.BruteForce(intArray75, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem29.TwoPointer(intArray75, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem6.TwoPointer(intArray75, (int) (short) 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem0.Hashmap(intArray75, 10);
        int[] intArray86 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem0.TwoPointer(intArray86, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
    }

    @Test
    public void test2371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2371");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem11 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray14 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem11.BruteForce(intArray14, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList18 = threeSumProblem10.Hashmap(intArray14, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem19 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem20.BruteForce(intArray23, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem19.Hashmap(intArray23, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem10.BruteForce(intArray23, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem31.TwoPointer(intArray38, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem30.TwoPointer(intArray38, (int) (byte) 0);
        int[] intArray47 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem30.Hashmap(intArray47, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem10.BruteForce(intArray47, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem52.BruteForce(intArray55, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem10.Hashmap(intArray55, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem60.BruteForce(intArray63, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem10.TwoPointer(intArray63, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem9.TwoPointer(intArray63, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem0.Hashmap(intArray63, (int) '#');
        java.lang.Class<?> wildcardClass72 = intArray63.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intListList18);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test2372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2372");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem19 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray26 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem19.TwoPointer(intArray26, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem18.TwoPointer(intArray26, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem32 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem32.BruteForce(intArray35, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem31.Hashmap(intArray35, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem40.BruteForce(intArray43, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem31.TwoPointer(intArray43, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem49.BruteForce(intArray52, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem48.Hashmap(intArray52, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem57 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem57.BruteForce(intArray60, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem48.TwoPointer(intArray60, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem31.Hashmap(intArray60, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem18.Hashmap(intArray60, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem69 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem69.BruteForce(intArray72, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem18.TwoPointer(intArray72, (int) (short) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem12.Hashmap(intArray72, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem0.TwoPointer(intArray72, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem81 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray84 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem81.BruteForce(intArray84, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem0.TwoPointer(intArray84, (int) (byte) 1);
        java.lang.Class<?> wildcardClass89 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test2373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2373");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray16 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList18 = threeSumProblem13.BruteForce(intArray16, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem19 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray27 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem20.TwoPointer(intArray27, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem19.TwoPointer(intArray27, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem32 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem33 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem33.BruteForce(intArray36, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem32.Hashmap(intArray36, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem41.BruteForce(intArray44, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem32.TwoPointer(intArray44, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem50 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem50.BruteForce(intArray53, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem49.Hashmap(intArray53, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem58 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem58.BruteForce(intArray61, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem49.TwoPointer(intArray61, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem32.Hashmap(intArray61, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem19.Hashmap(intArray61, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem70 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem70.BruteForce(intArray73, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem19.TwoPointer(intArray73, (int) (short) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem13.Hashmap(intArray73, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem0.TwoPointer(intArray73, (int) (byte) 0);
        java.lang.Class<?> wildcardClass82 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList18);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test2374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2374");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem2 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray9 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem2.TwoPointer(intArray9, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList13 = threeSumProblem1.TwoPointer(intArray9, (int) (byte) 0);
        int[] intArray15 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem1.TwoPointer(intArray15, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem19 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray26 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem19.TwoPointer(intArray26, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem18.TwoPointer(intArray26, (int) (byte) 0);
        int[] intArray35 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem18.Hashmap(intArray35, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem1.TwoPointer(intArray35, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem41.BruteForce(intArray44, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem40.Hashmap(intArray44, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem50 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem50.BruteForce(intArray53, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem49.Hashmap(intArray53, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem40.BruteForce(intArray53, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem61 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray68 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem61.TwoPointer(intArray68, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem60.TwoPointer(intArray68, (int) (byte) 0);
        int[] intArray77 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem60.Hashmap(intArray77, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem40.BruteForce(intArray77, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem82 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem83 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray86 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem83.BruteForce(intArray86, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem82.Hashmap(intArray86, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem40.Hashmap(intArray86, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem1.TwoPointer(intArray86, (int) (byte) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem0.TwoPointer(intArray86, (int) (byte) 1);
        int[] intArray97 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList99 = threeSumProblem0.BruteForce(intArray97, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intListList13);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(intListList96);
    }

    @Test
    public void test2375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2375");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem11 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray18 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem11.TwoPointer(intArray18, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem10.TwoPointer(intArray18, (int) (byte) 0);
        int[] intArray27 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem10.Hashmap(intArray27, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem31.TwoPointer(intArray38, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem30.TwoPointer(intArray38, (int) (byte) 0);
        int[] intArray47 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem30.Hashmap(intArray47, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem10.Hashmap(intArray47, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem52.BruteForce(intArray55, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem58 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem58.BruteForce(intArray61, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem52.TwoPointer(intArray61, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem10.BruteForce(intArray61, (int) (byte) 100);
        int[] intArray73 = new int[] { '#', 10, (byte) 0, 10, ' ' };
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem10.Hashmap(intArray73, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem76 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem77 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem77.BruteForce(intArray80, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem76.BruteForce(intArray80, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem10.TwoPointer(intArray80, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem0.Hashmap(intArray80, (int) (byte) 1);
        int[] intArray89 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem0.BruteForce(intArray89, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 10, 10, 32, 35]");
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
    }

    @Test
    public void test2376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2376");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem21.BruteForce(intArray24, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem20.Hashmap(intArray24, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray37 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem30.TwoPointer(intArray37, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem29.TwoPointer(intArray37, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem20.BruteForce(intArray37, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem0.TwoPointer(intArray37, (int) (byte) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem46.BruteForce(intArray49, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem52.BruteForce(intArray55, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem46.TwoPointer(intArray55, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem0.Hashmap(intArray55, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem62 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem63 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray70 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem63.TwoPointer(intArray70, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem62.TwoPointer(intArray70, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem0.TwoPointer(intArray70, (int) ' ');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem77 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem78 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray81 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem78.BruteForce(intArray81, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem77.Hashmap(intArray81, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem0.TwoPointer(intArray81, (int) (short) 1);
        java.lang.Class<?> wildcardClass88 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test2377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2377");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray19 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem10.BruteForce(intArray19, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem22 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem22.BruteForce(intArray25, (int) '#');
        int[] intArray31 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem22.BruteForce(intArray31, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem34.BruteForce(intArray37, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem22.Hashmap(intArray37, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray50 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem43.TwoPointer(intArray50, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem42.TwoPointer(intArray50, (int) (byte) 0);
        int[] intArray56 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem42.TwoPointer(intArray56, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray67 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem60.TwoPointer(intArray67, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem59.TwoPointer(intArray67, (int) (byte) 0);
        int[] intArray76 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem59.Hashmap(intArray76, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem42.TwoPointer(intArray76, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem22.Hashmap(intArray76, (int) (byte) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem83 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray90 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem83.TwoPointer(intArray90, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem22.Hashmap(intArray90, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem10.TwoPointer(intArray90, (int) (short) 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList98 = threeSumProblem0.Hashmap(intArray90, (int) (byte) -1);
        java.lang.Class<?> wildcardClass99 = intListList98.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0]");
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(intListList96);
        org.junit.Assert.assertNotNull(intListList98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test2378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2378");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray20 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem13.TwoPointer(intArray20, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem23 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem24 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray31 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem24.TwoPointer(intArray31, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem23.TwoPointer(intArray31, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem13.Hashmap(intArray31, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem38 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem38.TwoPointer(intArray45, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray56 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem49.TwoPointer(intArray56, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem48.TwoPointer(intArray56, (int) (byte) 0);
        int[] intArray65 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem48.Hashmap(intArray65, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem68 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem69 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem69.BruteForce(intArray72, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem68.Hashmap(intArray72, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem77 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem78 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray81 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem78.BruteForce(intArray81, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem77.Hashmap(intArray81, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem68.BruteForce(intArray81, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem48.Hashmap(intArray81, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem38.TwoPointer(intArray81, (int) (short) 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem13.Hashmap(intArray81, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList95 = threeSumProblem0.Hashmap(intArray81, 10);
        java.lang.Class<?> wildcardClass96 = intListList95.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(intListList93);
        org.junit.Assert.assertNotNull(intListList95);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test2379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2379");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem16 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem16.BruteForce(intArray19, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem10.TwoPointer(intArray19, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem24 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray33 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem24.BruteForce(intArray33, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem10.BruteForce(intArray33, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem0.BruteForce(intArray33, 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray49 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem40.BruteForce(intArray49, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem52.BruteForce(intArray55, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem40.Hashmap(intArray55, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem60.BruteForce(intArray63, (int) '#');
        int[] intArray69 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem60.BruteForce(intArray69, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem40.TwoPointer(intArray69, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem0.Hashmap(intArray69, 0);
        int[] intArray76 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem0.BruteForce(intArray76, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
    }

    @Test
    public void test2380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2380");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem33 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem34.BruteForce(intArray37, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem33.Hashmap(intArray37, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem42.BruteForce(intArray45, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem33.TwoPointer(intArray45, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem50 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem51.BruteForce(intArray54, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem50.Hashmap(intArray54, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem59.BruteForce(intArray62, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem50.TwoPointer(intArray62, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem33.Hashmap(intArray62, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem20.Hashmap(intArray62, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem0.BruteForce(intArray62, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem73 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem74.BruteForce(intArray77, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem73.BruteForce(intArray77, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem82 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray85 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem82.BruteForce(intArray85, (int) '#');
        int[] intArray91 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem82.BruteForce(intArray91, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList95 = threeSumProblem73.BruteForce(intArray91, (int) (short) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList97 = threeSumProblem0.BruteForce(intArray91, (int) 'a');
        java.lang.Class<?> wildcardClass98 = intListList97.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList93);
        org.junit.Assert.assertNotNull(intListList95);
        org.junit.Assert.assertNotNull(intListList97);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test2381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2381");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem21.BruteForce(intArray24, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem20.Hashmap(intArray24, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem0.TwoPointer(intArray24, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem32 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem33 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray40 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem33.TwoPointer(intArray40, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem32.TwoPointer(intArray40, (int) (byte) 0);
        int[] intArray46 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem32.TwoPointer(intArray46, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem31.TwoPointer(intArray46, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem0.BruteForce(intArray46, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray62 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem53.BruteForce(intArray62, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem65 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem65.BruteForce(intArray68, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem53.Hashmap(intArray68, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem73 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem74.BruteForce(intArray77, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem73.Hashmap(intArray77, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem53.TwoPointer(intArray77, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem0.TwoPointer(intArray77, (int) (byte) 1);
        int[] intArray88 = new int[] { (short) 1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem0.BruteForce(intArray88, 0);
        java.lang.Class<?> wildcardClass91 = intArray88.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[1, 97]");
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test2382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2382");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem21.BruteForce(intArray24, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem20.Hashmap(intArray24, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem30.BruteForce(intArray33, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem29.Hashmap(intArray33, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.BruteForce(intArray33, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.Hashmap(intArray33, (-1));
        int[] intArray42 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem0.Hashmap(intArray42, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
    }

    @Test
    public void test2383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2383");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        int[] intArray13 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem0.TwoPointer(intArray13, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem16 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem17.BruteForce(intArray20, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList24 = threeSumProblem16.Hashmap(intArray20, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem25 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem25.BruteForce(intArray28, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem16.TwoPointer(intArray28, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem33 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem34.BruteForce(intArray37, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem33.Hashmap(intArray37, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem42.BruteForce(intArray45, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem33.TwoPointer(intArray45, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem50 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem51.BruteForce(intArray54, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem50.Hashmap(intArray54, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem59.BruteForce(intArray62, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem50.TwoPointer(intArray62, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem33.Hashmap(intArray62, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem16.BruteForce(intArray62, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem71 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem71.BruteForce(intArray74, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem77 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem77.BruteForce(intArray80, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem71.TwoPointer(intArray80, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem16.Hashmap(intArray80, (int) (short) 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem0.TwoPointer(intArray80, 10);
        java.lang.Class<?> wildcardClass89 = intArray80.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intListList24);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test2384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2384");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray14 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray14, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray25 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem18.TwoPointer(intArray25, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem17.TwoPointer(intArray25, (int) (byte) 0);
        int[] intArray34 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem17.Hashmap(intArray34, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem0.TwoPointer(intArray34, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem40.BruteForce(intArray43, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem39.BruteForce(intArray43, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem48.BruteForce(intArray51, (int) '#');
        int[] intArray57 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem48.BruteForce(intArray57, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem39.BruteForce(intArray57, (int) (short) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem0.BruteForce(intArray57, 1);
        java.lang.Class<?> wildcardClass64 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0]");
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test2385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2385");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem2 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList7 = threeSumProblem2.BruteForce(intArray5, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem1.Hashmap(intArray5, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem1.TwoPointer(intArray13, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem19 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList24 = threeSumProblem19.BruteForce(intArray22, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem18.Hashmap(intArray22, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem27.BruteForce(intArray30, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem18.TwoPointer(intArray30, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem1.Hashmap(intArray30, (int) 'a');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem38 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem38.BruteForce(intArray41, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem37.Hashmap(intArray41, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem46.BruteForce(intArray49, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem37.TwoPointer(intArray49, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem55.BruteForce(intArray58, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem54.Hashmap(intArray58, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem63 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem63.BruteForce(intArray66, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem54.TwoPointer(intArray66, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem37.Hashmap(intArray66, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem1.Hashmap(intArray66, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem75 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem76 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem76.BruteForce(intArray79, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem75.Hashmap(intArray79, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem1.TwoPointer(intArray79, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem0.BruteForce(intArray79, 10);
        java.lang.Class<?> wildcardClass88 = intArray79.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList7);
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList24);
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test2386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2386");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem6.TwoPointer(intArray13, (int) (short) 1);
        int[] intArray19 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem6.TwoPointer(intArray19, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem22 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem23 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray30 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem23.TwoPointer(intArray30, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem22.TwoPointer(intArray30, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem6.BruteForce(intArray30, (int) (short) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem0.Hashmap(intArray30, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray47 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem40.TwoPointer(intArray47, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem39.TwoPointer(intArray47, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem0.BruteForce(intArray47, (int) (byte) 100);
        java.lang.Class<?> wildcardClass54 = intArray47.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test2387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2387");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray9 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem6.BruteForce(intArray9, (int) '#');
        int[] intArray15 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem6.BruteForce(intArray15, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem6.Hashmap(intArray21, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem27.BruteForce(intArray30, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem26.Hashmap(intArray30, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem26.TwoPointer(intArray38, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem6.Hashmap(intArray38, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem0.TwoPointer(intArray38, (int) 'a');
        java.lang.Class<?> wildcardClass47 = intArray38.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test2388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2388");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem16 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem16.BruteForce(intArray19, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem10.TwoPointer(intArray19, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem0.BruteForce(intArray19, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray35 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem26.BruteForce(intArray35, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem0.TwoPointer(intArray35, (int) ' ');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem40.BruteForce(intArray43, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem47 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem47.BruteForce(intArray50, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem46.Hashmap(intArray50, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray63 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem56.TwoPointer(intArray63, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem55.TwoPointer(intArray63, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem46.BruteForce(intArray63, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem40.Hashmap(intArray63, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem0.TwoPointer(intArray63, (int) (short) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem74.BruteForce(intArray77, (int) '#');
        int[] intArray83 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem74.BruteForce(intArray83, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem86 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray89 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem86.BruteForce(intArray89, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem74.Hashmap(intArray89, (int) (byte) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList95 = threeSumProblem0.TwoPointer(intArray89, (int) '#');
        java.lang.Class<?> wildcardClass96 = intArray89.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(intListList93);
        org.junit.Assert.assertNotNull(intListList95);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test2389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2389");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem21.BruteForce(intArray24, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem20.Hashmap(intArray24, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem30.BruteForce(intArray33, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem29.Hashmap(intArray33, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.BruteForce(intArray33, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.Hashmap(intArray33, (-1));
        int[] intArray45 = new int[] { (short) 10, (short) 100, (byte) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem0.BruteForce(intArray45, (int) ' ');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray55 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem48.TwoPointer(intArray55, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem58 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem58.BruteForce(intArray61, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem64 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem64.BruteForce(intArray67, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem58.TwoPointer(intArray67, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem48.BruteForce(intArray67, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem74.BruteForce(intArray77, (int) '#');
        int[] intArray83 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem74.BruteForce(intArray83, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem48.TwoPointer(intArray83, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem0.TwoPointer(intArray83, (int) '4');
        java.lang.Class<?> wildcardClass90 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[10, 100, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test2390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2390");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem11 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray18 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem11.TwoPointer(intArray18, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem10.TwoPointer(intArray18, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList24 = threeSumProblem0.Hashmap(intArray18, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem25 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem26.BruteForce(intArray29, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem25.BruteForce(intArray29, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray42 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem35.TwoPointer(intArray42, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem34.TwoPointer(intArray42, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem25.TwoPointer(intArray42, (int) (byte) 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem0.BruteForce(intArray42, (int) (byte) -1);
        java.lang.Class<?> wildcardClass51 = intArray42.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intListList24);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test2391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2391");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray20 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem13.TwoPointer(intArray20, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList24 = threeSumProblem0.Hashmap(intArray20, (int) (byte) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem25 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray33 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem26.TwoPointer(intArray33, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem25.TwoPointer(intArray33, (int) (byte) 0);
        int[] intArray42 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem25.Hashmap(intArray42, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem45 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem46.BruteForce(intArray49, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem45.Hashmap(intArray49, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem55.BruteForce(intArray58, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem54.Hashmap(intArray58, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem45.BruteForce(intArray58, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem25.Hashmap(intArray58, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem0.Hashmap(intArray58, (int) (byte) 100);
        int[] intArray69 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem0.BruteForce(intArray69, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intListList24);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intListList68);
    }

    @Test
    public void test2392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2392");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem9.TwoPointer(intArray21, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem0.Hashmap(intArray21, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem28 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem29.BruteForce(intArray32, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem28.Hashmap(intArray32, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem37.BruteForce(intArray40, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem28.TwoPointer(intArray40, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem0.TwoPointer(intArray40, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem47 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem48.BruteForce(intArray51, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem47.BruteForce(intArray51, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem0.Hashmap(intArray51, (int) (short) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem58 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem59.BruteForce(intArray62, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem58.Hashmap(intArray62, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem67 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem68 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem68.BruteForce(intArray71, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem67.Hashmap(intArray71, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem58.BruteForce(intArray71, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem0.Hashmap(intArray71, 0);
        int[] intArray84 = new int[] { 10, 0, (byte) -1, '4' };
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem0.Hashmap(intArray84, (int) 'a');
        java.lang.Class<?> wildcardClass87 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[-1, 0, 10, 52]");
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test2393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2393");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray29 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem20.BruteForce(intArray29, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem0.TwoPointer(intArray29, (int) ' ');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem34.Hashmap(intArray38, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem43.BruteForce(intArray46, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem34.TwoPointer(intArray46, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem52.BruteForce(intArray55, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem51.BruteForce(intArray55, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem34.TwoPointer(intArray55, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem62 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem63 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem63.BruteForce(intArray66, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem62.Hashmap(intArray66, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem34.BruteForce(intArray66, (int) (byte) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem0.BruteForce(intArray66, (int) (short) 100);
        java.lang.Class<?> wildcardClass75 = intListList74.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test2394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2394");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray29 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem20.BruteForce(intArray29, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem0.BruteForce(intArray29, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem34.BruteForce(intArray38, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem44 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray51 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem44.TwoPointer(intArray51, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem43.TwoPointer(intArray51, (int) (byte) 0);
        int[] intArray60 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem43.Hashmap(intArray60, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem63 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem64 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem64.BruteForce(intArray67, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem63.Hashmap(intArray67, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem43.TwoPointer(intArray67, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem34.Hashmap(intArray67, (int) (byte) 10);
        int[] intArray81 = new int[] { (byte) 10, (byte) 100, 'a', '4', 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem34.TwoPointer(intArray81, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem0.BruteForce(intArray81, (-1));
        java.lang.Class<?> wildcardClass86 = intListList85.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[1, 10, 52, 97, 100]");
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test2395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2395");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem14.BruteForce(intArray17, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem13.Hashmap(intArray17, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem22 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem22.BruteForce(intArray25, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem13.TwoPointer(intArray25, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem31.BruteForce(intArray34, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem30.Hashmap(intArray34, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem39.BruteForce(intArray42, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem30.TwoPointer(intArray42, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem13.Hashmap(intArray42, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem0.Hashmap(intArray42, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray58 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem51.TwoPointer(intArray58, (int) (short) 1);
        int[] intArray64 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem51.TwoPointer(intArray64, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem67 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem68 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray75 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem68.TwoPointer(intArray75, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem67.TwoPointer(intArray75, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem51.BruteForce(intArray75, (int) (short) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem0.TwoPointer(intArray75, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem84 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem85 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray92 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem85.TwoPointer(intArray92, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem84.TwoPointer(intArray92, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList98 = threeSumProblem0.Hashmap(intArray92, 0);
        java.lang.Class<?> wildcardClass99 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(intListList96);
        org.junit.Assert.assertNotNull(intListList98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test2396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2396");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray9 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem6.BruteForce(intArray9, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList13 = threeSumProblem0.TwoPointer(intArray9, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem15 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem15.BruteForce(intArray18, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem14.Hashmap(intArray18, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem23 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray26 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem23.BruteForce(intArray26, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem14.TwoPointer(intArray26, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem0.BruteForce(intArray26, (int) ' ');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem33 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem34.BruteForce(intArray37, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem33.Hashmap(intArray37, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem43.BruteForce(intArray46, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem42.Hashmap(intArray46, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem51.BruteForce(intArray54, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem42.TwoPointer(intArray54, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem33.Hashmap(intArray54, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem61 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem62 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem62.BruteForce(intArray65, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem61.Hashmap(intArray65, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem70 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem71 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem71.BruteForce(intArray74, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem70.Hashmap(intArray74, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem79 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem79.BruteForce(intArray82, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem70.TwoPointer(intArray82, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem61.Hashmap(intArray82, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem33.TwoPointer(intArray82, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem0.Hashmap(intArray82, (int) (byte) 1);
        int[] intArray93 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList95 = threeSumProblem0.TwoPointer(intArray93, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intListList13);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(intListList92);
    }

    @Test
    public void test2397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2397");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem11 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray18 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem11.TwoPointer(intArray18, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem10.TwoPointer(intArray18, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList24 = threeSumProblem0.Hashmap(intArray18, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem25 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem26.BruteForce(intArray29, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem25.BruteForce(intArray29, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray42 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem35.TwoPointer(intArray42, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem34.TwoPointer(intArray42, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem25.TwoPointer(intArray42, (int) (byte) 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem0.BruteForce(intArray42, (int) (byte) -1);
        java.lang.Class<?> wildcardClass51 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intListList24);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test2398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2398");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem7 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem7.BruteForce(intArray10, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem6.Hashmap(intArray10, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem15 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem16 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem16.TwoPointer(intArray23, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem15.TwoPointer(intArray23, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem6.BruteForce(intArray23, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem0.Hashmap(intArray23, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem32 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem33 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem33.BruteForce(intArray36, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem32.Hashmap(intArray36, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem42.BruteForce(intArray45, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem41.Hashmap(intArray45, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem32.BruteForce(intArray45, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray60 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem53.TwoPointer(intArray60, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem52.TwoPointer(intArray60, (int) (byte) 0);
        int[] intArray69 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem52.Hashmap(intArray69, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem32.BruteForce(intArray69, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray81 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem74.TwoPointer(intArray81, (int) (short) 1);
        int[] intArray87 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem74.TwoPointer(intArray87, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem32.TwoPointer(intArray87, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem0.BruteForce(intArray87, (int) 'a');
        java.lang.Class<?> wildcardClass94 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(intListList93);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test2399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2399");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        int[] intArray13 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem0.TwoPointer(intArray13, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem16 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem17.BruteForce(intArray20, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList24 = threeSumProblem16.Hashmap(intArray20, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem25 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem26.BruteForce(intArray29, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem25.Hashmap(intArray29, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem16.BruteForce(intArray29, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray44 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem37.TwoPointer(intArray44, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem36.TwoPointer(intArray44, (int) (byte) 0);
        int[] intArray53 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem36.Hashmap(intArray53, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem16.BruteForce(intArray53, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem58 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray65 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem58.TwoPointer(intArray65, (int) (short) 1);
        int[] intArray71 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem58.TwoPointer(intArray71, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem16.TwoPointer(intArray71, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem0.TwoPointer(intArray71, (int) (short) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem78 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray85 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem78.TwoPointer(intArray85, (int) (short) 1);
        int[] intArray91 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem78.TwoPointer(intArray91, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList95 = threeSumProblem0.Hashmap(intArray91, (int) '4');
        java.lang.Class<?> wildcardClass96 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intListList24);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList93);
        org.junit.Assert.assertNotNull(intListList95);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test2400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2400");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray9 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem6.BruteForce(intArray9, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList13 = threeSumProblem0.TwoPointer(intArray9, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem15 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem15.BruteForce(intArray18, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem14.Hashmap(intArray18, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem23 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem24 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem24.BruteForce(intArray27, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem23.Hashmap(intArray27, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem32 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem32.BruteForce(intArray35, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem23.TwoPointer(intArray35, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem41.BruteForce(intArray44, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem40.Hashmap(intArray44, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem49.BruteForce(intArray52, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem40.TwoPointer(intArray52, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem23.Hashmap(intArray52, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem14.BruteForce(intArray52, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem0.Hashmap(intArray52, 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem63 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray70 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem63.TwoPointer(intArray70, (int) (short) 1);
        int[] intArray76 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem63.TwoPointer(intArray76, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem0.BruteForce(intArray76, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem81 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray84 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem81.BruteForce(intArray84, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem0.Hashmap(intArray84, 10);
        int[] intArray91 = new int[] { 10, 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem0.Hashmap(intArray91, (int) (short) 1);
        java.lang.Class<?> wildcardClass94 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intListList13);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 10]");
        org.junit.Assert.assertNotNull(intListList93);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test2401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2401");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem10.TwoPointer(intArray17, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray29 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem20.BruteForce(intArray29, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem32 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem32.BruteForce(intArray35, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray35, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem41.BruteForce(intArray44, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem40.Hashmap(intArray44, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem50 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray57 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem50.TwoPointer(intArray57, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem49.TwoPointer(intArray57, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem40.BruteForce(intArray57, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem20.TwoPointer(intArray57, (int) (byte) 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem10.TwoPointer(intArray57, (int) (byte) 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem0.Hashmap(intArray57, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem70 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem71 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray78 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem71.TwoPointer(intArray78, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem70.TwoPointer(intArray78, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem0.Hashmap(intArray78, (int) (byte) 100);
        int[] intArray89 = new int[] { (short) 1, (short) 1, '4', (byte) 100 };
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem0.TwoPointer(intArray89, (int) (short) 0);
        java.lang.Class<?> wildcardClass92 = intListList91.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[1, 1, 52, 100]");
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test2402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2402");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        int[] intArray13 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem0.TwoPointer(intArray13, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem16 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem17.BruteForce(intArray20, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList24 = threeSumProblem16.Hashmap(intArray20, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem25 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem25.BruteForce(intArray28, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem16.TwoPointer(intArray28, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem33 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem34.BruteForce(intArray37, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem33.Hashmap(intArray37, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem42.BruteForce(intArray45, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem33.TwoPointer(intArray45, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem50 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem51.BruteForce(intArray54, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem50.Hashmap(intArray54, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem59.BruteForce(intArray62, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem50.TwoPointer(intArray62, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem33.Hashmap(intArray62, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem16.BruteForce(intArray62, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem71 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem71.BruteForce(intArray74, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem77 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem77.BruteForce(intArray80, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem71.TwoPointer(intArray80, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem16.Hashmap(intArray80, (int) (short) 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem0.TwoPointer(intArray80, 10);
        java.lang.Class<?> wildcardClass89 = intListList88.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intListList24);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test2403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2403");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.BruteForce(intArray13, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem21.BruteForce(intArray24, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem20.Hashmap(intArray24, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray37 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem30.TwoPointer(intArray37, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem29.TwoPointer(intArray37, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem20.BruteForce(intArray37, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem0.TwoPointer(intArray37, 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray53 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem46.TwoPointer(intArray53, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem56.BruteForce(intArray59, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem62 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem62.BruteForce(intArray65, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem56.TwoPointer(intArray65, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem46.BruteForce(intArray65, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem0.TwoPointer(intArray65, (int) (short) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem75 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem75.BruteForce(intArray78, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem74.Hashmap(intArray78, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem83 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray86 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem83.BruteForce(intArray86, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem74.BruteForce(intArray86, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem0.TwoPointer(intArray86, (int) (short) 10);
        java.lang.Class<?> wildcardClass93 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test2404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2404");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem7 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem7.BruteForce(intArray10, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem6.Hashmap(intArray10, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem15 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem16 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem16.TwoPointer(intArray23, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem15.TwoPointer(intArray23, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem6.BruteForce(intArray23, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem0.Hashmap(intArray23, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem32 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray39 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem32.TwoPointer(intArray39, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem42.BruteForce(intArray45, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem48.BruteForce(intArray51, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem42.TwoPointer(intArray51, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray65 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem56.BruteForce(intArray65, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem42.BruteForce(intArray65, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem32.BruteForce(intArray65, 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem0.Hashmap(intArray65, 0);
        java.lang.Class<?> wildcardClass74 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test2405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2405");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem10.TwoPointer(intArray17, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem9.TwoPointer(intArray17, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem0.BruteForce(intArray17, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem24 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem25 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem25.BruteForce(intArray28, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem24.Hashmap(intArray28, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem33 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem34.BruteForce(intArray37, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem33.Hashmap(intArray37, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem42.BruteForce(intArray45, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem33.TwoPointer(intArray45, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem50 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem51.BruteForce(intArray54, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem50.Hashmap(intArray54, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem59.BruteForce(intArray62, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem50.TwoPointer(intArray62, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem33.Hashmap(intArray62, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem24.BruteForce(intArray62, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem0.Hashmap(intArray62, (int) (byte) 0);
        java.lang.Class<?> wildcardClass73 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test2406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2406");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem22 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray29 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem22.TwoPointer(intArray29, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem21.TwoPointer(intArray29, (int) (byte) 0);
        int[] intArray35 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem21.TwoPointer(intArray35, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.TwoPointer(intArray35, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.BruteForce(intArray35, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem42.BruteForce(intArray45, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem48.BruteForce(intArray51, (int) '#');
        int[] intArray57 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem48.BruteForce(intArray57, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem60.BruteForce(intArray63, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem48.Hashmap(intArray63, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem68 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem69 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem69.BruteForce(intArray72, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem68.Hashmap(intArray72, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem77 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem77.BruteForce(intArray80, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem68.TwoPointer(intArray80, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem48.Hashmap(intArray80, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem42.TwoPointer(intArray80, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem0.Hashmap(intArray80, 0);
        java.lang.Class<?> wildcardClass91 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0]");
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test2407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2407");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem17.BruteForce(intArray21, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem0.TwoPointer(intArray21, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem28 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem29.BruteForce(intArray32, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem28.Hashmap(intArray32, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem0.BruteForce(intArray32, (int) (byte) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem39.BruteForce(intArray42, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem0.TwoPointer(intArray42, (int) (byte) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem47 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem48.BruteForce(intArray51, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem47.BruteForce(intArray51, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem57 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray64 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem57.TwoPointer(intArray64, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem56.TwoPointer(intArray64, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem47.TwoPointer(intArray64, (int) (byte) 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem0.BruteForce(intArray64, (int) '#');
        int[] intArray73 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem0.BruteForce(intArray73, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
    }

    @Test
    public void test2408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2408");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        int[] intArray34 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem20.TwoPointer(intArray34, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem38 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem38.TwoPointer(intArray45, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem37.TwoPointer(intArray45, (int) (byte) 0);
        int[] intArray54 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem37.Hashmap(intArray54, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem20.TwoPointer(intArray54, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem0.Hashmap(intArray54, (int) (byte) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem61 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray68 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem61.TwoPointer(intArray68, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem0.Hashmap(intArray68, (int) 'a');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem73 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray82 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem73.BruteForce(intArray82, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem0.TwoPointer(intArray82, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem87 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem88 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray91 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem88.BruteForce(intArray91, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList95 = threeSumProblem87.Hashmap(intArray91, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList97 = threeSumProblem0.Hashmap(intArray91, (-1));
        java.lang.Class<?> wildcardClass98 = intListList97.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList93);
        org.junit.Assert.assertNotNull(intListList95);
        org.junit.Assert.assertNotNull(intListList97);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test2409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2409");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.BruteForce(intArray13, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem20.BruteForce(intArray23, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray35 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem26.BruteForce(intArray35, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem38 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem38.BruteForce(intArray41, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem26.Hashmap(intArray41, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray55 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem46.BruteForce(intArray55, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem26.TwoPointer(intArray55, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem20.TwoPointer(intArray55, 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem0.TwoPointer(intArray55, (int) (byte) -1);
        java.lang.Class<?> wildcardClass64 = intListList63.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test2410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2410");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray14 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray14, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem17.Hashmap(intArray21, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem27.BruteForce(intArray30, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem26.Hashmap(intArray30, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem17.BruteForce(intArray30, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem38 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem38.TwoPointer(intArray45, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem37.TwoPointer(intArray45, (int) (byte) 0);
        int[] intArray54 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem37.Hashmap(intArray54, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem17.BruteForce(intArray54, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem0.Hashmap(intArray54, (int) 'a');
        int[] intArray61 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem0.TwoPointer(intArray61, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0]");
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intListList60);
    }

    @Test
    public void test2411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2411");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem21.BruteForce(intArray24, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem20.Hashmap(intArray24, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem0.TwoPointer(intArray24, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem32 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem32.BruteForce(intArray35, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem31.Hashmap(intArray35, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem41.BruteForce(intArray44, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem40.Hashmap(intArray44, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem31.BruteForce(intArray44, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem0.BruteForce(intArray44, (int) ' ');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem53.BruteForce(intArray56, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray66 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem59.TwoPointer(intArray66, (int) (short) 1);
        int[] intArray72 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem59.TwoPointer(intArray72, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem75 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem76 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray83 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem76.TwoPointer(intArray83, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem75.TwoPointer(intArray83, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem59.BruteForce(intArray83, (int) (short) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem53.Hashmap(intArray83, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem0.TwoPointer(intArray83, (int) ' ');
        java.lang.Class<?> wildcardClass94 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(intListList93);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test2412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2412");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem11 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray18 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem11.TwoPointer(intArray18, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem10.TwoPointer(intArray18, (int) (byte) 0);
        int[] intArray27 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem10.Hashmap(intArray27, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem31.TwoPointer(intArray38, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem30.TwoPointer(intArray38, (int) (byte) 0);
        int[] intArray47 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem30.Hashmap(intArray47, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem10.Hashmap(intArray47, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem52.BruteForce(intArray55, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem58 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem58.BruteForce(intArray61, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem52.TwoPointer(intArray61, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem10.BruteForce(intArray61, (int) (byte) 100);
        int[] intArray73 = new int[] { '#', 10, (byte) 0, 10, ' ' };
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem10.Hashmap(intArray73, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem76 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem77 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem77.BruteForce(intArray80, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem76.BruteForce(intArray80, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem10.TwoPointer(intArray80, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem0.Hashmap(intArray80, (int) (byte) 1);
        int[] intArray89 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem0.BruteForce(intArray89, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 10, 10, 32, 35]");
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
    }

    @Test
    public void test2413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2413");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray10 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem1.BruteForce(intArray10, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray16 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList18 = threeSumProblem13.BruteForce(intArray16, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem19 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray26 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem19.TwoPointer(intArray26, (int) (short) 1);
        int[] intArray32 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem19.TwoPointer(intArray32, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray43 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem36.TwoPointer(intArray43, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem35.TwoPointer(intArray43, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem19.BruteForce(intArray43, (int) (short) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem13.Hashmap(intArray43, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem1.BruteForce(intArray43, (int) 'a');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem54.BruteForce(intArray57, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem60.BruteForce(intArray63, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem54.TwoPointer(intArray63, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem68 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem68.BruteForce(intArray71, (int) '#');
        int[] intArray77 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem68.BruteForce(intArray77, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem54.BruteForce(intArray77, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem1.BruteForce(intArray77, (int) (byte) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem0.BruteForce(intArray77, (int) ' ');
        java.lang.Class<?> wildcardClass86 = intArray77.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList18);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test2414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2414");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray25 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem18.TwoPointer(intArray25, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem17.TwoPointer(intArray25, (int) (byte) 0);
        int[] intArray34 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem17.Hashmap(intArray34, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem0.Hashmap(intArray34, (int) ' ');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray47 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem40.TwoPointer(intArray47, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem39.TwoPointer(intArray47, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem0.BruteForce(intArray47, 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray61 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem54.TwoPointer(intArray61, (int) (short) 1);
        int[] intArray67 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem54.TwoPointer(intArray67, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem70 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem71 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray78 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem71.TwoPointer(intArray78, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem70.TwoPointer(intArray78, (int) (byte) 0);
        int[] intArray84 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem70.TwoPointer(intArray84, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem54.TwoPointer(intArray84, (int) (short) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem0.TwoPointer(intArray84, (int) '#');
        java.lang.Class<?> wildcardClass91 = intListList90.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0]");
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test2415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2415");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        int[] intArray34 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem20.TwoPointer(intArray34, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem38 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem38.TwoPointer(intArray45, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem37.TwoPointer(intArray45, (int) (byte) 0);
        int[] intArray54 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem37.Hashmap(intArray54, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem20.TwoPointer(intArray54, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem0.Hashmap(intArray54, (int) (byte) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem61 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray68 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem61.TwoPointer(intArray68, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem0.Hashmap(intArray68, (int) 'a');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem73 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray81 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem74.TwoPointer(intArray81, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem73.TwoPointer(intArray81, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem0.TwoPointer(intArray81, (int) '#');
        int[] intArray88 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem0.BruteForce(intArray88, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intListList87);
    }

    @Test
    public void test2416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2416");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray14 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray14, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem17.BruteForce(intArray20, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem23 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray26 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem23.BruteForce(intArray26, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem17.TwoPointer(intArray26, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem32 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem32.BruteForce(intArray35, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem31.Hashmap(intArray35, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem40.BruteForce(intArray43, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem31.TwoPointer(intArray43, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem17.BruteForce(intArray43, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem0.Hashmap(intArray43, 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray61 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem52.BruteForce(intArray61, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem0.Hashmap(intArray61, (int) (short) 10);
        int[] intArray66 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem0.Hashmap(intArray66, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0]");
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intListList65);
    }

    @Test
    public void test2417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2417");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem14.TwoPointer(intArray21, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem13.TwoPointer(intArray21, (int) (byte) 0);
        int[] intArray30 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem13.Hashmap(intArray30, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem0.Hashmap(intArray30, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem36.BruteForce(intArray39, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem35.Hashmap(intArray39, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem44 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem45 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem45.BruteForce(intArray48, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem44.Hashmap(intArray48, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem35.BruteForce(intArray48, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray63 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem56.TwoPointer(intArray63, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem55.TwoPointer(intArray63, (int) (byte) 0);
        int[] intArray72 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem55.Hashmap(intArray72, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem35.BruteForce(intArray72, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem77 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem77.BruteForce(intArray80, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem35.Hashmap(intArray80, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem85 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray88 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem85.BruteForce(intArray88, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem35.TwoPointer(intArray88, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem0.TwoPointer(intArray88, (int) (byte) 100);
        int[] intArray95 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList97 = threeSumProblem0.Hashmap(intArray95, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(intListList94);
    }

    @Test
    public void test2418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2418");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray29 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem20.BruteForce(intArray29, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem0.BruteForce(intArray29, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray41 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem34.TwoPointer(intArray41, (int) (short) 1);
        int[] intArray47 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem34.TwoPointer(intArray47, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem0.Hashmap(intArray47, (int) (byte) -1);
        java.lang.Class<?> wildcardClass52 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test2419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2419");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem2 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList7 = threeSumProblem2.BruteForce(intArray5, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem1.Hashmap(intArray5, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem11 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray14 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem11.BruteForce(intArray14, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList18 = threeSumProblem10.Hashmap(intArray14, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem1.BruteForce(intArray14, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem22 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray29 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem22.TwoPointer(intArray29, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem21.TwoPointer(intArray29, (int) (byte) 0);
        int[] intArray38 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem21.Hashmap(intArray38, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem1.BruteForce(intArray38, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem43.BruteForce(intArray46, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem1.Hashmap(intArray46, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem51.BruteForce(intArray54, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem1.TwoPointer(intArray54, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem0.TwoPointer(intArray54, 0);
        java.lang.Class<?> wildcardClass61 = intArray54.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList7);
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intListList18);
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test2420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2420");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.BruteForce(intArray13, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        int[] intArray37 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray37, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.BruteForce(intArray37, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem42.BruteForce(intArray45, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem0.Hashmap(intArray45, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem50 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem50.BruteForce(intArray53, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem0.TwoPointer(intArray53, (int) ' ');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem58 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem59.BruteForce(intArray62, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem58.Hashmap(intArray62, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem67 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem67.BruteForce(intArray70, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem58.BruteForce(intArray70, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem0.BruteForce(intArray70, 0);
        java.lang.Class<?> wildcardClass77 = intArray70.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test2421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2421");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        int[] intArray12 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem0.Hashmap(intArray12, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
    }

    @Test
    public void test2422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2422");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem19 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList24 = threeSumProblem19.BruteForce(intArray22, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem18.Hashmap(intArray22, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem9.BruteForce(intArray22, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray37 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem30.TwoPointer(intArray37, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem29.TwoPointer(intArray37, (int) (byte) 0);
        int[] intArray46 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem29.Hashmap(intArray46, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem9.BruteForce(intArray46, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem52.BruteForce(intArray55, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem51.Hashmap(intArray55, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem9.BruteForce(intArray55, (int) (short) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem0.Hashmap(intArray55, (int) 'a');
        java.lang.Class<?> wildcardClass64 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList24);
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test2423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2423");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem9.TwoPointer(intArray21, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem0.Hashmap(intArray21, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem28 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem28.BruteForce(intArray31, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem0.TwoPointer(intArray31, (int) (short) 100);
        int[] intArray36 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem0.Hashmap(intArray36, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intListList35);
    }

    @Test
    public void test2424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2424");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem11 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray18 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem11.TwoPointer(intArray18, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem10.TwoPointer(intArray18, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList24 = threeSumProblem0.Hashmap(intArray18, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem25 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray32 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem25.TwoPointer(intArray32, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray43 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem36.TwoPointer(intArray43, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem35.TwoPointer(intArray43, (int) (byte) 0);
        int[] intArray52 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem35.Hashmap(intArray52, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem56.BruteForce(intArray59, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem55.Hashmap(intArray59, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem64 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem65 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem65.BruteForce(intArray68, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem64.Hashmap(intArray68, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem55.BruteForce(intArray68, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem35.Hashmap(intArray68, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem25.TwoPointer(intArray68, (int) (short) 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem0.Hashmap(intArray68, (int) (short) 1);
        java.lang.Class<?> wildcardClass81 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intListList24);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test2425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2425");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem2 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList7 = threeSumProblem2.BruteForce(intArray5, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem1.Hashmap(intArray5, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem1.TwoPointer(intArray13, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem19 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList24 = threeSumProblem19.BruteForce(intArray22, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem18.Hashmap(intArray22, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem27.BruteForce(intArray30, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem18.TwoPointer(intArray30, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem1.Hashmap(intArray30, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem0.Hashmap(intArray30, (int) (byte) 100);
        java.lang.Class<?> wildcardClass39 = intArray30.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList7);
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList24);
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test2426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2426");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.BruteForce(intArray13, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray29 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem20.BruteForce(intArray29, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem32 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem32.BruteForce(intArray35, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray35, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray49 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem40.BruteForce(intArray49, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem20.BruteForce(intArray49, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray61 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem54.TwoPointer(intArray61, (int) (short) 1);
        int[] intArray67 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem54.TwoPointer(intArray67, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem20.Hashmap(intArray67, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem0.BruteForce(intArray67, (int) (byte) 100);
        java.lang.Class<?> wildcardClass74 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test2427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2427");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem14.BruteForce(intArray17, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem13.Hashmap(intArray17, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem22 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem23 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray30 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem23.TwoPointer(intArray30, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem22.TwoPointer(intArray30, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem13.BruteForce(intArray30, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem0.BruteForce(intArray30, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem40.BruteForce(intArray43, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem39.Hashmap(intArray43, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem49.BruteForce(intArray52, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem48.Hashmap(intArray52, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem57 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem57.BruteForce(intArray60, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem48.TwoPointer(intArray60, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem39.Hashmap(intArray60, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem67 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem68 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem68.BruteForce(intArray71, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem67.Hashmap(intArray71, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem76 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem76.BruteForce(intArray79, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem67.TwoPointer(intArray79, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem39.TwoPointer(intArray79, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem86 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem87 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray90 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem87.BruteForce(intArray90, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem86.BruteForce(intArray90, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem39.Hashmap(intArray90, (int) (short) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList98 = threeSumProblem0.BruteForce(intArray90, 0);
        java.lang.Class<?> wildcardClass99 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(intListList96);
        org.junit.Assert.assertNotNull(intListList98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test2428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2428");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem21.BruteForce(intArray24, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem20.Hashmap(intArray24, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem29.BruteForce(intArray32, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem20.TwoPointer(intArray32, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem0.Hashmap(intArray32, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray47 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem40.TwoPointer(intArray47, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem39.TwoPointer(intArray47, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem52.BruteForce(intArray55, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem58 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem58.BruteForce(intArray61, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem52.TwoPointer(intArray61, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem66 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem66.BruteForce(intArray69, (int) '#');
        int[] intArray75 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem66.BruteForce(intArray75, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem52.BruteForce(intArray75, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem39.Hashmap(intArray75, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem0.TwoPointer(intArray75, (int) (byte) 1);
        int[] intArray84 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem0.Hashmap(intArray84, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
    }

    @Test
    public void test2429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2429");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray29 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem20.BruteForce(intArray29, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem0.BruteForce(intArray29, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray42 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem35.TwoPointer(intArray42, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem34.TwoPointer(intArray42, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem0.Hashmap(intArray42, (int) (short) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray56 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem49.TwoPointer(intArray56, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem59.BruteForce(intArray62, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem65 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem65.BruteForce(intArray68, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem59.TwoPointer(intArray68, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem49.BruteForce(intArray68, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem0.Hashmap(intArray68, (int) '4');
        java.lang.Class<?> wildcardClass77 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test2430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2430");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        int[] intArray37 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray37, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.Hashmap(intArray37, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem42.BruteForce(intArray45, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem48.BruteForce(intArray51, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem42.TwoPointer(intArray51, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem0.BruteForce(intArray51, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem58 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem59.BruteForce(intArray62, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem58.Hashmap(intArray62, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem67 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem67.BruteForce(intArray70, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem58.TwoPointer(intArray70, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem0.TwoPointer(intArray70, (int) ' ');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem77 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray84 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem77.TwoPointer(intArray84, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem0.BruteForce(intArray84, (int) 'a');
        int[] intArray89 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem0.BruteForce(intArray89, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
    }

    @Test
    public void test2431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2431");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray19 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem10.BruteForce(intArray19, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem22 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem22.BruteForce(intArray25, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem10.Hashmap(intArray25, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem31.BruteForce(intArray34, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem30.Hashmap(intArray34, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray47 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem40.TwoPointer(intArray47, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem39.TwoPointer(intArray47, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem30.BruteForce(intArray47, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem10.TwoPointer(intArray47, (int) (byte) 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem0.TwoPointer(intArray47, (int) (byte) 10);
        int[] intArray58 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem0.TwoPointer(intArray58, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intListList57);
    }

    @Test
    public void test2432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2432");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem11 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray14 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem11.BruteForce(intArray14, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList18 = threeSumProblem10.Hashmap(intArray14, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem19 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList24 = threeSumProblem19.BruteForce(intArray22, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem10.TwoPointer(intArray22, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem28 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem28.BruteForce(intArray31, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem27.Hashmap(intArray31, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem36.BruteForce(intArray39, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem27.TwoPointer(intArray39, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem10.Hashmap(intArray39, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem0.Hashmap(intArray39, (int) (short) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem49.BruteForce(intArray52, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem48.BruteForce(intArray52, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem57 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem57.BruteForce(intArray60, (int) '#');
        int[] intArray66 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem57.BruteForce(intArray66, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem48.BruteForce(intArray66, (int) (short) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem71 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem72 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray79 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem72.TwoPointer(intArray79, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem71.TwoPointer(intArray79, (int) (byte) 0);
        int[] intArray85 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem71.TwoPointer(intArray85, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem48.BruteForce(intArray85, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem0.Hashmap(intArray85, (int) ' ');
        java.lang.Class<?> wildcardClass92 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intListList18);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList24);
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0]");
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test2433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2433");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem14.BruteForce(intArray17, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem13.Hashmap(intArray17, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem22 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem22.BruteForce(intArray25, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem13.TwoPointer(intArray25, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem31.BruteForce(intArray34, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem30.Hashmap(intArray34, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem39.BruteForce(intArray42, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem30.TwoPointer(intArray42, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem13.Hashmap(intArray42, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem0.Hashmap(intArray42, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray58 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem51.TwoPointer(intArray58, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem61 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem62 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray69 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem62.TwoPointer(intArray69, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem61.TwoPointer(intArray69, (int) (byte) 0);
        int[] intArray78 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem61.Hashmap(intArray78, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem51.BruteForce(intArray78, (int) (byte) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem0.TwoPointer(intArray78, (int) ' ');
        java.lang.Class<?> wildcardClass85 = intListList84.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test2434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2434");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem14.BruteForce(intArray17, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem13.Hashmap(intArray17, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem22 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem23 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray30 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem23.TwoPointer(intArray30, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem22.TwoPointer(intArray30, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem13.BruteForce(intArray30, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem0.BruteForce(intArray30, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem39.BruteForce(intArray42, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem45 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray54 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem45.BruteForce(intArray54, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem57 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem57.BruteForce(intArray60, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem45.Hashmap(intArray60, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem65 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem65.BruteForce(intArray68, (int) '#');
        int[] intArray74 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem65.BruteForce(intArray74, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem45.TwoPointer(intArray74, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem39.TwoPointer(intArray74, 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem0.BruteForce(intArray74, (int) (byte) 0);
        int[] intArray83 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem0.Hashmap(intArray83, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
    }

    @Test
    public void test2435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2435");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem10.TwoPointer(intArray17, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem9.TwoPointer(intArray17, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem0.BruteForce(intArray17, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem24 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem25 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem25.BruteForce(intArray28, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem24.Hashmap(intArray28, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem33 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem34.BruteForce(intArray37, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem33.Hashmap(intArray37, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem42.BruteForce(intArray45, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem33.TwoPointer(intArray45, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem50 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem51.BruteForce(intArray54, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem50.Hashmap(intArray54, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem59.BruteForce(intArray62, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem50.TwoPointer(intArray62, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem33.Hashmap(intArray62, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem24.BruteForce(intArray62, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem0.Hashmap(intArray62, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem73 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem74.BruteForce(intArray77, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem73.Hashmap(intArray77, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem0.Hashmap(intArray77, 0);
        int[] intArray84 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem0.Hashmap(intArray84, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
    }

    @Test
    public void test2436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2436");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.BruteForce(intArray4, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem10.TwoPointer(intArray17, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem9.TwoPointer(intArray17, (int) (byte) 0);
        int[] intArray26 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem9.Hashmap(intArray26, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem30.BruteForce(intArray33, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem29.Hashmap(intArray33, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem9.TwoPointer(intArray33, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.Hashmap(intArray33, (int) (byte) 10);
        java.lang.Class<?> wildcardClass42 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test2437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2437");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem14.BruteForce(intArray17, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem13.Hashmap(intArray17, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem22 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem23 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray26 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem23.BruteForce(intArray26, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem22.Hashmap(intArray26, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem13.BruteForce(intArray26, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem33 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem34.Hashmap(intArray38, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem44 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem44.BruteForce(intArray47, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem43.Hashmap(intArray47, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem34.BruteForce(intArray47, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray62 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem55.TwoPointer(intArray62, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem54.TwoPointer(intArray62, (int) (byte) 0);
        int[] intArray71 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem54.Hashmap(intArray71, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem34.BruteForce(intArray71, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem76 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem76.BruteForce(intArray79, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem34.Hashmap(intArray79, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem84 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray87 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem84.BruteForce(intArray87, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem34.TwoPointer(intArray87, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem33.TwoPointer(intArray87, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList95 = threeSumProblem13.TwoPointer(intArray87, (int) (byte) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList97 = threeSumProblem0.BruteForce(intArray87, (-1));
        java.lang.Class<?> wildcardClass98 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(intListList93);
        org.junit.Assert.assertNotNull(intListList95);
        org.junit.Assert.assertNotNull(intListList97);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test2438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2438");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem19 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList24 = threeSumProblem19.BruteForce(intArray22, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem18.Hashmap(intArray22, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem9.BruteForce(intArray22, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray37 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem30.TwoPointer(intArray37, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem29.TwoPointer(intArray37, (int) (byte) 0);
        int[] intArray46 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem29.Hashmap(intArray46, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem9.BruteForce(intArray46, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem52.BruteForce(intArray55, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem51.Hashmap(intArray55, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem9.BruteForce(intArray55, (int) (short) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem0.Hashmap(intArray55, (int) 'a');
        int[] intArray64 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem0.BruteForce(intArray64, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList24);
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
    }

    @Test
    public void test2439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2439");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem2 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList7 = threeSumProblem2.BruteForce(intArray5, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem1.Hashmap(intArray5, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem1.TwoPointer(intArray13, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem19 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList24 = threeSumProblem19.BruteForce(intArray22, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem18.Hashmap(intArray22, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem27.BruteForce(intArray30, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem18.TwoPointer(intArray30, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem36.BruteForce(intArray39, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem35.Hashmap(intArray39, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem44 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem44.BruteForce(intArray47, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem35.TwoPointer(intArray47, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem18.Hashmap(intArray47, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem1.BruteForce(intArray47, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem56.BruteForce(intArray59, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem62 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem62.BruteForce(intArray65, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem56.TwoPointer(intArray65, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem1.Hashmap(intArray65, (int) (short) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem72 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem73 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray80 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem73.TwoPointer(intArray80, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem72.TwoPointer(intArray80, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem1.TwoPointer(intArray80, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem0.BruteForce(intArray80, 10);
        java.lang.Class<?> wildcardClass89 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList7);
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList24);
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test2440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2440");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.BruteForce(intArray13, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem21.BruteForce(intArray24, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem20.Hashmap(intArray24, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray37 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem30.TwoPointer(intArray37, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem29.TwoPointer(intArray37, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem20.BruteForce(intArray37, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem0.TwoPointer(intArray37, 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem47 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray54 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem47.TwoPointer(intArray54, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem46.TwoPointer(intArray54, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem60.BruteForce(intArray63, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem59.Hashmap(intArray63, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem68 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem68.BruteForce(intArray71, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem59.TwoPointer(intArray71, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem76 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem77 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem77.BruteForce(intArray80, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem76.Hashmap(intArray80, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem85 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray88 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem85.BruteForce(intArray88, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem76.TwoPointer(intArray88, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem59.Hashmap(intArray88, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem46.Hashmap(intArray88, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList98 = threeSumProblem0.TwoPointer(intArray88, 0);
        java.lang.Class<?> wildcardClass99 = intListList98.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(intListList96);
        org.junit.Assert.assertNotNull(intListList98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test2441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2441");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem22 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray29 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem22.TwoPointer(intArray29, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem21.TwoPointer(intArray29, (int) (byte) 0);
        int[] intArray35 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem21.TwoPointer(intArray35, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.TwoPointer(intArray35, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.BruteForce(intArray35, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem42.BruteForce(intArray45, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem48.BruteForce(intArray51, (int) '#');
        int[] intArray57 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem48.BruteForce(intArray57, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem60.BruteForce(intArray63, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem48.Hashmap(intArray63, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem68 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem69 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem69.BruteForce(intArray72, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem68.Hashmap(intArray72, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem77 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem77.BruteForce(intArray80, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem68.TwoPointer(intArray80, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem48.Hashmap(intArray80, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem42.TwoPointer(intArray80, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem0.Hashmap(intArray80, 0);
        java.lang.Class<?> wildcardClass91 = intArray80.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0]");
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test2442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2442");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray14 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray14, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray26 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem17.BruteForce(intArray26, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem30.BruteForce(intArray33, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem29.BruteForce(intArray33, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem38 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray47 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem38.BruteForce(intArray47, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem29.BruteForce(intArray47, (int) (short) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem17.BruteForce(intArray47, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem0.Hashmap(intArray47, (int) (short) -1);
        java.lang.Class<?> wildcardClass56 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0]");
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test2443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2443");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray14 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray14, (int) (byte) 0);
        int[] intArray17 = new int[] {};
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.BruteForce(intArray17, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray27 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem20.TwoPointer(intArray27, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem30.BruteForce(intArray33, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem36.BruteForce(intArray39, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem30.TwoPointer(intArray39, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem44 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem44.BruteForce(intArray47, (int) '#');
        int[] intArray53 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem44.BruteForce(intArray53, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem30.BruteForce(intArray53, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem20.BruteForce(intArray53, 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem0.BruteForce(intArray53, (int) (short) 10);
        java.lang.Class<?> wildcardClass62 = intArray53.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0]");
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test2444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2444");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.BruteForce(intArray13, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        int[] intArray37 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray37, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.BruteForce(intArray37, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem42.BruteForce(intArray45, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem0.Hashmap(intArray45, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem50 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem50.BruteForce(intArray53, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem56.BruteForce(intArray59, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem50.TwoPointer(intArray59, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem0.BruteForce(intArray59, 0);
        java.lang.Class<?> wildcardClass66 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test2445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2445");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem11 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray18 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem11.TwoPointer(intArray18, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem10.TwoPointer(intArray18, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList24 = threeSumProblem0.Hashmap(intArray18, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem25 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray34 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem25.BruteForce(intArray34, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem37.BruteForce(intArray40, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem25.Hashmap(intArray40, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem45 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem46.BruteForce(intArray49, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem45.Hashmap(intArray49, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem54.BruteForce(intArray57, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem45.TwoPointer(intArray57, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem25.Hashmap(intArray57, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem64 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem65 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray72 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem65.TwoPointer(intArray72, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem64.TwoPointer(intArray72, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem25.TwoPointer(intArray72, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem0.BruteForce(intArray72, (int) (short) 10);
        int[] intArray81 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem0.Hashmap(intArray81, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intListList24);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
    }

    @Test
    public void test2446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2446");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem10.TwoPointer(intArray17, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray29 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem20.BruteForce(intArray29, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem32 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem32.BruteForce(intArray35, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray35, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem41.BruteForce(intArray44, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem40.Hashmap(intArray44, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem50 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray57 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem50.TwoPointer(intArray57, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem49.TwoPointer(intArray57, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem40.BruteForce(intArray57, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem20.TwoPointer(intArray57, (int) (byte) 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem10.TwoPointer(intArray57, (int) (byte) 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem0.Hashmap(intArray57, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem70 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem71 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray78 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem71.TwoPointer(intArray78, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem70.TwoPointer(intArray78, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem0.Hashmap(intArray78, (int) (byte) 100);
        int[] intArray89 = new int[] { (short) 1, (short) 1, '4', (byte) 100 };
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem0.TwoPointer(intArray89, (int) (short) 0);
        int[] intArray92 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem0.Hashmap(intArray92, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[1, 1, 52, 100]");
        org.junit.Assert.assertNotNull(intListList91);
    }

    @Test
    public void test2447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2447");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem2 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList7 = threeSumProblem2.BruteForce(intArray5, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem1.Hashmap(intArray5, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem11 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray14 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem11.BruteForce(intArray14, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList18 = threeSumProblem10.Hashmap(intArray14, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem1.BruteForce(intArray14, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem22 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray29 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem22.TwoPointer(intArray29, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem21.TwoPointer(intArray29, (int) (byte) 0);
        int[] intArray38 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem21.Hashmap(intArray38, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem1.BruteForce(intArray38, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem43.BruteForce(intArray46, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem1.Hashmap(intArray46, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem51.BruteForce(intArray54, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem1.TwoPointer(intArray54, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem0.TwoPointer(intArray54, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem61 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem62 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem62.BruteForce(intArray65, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem61.Hashmap(intArray65, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem70 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem70.BruteForce(intArray73, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem61.TwoPointer(intArray73, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem78 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem79 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem79.BruteForce(intArray82, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem78.Hashmap(intArray82, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem87 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray90 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem87.BruteForce(intArray90, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem78.TwoPointer(intArray90, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem61.Hashmap(intArray90, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList98 = threeSumProblem0.Hashmap(intArray90, (int) (byte) 100);
        java.lang.Class<?> wildcardClass99 = intListList98.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList7);
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intListList18);
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(intListList96);
        org.junit.Assert.assertNotNull(intListList98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test2448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2448");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.BruteForce(intArray13, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        int[] intArray37 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray37, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.BruteForce(intArray37, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem42.BruteForce(intArray45, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem0.Hashmap(intArray45, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem50 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray59 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem52.TwoPointer(intArray59, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem51.TwoPointer(intArray59, (int) (byte) 0);
        int[] intArray65 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem51.TwoPointer(intArray65, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem50.TwoPointer(intArray65, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem0.TwoPointer(intArray65, (int) ' ');
        int[] intArray72 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem0.TwoPointer(intArray72, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
    }

    @Test
    public void test2449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2449");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem21.BruteForce(intArray24, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem20.Hashmap(intArray24, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem0.TwoPointer(intArray24, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem32 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray39 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem32.TwoPointer(intArray39, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem31.TwoPointer(intArray39, (int) (byte) 0);
        int[] intArray48 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem31.Hashmap(intArray48, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray59 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem52.TwoPointer(intArray59, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem51.TwoPointer(intArray59, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem64 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem65 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray72 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem65.TwoPointer(intArray72, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem64.TwoPointer(intArray72, (int) (byte) 0);
        int[] intArray81 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem64.Hashmap(intArray81, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem51.Hashmap(intArray81, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem31.Hashmap(intArray81, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem0.Hashmap(intArray81, (int) (short) 10);
        int[] intArray90 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem0.TwoPointer(intArray90, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(intListList89);
    }

    @Test
    public void test2450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2450");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        int[] intArray13 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem0.TwoPointer(intArray13, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem16 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray25 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem16.BruteForce(intArray25, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem28 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem28.BruteForce(intArray31, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray41 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem34.TwoPointer(intArray41, (int) (short) 1);
        int[] intArray47 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem34.TwoPointer(intArray47, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem50 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray58 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem51.TwoPointer(intArray58, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem50.TwoPointer(intArray58, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem34.BruteForce(intArray58, (int) (short) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem28.Hashmap(intArray58, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem16.BruteForce(intArray58, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem0.Hashmap(intArray58, (int) (short) 100);
        java.lang.Class<?> wildcardClass71 = intArray58.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test2451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2451");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        int[] intArray37 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray37, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.Hashmap(intArray37, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem42.BruteForce(intArray45, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem48.BruteForce(intArray51, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem42.TwoPointer(intArray51, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem0.BruteForce(intArray51, (int) (byte) 100);
        int[] intArray63 = new int[] { '#', 10, (byte) 0, 10, ' ' };
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem0.Hashmap(intArray63, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem66 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem67 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem67.BruteForce(intArray70, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem66.BruteForce(intArray70, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem0.TwoPointer(intArray70, 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem77 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem78 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray81 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem78.BruteForce(intArray81, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem77.Hashmap(intArray81, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem0.TwoPointer(intArray81, 0);
        int[] intArray88 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem0.BruteForce(intArray88, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 10, 10, 32, 35]");
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intListList87);
    }

    @Test
    public void test2452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2452");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray29 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem20.BruteForce(intArray29, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem0.BruteForce(intArray29, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray41 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem34.TwoPointer(intArray41, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem0.TwoPointer(intArray41, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem47 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray54 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem47.TwoPointer(intArray54, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem46.TwoPointer(intArray54, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem60.BruteForce(intArray63, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem59.Hashmap(intArray63, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem68 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem68.BruteForce(intArray71, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem59.TwoPointer(intArray71, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem76 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem77 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem77.BruteForce(intArray80, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem76.Hashmap(intArray80, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem85 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray88 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem85.BruteForce(intArray88, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem76.TwoPointer(intArray88, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem59.Hashmap(intArray88, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem46.Hashmap(intArray88, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList98 = threeSumProblem0.TwoPointer(intArray88, (int) (byte) 1);
        java.lang.Class<?> wildcardClass99 = intArray88.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(intListList96);
        org.junit.Assert.assertNotNull(intListList98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test2453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2453");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem17.BruteForce(intArray21, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem0.TwoPointer(intArray21, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem28 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem29.BruteForce(intArray32, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem28.Hashmap(intArray32, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem0.BruteForce(intArray32, (int) (byte) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem39.BruteForce(intArray42, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem0.TwoPointer(intArray42, (int) (byte) 10);
        java.lang.Class<?> wildcardClass47 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test2454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2454");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        int[] intArray13 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem0.TwoPointer(intArray13, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem16 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem16.BruteForce(intArray19, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem22 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem22.BruteForce(intArray25, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem16.TwoPointer(intArray25, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem31.BruteForce(intArray34, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem30.Hashmap(intArray34, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem39.BruteForce(intArray42, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem30.TwoPointer(intArray42, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem47 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem48.BruteForce(intArray51, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem47.Hashmap(intArray51, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem56.BruteForce(intArray59, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem47.TwoPointer(intArray59, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem64 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem65 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem65.BruteForce(intArray68, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem64.Hashmap(intArray68, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem73 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem73.BruteForce(intArray76, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem64.TwoPointer(intArray76, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem47.Hashmap(intArray76, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem30.BruteForce(intArray76, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem16.TwoPointer(intArray76, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem0.TwoPointer(intArray76, (int) (byte) 0);
        java.lang.Class<?> wildcardClass89 = intArray76.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test2455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2455");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem10.TwoPointer(intArray17, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray29 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem20.BruteForce(intArray29, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem32 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem32.BruteForce(intArray35, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray35, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem41.BruteForce(intArray44, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem40.Hashmap(intArray44, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem50 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray57 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem50.TwoPointer(intArray57, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem49.TwoPointer(intArray57, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem40.BruteForce(intArray57, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem20.TwoPointer(intArray57, (int) (byte) 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem10.TwoPointer(intArray57, (int) (byte) 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem0.Hashmap(intArray57, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem70 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem71 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray78 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem71.TwoPointer(intArray78, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem70.TwoPointer(intArray78, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem0.Hashmap(intArray78, (int) (byte) 100);
        int[] intArray85 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem0.TwoPointer(intArray85, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
    }

    @Test
    public void test2456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2456");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem9.TwoPointer(intArray21, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem0.Hashmap(intArray21, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem28 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem28.BruteForce(intArray31, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem0.TwoPointer(intArray31, (int) (short) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem36.BruteForce(intArray39, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem42.BruteForce(intArray45, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem36.TwoPointer(intArray45, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem50 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem51.BruteForce(intArray54, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem50.Hashmap(intArray54, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem59.BruteForce(intArray62, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem50.TwoPointer(intArray62, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem36.BruteForce(intArray62, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem0.Hashmap(intArray62, (int) (short) 0);
        int[] intArray71 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem0.TwoPointer(intArray71, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
    }

    @Test
    public void test2457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2457");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        int[] intArray13 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem0.TwoPointer(intArray13, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem16 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem17.TwoPointer(intArray24, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem16.TwoPointer(intArray24, (int) (byte) 0);
        int[] intArray30 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem16.TwoPointer(intArray30, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem0.TwoPointer(intArray30, (int) (short) 0);
        java.lang.Class<?> wildcardClass35 = intListList34.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test2458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2458");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray29 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem20.BruteForce(intArray29, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem0.TwoPointer(intArray29, (int) ' ');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem34.Hashmap(intArray38, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem43.BruteForce(intArray46, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem34.TwoPointer(intArray46, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem0.BruteForce(intArray46, (int) 'a');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem54.BruteForce(intArray57, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem53.Hashmap(intArray57, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem62 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem62.BruteForce(intArray65, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem53.TwoPointer(intArray65, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem70 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem71 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem71.BruteForce(intArray74, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem70.BruteForce(intArray74, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem53.TwoPointer(intArray74, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem81 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem82 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray85 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem82.BruteForce(intArray85, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem81.Hashmap(intArray85, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem53.BruteForce(intArray85, (int) (byte) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem0.TwoPointer(intArray85, 0);
        java.lang.Class<?> wildcardClass94 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(intListList93);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test2459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2459");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem11 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray18 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem11.TwoPointer(intArray18, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem10.TwoPointer(intArray18, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList24 = threeSumProblem0.Hashmap(intArray18, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem25 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem26.BruteForce(intArray29, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem25.BruteForce(intArray29, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray42 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem35.TwoPointer(intArray42, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem34.TwoPointer(intArray42, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem25.TwoPointer(intArray42, (int) (byte) 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem0.BruteForce(intArray42, (int) (byte) -1);
        java.lang.Class<?> wildcardClass51 = intListList50.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intListList24);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test2460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2460");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray9 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem6.BruteForce(intArray9, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList13 = threeSumProblem0.TwoPointer(intArray9, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem14.BruteForce(intArray17, (int) '#');
        int[] intArray23 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem14.BruteForce(intArray23, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem0.BruteForce(intArray23, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem28 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray36 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem29.TwoPointer(intArray36, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem28.TwoPointer(intArray36, (int) (byte) 0);
        int[] intArray42 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem28.TwoPointer(intArray42, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem45 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem45.BruteForce(intArray48, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem51.BruteForce(intArray54, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem45.TwoPointer(intArray54, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem60.BruteForce(intArray63, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem59.Hashmap(intArray63, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem68 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem68.BruteForce(intArray71, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem59.TwoPointer(intArray71, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem45.BruteForce(intArray71, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem28.Hashmap(intArray71, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem0.BruteForce(intArray71, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem82 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray85 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem82.BruteForce(intArray85, (int) '#');
        int[] intArray91 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem82.BruteForce(intArray91, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList95 = threeSumProblem0.BruteForce(intArray91, (int) 'a');
        java.lang.Class<?> wildcardClass96 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intListList13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0]");
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList93);
        org.junit.Assert.assertNotNull(intListList95);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test2461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2461");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem7 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem7.BruteForce(intArray10, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem6.Hashmap(intArray10, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem15 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray22 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList24 = threeSumProblem15.TwoPointer(intArray22, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem25 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem25.BruteForce(intArray28, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem31.BruteForce(intArray34, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem25.TwoPointer(intArray34, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem15.BruteForce(intArray34, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem41.BruteForce(intArray44, (int) '#');
        int[] intArray50 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem41.BruteForce(intArray50, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem53.BruteForce(intArray56, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem41.Hashmap(intArray56, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem61 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem62 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem62.BruteForce(intArray65, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem61.Hashmap(intArray65, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem70 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem70.BruteForce(intArray73, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem61.TwoPointer(intArray73, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem41.Hashmap(intArray73, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem15.BruteForce(intArray73, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem6.Hashmap(intArray73, (int) (short) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem0.TwoPointer(intArray73, (int) (short) 1);
        java.lang.Class<?> wildcardClass86 = intArray73.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList24);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test2462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2462");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem14.BruteForce(intArray17, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem13.Hashmap(intArray17, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem22 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem22.BruteForce(intArray25, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem13.TwoPointer(intArray25, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem31.BruteForce(intArray34, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem30.Hashmap(intArray34, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem39.BruteForce(intArray42, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem30.TwoPointer(intArray42, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem13.Hashmap(intArray42, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem0.Hashmap(intArray42, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray60 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem51.BruteForce(intArray60, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem0.Hashmap(intArray60, (int) (short) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem65 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem65.BruteForce(intArray68, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem0.Hashmap(intArray68, (int) (byte) 100);
        java.lang.Class<?> wildcardClass73 = intArray68.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test2463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2463");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem10.TwoPointer(intArray17, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem9.TwoPointer(intArray17, (int) (byte) 0);
        int[] intArray26 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem9.Hashmap(intArray26, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray37 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem30.TwoPointer(intArray37, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem29.TwoPointer(intArray37, (int) (byte) 0);
        int[] intArray46 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem29.Hashmap(intArray46, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem9.Hashmap(intArray46, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem0.Hashmap(intArray46, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray62 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem55.TwoPointer(intArray62, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem54.TwoPointer(intArray62, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem67 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem68 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem68.BruteForce(intArray71, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem67.Hashmap(intArray71, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem76 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem77 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray84 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem77.TwoPointer(intArray84, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem76.TwoPointer(intArray84, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem67.BruteForce(intArray84, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem54.BruteForce(intArray84, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem53.Hashmap(intArray84, (int) (byte) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem0.BruteForce(intArray84, (int) (byte) -1);
        java.lang.Class<?> wildcardClass97 = intListList96.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(intListList96);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test2464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2464");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.BruteForce(intArray4, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem10.TwoPointer(intArray17, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem9.TwoPointer(intArray17, (int) (byte) 0);
        int[] intArray26 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem9.Hashmap(intArray26, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem30.BruteForce(intArray33, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem29.Hashmap(intArray33, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem38 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem39.BruteForce(intArray42, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem38.Hashmap(intArray42, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem29.BruteForce(intArray42, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem9.Hashmap(intArray42, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem0.TwoPointer(intArray42, (int) (byte) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray61 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem54.TwoPointer(intArray61, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem53.TwoPointer(intArray61, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem0.TwoPointer(intArray61, (int) (short) 0);
        int[] intArray68 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem0.BruteForce(intArray68, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
    }

    @Test
    public void test2465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2465");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.BruteForce(intArray4, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem19 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList24 = threeSumProblem19.BruteForce(intArray22, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem18.Hashmap(intArray22, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem9.BruteForce(intArray22, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray37 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem30.TwoPointer(intArray37, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem29.TwoPointer(intArray37, (int) (byte) 0);
        int[] intArray46 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem29.Hashmap(intArray46, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem9.BruteForce(intArray46, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray58 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem51.TwoPointer(intArray58, (int) (short) 1);
        int[] intArray64 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem51.TwoPointer(intArray64, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem9.TwoPointer(intArray64, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem0.Hashmap(intArray64, 10);
        int[] intArray71 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem0.Hashmap(intArray71, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList24);
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
    }

    @Test
    public void test2466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2466");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray29 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem20.BruteForce(intArray29, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem0.TwoPointer(intArray29, (int) ' ');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem34.Hashmap(intArray38, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem43.BruteForce(intArray46, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem34.TwoPointer(intArray46, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem0.BruteForce(intArray46, (int) 'a');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem53.BruteForce(intArray56, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem59.BruteForce(intArray62, (int) '#');
        int[] intArray68 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem59.BruteForce(intArray68, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem71 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem71.BruteForce(intArray74, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem59.Hashmap(intArray74, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem79 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray88 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem79.BruteForce(intArray88, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem59.TwoPointer(intArray88, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem53.TwoPointer(intArray88, 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem0.Hashmap(intArray88, (int) (short) 1);
        java.lang.Class<?> wildcardClass97 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(intListList96);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test2467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2467");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        int[] intArray13 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem0.TwoPointer(intArray13, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem16 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem17.TwoPointer(intArray24, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem16.TwoPointer(intArray24, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem0.BruteForce(intArray24, (int) (short) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem31.BruteForce(intArray34, (int) '#');
        int[] intArray40 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem31.BruteForce(intArray40, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem43.BruteForce(intArray46, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem31.Hashmap(intArray46, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem52.BruteForce(intArray55, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem51.Hashmap(intArray55, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem60.BruteForce(intArray63, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem51.TwoPointer(intArray63, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem31.Hashmap(intArray63, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem0.TwoPointer(intArray63, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem72 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem73 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem73.BruteForce(intArray76, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem72.BruteForce(intArray76, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem81 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray84 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem81.BruteForce(intArray84, (int) '#');
        int[] intArray90 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem81.BruteForce(intArray90, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem72.BruteForce(intArray90, (int) (short) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem0.BruteForce(intArray90, 10);
        int[] intArray97 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList99 = threeSumProblem0.Hashmap(intArray97, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(intListList96);
    }

    @Test
    public void test2468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2468");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem9.TwoPointer(intArray21, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem0.Hashmap(intArray21, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem28 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem29.BruteForce(intArray32, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem28.Hashmap(intArray32, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem37.BruteForce(intArray40, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem28.TwoPointer(intArray40, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem0.TwoPointer(intArray40, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem47 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem48.BruteForce(intArray51, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem47.BruteForce(intArray51, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem0.Hashmap(intArray51, (int) (short) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem58 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem58.BruteForce(intArray61, (int) '#');
        int[] intArray67 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem58.BruteForce(intArray67, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem70 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem70.BruteForce(intArray73, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem58.Hashmap(intArray73, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem78 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem79 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem79.BruteForce(intArray82, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem78.Hashmap(intArray82, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem58.TwoPointer(intArray82, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem0.Hashmap(intArray82, (int) ' ');
        java.lang.Class<?> wildcardClass91 = intArray82.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test2469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2469");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem16 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem16.BruteForce(intArray19, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem10.TwoPointer(intArray19, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem0.BruteForce(intArray19, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray34 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem27.TwoPointer(intArray34, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem26.TwoPointer(intArray34, (int) (byte) 0);
        int[] intArray43 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem26.Hashmap(intArray43, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem47 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray54 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem47.TwoPointer(intArray54, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem46.TwoPointer(intArray54, (int) (byte) 0);
        int[] intArray63 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem46.Hashmap(intArray63, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem26.Hashmap(intArray63, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem68 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem69 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem69.BruteForce(intArray72, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem68.Hashmap(intArray72, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem77 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem78 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray81 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem78.BruteForce(intArray81, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem77.Hashmap(intArray81, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem68.BruteForce(intArray81, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem26.BruteForce(intArray81, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem0.Hashmap(intArray81, 10);
        java.lang.Class<?> wildcardClass92 = intListList91.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test2470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2470");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem21.BruteForce(intArray24, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem20.Hashmap(intArray24, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem29.BruteForce(intArray32, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem20.TwoPointer(intArray32, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem0.Hashmap(intArray32, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray48 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem41.TwoPointer(intArray48, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem40.TwoPointer(intArray48, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem54.BruteForce(intArray57, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem53.Hashmap(intArray57, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem62 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem63 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray70 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem63.TwoPointer(intArray70, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem62.TwoPointer(intArray70, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem53.BruteForce(intArray70, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem40.BruteForce(intArray70, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem39.Hashmap(intArray70, (int) (byte) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem0.BruteForce(intArray70, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem83 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray86 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem83.BruteForce(intArray86, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem0.Hashmap(intArray86, (int) ' ');
        int[] intArray91 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem0.BruteForce(intArray91, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intListList90);
    }

    @Test
    public void test2471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2471");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray14 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray14, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray26 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem17.BruteForce(intArray26, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem29.BruteForce(intArray32, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem17.Hashmap(intArray32, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray46 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem37.BruteForce(intArray46, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem17.TwoPointer(intArray46, (int) ' ');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem52.BruteForce(intArray55, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem51.Hashmap(intArray55, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem60.BruteForce(intArray63, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem51.TwoPointer(intArray63, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem17.TwoPointer(intArray63, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem0.Hashmap(intArray63, (int) 'a');
        int[] intArray72 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem0.Hashmap(intArray72, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0]");
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
    }

    @Test
    public void test2472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2472");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray19 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem10.BruteForce(intArray19, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem22 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem22.BruteForce(intArray25, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem10.Hashmap(intArray25, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem31.BruteForce(intArray34, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem30.Hashmap(intArray34, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray47 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem40.TwoPointer(intArray47, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem39.TwoPointer(intArray47, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem30.BruteForce(intArray47, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem10.TwoPointer(intArray47, (int) (byte) 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem0.TwoPointer(intArray47, (int) (byte) 10);
        int[] intArray58 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem0.Hashmap(intArray58, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intListList57);
    }

    @Test
    public void test2473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2473");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray9 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem6.BruteForce(intArray9, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList13 = threeSumProblem0.TwoPointer(intArray9, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem15 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem15.BruteForce(intArray18, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem14.Hashmap(intArray18, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem23 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem24 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem24.BruteForce(intArray27, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem23.Hashmap(intArray27, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem32 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem32.BruteForce(intArray35, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem23.TwoPointer(intArray35, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem41.BruteForce(intArray44, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem40.Hashmap(intArray44, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem49.BruteForce(intArray52, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem40.TwoPointer(intArray52, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem23.Hashmap(intArray52, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem14.BruteForce(intArray52, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem0.Hashmap(intArray52, 100);
        int[] intArray63 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem0.BruteForce(intArray63, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intListList13);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intListList62);
    }

    @Test
    public void test2474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2474");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        int[] intArray13 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem0.TwoPointer(intArray13, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem16 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem17.BruteForce(intArray20, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList24 = threeSumProblem16.Hashmap(intArray20, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem25 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem26.BruteForce(intArray29, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem25.Hashmap(intArray29, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem16.BruteForce(intArray29, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray44 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem37.TwoPointer(intArray44, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem36.TwoPointer(intArray44, (int) (byte) 0);
        int[] intArray53 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem36.Hashmap(intArray53, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem16.BruteForce(intArray53, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem58 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray65 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem58.TwoPointer(intArray65, (int) (short) 1);
        int[] intArray71 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem58.TwoPointer(intArray71, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem16.TwoPointer(intArray71, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem0.TwoPointer(intArray71, (int) (short) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem78 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray85 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem78.TwoPointer(intArray85, (int) (short) 1);
        int[] intArray91 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem78.TwoPointer(intArray91, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList95 = threeSumProblem0.Hashmap(intArray91, (int) '4');
        java.lang.Class<?> wildcardClass96 = intListList95.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intListList24);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList93);
        org.junit.Assert.assertNotNull(intListList95);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test2475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2475");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem16 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem16.BruteForce(intArray19, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem10.TwoPointer(intArray19, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem0.BruteForce(intArray19, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray33 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem26.TwoPointer(intArray33, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem36.BruteForce(intArray39, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem42.BruteForce(intArray45, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem36.TwoPointer(intArray45, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem26.BruteForce(intArray45, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray61 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem52.BruteForce(intArray61, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem64 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem64.BruteForce(intArray67, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem52.Hashmap(intArray67, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem72 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem73 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem73.BruteForce(intArray76, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem72.Hashmap(intArray76, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem81 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray84 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem81.BruteForce(intArray84, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem72.TwoPointer(intArray84, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem52.Hashmap(intArray84, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem26.BruteForce(intArray84, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem0.BruteForce(intArray84, (int) 'a');
        int[] intArray95 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList97 = threeSumProblem0.BruteForce(intArray95, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(intListList94);
    }

    @Test
    public void test2476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2476");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem21.BruteForce(intArray24, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem20.Hashmap(intArray24, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem0.TwoPointer(intArray24, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem31.BruteForce(intArray34, (int) '#');
        int[] intArray40 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem31.BruteForce(intArray40, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem43.BruteForce(intArray46, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem31.Hashmap(intArray46, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem52.BruteForce(intArray55, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem51.Hashmap(intArray55, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem60.BruteForce(intArray63, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem51.TwoPointer(intArray63, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem31.Hashmap(intArray63, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem0.Hashmap(intArray63, 100);
        int[] intArray72 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem0.Hashmap(intArray72, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
    }

    @Test
    public void test2477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2477");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray14 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray14, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem17.BruteForce(intArray20, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem23 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray26 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem23.BruteForce(intArray26, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem17.TwoPointer(intArray26, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem32 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem32.BruteForce(intArray35, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem31.Hashmap(intArray35, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem40.BruteForce(intArray43, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem31.TwoPointer(intArray43, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem17.BruteForce(intArray43, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem0.Hashmap(intArray43, 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray61 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem52.BruteForce(intArray61, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem0.Hashmap(intArray61, (int) (short) 10);
        int[] intArray66 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem0.TwoPointer(intArray66, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0]");
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intListList65);
    }

    @Test
    public void test2478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2478");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem17.Hashmap(intArray21, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem26.BruteForce(intArray29, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem17.TwoPointer(intArray29, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem0.Hashmap(intArray29, (int) 'a');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem37.BruteForce(intArray40, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem36.Hashmap(intArray40, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem45 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem45.BruteForce(intArray48, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem36.TwoPointer(intArray48, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem54.BruteForce(intArray57, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem53.Hashmap(intArray57, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem62 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem62.BruteForce(intArray65, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem53.TwoPointer(intArray65, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem36.Hashmap(intArray65, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem0.Hashmap(intArray65, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem75 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem75.BruteForce(intArray78, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem74.Hashmap(intArray78, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem0.TwoPointer(intArray78, 0);
        int[] intArray85 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem0.Hashmap(intArray85, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
    }

    @Test
    public void test2479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2479");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.BruteForce(intArray13, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem22 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem22.BruteForce(intArray25, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem21.Hashmap(intArray25, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem31.BruteForce(intArray34, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem30.Hashmap(intArray34, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem21.BruteForce(intArray34, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray49 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem42.TwoPointer(intArray49, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem41.TwoPointer(intArray49, (int) (byte) 0);
        int[] intArray58 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem41.Hashmap(intArray58, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem21.BruteForce(intArray58, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem63 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem63.BruteForce(intArray66, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem21.Hashmap(intArray66, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem71 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem71.BruteForce(intArray74, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem21.TwoPointer(intArray74, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem20.TwoPointer(intArray74, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem0.TwoPointer(intArray74, (int) (byte) 1);
        int[] intArray83 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem0.TwoPointer(intArray83, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
    }

    @Test
    public void test2480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2480");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.BruteForce(intArray4, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem10.TwoPointer(intArray17, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem9.TwoPointer(intArray17, (int) (byte) 0);
        int[] intArray23 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem9.TwoPointer(intArray23, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem27.BruteForce(intArray30, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem26.Hashmap(intArray30, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem36.BruteForce(intArray39, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem35.Hashmap(intArray39, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem26.BruteForce(intArray39, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem47 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray54 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem47.TwoPointer(intArray54, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem46.TwoPointer(intArray54, (int) (byte) 0);
        int[] intArray63 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem46.Hashmap(intArray63, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem26.BruteForce(intArray63, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem9.Hashmap(intArray63, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem0.TwoPointer(intArray63, (int) (short) 10);
        int[] intArray72 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem0.TwoPointer(intArray72, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
    }

    @Test
    public void test2481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2481");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem19 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList24 = threeSumProblem19.BruteForce(intArray22, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem18.Hashmap(intArray22, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem9.BruteForce(intArray22, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray37 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem30.TwoPointer(intArray37, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem29.TwoPointer(intArray37, (int) (byte) 0);
        int[] intArray46 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem29.Hashmap(intArray46, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem9.BruteForce(intArray46, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem51.BruteForce(intArray54, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem9.Hashmap(intArray54, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem59.BruteForce(intArray62, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem9.TwoPointer(intArray62, (int) ' ');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem67 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray74 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem67.TwoPointer(intArray74, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem77 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem77.BruteForce(intArray80, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem83 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray86 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem83.BruteForce(intArray86, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem77.TwoPointer(intArray86, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem67.BruteForce(intArray86, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem9.BruteForce(intArray86, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem0.BruteForce(intArray86, (int) '#');
        int[] intArray97 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList99 = threeSumProblem0.TwoPointer(intArray97, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList24);
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(intListList96);
    }

    @Test
    public void test2482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2482");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem17.BruteForce(intArray20, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem23 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray30 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem23.TwoPointer(intArray30, (int) (short) 1);
        int[] intArray36 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem23.TwoPointer(intArray36, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray47 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem40.TwoPointer(intArray47, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem39.TwoPointer(intArray47, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem23.BruteForce(intArray47, (int) (short) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem17.Hashmap(intArray47, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray65 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem56.BruteForce(intArray65, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem68 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem68.BruteForce(intArray71, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem56.Hashmap(intArray71, (int) (byte) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem17.TwoPointer(intArray71, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem0.Hashmap(intArray71, (-1));
        int[] intArray80 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem0.Hashmap(intArray80, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intListList79);
    }

    @Test
    public void test2483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2483");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem14.BruteForce(intArray17, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem13.Hashmap(intArray17, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem22 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem22.BruteForce(intArray25, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem13.TwoPointer(intArray25, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem31.TwoPointer(intArray38, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem30.TwoPointer(intArray38, (int) (byte) 0);
        int[] intArray47 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem30.Hashmap(intArray47, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem13.Hashmap(intArray47, (int) ' ');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray60 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem53.TwoPointer(intArray60, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem52.TwoPointer(intArray60, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem13.BruteForce(intArray60, 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem67 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem68 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem68.BruteForce(intArray71, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem67.Hashmap(intArray71, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem76 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem77 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem77.BruteForce(intArray80, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem76.Hashmap(intArray80, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem67.BruteForce(intArray80, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem13.BruteForce(intArray80, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem0.TwoPointer(intArray80, (int) ' ');
        java.lang.Class<?> wildcardClass91 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test2484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2484");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem10.TwoPointer(intArray17, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem9.TwoPointer(intArray17, (int) (byte) 0);
        int[] intArray26 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem9.Hashmap(intArray26, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray37 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem30.TwoPointer(intArray37, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem29.TwoPointer(intArray37, (int) (byte) 0);
        int[] intArray46 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem29.Hashmap(intArray46, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem9.Hashmap(intArray46, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem51.BruteForce(intArray54, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem9.Hashmap(intArray54, (int) (byte) 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem0.Hashmap(intArray54, (int) (short) 1);
        java.lang.Class<?> wildcardClass61 = intArray54.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test2485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2485");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem17.Hashmap(intArray21, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem27.BruteForce(intArray30, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem26.Hashmap(intArray30, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem26.TwoPointer(intArray38, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem17.Hashmap(intArray38, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem45 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem46.BruteForce(intArray49, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem45.Hashmap(intArray49, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem55.BruteForce(intArray58, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem54.Hashmap(intArray58, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem63 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem63.BruteForce(intArray66, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem54.TwoPointer(intArray66, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem45.Hashmap(intArray66, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem17.TwoPointer(intArray66, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem0.Hashmap(intArray66, (int) (byte) 100);
        java.lang.Class<?> wildcardClass77 = intListList76.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test2486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2486");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray14 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray14, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem17.Hashmap(intArray21, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem26.BruteForce(intArray29, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem17.TwoPointer(intArray29, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem34.Hashmap(intArray38, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem44 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem44.BruteForce(intArray47, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem43.Hashmap(intArray47, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem52.BruteForce(intArray55, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem43.TwoPointer(intArray55, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem34.Hashmap(intArray55, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem62 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem63 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem63.BruteForce(intArray66, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem62.Hashmap(intArray66, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem71 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem72 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem72.BruteForce(intArray75, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem71.Hashmap(intArray75, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem80 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray83 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem80.BruteForce(intArray83, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem71.TwoPointer(intArray83, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem62.Hashmap(intArray83, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem34.TwoPointer(intArray83, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem17.Hashmap(intArray83, (int) (byte) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList95 = threeSumProblem0.TwoPointer(intArray83, 100);
        int[] intArray96 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList98 = threeSumProblem0.Hashmap(intArray96, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0]");
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(intListList93);
        org.junit.Assert.assertNotNull(intListList95);
    }

    @Test
    public void test2487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2487");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.BruteForce(intArray4, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem10.TwoPointer(intArray17, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem9.TwoPointer(intArray17, (int) (byte) 0);
        int[] intArray23 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem9.TwoPointer(intArray23, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray34 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem27.TwoPointer(intArray34, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem26.TwoPointer(intArray34, (int) (byte) 0);
        int[] intArray43 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem26.Hashmap(intArray43, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem9.TwoPointer(intArray43, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem48.BruteForce(intArray51, (int) '#');
        int[] intArray57 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem48.BruteForce(intArray57, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem60.BruteForce(intArray63, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem48.Hashmap(intArray63, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem68 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem69 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem69.BruteForce(intArray72, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem68.Hashmap(intArray72, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem77 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem77.BruteForce(intArray80, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem68.TwoPointer(intArray80, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem48.Hashmap(intArray80, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem9.Hashmap(intArray80, (int) (byte) 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem0.BruteForce(intArray80, (int) (short) 100);
        java.lang.Class<?> wildcardClass91 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test2488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2488");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray14 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray14, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray25 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem18.TwoPointer(intArray25, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem17.TwoPointer(intArray25, (int) (byte) 0);
        int[] intArray34 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem17.Hashmap(intArray34, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem38 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem38.TwoPointer(intArray45, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem37.TwoPointer(intArray45, (int) (byte) 0);
        int[] intArray54 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem37.Hashmap(intArray54, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem17.Hashmap(intArray54, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem59.BruteForce(intArray62, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem17.Hashmap(intArray62, (int) (byte) 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem0.TwoPointer(intArray62, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem69 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem70 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray77 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem70.TwoPointer(intArray77, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem69.TwoPointer(intArray77, (int) (byte) 0);
        int[] intArray86 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem69.Hashmap(intArray86, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem0.BruteForce(intArray86, 0);
        int[] intArray91 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem0.Hashmap(intArray91, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0]");
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intListList90);
    }

    @Test
    public void test2489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2489");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem11 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray18 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem11.TwoPointer(intArray18, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem10.TwoPointer(intArray18, (int) (byte) 0);
        int[] intArray27 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem10.Hashmap(intArray27, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem31.TwoPointer(intArray38, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem30.TwoPointer(intArray38, (int) (byte) 0);
        int[] intArray47 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem30.Hashmap(intArray47, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem10.Hashmap(intArray47, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem52.BruteForce(intArray55, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem10.Hashmap(intArray55, (int) (byte) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem61 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem61.BruteForce(intArray64, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem60.Hashmap(intArray64, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem10.Hashmap(intArray64, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem0.BruteForce(intArray64, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem73 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem74.BruteForce(intArray77, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem73.Hashmap(intArray77, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem82 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray85 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem82.BruteForce(intArray85, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem73.BruteForce(intArray85, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem0.BruteForce(intArray85, (int) (byte) -1);
        int[] intArray92 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem0.Hashmap(intArray92, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(intListList91);
    }

    @Test
    public void test2490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2490");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem21.BruteForce(intArray24, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem20.Hashmap(intArray24, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem0.TwoPointer(intArray24, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem32 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem32.BruteForce(intArray35, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem31.BruteForce(intArray35, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray48 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem41.TwoPointer(intArray48, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem40.TwoPointer(intArray48, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem31.TwoPointer(intArray48, (int) (byte) 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem0.TwoPointer(intArray48, 10);
        int[] intArray57 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem0.BruteForce(intArray57, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intListList56);
    }

    @Test
    public void test2491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2491");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem17.BruteForce(intArray20, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem23 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem24 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray31 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem24.TwoPointer(intArray31, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem23.TwoPointer(intArray31, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray44 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem37.TwoPointer(intArray44, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem36.TwoPointer(intArray44, (int) (byte) 0);
        int[] intArray53 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem36.Hashmap(intArray53, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem23.Hashmap(intArray53, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem58 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem58.BruteForce(intArray61, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem64 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem64.BruteForce(intArray67, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem58.TwoPointer(intArray67, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem72 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem72.BruteForce(intArray75, (int) '#');
        int[] intArray81 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem72.BruteForce(intArray81, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem58.BruteForce(intArray81, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem23.TwoPointer(intArray81, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem17.TwoPointer(intArray81, (int) (byte) 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem0.TwoPointer(intArray81, 0);
        int[] intArray92 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem0.BruteForce(intArray92, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(intListList91);
    }

    @Test
    public void test2492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2492");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        int[] intArray13 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem0.TwoPointer(intArray13, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem16 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem17.TwoPointer(intArray24, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem16.TwoPointer(intArray24, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem0.BruteForce(intArray24, (int) (short) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem32 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem32.BruteForce(intArray35, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem31.Hashmap(intArray35, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem40.BruteForce(intArray43, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem31.TwoPointer(intArray43, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem49.BruteForce(intArray52, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem48.BruteForce(intArray52, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem31.TwoPointer(intArray52, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem0.Hashmap(intArray52, (int) ' ');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem61 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray68 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem61.TwoPointer(intArray68, (int) (short) 1);
        int[] intArray74 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem61.TwoPointer(intArray74, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem77 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem78 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray81 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem78.BruteForce(intArray81, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem77.BruteForce(intArray81, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem61.Hashmap(intArray81, 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem0.Hashmap(intArray81, 10);
        java.lang.Class<?> wildcardClass90 = intListList89.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test2493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2493");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.BruteForce(intArray4, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem10.TwoPointer(intArray17, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem9.TwoPointer(intArray17, (int) (byte) 0);
        int[] intArray26 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem9.Hashmap(intArray26, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem30.BruteForce(intArray33, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem29.Hashmap(intArray33, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem9.TwoPointer(intArray33, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.Hashmap(intArray33, (int) (byte) 10);
        int[] intArray47 = new int[] { (byte) 10, (byte) 100, 'a', '4', 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem0.TwoPointer(intArray47, (int) (byte) 0);
        java.lang.Class<?> wildcardClass50 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[1, 10, 52, 97, 100]");
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test2494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2494");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem2 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList7 = threeSumProblem2.BruteForce(intArray5, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem1.Hashmap(intArray5, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem1.TwoPointer(intArray13, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem19 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList24 = threeSumProblem19.BruteForce(intArray22, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem18.Hashmap(intArray22, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem27.BruteForce(intArray30, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem18.TwoPointer(intArray30, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem1.Hashmap(intArray30, (int) 'a');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem38 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem38.BruteForce(intArray41, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem37.Hashmap(intArray41, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem46.BruteForce(intArray49, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem37.TwoPointer(intArray49, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem55.BruteForce(intArray58, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem54.Hashmap(intArray58, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem63 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem63.BruteForce(intArray66, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem54.TwoPointer(intArray66, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem37.Hashmap(intArray66, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem1.Hashmap(intArray66, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem0.TwoPointer(intArray66, (int) '#');
        int[] intArray77 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem0.Hashmap(intArray77, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList7);
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList24);
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intListList76);
    }

    @Test
    public void test2495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2495");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray14 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray14, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray25 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem18.TwoPointer(intArray25, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem17.TwoPointer(intArray25, (int) (byte) 0);
        int[] intArray34 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem17.Hashmap(intArray34, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem38 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem38.BruteForce(intArray41, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem37.Hashmap(intArray41, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem17.TwoPointer(intArray41, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem50 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray57 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem50.TwoPointer(intArray57, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem49.TwoPointer(intArray57, (int) (byte) 0);
        int[] intArray63 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem49.TwoPointer(intArray63, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem48.TwoPointer(intArray63, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem17.TwoPointer(intArray63, (int) (short) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem70 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem71 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem71.BruteForce(intArray74, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem70.Hashmap(intArray74, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem79 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem79.BruteForce(intArray82, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem70.BruteForce(intArray82, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem17.BruteForce(intArray82, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem0.BruteForce(intArray82, 10);
        java.lang.Class<?> wildcardClass91 = intArray82.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0]");
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0]");
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test2496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2496");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        int[] intArray21 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem12.BruteForce(intArray21, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem24 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem24.BruteForce(intArray27, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem12.Hashmap(intArray27, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem32 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem33 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem33.BruteForce(intArray36, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem32.Hashmap(intArray36, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray49 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem42.TwoPointer(intArray49, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem41.TwoPointer(intArray49, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem32.BruteForce(intArray49, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem12.TwoPointer(intArray49, (int) (byte) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem58 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem58.BruteForce(intArray61, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem64 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem64.BruteForce(intArray67, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem58.TwoPointer(intArray67, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem12.Hashmap(intArray67, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem75 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray82 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem75.TwoPointer(intArray82, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem74.TwoPointer(intArray82, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem12.TwoPointer(intArray82, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem0.BruteForce(intArray82, (int) ' ');
        java.lang.Class<?> wildcardClass91 = intArray82.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test2497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2497");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        int[] intArray37 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray37, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.Hashmap(intArray37, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray50 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem43.TwoPointer(intArray50, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem42.TwoPointer(intArray50, (int) (byte) 0);
        int[] intArray56 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem42.TwoPointer(intArray56, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem59.BruteForce(intArray62, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem65 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem65.BruteForce(intArray68, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem59.TwoPointer(intArray68, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem73 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem74.BruteForce(intArray77, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem73.Hashmap(intArray77, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem82 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray85 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem82.BruteForce(intArray85, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem73.TwoPointer(intArray85, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem59.BruteForce(intArray85, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem42.Hashmap(intArray85, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList95 = threeSumProblem0.Hashmap(intArray85, (int) (byte) -1);
        int[] intArray96 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList98 = threeSumProblem0.BruteForce(intArray96, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0]");
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(intListList93);
        org.junit.Assert.assertNotNull(intListList95);
    }

    @Test
    public void test2498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2498");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem16 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem16.BruteForce(intArray19, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem10.TwoPointer(intArray19, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem0.BruteForce(intArray19, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray35 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem26.BruteForce(intArray35, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem0.TwoPointer(intArray35, (int) ' ');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray48 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem41.TwoPointer(intArray48, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem40.TwoPointer(intArray48, (int) (byte) 0);
        int[] intArray57 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem40.Hashmap(intArray57, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem61 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem61.BruteForce(intArray64, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem60.Hashmap(intArray64, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem40.TwoPointer(intArray64, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem71 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem72 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem72.BruteForce(intArray75, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem71.Hashmap(intArray75, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem80 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem81 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray84 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem81.BruteForce(intArray84, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem80.Hashmap(intArray84, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem71.BruteForce(intArray84, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem40.BruteForce(intArray84, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem0.BruteForce(intArray84, (int) 'a');
        java.lang.Class<?> wildcardClass95 = intListList94.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test2499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2499");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray9 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem6.BruteForce(intArray9, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList13 = threeSumProblem0.TwoPointer(intArray9, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem15 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem15.BruteForce(intArray18, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem14.Hashmap(intArray18, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem23 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem24 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray31 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem24.TwoPointer(intArray31, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem23.TwoPointer(intArray31, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem14.BruteForce(intArray31, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem0.TwoPointer(intArray31, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem41.BruteForce(intArray44, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem40.Hashmap(intArray44, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem50 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray57 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem50.TwoPointer(intArray57, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem49.TwoPointer(intArray57, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem40.BruteForce(intArray57, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem64 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem65 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray72 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem65.TwoPointer(intArray72, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem64.TwoPointer(intArray72, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem40.TwoPointer(intArray72, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem0.Hashmap(intArray72, 0);
        java.lang.Class<?> wildcardClass81 = intListList80.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intListList13);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test2500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2500");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem11 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray18 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem11.TwoPointer(intArray18, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem10.TwoPointer(intArray18, (int) (byte) 0);
        int[] intArray27 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem10.Hashmap(intArray27, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem31.BruteForce(intArray34, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem30.Hashmap(intArray34, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem10.TwoPointer(intArray34, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem42.BruteForce(intArray45, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem41.Hashmap(intArray45, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem50 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem51.BruteForce(intArray54, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem50.Hashmap(intArray54, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem41.BruteForce(intArray54, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem10.BruteForce(intArray54, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem0.TwoPointer(intArray54, (int) (short) 1);
        java.lang.Class<?> wildcardClass65 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(wildcardClass65);
    }
}

