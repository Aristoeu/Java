package datastructures.disjointsets;

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest1 {

    public static boolean debug = false;

    @Test
    public void test0501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0501");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        java.io.Serializable serializable7 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int10 = serializableNode9.rank;
        int int11 = serializableNode9.rank;
        java.io.Serializable serializable12 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode9.parent;
        java.io.Serializable serializable14 = serializableNode13.data;
        int int15 = serializableNode13.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode13.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode16.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode17.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode17.parent;
        serializableNode6.parent = serializableNode19;
        serializableNode19.rank = (byte) 100;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode19.parent;
        java.io.Serializable serializable24 = serializableNode19.data;
        serializableNode19.rank = (short) 10;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertEquals("'" + serializable24 + "' != '" + 10L + "'", serializable24, 10L);
    }

    @Test
    public void test0502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0502");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        serializableNode1.rank = (byte) 1;
        serializableNode1.data = 10.0d;
        serializableNode1.rank = (byte) 100;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int14 = serializableNode13.rank;
        int int15 = serializableNode13.rank;
        java.io.Serializable serializable16 = serializableNode13.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode13.parent;
        java.io.Serializable serializable18 = serializableNode17.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode17.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int22 = serializableNode21.rank;
        int int23 = serializableNode21.rank;
        java.io.Serializable serializable24 = serializableNode21.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = serializableNode21.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable28 = serializableNode27.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = serializableNode27.parent;
        serializableNode25.parent = serializableNode29;
        int int31 = serializableNode29.rank;
        serializableNode19.parent = serializableNode29;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (short) -1);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode35 = serializableNode34.parent;
        serializableNode19.parent = serializableNode34;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode38 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable39 = serializableNode38.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode40 = serializableNode38.parent;
        int int41 = serializableNode38.rank;
        serializableNode19.parent = serializableNode38;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode44 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int45 = serializableNode44.rank;
        int int46 = serializableNode44.rank;
        serializableNode44.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode49 = serializableNode44.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode51 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode52 = serializableNode51.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode53 = serializableNode51.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode55 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable56 = serializableNode55.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode57 = serializableNode55.parent;
        int int58 = serializableNode55.rank;
        java.io.Serializable serializable59 = serializableNode55.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode61 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode62 = serializableNode61.parent;
        serializableNode61.rank = (byte) 100;
        java.lang.Class<?> wildcardClass65 = serializableNode61.getClass();
        serializableNode55.data = wildcardClass65;
        serializableNode51.data = wildcardClass65;
        serializableNode44.data = wildcardClass65;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode69 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass65);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode70 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass65);
        serializableNode38.data = wildcardClass65;
        serializableNode1.data = wildcardClass65;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertEquals("'" + serializable18 + "' != '" + 10L + "'", serializable18, 10L);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertEquals("'" + serializable24 + "' != '" + 10L + "'", serializable24, 10L);
        org.junit.Assert.assertNotNull(serializableNode25);
        org.junit.Assert.assertEquals("'" + serializable28 + "' != '" + 10L + "'", serializable28, 10L);
        org.junit.Assert.assertNotNull(serializableNode29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(serializableNode35);
        org.junit.Assert.assertEquals("'" + serializable39 + "' != '" + 10L + "'", serializable39, 10L);
        org.junit.Assert.assertNotNull(serializableNode40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(serializableNode49);
        org.junit.Assert.assertNotNull(serializableNode52);
        org.junit.Assert.assertNotNull(serializableNode53);
        org.junit.Assert.assertEquals("'" + serializable56 + "' != '" + 10L + "'", serializable56, 10L);
        org.junit.Assert.assertNotNull(serializableNode57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertEquals("'" + serializable59 + "' != '" + 10L + "'", serializable59, 10L);
        org.junit.Assert.assertNotNull(serializableNode62);
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test0503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0503");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode2 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        int int4 = serializableNode1.rank;
        java.lang.Class<?> wildcardClass5 = serializableNode1.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass5);
        org.junit.Assert.assertNotNull(serializableNode2);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test0504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0504");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable11 = serializableNode10.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode10.parent;
        java.io.Serializable serializable13 = serializableNode12.data;
        serializableNode12.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode12.parent;
        serializableNode8.parent = serializableNode16;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode16.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode18.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable22 = serializableNode21.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode21.parent;
        int int24 = serializableNode21.rank;
        java.io.Serializable serializable25 = serializableNode21.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = serializableNode27.parent;
        serializableNode27.rank = (byte) 100;
        java.lang.Class<?> wildcardClass31 = serializableNode27.getClass();
        serializableNode21.data = wildcardClass31;
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.GenericDeclaration> genericDeclarationNode33 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.GenericDeclaration>((java.lang.reflect.GenericDeclaration) wildcardClass31);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass31);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode36 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = serializableNode36.parent;
        serializableNode37.rank = (byte) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int42 = serializableNode41.rank;
        int int43 = serializableNode41.rank;
        java.io.Serializable serializable44 = serializableNode41.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode46 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable47 = serializableNode46.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode48 = serializableNode46.parent;
        serializableNode41.parent = serializableNode46;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode50 = serializableNode46.parent;
        serializableNode37.parent = serializableNode50;
        serializableNode34.parent = serializableNode37;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode54 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int55 = serializableNode54.rank;
        int int56 = serializableNode54.rank;
        serializableNode54.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>> serializableNodeNode59 = new com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>>(serializableNode54);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode61 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int62 = serializableNode61.rank;
        int int63 = serializableNode61.rank;
        java.io.Serializable serializable64 = serializableNode61.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode65 = serializableNode61.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode67 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable68 = serializableNode67.data;
        int int69 = serializableNode67.rank;
        serializableNode67.rank = 'a';
        java.lang.Class<?> wildcardClass72 = serializableNode67.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode73 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass72);
        serializableNode61.data = wildcardClass72;
        serializableNode54.data = wildcardClass72;
        serializableNode37.data = wildcardClass72;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode77 = serializableNode37.parent;
        int int78 = serializableNode37.rank;
        serializableNode18.parent = serializableNode37;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertEquals("'" + serializable22 + "' != '" + 10L + "'", serializable22, 10L);
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertEquals("'" + serializable25 + "' != '" + 10L + "'", serializable25, 10L);
        org.junit.Assert.assertNotNull(serializableNode28);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(serializableNode37);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertEquals("'" + serializable44 + "' != '" + 10L + "'", serializable44, 10L);
        org.junit.Assert.assertEquals("'" + serializable47 + "' != '" + 10L + "'", serializable47, 10L);
        org.junit.Assert.assertNotNull(serializableNode48);
        org.junit.Assert.assertNotNull(serializableNode50);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertEquals("'" + serializable64 + "' != '" + 10L + "'", serializable64, 10L);
        org.junit.Assert.assertNotNull(serializableNode65);
        org.junit.Assert.assertEquals("'" + serializable68 + "' != '" + 10L + "'", serializable68, 10L);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(serializableNode77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 1 + "'", int78 == 1);
    }

    @Test
    public void test0505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0505");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable7 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode6.parent;
        serializableNode1.parent = serializableNode6;
        int int10 = serializableNode1.rank;
        java.lang.Class<?> wildcardClass11 = serializableNode1.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass11);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass11);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int16 = serializableNode15.rank;
        int int17 = serializableNode15.rank;
        java.io.Serializable serializable18 = serializableNode15.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode15.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = serializableNode15.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable23 = serializableNode22.data;
        int int24 = serializableNode22.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode22.parent = serializableNode26;
        serializableNode20.parent = serializableNode22;
        int int29 = serializableNode20.rank;
        serializableNode20.data = ' ';
        serializableNode13.parent = serializableNode20;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int35 = serializableNode34.rank;
        int int36 = serializableNode34.rank;
        java.io.Serializable serializable37 = serializableNode34.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode38 = serializableNode34.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode40 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable41 = serializableNode40.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode42 = serializableNode40.parent;
        serializableNode38.parent = serializableNode42;
        int int44 = serializableNode42.rank;
        serializableNode42.rank = (byte) 0;
        serializableNode42.rank = (byte) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode50 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int51 = serializableNode50.rank;
        int int52 = serializableNode50.rank;
        java.io.Serializable serializable53 = serializableNode50.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode54 = serializableNode50.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode55 = serializableNode50.parent;
        java.io.Serializable serializable56 = serializableNode55.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode58 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int59 = serializableNode58.rank;
        int int60 = serializableNode58.rank;
        java.io.Serializable serializable61 = serializableNode58.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode62 = serializableNode58.parent;
        java.io.Serializable serializable63 = serializableNode62.data;
        int int64 = serializableNode62.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode65 = serializableNode62.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode66 = serializableNode65.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode67 = serializableNode66.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode68 = serializableNode66.parent;
        serializableNode55.parent = serializableNode68;
        serializableNode68.rank = (byte) 100;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode72 = serializableNode68.parent;
        serializableNode42.parent = serializableNode72;
        serializableNode13.parent = serializableNode72;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode75 = serializableNode13.parent;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertEquals("'" + serializable18 + "' != '" + 10L + "'", serializable18, 10L);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertNotNull(serializableNode20);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertEquals("'" + serializable37 + "' != '" + 10L + "'", serializable37, 10L);
        org.junit.Assert.assertNotNull(serializableNode38);
        org.junit.Assert.assertEquals("'" + serializable41 + "' != '" + 10L + "'", serializable41, 10L);
        org.junit.Assert.assertNotNull(serializableNode42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertEquals("'" + serializable53 + "' != '" + 10L + "'", serializable53, 10L);
        org.junit.Assert.assertNotNull(serializableNode54);
        org.junit.Assert.assertNotNull(serializableNode55);
        org.junit.Assert.assertEquals("'" + serializable56 + "' != '" + 10L + "'", serializable56, 10L);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertEquals("'" + serializable61 + "' != '" + 10L + "'", serializable61, 10L);
        org.junit.Assert.assertNotNull(serializableNode62);
        org.junit.Assert.assertEquals("'" + serializable63 + "' != '" + 10L + "'", serializable63, 10L);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNotNull(serializableNode65);
        org.junit.Assert.assertNotNull(serializableNode66);
        org.junit.Assert.assertNotNull(serializableNode67);
        org.junit.Assert.assertNotNull(serializableNode68);
        org.junit.Assert.assertNotNull(serializableNode72);
        org.junit.Assert.assertNotNull(serializableNode75);
    }

    @Test
    public void test0506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0506");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int10 = serializableNode9.rank;
        int int11 = serializableNode9.rank;
        java.io.Serializable serializable12 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode9.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable16 = serializableNode15.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode15.parent;
        serializableNode13.parent = serializableNode17;
        int int19 = serializableNode17.rank;
        serializableNode7.parent = serializableNode17;
        java.io.Serializable serializable21 = serializableNode17.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = serializableNode17.parent;
        java.io.Serializable serializable23 = serializableNode17.data;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertEquals("'" + serializable21 + "' != '" + 10L + "'", serializable21, 10L);
        org.junit.Assert.assertNotNull(serializableNode22);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
    }

    @Test
    public void test0507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0507");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        serializableNode1.rank = 'a';
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
    }

    @Test
    public void test0508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0508");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        serializableNode1.rank = (short) 10;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int11 = serializableNode10.rank;
        int int12 = serializableNode10.rank;
        java.io.Serializable serializable13 = serializableNode10.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = serializableNode10.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable17 = serializableNode16.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode16.parent;
        serializableNode14.parent = serializableNode18;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int22 = serializableNode21.rank;
        int int23 = serializableNode21.rank;
        java.io.Serializable serializable24 = serializableNode21.data;
        serializableNode14.parent = serializableNode21;
        int int26 = serializableNode14.rank;
        java.io.Serializable serializable27 = serializableNode14.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int30 = serializableNode29.rank;
        int int31 = serializableNode29.rank;
        java.io.Serializable serializable32 = serializableNode29.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = serializableNode29.parent;
        java.io.Serializable serializable34 = serializableNode33.data;
        int int35 = serializableNode33.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode36 = serializableNode33.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = serializableNode33.parent;
        serializableNode14.parent = serializableNode33;
        serializableNode8.parent = serializableNode14;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable42 = serializableNode41.data;
        int int43 = serializableNode41.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode45 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int46 = serializableNode45.rank;
        int int47 = serializableNode45.rank;
        java.io.Serializable serializable48 = serializableNode45.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode50 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable51 = serializableNode50.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode52 = serializableNode50.parent;
        serializableNode45.parent = serializableNode50;
        serializableNode45.data = true;
        serializableNode41.parent = serializableNode45;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode57 = serializableNode45.parent;
        serializableNode14.parent = serializableNode45;
        serializableNode14.rank = (byte) 1;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode14);
        org.junit.Assert.assertEquals("'" + serializable17 + "' != '" + 10L + "'", serializable17, 10L);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertEquals("'" + serializable24 + "' != '" + 10L + "'", serializable24, 10L);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertEquals("'" + serializable27 + "' != '" + 10L + "'", serializable27, 10L);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertEquals("'" + serializable32 + "' != '" + 10L + "'", serializable32, 10L);
        org.junit.Assert.assertNotNull(serializableNode33);
        org.junit.Assert.assertEquals("'" + serializable34 + "' != '" + 10L + "'", serializable34, 10L);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(serializableNode36);
        org.junit.Assert.assertNotNull(serializableNode37);
        org.junit.Assert.assertEquals("'" + serializable42 + "' != '" + 10L + "'", serializable42, 10L);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertEquals("'" + serializable48 + "' != '" + 10L + "'", serializable48, 10L);
        org.junit.Assert.assertEquals("'" + serializable51 + "' != '" + 10L + "'", serializable51, 10L);
        org.junit.Assert.assertNotNull(serializableNode52);
        org.junit.Assert.assertNotNull(serializableNode57);
    }

    @Test
    public void test0509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0509");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        int int4 = serializableNode1.rank;
        java.io.Serializable serializable5 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode7.parent;
        serializableNode7.rank = (byte) 100;
        java.lang.Class<?> wildcardClass11 = serializableNode7.getClass();
        serializableNode1.data = wildcardClass11;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int16 = serializableNode15.rank;
        int int17 = serializableNode15.rank;
        java.io.Serializable serializable18 = serializableNode15.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode15.parent;
        java.io.Serializable serializable20 = serializableNode19.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode19.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int24 = serializableNode23.rank;
        int int25 = serializableNode23.rank;
        java.io.Serializable serializable26 = serializableNode23.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = serializableNode23.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable30 = serializableNode29.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = serializableNode29.parent;
        serializableNode27.parent = serializableNode31;
        int int33 = serializableNode31.rank;
        serializableNode21.parent = serializableNode31;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode36 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (short) -1);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = serializableNode36.parent;
        serializableNode21.parent = serializableNode36;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode39 = serializableNode36.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode40 = serializableNode36.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode42 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int43 = serializableNode42.rank;
        int int44 = serializableNode42.rank;
        java.io.Serializable serializable45 = serializableNode42.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode46 = serializableNode42.parent;
        java.io.Serializable serializable47 = serializableNode46.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode48 = serializableNode46.parent;
        java.io.Serializable serializable49 = serializableNode46.data;
        java.io.Serializable serializable50 = serializableNode46.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode52 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int53 = serializableNode52.rank;
        int int54 = serializableNode52.rank;
        java.io.Serializable serializable55 = serializableNode52.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode56 = serializableNode52.parent;
        java.lang.Class<?> wildcardClass57 = serializableNode56.getClass();
        serializableNode46.data = wildcardClass57;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode59 = serializableNode46.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode61 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable62 = serializableNode61.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode63 = serializableNode61.parent;
        java.io.Serializable serializable64 = serializableNode63.data;
        serializableNode63.rank = (short) -1;
        java.lang.Class<?> wildcardClass67 = serializableNode63.getClass();
        serializableNode59.data = wildcardClass67;
        serializableNode59.rank = 1;
        serializableNode36.parent = serializableNode59;
        java.lang.Class<?> wildcardClass72 = serializableNode36.getClass();
        serializableNode13.data = wildcardClass72;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + serializable5 + "' != '" + 10L + "'", serializable5, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertEquals("'" + serializable18 + "' != '" + 10L + "'", serializable18, 10L);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertEquals("'" + serializable20 + "' != '" + 10L + "'", serializable20, 10L);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertEquals("'" + serializable26 + "' != '" + 10L + "'", serializable26, 10L);
        org.junit.Assert.assertNotNull(serializableNode27);
        org.junit.Assert.assertEquals("'" + serializable30 + "' != '" + 10L + "'", serializable30, 10L);
        org.junit.Assert.assertNotNull(serializableNode31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(serializableNode37);
        org.junit.Assert.assertNotNull(serializableNode39);
        org.junit.Assert.assertNotNull(serializableNode40);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertEquals("'" + serializable45 + "' != '" + 10L + "'", serializable45, 10L);
        org.junit.Assert.assertNotNull(serializableNode46);
        org.junit.Assert.assertEquals("'" + serializable47 + "' != '" + 10L + "'", serializable47, 10L);
        org.junit.Assert.assertNotNull(serializableNode48);
        org.junit.Assert.assertEquals("'" + serializable49 + "' != '" + 10L + "'", serializable49, 10L);
        org.junit.Assert.assertEquals("'" + serializable50 + "' != '" + 10L + "'", serializable50, 10L);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertEquals("'" + serializable55 + "' != '" + 10L + "'", serializable55, 10L);
        org.junit.Assert.assertNotNull(serializableNode56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(serializableNode59);
        org.junit.Assert.assertEquals("'" + serializable62 + "' != '" + 10L + "'", serializable62, 10L);
        org.junit.Assert.assertNotNull(serializableNode63);
        org.junit.Assert.assertEquals("'" + serializable64 + "' != '" + 10L + "'", serializable64, 10L);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test0510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0510");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        int int7 = serializableNode5.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode8.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode9.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int13 = serializableNode12.rank;
        int int14 = serializableNode12.rank;
        serializableNode12.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>> serializableNodeNode17 = new com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>>(serializableNode12);
        java.io.Serializable serializable18 = serializableNode12.data;
        java.lang.Class<?> wildcardClass19 = serializableNode12.getClass();
        serializableNode10.data = wildcardClass19;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int23 = serializableNode22.rank;
        int int24 = serializableNode22.rank;
        java.io.Serializable serializable25 = serializableNode22.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = serializableNode22.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = serializableNode22.parent;
        java.lang.Class<?> wildcardClass28 = serializableNode22.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass28);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass28);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass28);
        serializableNode10.parent = serializableNode31;
        java.lang.Class<?> wildcardClass33 = serializableNode10.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + serializable18 + "' != '" + 10L + "'", serializable18, 10L);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertEquals("'" + serializable25 + "' != '" + 10L + "'", serializable25, 10L);
        org.junit.Assert.assertNotNull(serializableNode26);
        org.junit.Assert.assertNotNull(serializableNode27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test0511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0511");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        java.io.Serializable serializable7 = serializableNode6.data;
        int int8 = serializableNode6.rank;
        java.io.Serializable serializable9 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable12 = serializableNode11.data;
        int int13 = serializableNode11.rank;
        serializableNode11.rank = 'a';
        java.lang.Class<?> wildcardClass16 = serializableNode11.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass16);
        serializableNode6.parent = serializableNode17;
        serializableNode17.rank = (short) 10;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0512");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        serializableNode1.rank = (byte) 1;
        int int7 = serializableNode1.rank;
        int int8 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable11 = serializableNode10.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode10.parent;
        java.io.Serializable serializable13 = serializableNode12.data;
        serializableNode12.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode12.parent;
        int int17 = serializableNode16.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode16.parent;
        java.lang.Class<?> wildcardClass19 = serializableNode18.getClass();
        serializableNode1.data = wildcardClass19;
        serializableNode1.data = 100L;
        serializableNode1.rank = 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = serializableNode1.parent;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(serializableNode25);
    }

    @Test
    public void test0513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0513");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = (short) -1;
        serializableNode1.rank = (short) -1;
        java.io.Serializable serializable8 = serializableNode1.data;
        int int9 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode1.parent;
        serializableNode1.rank = (byte) 1;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(serializableNode10);
    }

    @Test
    public void test0514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0514");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        serializableNode1.data = (byte) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable10 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = serializableNode9.parent;
        int int12 = serializableNode9.rank;
        java.io.Serializable serializable13 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode15.parent;
        serializableNode15.rank = (byte) 100;
        java.lang.Class<?> wildcardClass19 = serializableNode15.getClass();
        serializableNode9.data = wildcardClass19;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode9.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        java.lang.Class<?> wildcardClass24 = serializableNode23.getClass();
        serializableNode21.data = wildcardClass24;
        int int26 = serializableNode21.rank;
        serializableNode21.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = serializableNode21.parent;
        serializableNode7.parent = serializableNode29;
        java.io.Serializable serializable31 = serializableNode29.data;
        int int32 = serializableNode29.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int35 = serializableNode34.rank;
        int int36 = serializableNode34.rank;
        java.io.Serializable serializable37 = serializableNode34.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode38 = serializableNode34.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode39 = serializableNode34.parent;
        java.lang.Class<?> wildcardClass40 = serializableNode34.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass40);
        serializableNode29.data = wildcardClass40;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode44 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int45 = serializableNode44.rank;
        int int46 = serializableNode44.rank;
        serializableNode44.data = (short) 100;
        serializableNode29.parent = serializableNode44;
        java.io.Serializable serializable50 = serializableNode44.data;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertEquals("'" + serializable10 + "' != '" + 10L + "'", serializable10, 10L);
        org.junit.Assert.assertNotNull(serializableNode11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(serializableNode29);
        org.junit.Assert.assertNotNull(serializable31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertEquals("'" + serializable37 + "' != '" + 10L + "'", serializable37, 10L);
        org.junit.Assert.assertNotNull(serializableNode38);
        org.junit.Assert.assertNotNull(serializableNode39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertEquals("'" + serializable50 + "' != '" + (short) 100 + "'", serializable50, (short) 100);
    }

    @Test
    public void test0515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0515");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.lang.Class<?> wildcardClass2 = serializableNode1.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.AnnotatedElement> annotatedElementNode3 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.AnnotatedElement>((java.lang.reflect.AnnotatedElement) wildcardClass2);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode4 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass2);
        int int5 = serializableNode4.rank;
        int int6 = serializableNode4.rank;
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    }

    @Test
    public void test0516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0516");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        java.io.Serializable serializable7 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int10 = serializableNode9.rank;
        int int11 = serializableNode9.rank;
        java.io.Serializable serializable12 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode9.parent;
        java.io.Serializable serializable14 = serializableNode13.data;
        int int15 = serializableNode13.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode13.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode16.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode17.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode17.parent;
        serializableNode6.parent = serializableNode19;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int23 = serializableNode22.rank;
        int int24 = serializableNode22.rank;
        java.io.Serializable serializable25 = serializableNode22.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = serializableNode22.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable29 = serializableNode28.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = serializableNode28.parent;
        serializableNode26.parent = serializableNode30;
        int int32 = serializableNode30.rank;
        serializableNode30.data = (-1);
        int int35 = serializableNode30.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int38 = serializableNode37.rank;
        int int39 = serializableNode37.rank;
        java.io.Serializable serializable40 = serializableNode37.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = serializableNode37.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode42 = serializableNode37.parent;
        serializableNode37.rank = (byte) 10;
        serializableNode37.data = 10L;
        serializableNode30.parent = serializableNode37;
        serializableNode19.parent = serializableNode37;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode50 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable51 = serializableNode50.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode52 = serializableNode50.parent;
        java.io.Serializable serializable53 = serializableNode52.data;
        serializableNode52.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode56 = serializableNode52.parent;
        int int57 = serializableNode56.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode58 = serializableNode56.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode59 = serializableNode58.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode61 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable62 = serializableNode61.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode63 = serializableNode61.parent;
        int int64 = serializableNode61.rank;
        java.io.Serializable serializable65 = serializableNode61.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode67 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode68 = serializableNode67.parent;
        serializableNode67.rank = (byte) 100;
        java.lang.Class<?> wildcardClass71 = serializableNode67.getClass();
        serializableNode61.data = wildcardClass71;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode73 = serializableNode61.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode75 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        java.lang.Class<?> wildcardClass76 = serializableNode75.getClass();
        serializableNode73.data = wildcardClass76;
        serializableNode73.rank = (short) 100;
        serializableNode58.parent = serializableNode73;
        serializableNode37.parent = serializableNode73;
        java.lang.Class<?> wildcardClass82 = serializableNode37.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertEquals("'" + serializable25 + "' != '" + 10L + "'", serializable25, 10L);
        org.junit.Assert.assertNotNull(serializableNode26);
        org.junit.Assert.assertEquals("'" + serializable29 + "' != '" + 10L + "'", serializable29, 10L);
        org.junit.Assert.assertNotNull(serializableNode30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertEquals("'" + serializable40 + "' != '" + 10L + "'", serializable40, 10L);
        org.junit.Assert.assertNotNull(serializableNode41);
        org.junit.Assert.assertNotNull(serializableNode42);
        org.junit.Assert.assertEquals("'" + serializable51 + "' != '" + 10L + "'", serializable51, 10L);
        org.junit.Assert.assertNotNull(serializableNode52);
        org.junit.Assert.assertEquals("'" + serializable53 + "' != '" + 10L + "'", serializable53, 10L);
        org.junit.Assert.assertNotNull(serializableNode56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNotNull(serializableNode58);
        org.junit.Assert.assertNotNull(serializableNode59);
        org.junit.Assert.assertEquals("'" + serializable62 + "' != '" + 10L + "'", serializable62, 10L);
        org.junit.Assert.assertNotNull(serializableNode63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertEquals("'" + serializable65 + "' != '" + 10L + "'", serializable65, 10L);
        org.junit.Assert.assertNotNull(serializableNode68);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(serializableNode73);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test0517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0517");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        int int7 = serializableNode5.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode8.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode9.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = serializableNode9.parent;
        int int12 = serializableNode9.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertNotNull(serializableNode11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
    }

    @Test
    public void test0518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0518");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode1.parent = serializableNode5;
        serializableNode1.data = '#';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int11 = serializableNode10.rank;
        int int12 = serializableNode10.rank;
        serializableNode10.data = (short) 100;
        serializableNode1.parent = serializableNode10;
        java.io.Serializable serializable16 = serializableNode10.data;
        int int17 = serializableNode10.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode10.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int21 = serializableNode20.rank;
        int int22 = serializableNode20.rank;
        serializableNode20.rank = (short) -1;
        serializableNode20.rank = (short) -1;
        java.io.Serializable serializable27 = serializableNode20.data;
        int int28 = serializableNode20.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 'a');
        serializableNode20.parent = serializableNode30;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = serializableNode30.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int35 = serializableNode34.rank;
        int int36 = serializableNode34.rank;
        java.io.Serializable serializable37 = serializableNode34.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode38 = serializableNode34.parent;
        java.io.Serializable serializable39 = serializableNode38.data;
        int int40 = serializableNode38.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = serializableNode38.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode42 = serializableNode41.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode44 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int45 = serializableNode44.rank;
        int int46 = serializableNode44.rank;
        java.io.Serializable serializable47 = serializableNode44.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode48 = serializableNode44.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode50 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable51 = serializableNode50.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode52 = serializableNode50.parent;
        serializableNode48.parent = serializableNode52;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode55 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int56 = serializableNode55.rank;
        int int57 = serializableNode55.rank;
        java.io.Serializable serializable58 = serializableNode55.data;
        serializableNode48.parent = serializableNode55;
        int int60 = serializableNode48.rank;
        java.io.Serializable serializable61 = serializableNode48.data;
        serializableNode42.parent = serializableNode48;
        serializableNode30.parent = serializableNode42;
        java.lang.Class<?> wildcardClass64 = serializableNode30.getClass();
        serializableNode10.data = wildcardClass64;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode67 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable68 = serializableNode67.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode69 = serializableNode67.parent;
        java.io.Serializable serializable70 = serializableNode69.data;
        serializableNode69.rank = (short) -1;
        java.lang.Class<?> wildcardClass73 = serializableNode69.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode74 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass73);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode75 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass73);
        serializableNode10.data = wildcardClass73;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + (short) 100 + "'", serializable16, (short) 100);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertEquals("'" + serializable27 + "' != '" + 10L + "'", serializable27, 10L);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(serializableNode32);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertEquals("'" + serializable37 + "' != '" + 10L + "'", serializable37, 10L);
        org.junit.Assert.assertNotNull(serializableNode38);
        org.junit.Assert.assertEquals("'" + serializable39 + "' != '" + 10L + "'", serializable39, 10L);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(serializableNode41);
        org.junit.Assert.assertNotNull(serializableNode42);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertEquals("'" + serializable47 + "' != '" + 10L + "'", serializable47, 10L);
        org.junit.Assert.assertNotNull(serializableNode48);
        org.junit.Assert.assertEquals("'" + serializable51 + "' != '" + 10L + "'", serializable51, 10L);
        org.junit.Assert.assertNotNull(serializableNode52);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertEquals("'" + serializable58 + "' != '" + 10L + "'", serializable58, 10L);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertEquals("'" + serializable61 + "' != '" + 10L + "'", serializable61, 10L);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertEquals("'" + serializable68 + "' != '" + 10L + "'", serializable68, 10L);
        org.junit.Assert.assertNotNull(serializableNode69);
        org.junit.Assert.assertEquals("'" + serializable70 + "' != '" + 10L + "'", serializable70, 10L);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test0519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0519");
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.constant.ConstantDesc> constantDescNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.constant.ConstantDesc>((java.lang.constant.ConstantDesc) 52);
    }

    @Test
    public void test0520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0520");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        serializableNode1.rank = (byte) 10;
        int int9 = serializableNode1.rank;
        int int10 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = serializableNode1.parent;
        int int12 = serializableNode1.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 10 + "'", int9 == 10);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 10 + "'", int10 == 10);
        org.junit.Assert.assertNotNull(serializableNode11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 10 + "'", int12 == 10);
    }

    @Test
    public void test0521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0521");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode1.parent = serializableNode5;
        serializableNode1.data = '#';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int11 = serializableNode10.rank;
        int int12 = serializableNode10.rank;
        serializableNode10.data = (short) 100;
        serializableNode1.parent = serializableNode10;
        java.io.Serializable serializable16 = serializableNode10.data;
        serializableNode10.rank = (short) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode10.parent;
        java.io.Serializable serializable20 = serializableNode19.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int23 = serializableNode22.rank;
        int int24 = serializableNode22.rank;
        java.io.Serializable serializable25 = serializableNode22.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = serializableNode22.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = serializableNode22.parent;
        java.io.Serializable serializable28 = serializableNode27.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int31 = serializableNode30.rank;
        int int32 = serializableNode30.rank;
        java.io.Serializable serializable33 = serializableNode30.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = serializableNode30.parent;
        java.io.Serializable serializable35 = serializableNode34.data;
        int int36 = serializableNode34.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = serializableNode34.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode38 = serializableNode37.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode39 = serializableNode38.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode40 = serializableNode38.parent;
        serializableNode27.parent = serializableNode40;
        serializableNode40.rank = 97;
        serializableNode19.parent = serializableNode40;
        java.lang.Class<?> wildcardClass45 = serializableNode40.getClass();
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + (short) 100 + "'", serializable16, (short) 100);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertEquals("'" + serializable20 + "' != '" + (short) 100 + "'", serializable20, (short) 100);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertEquals("'" + serializable25 + "' != '" + 10L + "'", serializable25, 10L);
        org.junit.Assert.assertNotNull(serializableNode26);
        org.junit.Assert.assertNotNull(serializableNode27);
        org.junit.Assert.assertEquals("'" + serializable28 + "' != '" + 10L + "'", serializable28, 10L);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertEquals("'" + serializable33 + "' != '" + 10L + "'", serializable33, 10L);
        org.junit.Assert.assertNotNull(serializableNode34);
        org.junit.Assert.assertEquals("'" + serializable35 + "' != '" + 10L + "'", serializable35, 10L);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(serializableNode37);
        org.junit.Assert.assertNotNull(serializableNode38);
        org.junit.Assert.assertNotNull(serializableNode39);
        org.junit.Assert.assertNotNull(serializableNode40);
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test0522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0522");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode1.parent = serializableNode5;
        serializableNode1.data = '#';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int11 = serializableNode10.rank;
        int int12 = serializableNode10.rank;
        serializableNode10.data = (short) 100;
        serializableNode1.parent = serializableNode10;
        java.io.Serializable serializable16 = serializableNode10.data;
        serializableNode10.rank = (short) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode10.parent;
        java.io.Serializable serializable20 = serializableNode19.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int23 = serializableNode22.rank;
        int int24 = serializableNode22.rank;
        java.io.Serializable serializable25 = serializableNode22.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = serializableNode22.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = serializableNode22.parent;
        java.io.Serializable serializable28 = serializableNode27.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int31 = serializableNode30.rank;
        int int32 = serializableNode30.rank;
        java.io.Serializable serializable33 = serializableNode30.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = serializableNode30.parent;
        java.io.Serializable serializable35 = serializableNode34.data;
        int int36 = serializableNode34.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = serializableNode34.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode38 = serializableNode37.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode39 = serializableNode38.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode40 = serializableNode38.parent;
        serializableNode27.parent = serializableNode40;
        serializableNode40.rank = 97;
        serializableNode19.parent = serializableNode40;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode45 = serializableNode40.parent;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + (short) 100 + "'", serializable16, (short) 100);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertEquals("'" + serializable20 + "' != '" + (short) 100 + "'", serializable20, (short) 100);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertEquals("'" + serializable25 + "' != '" + 10L + "'", serializable25, 10L);
        org.junit.Assert.assertNotNull(serializableNode26);
        org.junit.Assert.assertNotNull(serializableNode27);
        org.junit.Assert.assertEquals("'" + serializable28 + "' != '" + 10L + "'", serializable28, 10L);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertEquals("'" + serializable33 + "' != '" + 10L + "'", serializable33, 10L);
        org.junit.Assert.assertNotNull(serializableNode34);
        org.junit.Assert.assertEquals("'" + serializable35 + "' != '" + 10L + "'", serializable35, 10L);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(serializableNode37);
        org.junit.Assert.assertNotNull(serializableNode38);
        org.junit.Assert.assertNotNull(serializableNode39);
        org.junit.Assert.assertNotNull(serializableNode40);
        org.junit.Assert.assertNotNull(serializableNode45);
    }

    @Test
    public void test0523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0523");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        int int7 = serializableNode5.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode8.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode9.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = serializableNode9.parent;
        java.io.Serializable serializable12 = serializableNode9.data;
        serializableNode9.rank = 0;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode9.parent;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertNotNull(serializableNode11);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertNotNull(serializableNode15);
    }

    @Test
    public void test0524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0524");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = (short) -1;
        serializableNode1.rank = (short) -1;
        java.io.Serializable serializable8 = serializableNode1.data;
        int int9 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int12 = serializableNode11.rank;
        int int13 = serializableNode11.rank;
        java.io.Serializable serializable14 = serializableNode11.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode11.parent;
        java.io.Serializable serializable16 = serializableNode15.data;
        int int17 = serializableNode15.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode15.parent;
        java.lang.Class<?> wildcardClass19 = serializableNode18.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass19);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode20.parent;
        java.io.Serializable serializable22 = serializableNode20.data;
        serializableNode1.parent = serializableNode20;
        java.lang.Class<?> wildcardClass24 = serializableNode1.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertNotNull(serializable22);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test0525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0525");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        java.io.Serializable serializable8 = serializableNode5.data;
        java.io.Serializable serializable9 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int12 = serializableNode11.rank;
        int int13 = serializableNode11.rank;
        java.io.Serializable serializable14 = serializableNode11.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode11.parent;
        java.lang.Class<?> wildcardClass16 = serializableNode15.getClass();
        serializableNode5.data = wildcardClass16;
        java.io.Serializable serializable18 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>(serializable18);
        serializableNode19.data = 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int24 = serializableNode23.rank;
        int int25 = serializableNode23.rank;
        java.io.Serializable serializable26 = serializableNode23.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = serializableNode23.parent;
        java.io.Serializable serializable28 = serializableNode27.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = serializableNode27.parent;
        java.io.Serializable serializable30 = serializableNode27.data;
        java.io.Serializable serializable31 = serializableNode27.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int34 = serializableNode33.rank;
        int int35 = serializableNode33.rank;
        java.io.Serializable serializable36 = serializableNode33.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = serializableNode33.parent;
        java.lang.Class<?> wildcardClass38 = serializableNode37.getClass();
        serializableNode27.data = wildcardClass38;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode40 = serializableNode27.parent;
        serializableNode40.rank = 'a';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode43 = serializableNode40.parent;
        serializableNode19.parent = serializableNode40;
        int int45 = serializableNode40.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(serializable18);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertEquals("'" + serializable26 + "' != '" + 10L + "'", serializable26, 10L);
        org.junit.Assert.assertNotNull(serializableNode27);
        org.junit.Assert.assertEquals("'" + serializable28 + "' != '" + 10L + "'", serializable28, 10L);
        org.junit.Assert.assertNotNull(serializableNode29);
        org.junit.Assert.assertEquals("'" + serializable30 + "' != '" + 10L + "'", serializable30, 10L);
        org.junit.Assert.assertEquals("'" + serializable31 + "' != '" + 10L + "'", serializable31, 10L);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertEquals("'" + serializable36 + "' != '" + 10L + "'", serializable36, 10L);
        org.junit.Assert.assertNotNull(serializableNode37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(serializableNode40);
        org.junit.Assert.assertNotNull(serializableNode43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 97 + "'", int45 == 97);
    }

    @Test
    public void test0526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0526");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode2 = serializableNode1.parent;
        serializableNode2.rank = (byte) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int7 = serializableNode6.rank;
        int int8 = serializableNode6.rank;
        java.io.Serializable serializable9 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable12 = serializableNode11.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode11.parent;
        serializableNode6.parent = serializableNode11;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode11.parent;
        serializableNode2.parent = serializableNode15;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode2.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode17.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode18.parent;
        java.lang.Class<?> wildcardClass20 = serializableNode18.getClass();
        org.junit.Assert.assertNotNull(serializableNode2);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test0527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0527");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable9 = serializableNode8.data;
        int int10 = serializableNode8.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode8.parent = serializableNode12;
        serializableNode6.parent = serializableNode8;
        int int15 = serializableNode6.rank;
        int int16 = serializableNode6.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode6.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable20 = serializableNode19.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode19.parent;
        int int22 = serializableNode19.rank;
        java.io.Serializable serializable23 = serializableNode19.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = null;
        serializableNode19.parent = serializableNode24;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable28 = serializableNode27.data;
        int int29 = serializableNode27.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int32 = serializableNode31.rank;
        int int33 = serializableNode31.rank;
        java.io.Serializable serializable34 = serializableNode31.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode36 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable37 = serializableNode36.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode38 = serializableNode36.parent;
        serializableNode31.parent = serializableNode36;
        serializableNode31.data = true;
        serializableNode27.parent = serializableNode31;
        serializableNode27.rank = '4';
        serializableNode27.rank = (byte) 10;
        serializableNode19.parent = serializableNode27;
        serializableNode6.parent = serializableNode27;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertEquals("'" + serializable20 + "' != '" + 10L + "'", serializable20, 10L);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertEquals("'" + serializable28 + "' != '" + 10L + "'", serializable28, 10L);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertEquals("'" + serializable34 + "' != '" + 10L + "'", serializable34, 10L);
        org.junit.Assert.assertEquals("'" + serializable37 + "' != '" + 10L + "'", serializable37, 10L);
        org.junit.Assert.assertNotNull(serializableNode38);
    }

    @Test
    public void test0528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0528");
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.CharSequence> charSequenceNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.CharSequence>((java.lang.CharSequence) "hi!");
    }

    @Test
    public void test0529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0529");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        java.io.Serializable serializable8 = serializableNode5.data;
        java.io.Serializable serializable9 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int12 = serializableNode11.rank;
        int int13 = serializableNode11.rank;
        java.io.Serializable serializable14 = serializableNode11.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode11.parent;
        java.lang.Class<?> wildcardClass16 = serializableNode15.getClass();
        serializableNode5.data = wildcardClass16;
        java.io.Serializable serializable18 = serializableNode5.data;
        java.io.Serializable serializable19 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable22 = serializableNode21.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode21.parent;
        int int24 = serializableNode21.rank;
        java.io.Serializable serializable25 = serializableNode21.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = serializableNode27.parent;
        serializableNode27.rank = (byte) 100;
        java.lang.Class<?> wildcardClass31 = serializableNode27.getClass();
        serializableNode21.data = wildcardClass31;
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.GenericDeclaration> genericDeclarationNode33 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.GenericDeclaration>((java.lang.reflect.GenericDeclaration) wildcardClass31);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass31);
        serializableNode5.data = wildcardClass31;
        serializableNode5.rank = (-1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(serializable18);
        org.junit.Assert.assertNotNull(serializable19);
        org.junit.Assert.assertEquals("'" + serializable22 + "' != '" + 10L + "'", serializable22, 10L);
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertEquals("'" + serializable25 + "' != '" + 10L + "'", serializable25, 10L);
        org.junit.Assert.assertNotNull(serializableNode28);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test0530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0530");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        serializableNode1.rank = (byte) 1;
        int int7 = serializableNode1.rank;
        serializableNode1.rank = '#';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable12 = serializableNode11.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode11.parent;
        java.io.Serializable serializable14 = serializableNode13.data;
        serializableNode13.rank = (short) -1;
        java.lang.Class<?> wildcardClass17 = serializableNode13.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass17);
        serializableNode1.data = wildcardClass17;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0531");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        int int7 = serializableNode5.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode8.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int12 = serializableNode11.rank;
        int int13 = serializableNode11.rank;
        java.io.Serializable serializable14 = serializableNode11.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode11.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable18 = serializableNode17.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode17.parent;
        serializableNode15.parent = serializableNode19;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int23 = serializableNode22.rank;
        int int24 = serializableNode22.rank;
        java.io.Serializable serializable25 = serializableNode22.data;
        serializableNode15.parent = serializableNode22;
        int int27 = serializableNode15.rank;
        java.io.Serializable serializable28 = serializableNode15.data;
        serializableNode9.parent = serializableNode15;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = serializableNode15.parent;
        java.io.Serializable serializable31 = serializableNode15.data;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertEquals("'" + serializable18 + "' != '" + 10L + "'", serializable18, 10L);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertEquals("'" + serializable25 + "' != '" + 10L + "'", serializable25, 10L);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertEquals("'" + serializable28 + "' != '" + 10L + "'", serializable28, 10L);
        org.junit.Assert.assertNotNull(serializableNode30);
        org.junit.Assert.assertEquals("'" + serializable31 + "' != '" + 10L + "'", serializable31, 10L);
    }

    @Test
    public void test0532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0532");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        java.io.Serializable serializable4 = serializableNode3.data;
        serializableNode3.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode3.parent;
        int int8 = serializableNode7.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode7.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode9.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable13 = serializableNode12.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = serializableNode12.parent;
        int int15 = serializableNode12.rank;
        java.io.Serializable serializable16 = serializableNode12.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode18.parent;
        serializableNode18.rank = (byte) 100;
        java.lang.Class<?> wildcardClass22 = serializableNode18.getClass();
        serializableNode12.data = wildcardClass22;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode12.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        java.lang.Class<?> wildcardClass27 = serializableNode26.getClass();
        serializableNode24.data = wildcardClass27;
        serializableNode24.rank = (short) 100;
        serializableNode9.parent = serializableNode24;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = serializableNode24.parent;
        java.io.Serializable serializable33 = serializableNode24.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>(serializable33);
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(serializableNode32);
        org.junit.Assert.assertNotNull(serializable33);
    }

    @Test
    public void test0533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0533");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable9 = serializableNode8.data;
        int int10 = serializableNode8.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode8.parent = serializableNode12;
        serializableNode6.parent = serializableNode8;
        int int15 = serializableNode6.rank;
        int int16 = serializableNode6.rank;
        java.lang.Class<?> wildcardClass17 = serializableNode6.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.constant.Constable> constableNode18 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.constant.Constable>((java.lang.constant.Constable) wildcardClass17);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0534");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        int int7 = serializableNode6.rank;
        java.io.Serializable serializable8 = serializableNode6.data;
        int int9 = serializableNode6.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode6.parent;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(serializableNode10);
    }

    @Test
    public void test0535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0535");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        int int4 = serializableNode1.rank;
        java.io.Serializable serializable5 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode7.parent;
        serializableNode7.rank = (byte) 100;
        java.lang.Class<?> wildcardClass11 = serializableNode7.getClass();
        serializableNode1.data = wildcardClass11;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        java.lang.Class<?> wildcardClass16 = serializableNode15.getClass();
        serializableNode13.data = wildcardClass16;
        int int18 = serializableNode13.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int21 = serializableNode20.rank;
        int int22 = serializableNode20.rank;
        java.io.Serializable serializable23 = serializableNode20.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode20.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = serializableNode20.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable28 = serializableNode27.data;
        int int29 = serializableNode27.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode27.parent = serializableNode31;
        serializableNode25.parent = serializableNode27;
        int int34 = serializableNode25.rank;
        java.lang.Class<?> wildcardClass35 = serializableNode25.getClass();
        serializableNode13.data = wildcardClass35;
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.Comparable<java.lang.String>> strComparableNode38 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.Comparable<java.lang.String>>((java.lang.Comparable<java.lang.String>) "");
        java.lang.Class<?> wildcardClass39 = strComparableNode38.getClass();
        serializableNode13.data = wildcardClass39;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass39);
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + serializable5 + "' != '" + 10L + "'", serializable5, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertNotNull(serializableNode25);
        org.junit.Assert.assertEquals("'" + serializable28 + "' != '" + 10L + "'", serializable28, 10L);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test0536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0536");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode1.parent = serializableNode5;
        serializableNode1.data = '#';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int11 = serializableNode10.rank;
        int int12 = serializableNode10.rank;
        serializableNode10.data = (short) 100;
        serializableNode1.parent = serializableNode10;
        java.io.Serializable serializable16 = serializableNode10.data;
        int int17 = serializableNode10.rank;
        serializableNode10.rank = 10;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = serializableNode10.parent;
        java.io.Serializable serializable21 = serializableNode20.data;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + (short) 100 + "'", serializable16, (short) 100);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(serializableNode20);
        org.junit.Assert.assertEquals("'" + serializable21 + "' != '" + (short) 100 + "'", serializable21, (short) 100);
    }

    @Test
    public void test0537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0537");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = (short) -1;
        serializableNode1.rank = (short) -1;
        java.io.Serializable serializable8 = serializableNode1.data;
        int int9 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.Object> objNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.Object>((java.lang.Object) serializableNode10);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(serializableNode10);
    }

    @Test
    public void test0538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0538");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable9 = serializableNode8.data;
        int int10 = serializableNode8.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode8.parent = serializableNode12;
        serializableNode12.rank = 0;
        serializableNode12.data = 100;
        serializableNode6.parent = serializableNode12;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int21 = serializableNode20.rank;
        int int22 = serializableNode20.rank;
        java.io.Serializable serializable23 = serializableNode20.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode20.parent;
        serializableNode12.parent = serializableNode20;
        java.lang.Class<?> wildcardClass26 = serializableNode12.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test0539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0539");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable8 = serializableNode7.data;
        int int9 = serializableNode7.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode7.parent = serializableNode11;
        java.lang.Class<?> wildcardClass13 = serializableNode11.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass13);
        serializableNode1.parent = serializableNode14;
        serializableNode14.rank = (short) 100;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int20 = serializableNode19.rank;
        int int21 = serializableNode19.rank;
        java.io.Serializable serializable22 = serializableNode19.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode19.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable26 = serializableNode25.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = serializableNode25.parent;
        serializableNode23.parent = serializableNode27;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int31 = serializableNode30.rank;
        int int32 = serializableNode30.rank;
        java.io.Serializable serializable33 = serializableNode30.data;
        serializableNode30.rank = (byte) 1;
        java.lang.Class<?> wildcardClass36 = serializableNode30.getClass();
        serializableNode23.data = wildcardClass36;
        serializableNode23.rank = 'a';
        serializableNode14.parent = serializableNode23;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertEquals("'" + serializable22 + "' != '" + 10L + "'", serializable22, 10L);
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertEquals("'" + serializable26 + "' != '" + 10L + "'", serializable26, 10L);
        org.junit.Assert.assertNotNull(serializableNode27);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertEquals("'" + serializable33 + "' != '" + 10L + "'", serializable33, 10L);
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test0540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0540");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        serializableNode1.rank = (byte) 1;
        int int7 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode1.parent;
        serializableNode1.rank = (byte) 0;
        serializableNode1.rank = (byte) 10;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int15 = serializableNode14.rank;
        int int16 = serializableNode14.rank;
        java.io.Serializable serializable17 = serializableNode14.data;
        serializableNode14.rank = (byte) 1;
        int int20 = serializableNode14.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode14.parent;
        serializableNode14.rank = (byte) 0;
        serializableNode1.parent = serializableNode14;
        serializableNode1.rank = (byte) -1;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertEquals("'" + serializable17 + "' != '" + 10L + "'", serializable17, 10L);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(serializableNode21);
    }

    @Test
    public void test0541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0541");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int9 = serializableNode8.rank;
        int int10 = serializableNode8.rank;
        java.io.Serializable serializable11 = serializableNode8.data;
        serializableNode8.rank = (byte) 1;
        serializableNode8.data = 10.0d;
        serializableNode6.parent = serializableNode8;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode6.parent;
        int int18 = serializableNode6.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable21 = serializableNode20.data;
        int int22 = serializableNode20.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode20.parent = serializableNode24;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int28 = serializableNode27.rank;
        int int29 = serializableNode27.rank;
        java.io.Serializable serializable30 = serializableNode27.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = serializableNode27.parent;
        java.io.Serializable serializable32 = serializableNode31.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = serializableNode31.parent;
        java.io.Serializable serializable34 = serializableNode31.data;
        java.io.Serializable serializable35 = serializableNode31.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int38 = serializableNode37.rank;
        int int39 = serializableNode37.rank;
        java.io.Serializable serializable40 = serializableNode37.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = serializableNode37.parent;
        java.lang.Class<?> wildcardClass42 = serializableNode41.getClass();
        serializableNode31.data = wildcardClass42;
        serializableNode20.data = wildcardClass42;
        serializableNode6.data = wildcardClass42;
        java.io.Serializable serializable46 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode47 = serializableNode6.parent;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertEquals("'" + serializable21 + "' != '" + 10L + "'", serializable21, 10L);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertEquals("'" + serializable30 + "' != '" + 10L + "'", serializable30, 10L);
        org.junit.Assert.assertNotNull(serializableNode31);
        org.junit.Assert.assertEquals("'" + serializable32 + "' != '" + 10L + "'", serializable32, 10L);
        org.junit.Assert.assertNotNull(serializableNode33);
        org.junit.Assert.assertEquals("'" + serializable34 + "' != '" + 10L + "'", serializable34, 10L);
        org.junit.Assert.assertEquals("'" + serializable35 + "' != '" + 10L + "'", serializable35, 10L);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertEquals("'" + serializable40 + "' != '" + 10L + "'", serializable40, 10L);
        org.junit.Assert.assertNotNull(serializableNode41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(serializable46);
        org.junit.Assert.assertNotNull(serializableNode47);
    }

    @Test
    public void test0542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0542");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = (short) -1;
        serializableNode1.rank = (short) -1;
        java.io.Serializable serializable8 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int11 = serializableNode10.rank;
        int int12 = serializableNode10.rank;
        serializableNode10.rank = (short) -1;
        serializableNode10.rank = (short) -1;
        java.io.Serializable serializable17 = serializableNode10.data;
        serializableNode1.parent = serializableNode10;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int21 = serializableNode20.rank;
        int int22 = serializableNode20.rank;
        java.io.Serializable serializable23 = serializableNode20.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode20.parent;
        java.io.Serializable serializable25 = serializableNode24.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = serializableNode24.parent;
        java.io.Serializable serializable27 = serializableNode24.data;
        java.io.Serializable serializable28 = serializableNode24.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int31 = serializableNode30.rank;
        int int32 = serializableNode30.rank;
        java.io.Serializable serializable33 = serializableNode30.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = serializableNode30.parent;
        java.lang.Class<?> wildcardClass35 = serializableNode34.getClass();
        serializableNode24.data = wildcardClass35;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = serializableNode24.parent;
        java.io.Serializable serializable38 = serializableNode37.data;
        serializableNode10.data = serializable38;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode40 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>(serializable38);
        java.io.Serializable serializable41 = serializableNode40.data;
        int int42 = serializableNode40.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable17 + "' != '" + 10L + "'", serializable17, 10L);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertEquals("'" + serializable25 + "' != '" + 10L + "'", serializable25, 10L);
        org.junit.Assert.assertNotNull(serializableNode26);
        org.junit.Assert.assertEquals("'" + serializable27 + "' != '" + 10L + "'", serializable27, 10L);
        org.junit.Assert.assertEquals("'" + serializable28 + "' != '" + 10L + "'", serializable28, 10L);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertEquals("'" + serializable33 + "' != '" + 10L + "'", serializable33, 10L);
        org.junit.Assert.assertNotNull(serializableNode34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(serializableNode37);
        org.junit.Assert.assertNotNull(serializable38);
        org.junit.Assert.assertNotNull(serializable41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
    }

    @Test
    public void test0543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0543");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = (short) -1;
        serializableNode1.rank = (short) -1;
        java.io.Serializable serializable8 = serializableNode1.data;
        int int9 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode1.parent;
        java.lang.Class<?> wildcardClass11 = serializableNode1.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0544");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = 'a';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        int int7 = serializableNode1.rank;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 97 + "'", int7 == 97);
    }

    @Test
    public void test0545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0545");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        java.io.Serializable serializable8 = serializableNode5.data;
        java.io.Serializable serializable9 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int12 = serializableNode11.rank;
        int int13 = serializableNode11.rank;
        java.io.Serializable serializable14 = serializableNode11.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode11.parent;
        java.lang.Class<?> wildcardClass16 = serializableNode15.getClass();
        serializableNode5.data = wildcardClass16;
        serializableNode5.rank = 97;
        serializableNode5.rank = 10;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable24 = serializableNode23.data;
        int int25 = serializableNode23.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode23.parent = serializableNode27;
        serializableNode23.data = '#';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int33 = serializableNode32.rank;
        int int34 = serializableNode32.rank;
        serializableNode32.data = (short) 100;
        serializableNode23.parent = serializableNode32;
        serializableNode5.parent = serializableNode23;
        int int39 = serializableNode5.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode40 = serializableNode5.parent;
        java.io.Serializable serializable41 = serializableNode40.data;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertEquals("'" + serializable24 + "' != '" + 10L + "'", serializable24, 10L);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 10 + "'", int39 == 10);
        org.junit.Assert.assertNotNull(serializableNode40);
        org.junit.Assert.assertEquals("'" + serializable41 + "' != '" + '#' + "'", serializable41, '#');
    }

    @Test
    public void test0546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0546");
        java.io.Serializable serializable0 = null;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>(serializable0);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    }

    @Test
    public void test0547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0547");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable9 = serializableNode8.data;
        int int10 = serializableNode8.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode8.parent = serializableNode12;
        serializableNode6.parent = serializableNode8;
        int int15 = serializableNode6.rank;
        serializableNode6.rank = (byte) 0;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode6.parent;
        java.lang.Class<?> wildcardClass19 = serializableNode18.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test0548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0548");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        java.io.Serializable serializable7 = serializableNode6.data;
        int int8 = serializableNode6.rank;
        java.io.Serializable serializable9 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable12 = serializableNode11.data;
        int int13 = serializableNode11.rank;
        serializableNode11.rank = 'a';
        java.lang.Class<?> wildcardClass16 = serializableNode11.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass16);
        serializableNode6.parent = serializableNode17;
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.Object> objNode19 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.Object>((java.lang.Object) serializableNode17);
        java.io.Serializable serializable20 = serializableNode17.data;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(serializable20);
    }

    @Test
    public void test0549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0549");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        java.io.Serializable serializable8 = serializableNode5.data;
        java.io.Serializable serializable9 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int12 = serializableNode11.rank;
        int int13 = serializableNode11.rank;
        java.io.Serializable serializable14 = serializableNode11.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode11.parent;
        java.lang.Class<?> wildcardClass16 = serializableNode15.getClass();
        serializableNode5.data = wildcardClass16;
        java.io.Serializable serializable18 = serializableNode5.data;
        java.io.Serializable serializable19 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable22 = serializableNode21.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode21.parent;
        int int24 = serializableNode21.rank;
        java.io.Serializable serializable25 = serializableNode21.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = serializableNode27.parent;
        serializableNode27.rank = (byte) 100;
        java.lang.Class<?> wildcardClass31 = serializableNode27.getClass();
        serializableNode21.data = wildcardClass31;
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.GenericDeclaration> genericDeclarationNode33 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.GenericDeclaration>((java.lang.reflect.GenericDeclaration) wildcardClass31);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass31);
        serializableNode5.data = wildcardClass31;
        java.lang.Class<?> wildcardClass36 = serializableNode5.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(serializable18);
        org.junit.Assert.assertNotNull(serializable19);
        org.junit.Assert.assertEquals("'" + serializable22 + "' != '" + 10L + "'", serializable22, 10L);
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertEquals("'" + serializable25 + "' != '" + 10L + "'", serializable25, 10L);
        org.junit.Assert.assertNotNull(serializableNode28);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test0550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0550");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        serializableNode1.rank = (byte) 10;
        serializableNode1.data = 10L;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable13 = serializableNode12.data;
        int int14 = serializableNode12.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode12.parent = serializableNode16;
        serializableNode12.data = '#';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int22 = serializableNode21.rank;
        int int23 = serializableNode21.rank;
        serializableNode21.data = (short) 100;
        serializableNode12.parent = serializableNode21;
        java.io.Serializable serializable27 = serializableNode21.data;
        int int28 = serializableNode21.rank;
        serializableNode21.rank = 10;
        java.io.Serializable serializable31 = serializableNode21.data;
        java.lang.Class<?> wildcardClass32 = serializable31.getClass();
        serializableNode1.data = serializable31;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode35 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int36 = serializableNode35.rank;
        int int37 = serializableNode35.rank;
        java.io.Serializable serializable38 = serializableNode35.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode39 = serializableNode35.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable42 = serializableNode41.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode43 = serializableNode41.parent;
        serializableNode39.parent = serializableNode43;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode46 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int47 = serializableNode46.rank;
        int int48 = serializableNode46.rank;
        java.io.Serializable serializable49 = serializableNode46.data;
        serializableNode39.parent = serializableNode46;
        int int51 = serializableNode39.rank;
        serializableNode39.rank = 100;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode55 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode56 = serializableNode55.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode57 = serializableNode55.parent;
        java.io.Serializable serializable58 = serializableNode57.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode60 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int61 = serializableNode60.rank;
        int int62 = serializableNode60.rank;
        java.io.Serializable serializable63 = serializableNode60.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode64 = serializableNode60.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode66 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable67 = serializableNode66.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode68 = serializableNode66.parent;
        serializableNode64.parent = serializableNode68;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode71 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int72 = serializableNode71.rank;
        int int73 = serializableNode71.rank;
        java.io.Serializable serializable74 = serializableNode71.data;
        serializableNode71.rank = (byte) 1;
        java.lang.Class<?> wildcardClass77 = serializableNode71.getClass();
        serializableNode64.data = wildcardClass77;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode79 = serializableNode64.parent;
        serializableNode64.rank = 100;
        java.lang.Class<?> wildcardClass82 = serializableNode64.getClass();
        serializableNode57.data = wildcardClass82;
        java.io.Serializable serializable84 = serializableNode57.data;
        serializableNode39.data = serializable84;
        serializableNode1.parent = serializableNode39;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertEquals("'" + serializable27 + "' != '" + (short) 100 + "'", serializable27, (short) 100);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertEquals("'" + serializable31 + "' != '" + (short) 100 + "'", serializable31, (short) 100);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertEquals("'" + serializable38 + "' != '" + 10L + "'", serializable38, 10L);
        org.junit.Assert.assertNotNull(serializableNode39);
        org.junit.Assert.assertEquals("'" + serializable42 + "' != '" + 10L + "'", serializable42, 10L);
        org.junit.Assert.assertNotNull(serializableNode43);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertEquals("'" + serializable49 + "' != '" + 10L + "'", serializable49, 10L);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(serializableNode56);
        org.junit.Assert.assertNotNull(serializableNode57);
        org.junit.Assert.assertEquals("'" + serializable58 + "' != '" + 10L + "'", serializable58, 10L);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertEquals("'" + serializable63 + "' != '" + 10L + "'", serializable63, 10L);
        org.junit.Assert.assertNotNull(serializableNode64);
        org.junit.Assert.assertEquals("'" + serializable67 + "' != '" + 10L + "'", serializable67, 10L);
        org.junit.Assert.assertNotNull(serializableNode68);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertEquals("'" + serializable74 + "' != '" + 10L + "'", serializable74, 10L);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(serializableNode79);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(serializable84);
    }

    @Test
    public void test0551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0551");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable8 = serializableNode7.data;
        int int9 = serializableNode7.rank;
        serializableNode7.rank = 'a';
        java.lang.Class<?> wildcardClass12 = serializableNode7.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass12);
        serializableNode1.data = wildcardClass12;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode15.parent;
        serializableNode16.rank = 32;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertNotNull(serializableNode16);
    }

    @Test
    public void test0552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0552");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (byte) 10);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode2 = serializableNode1.parent;
        java.lang.Class<?> wildcardClass3 = serializableNode2.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode4 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass3);
        org.junit.Assert.assertNotNull(serializableNode2);
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test0553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0553");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable8 = serializableNode7.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode7.parent;
        serializableNode5.parent = serializableNode9;
        java.io.Serializable serializable11 = null;
        serializableNode5.data = serializable11;
        serializableNode5.rank = ' ';
        int int15 = serializableNode5.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 32 + "'", int15 == 32);
    }

    @Test
    public void test0554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0554");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        int int4 = serializableNode1.rank;
        java.io.Serializable serializable5 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode7.parent;
        serializableNode7.rank = (byte) 100;
        java.lang.Class<?> wildcardClass11 = serializableNode7.getClass();
        serializableNode1.data = wildcardClass11;
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.GenericDeclaration> genericDeclarationNode13 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.GenericDeclaration>((java.lang.reflect.GenericDeclaration) wildcardClass11);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass11);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode16.parent;
        serializableNode17.rank = (byte) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int22 = serializableNode21.rank;
        int int23 = serializableNode21.rank;
        java.io.Serializable serializable24 = serializableNode21.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable27 = serializableNode26.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = serializableNode26.parent;
        serializableNode21.parent = serializableNode26;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = serializableNode26.parent;
        serializableNode17.parent = serializableNode30;
        serializableNode14.parent = serializableNode17;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int35 = serializableNode34.rank;
        int int36 = serializableNode34.rank;
        serializableNode34.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>> serializableNodeNode39 = new com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>>(serializableNode34);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int42 = serializableNode41.rank;
        int int43 = serializableNode41.rank;
        java.io.Serializable serializable44 = serializableNode41.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode45 = serializableNode41.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode47 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable48 = serializableNode47.data;
        int int49 = serializableNode47.rank;
        serializableNode47.rank = 'a';
        java.lang.Class<?> wildcardClass52 = serializableNode47.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode53 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass52);
        serializableNode41.data = wildcardClass52;
        serializableNode34.data = wildcardClass52;
        serializableNode17.data = wildcardClass52;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode57 = serializableNode17.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode59 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (-1.0d));
        int int60 = serializableNode59.rank;
        java.lang.Class<?> wildcardClass61 = serializableNode59.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode62 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass61);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode63 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass61);
        serializableNode57.data = wildcardClass61;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode66 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int67 = serializableNode66.rank;
        int int68 = serializableNode66.rank;
        serializableNode66.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode72 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable73 = serializableNode72.data;
        int int74 = serializableNode72.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode76 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode72.parent = serializableNode76;
        java.lang.Class<?> wildcardClass78 = serializableNode76.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode79 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass78);
        serializableNode66.parent = serializableNode79;
        serializableNode79.rank = (short) 0;
        serializableNode79.rank = 100;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode86 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable87 = serializableNode86.data;
        int int88 = serializableNode86.rank;
        serializableNode86.rank = 'a';
        java.lang.Class<?> wildcardClass91 = serializableNode86.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.AnnotatedElement> annotatedElementNode92 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.AnnotatedElement>((java.lang.reflect.AnnotatedElement) wildcardClass91);
        serializableNode79.data = wildcardClass91;
        serializableNode57.data = wildcardClass91;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + serializable5 + "' != '" + 10L + "'", serializable5, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertEquals("'" + serializable24 + "' != '" + 10L + "'", serializable24, 10L);
        org.junit.Assert.assertEquals("'" + serializable27 + "' != '" + 10L + "'", serializable27, 10L);
        org.junit.Assert.assertNotNull(serializableNode28);
        org.junit.Assert.assertNotNull(serializableNode30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertEquals("'" + serializable44 + "' != '" + 10L + "'", serializable44, 10L);
        org.junit.Assert.assertNotNull(serializableNode45);
        org.junit.Assert.assertEquals("'" + serializable48 + "' != '" + 10L + "'", serializable48, 10L);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(serializableNode57);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertEquals("'" + serializable73 + "' != '" + 10L + "'", serializable73, 10L);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertEquals("'" + serializable87 + "' != '" + 10L + "'", serializable87, 10L);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 0 + "'", int88 == 0);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test0555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0555");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        int int7 = serializableNode5.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int11 = serializableNode10.rank;
        int int12 = serializableNode10.rank;
        java.io.Serializable serializable13 = serializableNode10.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = serializableNode10.parent;
        java.io.Serializable serializable15 = serializableNode14.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode14.parent;
        java.io.Serializable serializable17 = serializableNode14.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int20 = serializableNode19.rank;
        int int21 = serializableNode19.rank;
        java.io.Serializable serializable22 = serializableNode19.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode19.parent;
        java.io.Serializable serializable24 = serializableNode23.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = serializableNode23.parent;
        java.io.Serializable serializable26 = serializableNode23.data;
        java.io.Serializable serializable27 = serializableNode23.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int30 = serializableNode29.rank;
        int int31 = serializableNode29.rank;
        java.io.Serializable serializable32 = serializableNode29.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = serializableNode29.parent;
        java.lang.Class<?> wildcardClass34 = serializableNode33.getClass();
        serializableNode23.data = wildcardClass34;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode36 = serializableNode23.parent;
        serializableNode14.parent = serializableNode23;
        java.lang.Class<?> wildcardClass38 = serializableNode23.getClass();
        serializableNode8.data = wildcardClass38;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode40 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass38);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode14);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertEquals("'" + serializable17 + "' != '" + 10L + "'", serializable17, 10L);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertEquals("'" + serializable22 + "' != '" + 10L + "'", serializable22, 10L);
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertEquals("'" + serializable24 + "' != '" + 10L + "'", serializable24, 10L);
        org.junit.Assert.assertNotNull(serializableNode25);
        org.junit.Assert.assertEquals("'" + serializable26 + "' != '" + 10L + "'", serializable26, 10L);
        org.junit.Assert.assertEquals("'" + serializable27 + "' != '" + 10L + "'", serializable27, 10L);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertEquals("'" + serializable32 + "' != '" + 10L + "'", serializable32, 10L);
        org.junit.Assert.assertNotNull(serializableNode33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(serializableNode36);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test0556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0556");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        int int4 = serializableNode1.rank;
        java.io.Serializable serializable5 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode7.parent;
        serializableNode7.rank = (byte) 100;
        java.lang.Class<?> wildcardClass11 = serializableNode7.getClass();
        serializableNode1.data = wildcardClass11;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int16 = serializableNode15.rank;
        int int17 = serializableNode15.rank;
        java.io.Serializable serializable18 = serializableNode15.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode15.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable22 = serializableNode21.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode21.parent;
        serializableNode19.parent = serializableNode23;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int27 = serializableNode26.rank;
        int int28 = serializableNode26.rank;
        java.io.Serializable serializable29 = serializableNode26.data;
        serializableNode19.parent = serializableNode26;
        serializableNode1.parent = serializableNode19;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = serializableNode1.parent;
        java.io.Serializable serializable33 = serializableNode32.data;
        int int34 = serializableNode32.rank;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + serializable5 + "' != '" + 10L + "'", serializable5, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertEquals("'" + serializable18 + "' != '" + 10L + "'", serializable18, 10L);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertEquals("'" + serializable22 + "' != '" + 10L + "'", serializable22, 10L);
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertEquals("'" + serializable29 + "' != '" + 10L + "'", serializable29, 10L);
        org.junit.Assert.assertNotNull(serializableNode32);
        org.junit.Assert.assertEquals("'" + serializable33 + "' != '" + 10L + "'", serializable33, 10L);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
    }

    @Test
    public void test0557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0557");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        int int7 = serializableNode1.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
    }

    @Test
    public void test0558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0558");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode8.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode8.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable13 = serializableNode12.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = serializableNode12.parent;
        int int15 = serializableNode12.rank;
        java.io.Serializable serializable16 = serializableNode12.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode18.parent;
        serializableNode18.rank = (byte) 100;
        java.lang.Class<?> wildcardClass22 = serializableNode18.getClass();
        serializableNode12.data = wildcardClass22;
        serializableNode8.data = wildcardClass22;
        serializableNode1.data = wildcardClass22;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = serializableNode1.parent;
        java.io.Serializable serializable27 = serializableNode26.data;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(serializableNode26);
        org.junit.Assert.assertNotNull(serializable27);
    }

    @Test
    public void test0559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0559");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = (short) -1;
        serializableNode1.rank = (short) -1;
        java.io.Serializable serializable8 = serializableNode1.data;
        int int9 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode1.parent;
        java.io.Serializable serializable11 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable14 = serializableNode13.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode13.parent;
        int int16 = serializableNode13.rank;
        java.io.Serializable serializable17 = serializableNode13.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = serializableNode19.parent;
        serializableNode19.rank = (byte) 100;
        java.lang.Class<?> wildcardClass23 = serializableNode19.getClass();
        serializableNode13.data = wildcardClass23;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = serializableNode13.parent;
        serializableNode1.parent = serializableNode25;
        java.lang.Class<?> wildcardClass27 = serializableNode25.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertEquals("'" + serializable17 + "' != '" + 10L + "'", serializable17, 10L);
        org.junit.Assert.assertNotNull(serializableNode20);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(serializableNode25);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test0560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0560");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable11 = serializableNode10.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode10.parent;
        java.io.Serializable serializable13 = serializableNode12.data;
        serializableNode12.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode12.parent;
        serializableNode8.parent = serializableNode16;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable20 = serializableNode19.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode19.parent;
        int int22 = serializableNode19.rank;
        java.io.Serializable serializable23 = serializableNode19.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = serializableNode25.parent;
        serializableNode25.rank = (byte) 100;
        java.lang.Class<?> wildcardClass29 = serializableNode25.getClass();
        serializableNode19.data = wildcardClass29;
        serializableNode16.parent = serializableNode19;
        int int32 = serializableNode19.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertEquals("'" + serializable20 + "' != '" + 10L + "'", serializable20, 10L);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertNotNull(serializableNode26);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
    }

    @Test
    public void test0561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0561");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        serializableNode3.rank = (short) 0;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int8 = serializableNode7.rank;
        int int9 = serializableNode7.rank;
        java.io.Serializable serializable10 = serializableNode7.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = serializableNode7.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode7.parent;
        java.io.Serializable serializable13 = serializableNode12.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int16 = serializableNode15.rank;
        int int17 = serializableNode15.rank;
        java.io.Serializable serializable18 = serializableNode15.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode15.parent;
        java.io.Serializable serializable20 = serializableNode19.data;
        int int21 = serializableNode19.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = serializableNode19.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode22.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode23.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = serializableNode23.parent;
        serializableNode12.parent = serializableNode25;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int29 = serializableNode28.rank;
        int int30 = serializableNode28.rank;
        java.io.Serializable serializable31 = serializableNode28.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = serializableNode28.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable35 = serializableNode34.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode36 = serializableNode34.parent;
        serializableNode32.parent = serializableNode36;
        int int38 = serializableNode36.rank;
        serializableNode36.data = (-1);
        int int41 = serializableNode36.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode43 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int44 = serializableNode43.rank;
        int int45 = serializableNode43.rank;
        java.io.Serializable serializable46 = serializableNode43.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode47 = serializableNode43.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode48 = serializableNode43.parent;
        serializableNode43.rank = (byte) 10;
        serializableNode43.data = 10L;
        serializableNode36.parent = serializableNode43;
        serializableNode25.parent = serializableNode43;
        serializableNode3.parent = serializableNode25;
        int int56 = serializableNode3.rank;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertEquals("'" + serializable10 + "' != '" + 10L + "'", serializable10, 10L);
        org.junit.Assert.assertNotNull(serializableNode11);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertEquals("'" + serializable18 + "' != '" + 10L + "'", serializable18, 10L);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertEquals("'" + serializable20 + "' != '" + 10L + "'", serializable20, 10L);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(serializableNode22);
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertNotNull(serializableNode25);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertEquals("'" + serializable31 + "' != '" + 10L + "'", serializable31, 10L);
        org.junit.Assert.assertNotNull(serializableNode32);
        org.junit.Assert.assertEquals("'" + serializable35 + "' != '" + 10L + "'", serializable35, 10L);
        org.junit.Assert.assertNotNull(serializableNode36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertEquals("'" + serializable46 + "' != '" + 10L + "'", serializable46, 10L);
        org.junit.Assert.assertNotNull(serializableNode47);
        org.junit.Assert.assertNotNull(serializableNode48);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
    }

    @Test
    public void test0562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0562");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable7 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode6.parent;
        serializableNode1.parent = serializableNode6;
        int int10 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode1.parent;
        java.lang.Class<?> wildcardClass13 = serializableNode12.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(serializableNode11);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0563");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>> serializableNodeNode6 = new com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>>(serializableNode1);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode1.parent;
        int int8 = serializableNode7.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
    }

    @Test
    public void test0564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0564");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable7 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode6.parent;
        serializableNode1.parent = serializableNode6;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode6.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int13 = serializableNode12.rank;
        int int14 = serializableNode12.rank;
        java.io.Serializable serializable15 = serializableNode12.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode12.parent;
        java.io.Serializable serializable17 = serializableNode16.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode16.parent;
        java.io.Serializable serializable19 = serializableNode16.data;
        java.io.Serializable serializable20 = serializableNode16.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int23 = serializableNode22.rank;
        int int24 = serializableNode22.rank;
        java.io.Serializable serializable25 = serializableNode22.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = serializableNode22.parent;
        java.lang.Class<?> wildcardClass27 = serializableNode26.getClass();
        serializableNode16.data = wildcardClass27;
        java.io.Serializable serializable29 = serializableNode16.data;
        java.lang.Class<?> wildcardClass30 = serializable29.getClass();
        serializableNode10.data = serializable29;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertEquals("'" + serializable17 + "' != '" + 10L + "'", serializable17, 10L);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertEquals("'" + serializable19 + "' != '" + 10L + "'", serializable19, 10L);
        org.junit.Assert.assertEquals("'" + serializable20 + "' != '" + 10L + "'", serializable20, 10L);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertEquals("'" + serializable25 + "' != '" + 10L + "'", serializable25, 10L);
        org.junit.Assert.assertNotNull(serializableNode26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(serializable29);
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test0565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0565");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        int int4 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable7 = serializableNode6.data;
        int int8 = serializableNode6.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode6.parent = serializableNode10;
        serializableNode10.data = 0.0d;
        serializableNode1.parent = serializableNode10;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode10.parent;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(serializableNode15);
    }

    @Test
    public void test0566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0566");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        java.io.Serializable serializable8 = serializableNode5.data;
        java.io.Serializable serializable9 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int12 = serializableNode11.rank;
        int int13 = serializableNode11.rank;
        java.io.Serializable serializable14 = serializableNode11.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode11.parent;
        java.lang.Class<?> wildcardClass16 = serializableNode15.getClass();
        serializableNode5.data = wildcardClass16;
        java.io.Serializable serializable18 = serializableNode5.data;
        java.io.Serializable serializable19 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable22 = serializableNode21.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode21.parent;
        int int24 = serializableNode21.rank;
        java.io.Serializable serializable25 = serializableNode21.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = serializableNode27.parent;
        serializableNode27.rank = (byte) 100;
        java.lang.Class<?> wildcardClass31 = serializableNode27.getClass();
        serializableNode21.data = wildcardClass31;
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.GenericDeclaration> genericDeclarationNode33 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.GenericDeclaration>((java.lang.reflect.GenericDeclaration) wildcardClass31);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass31);
        serializableNode5.data = wildcardClass31;
        int int36 = serializableNode5.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(serializable18);
        org.junit.Assert.assertNotNull(serializable19);
        org.junit.Assert.assertEquals("'" + serializable22 + "' != '" + 10L + "'", serializable22, 10L);
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertEquals("'" + serializable25 + "' != '" + 10L + "'", serializable25, 10L);
        org.junit.Assert.assertNotNull(serializableNode28);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
    }

    @Test
    public void test0567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0567");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        int int4 = serializableNode1.rank;
        java.io.Serializable serializable5 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode7.parent;
        serializableNode7.rank = (byte) 100;
        java.lang.Class<?> wildcardClass11 = serializableNode7.getClass();
        serializableNode1.data = wildcardClass11;
        int int13 = serializableNode1.rank;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + serializable5 + "' != '" + 10L + "'", serializable5, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
    }

    @Test
    public void test0568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0568");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int10 = serializableNode9.rank;
        int int11 = serializableNode9.rank;
        java.io.Serializable serializable12 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode9.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable16 = serializableNode15.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode15.parent;
        serializableNode13.parent = serializableNode17;
        int int19 = serializableNode17.rank;
        serializableNode7.parent = serializableNode17;
        serializableNode17.rank = 100;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
    }

    @Test
    public void test0569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0569");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        int int4 = serializableNode1.rank;
        java.io.Serializable serializable5 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode7.parent;
        serializableNode7.rank = (byte) 100;
        java.lang.Class<?> wildcardClass11 = serializableNode7.getClass();
        serializableNode1.data = wildcardClass11;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        java.lang.Class<?> wildcardClass16 = serializableNode15.getClass();
        serializableNode13.data = wildcardClass16;
        serializableNode13.rank = (short) 100;
        java.io.Serializable serializable20 = serializableNode13.data;
        java.lang.Class<?> wildcardClass21 = serializableNode13.getClass();
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + serializable5 + "' != '" + 10L + "'", serializable5, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(serializable20);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test0570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0570");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        java.io.Serializable serializable8 = serializableNode5.data;
        java.io.Serializable serializable9 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int12 = serializableNode11.rank;
        int int13 = serializableNode11.rank;
        java.io.Serializable serializable14 = serializableNode11.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode11.parent;
        java.lang.Class<?> wildcardClass16 = serializableNode15.getClass();
        serializableNode5.data = wildcardClass16;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable21 = serializableNode20.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = serializableNode20.parent;
        java.io.Serializable serializable23 = serializableNode22.data;
        serializableNode22.rank = (short) -1;
        java.lang.Class<?> wildcardClass26 = serializableNode22.getClass();
        serializableNode18.data = wildcardClass26;
        java.lang.Class<?> wildcardClass28 = serializableNode18.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass28);
        java.io.Serializable serializable30 = serializableNode29.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = serializableNode29.parent;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertEquals("'" + serializable21 + "' != '" + 10L + "'", serializable21, 10L);
        org.junit.Assert.assertNotNull(serializableNode22);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(serializable30);
        org.junit.Assert.assertNotNull(serializableNode31);
    }

    @Test
    public void test0571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0571");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (-1));
    }

    @Test
    public void test0572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0572");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = (short) -1;
        serializableNode1.rank = (short) -1;
        java.io.Serializable serializable8 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int11 = serializableNode10.rank;
        int int12 = serializableNode10.rank;
        serializableNode10.rank = (short) -1;
        serializableNode10.rank = (short) -1;
        java.io.Serializable serializable17 = serializableNode10.data;
        serializableNode1.parent = serializableNode10;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int21 = serializableNode20.rank;
        int int22 = serializableNode20.rank;
        java.io.Serializable serializable23 = serializableNode20.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode20.parent;
        java.io.Serializable serializable25 = serializableNode24.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = serializableNode24.parent;
        java.io.Serializable serializable27 = serializableNode24.data;
        java.io.Serializable serializable28 = serializableNode24.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int31 = serializableNode30.rank;
        int int32 = serializableNode30.rank;
        java.io.Serializable serializable33 = serializableNode30.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = serializableNode30.parent;
        java.lang.Class<?> wildcardClass35 = serializableNode34.getClass();
        serializableNode24.data = wildcardClass35;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = serializableNode24.parent;
        java.io.Serializable serializable38 = serializableNode37.data;
        serializableNode10.data = serializable38;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode40 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>(serializable38);
        java.lang.Class<?> wildcardClass41 = serializable38.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable17 + "' != '" + 10L + "'", serializable17, 10L);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertEquals("'" + serializable25 + "' != '" + 10L + "'", serializable25, 10L);
        org.junit.Assert.assertNotNull(serializableNode26);
        org.junit.Assert.assertEquals("'" + serializable27 + "' != '" + 10L + "'", serializable27, 10L);
        org.junit.Assert.assertEquals("'" + serializable28 + "' != '" + 10L + "'", serializable28, 10L);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertEquals("'" + serializable33 + "' != '" + 10L + "'", serializable33, 10L);
        org.junit.Assert.assertNotNull(serializableNode34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(serializableNode37);
        org.junit.Assert.assertNotNull(serializable38);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test0573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0573");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable8 = serializableNode7.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode7.parent;
        serializableNode5.parent = serializableNode9;
        int int11 = serializableNode5.rank;
        java.io.Serializable serializable12 = serializableNode5.data;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
    }

    @Test
    public void test0574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0574");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = 'a';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int8 = serializableNode7.rank;
        int int9 = serializableNode7.rank;
        java.io.Serializable serializable10 = serializableNode7.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = serializableNode7.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode7.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable15 = serializableNode14.data;
        int int16 = serializableNode14.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode14.parent = serializableNode18;
        serializableNode12.parent = serializableNode14;
        int int21 = serializableNode12.rank;
        serializableNode1.parent = serializableNode12;
        int int23 = serializableNode12.rank;
        int int24 = serializableNode12.rank;
        java.lang.Class<?> wildcardClass25 = serializableNode12.getClass();
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertEquals("'" + serializable10 + "' != '" + 10L + "'", serializable10, 10L);
        org.junit.Assert.assertNotNull(serializableNode11);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test0575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0575");
        java.io.Serializable serializable0 = null;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>(serializable0);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable4 = serializableNode3.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode3.parent;
        int int6 = serializableNode3.rank;
        java.io.Serializable serializable7 = serializableNode3.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode9.parent;
        serializableNode9.rank = (byte) 100;
        java.lang.Class<?> wildcardClass13 = serializableNode9.getClass();
        serializableNode3.data = wildcardClass13;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode3.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int18 = serializableNode17.rank;
        int int19 = serializableNode17.rank;
        java.io.Serializable serializable20 = serializableNode17.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode17.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable24 = serializableNode23.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = serializableNode23.parent;
        serializableNode21.parent = serializableNode25;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int29 = serializableNode28.rank;
        int int30 = serializableNode28.rank;
        java.io.Serializable serializable31 = serializableNode28.data;
        serializableNode21.parent = serializableNode28;
        serializableNode3.parent = serializableNode21;
        serializableNode1.parent = serializableNode3;
        serializableNode3.rank = 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode38 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int39 = serializableNode38.rank;
        int int40 = serializableNode38.rank;
        java.io.Serializable serializable41 = serializableNode38.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode42 = serializableNode38.parent;
        java.io.Serializable serializable43 = serializableNode38.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode44 = serializableNode38.parent;
        java.lang.Class<?> wildcardClass45 = serializableNode44.getClass();
        serializableNode3.data = wildcardClass45;
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertEquals("'" + serializable20 + "' != '" + 10L + "'", serializable20, 10L);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertEquals("'" + serializable24 + "' != '" + 10L + "'", serializable24, 10L);
        org.junit.Assert.assertNotNull(serializableNode25);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertEquals("'" + serializable31 + "' != '" + 10L + "'", serializable31, 10L);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertEquals("'" + serializable41 + "' != '" + 10L + "'", serializable41, 10L);
        org.junit.Assert.assertNotNull(serializableNode42);
        org.junit.Assert.assertEquals("'" + serializable43 + "' != '" + 10L + "'", serializable43, 10L);
        org.junit.Assert.assertNotNull(serializableNode44);
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test0576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0576");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable8 = serializableNode7.data;
        int int9 = serializableNode7.rank;
        serializableNode7.rank = 'a';
        java.lang.Class<?> wildcardClass12 = serializableNode7.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass12);
        serializableNode1.data = wildcardClass12;
        java.io.Serializable serializable15 = serializableNode1.data;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(serializable15);
    }

    @Test
    public void test0577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0577");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable8 = serializableNode7.data;
        int int9 = serializableNode7.rank;
        serializableNode7.rank = 'a';
        java.lang.Class<?> wildcardClass12 = serializableNode7.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass12);
        serializableNode1.data = wildcardClass12;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode15.parent;
        java.lang.Class<?> wildcardClass17 = serializableNode15.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0578");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable9 = serializableNode8.data;
        int int10 = serializableNode8.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode8.parent = serializableNode12;
        serializableNode12.rank = 0;
        serializableNode12.data = 100;
        serializableNode6.parent = serializableNode12;
        serializableNode6.rank = ' ';
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
    }

    @Test
    public void test0579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0579");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = 'a';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int8 = serializableNode7.rank;
        int int9 = serializableNode7.rank;
        java.io.Serializable serializable10 = serializableNode7.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = serializableNode7.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode7.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable15 = serializableNode14.data;
        int int16 = serializableNode14.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode14.parent = serializableNode18;
        serializableNode12.parent = serializableNode14;
        int int21 = serializableNode12.rank;
        serializableNode1.parent = serializableNode12;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int25 = serializableNode24.rank;
        int int26 = serializableNode24.rank;
        java.io.Serializable serializable27 = serializableNode24.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable30 = serializableNode29.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = serializableNode29.parent;
        serializableNode24.parent = serializableNode29;
        int int33 = serializableNode24.rank;
        java.lang.Class<?> wildcardClass34 = serializableNode24.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode35 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass34);
        int int36 = serializableNode35.rank;
        serializableNode12.parent = serializableNode35;
        java.lang.Class<?> wildcardClass38 = serializableNode12.getClass();
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertEquals("'" + serializable10 + "' != '" + 10L + "'", serializable10, 10L);
        org.junit.Assert.assertNotNull(serializableNode11);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertEquals("'" + serializable27 + "' != '" + 10L + "'", serializable27, 10L);
        org.junit.Assert.assertEquals("'" + serializable30 + "' != '" + 10L + "'", serializable30, 10L);
        org.junit.Assert.assertNotNull(serializableNode31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test0580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0580");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable8 = serializableNode7.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode7.parent;
        serializableNode5.parent = serializableNode9;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int13 = serializableNode12.rank;
        int int14 = serializableNode12.rank;
        java.io.Serializable serializable15 = serializableNode12.data;
        serializableNode5.parent = serializableNode12;
        int int17 = serializableNode5.rank;
        java.io.Serializable serializable18 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int21 = serializableNode20.rank;
        int int22 = serializableNode20.rank;
        java.io.Serializable serializable23 = serializableNode20.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode20.parent;
        java.io.Serializable serializable25 = serializableNode24.data;
        int int26 = serializableNode24.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = serializableNode24.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = serializableNode24.parent;
        serializableNode5.parent = serializableNode24;
        java.lang.Class<?> wildcardClass30 = serializableNode5.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertEquals("'" + serializable18 + "' != '" + 10L + "'", serializable18, 10L);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertEquals("'" + serializable25 + "' != '" + 10L + "'", serializable25, 10L);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(serializableNode27);
        org.junit.Assert.assertNotNull(serializableNode28);
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test0581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0581");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        int int4 = serializableNode1.rank;
        java.io.Serializable serializable5 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode7.parent;
        serializableNode7.rank = (byte) 100;
        java.lang.Class<?> wildcardClass11 = serializableNode7.getClass();
        serializableNode1.data = wildcardClass11;
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.GenericDeclaration> genericDeclarationNode13 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.GenericDeclaration>((java.lang.reflect.GenericDeclaration) wildcardClass11);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass11);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode16.parent;
        serializableNode17.rank = (byte) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int22 = serializableNode21.rank;
        int int23 = serializableNode21.rank;
        java.io.Serializable serializable24 = serializableNode21.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable27 = serializableNode26.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = serializableNode26.parent;
        serializableNode21.parent = serializableNode26;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = serializableNode26.parent;
        serializableNode17.parent = serializableNode30;
        serializableNode14.parent = serializableNode17;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int35 = serializableNode34.rank;
        int int36 = serializableNode34.rank;
        serializableNode34.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>> serializableNodeNode39 = new com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>>(serializableNode34);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int42 = serializableNode41.rank;
        int int43 = serializableNode41.rank;
        java.io.Serializable serializable44 = serializableNode41.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode45 = serializableNode41.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode47 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable48 = serializableNode47.data;
        int int49 = serializableNode47.rank;
        serializableNode47.rank = 'a';
        java.lang.Class<?> wildcardClass52 = serializableNode47.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode53 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass52);
        serializableNode41.data = wildcardClass52;
        serializableNode34.data = wildcardClass52;
        serializableNode17.data = wildcardClass52;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode57 = serializableNode17.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode58 = serializableNode57.parent;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + serializable5 + "' != '" + 10L + "'", serializable5, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertEquals("'" + serializable24 + "' != '" + 10L + "'", serializable24, 10L);
        org.junit.Assert.assertEquals("'" + serializable27 + "' != '" + 10L + "'", serializable27, 10L);
        org.junit.Assert.assertNotNull(serializableNode28);
        org.junit.Assert.assertNotNull(serializableNode30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertEquals("'" + serializable44 + "' != '" + 10L + "'", serializable44, 10L);
        org.junit.Assert.assertNotNull(serializableNode45);
        org.junit.Assert.assertEquals("'" + serializable48 + "' != '" + 10L + "'", serializable48, 10L);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(serializableNode57);
        org.junit.Assert.assertNotNull(serializableNode58);
    }

    @Test
    public void test0582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0582");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = (short) -1;
        serializableNode1.rank = (short) -1;
        java.io.Serializable serializable8 = serializableNode1.data;
        int int9 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode1.parent;
        java.io.Serializable serializable11 = serializableNode1.data;
        java.io.Serializable serializable12 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = serializableNode13.parent;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertNotNull(serializableNode14);
    }

    @Test
    public void test0583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0583");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode2 = serializableNode1.parent;
        serializableNode2.rank = (byte) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int7 = serializableNode6.rank;
        int int8 = serializableNode6.rank;
        java.io.Serializable serializable9 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode6.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = serializableNode6.parent;
        serializableNode6.rank = (byte) 10;
        int int14 = serializableNode6.rank;
        serializableNode2.parent = serializableNode6;
        int int16 = serializableNode6.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        serializableNode18.rank = 0;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable23 = serializableNode22.data;
        int int24 = serializableNode22.rank;
        serializableNode18.parent = serializableNode22;
        java.lang.Class<?> wildcardClass26 = serializableNode22.getClass();
        serializableNode6.data = wildcardClass26;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = serializableNode6.parent;
        org.junit.Assert.assertNotNull(serializableNode2);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertNotNull(serializableNode11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 10 + "'", int14 == 10);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 10 + "'", int16 == 10);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(serializableNode28);
    }

    @Test
    public void test0584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0584");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        serializableNode1.rank = (short) 10;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int11 = serializableNode10.rank;
        int int12 = serializableNode10.rank;
        java.io.Serializable serializable13 = serializableNode10.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = serializableNode10.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable17 = serializableNode16.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode16.parent;
        serializableNode14.parent = serializableNode18;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int22 = serializableNode21.rank;
        int int23 = serializableNode21.rank;
        java.io.Serializable serializable24 = serializableNode21.data;
        serializableNode14.parent = serializableNode21;
        int int26 = serializableNode14.rank;
        java.io.Serializable serializable27 = serializableNode14.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int30 = serializableNode29.rank;
        int int31 = serializableNode29.rank;
        java.io.Serializable serializable32 = serializableNode29.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = serializableNode29.parent;
        java.io.Serializable serializable34 = serializableNode33.data;
        int int35 = serializableNode33.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode36 = serializableNode33.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = serializableNode33.parent;
        serializableNode14.parent = serializableNode33;
        serializableNode8.parent = serializableNode14;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable42 = serializableNode41.data;
        int int43 = serializableNode41.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode45 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int46 = serializableNode45.rank;
        int int47 = serializableNode45.rank;
        java.io.Serializable serializable48 = serializableNode45.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode50 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable51 = serializableNode50.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode52 = serializableNode50.parent;
        serializableNode45.parent = serializableNode50;
        serializableNode45.data = true;
        serializableNode41.parent = serializableNode45;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode57 = serializableNode45.parent;
        serializableNode14.parent = serializableNode45;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode60 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int61 = serializableNode60.rank;
        int int62 = serializableNode60.rank;
        java.io.Serializable serializable63 = serializableNode60.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode65 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable66 = serializableNode65.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode67 = serializableNode65.parent;
        serializableNode60.parent = serializableNode65;
        java.lang.Class<?> wildcardClass69 = serializableNode60.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.AnnotatedElement> annotatedElementNode70 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.AnnotatedElement>((java.lang.reflect.AnnotatedElement) wildcardClass69);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode71 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass69);
        serializableNode14.parent = serializableNode71;
        java.io.Serializable serializable73 = serializableNode14.data;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode14);
        org.junit.Assert.assertEquals("'" + serializable17 + "' != '" + 10L + "'", serializable17, 10L);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertEquals("'" + serializable24 + "' != '" + 10L + "'", serializable24, 10L);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertEquals("'" + serializable27 + "' != '" + 10L + "'", serializable27, 10L);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertEquals("'" + serializable32 + "' != '" + 10L + "'", serializable32, 10L);
        org.junit.Assert.assertNotNull(serializableNode33);
        org.junit.Assert.assertEquals("'" + serializable34 + "' != '" + 10L + "'", serializable34, 10L);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(serializableNode36);
        org.junit.Assert.assertNotNull(serializableNode37);
        org.junit.Assert.assertEquals("'" + serializable42 + "' != '" + 10L + "'", serializable42, 10L);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertEquals("'" + serializable48 + "' != '" + 10L + "'", serializable48, 10L);
        org.junit.Assert.assertEquals("'" + serializable51 + "' != '" + 10L + "'", serializable51, 10L);
        org.junit.Assert.assertNotNull(serializableNode52);
        org.junit.Assert.assertNotNull(serializableNode57);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertEquals("'" + serializable63 + "' != '" + 10L + "'", serializable63, 10L);
        org.junit.Assert.assertEquals("'" + serializable66 + "' != '" + 10L + "'", serializable66, 10L);
        org.junit.Assert.assertNotNull(serializableNode67);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertEquals("'" + serializable73 + "' != '" + 10L + "'", serializable73, 10L);
    }

    @Test
    public void test0585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0585");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.lang.Class<?> wildcardClass6 = serializableNode1.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.Type> typeNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.Type>((java.lang.reflect.Type) wildcardClass6);
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.invoke.TypeDescriptor> typeDescriptorNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.invoke.TypeDescriptor>((java.lang.invoke.TypeDescriptor) wildcardClass6);
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.GenericDeclaration> genericDeclarationNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.GenericDeclaration>((java.lang.reflect.GenericDeclaration) wildcardClass6);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0586");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int12 = serializableNode11.rank;
        int int13 = serializableNode11.rank;
        java.io.Serializable serializable14 = serializableNode11.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode11.parent;
        java.lang.Class<?> wildcardClass16 = serializableNode11.getClass();
        serializableNode5.data = wildcardClass16;
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.constant.Constable> constableNode18 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.constant.Constable>((java.lang.constant.Constable) wildcardClass16);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass16);
        int int20 = serializableNode19.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
    }

    @Test
    public void test0587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0587");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        serializableNode1.data = (byte) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable10 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = serializableNode9.parent;
        int int12 = serializableNode9.rank;
        java.io.Serializable serializable13 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode15.parent;
        serializableNode15.rank = (byte) 100;
        java.lang.Class<?> wildcardClass19 = serializableNode15.getClass();
        serializableNode9.data = wildcardClass19;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode9.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        java.lang.Class<?> wildcardClass24 = serializableNode23.getClass();
        serializableNode21.data = wildcardClass24;
        int int26 = serializableNode21.rank;
        serializableNode21.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = serializableNode21.parent;
        serializableNode7.parent = serializableNode29;
        java.io.Serializable serializable31 = serializableNode29.data;
        int int32 = serializableNode29.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int35 = serializableNode34.rank;
        int int36 = serializableNode34.rank;
        java.io.Serializable serializable37 = serializableNode34.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode38 = serializableNode34.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode39 = serializableNode34.parent;
        java.lang.Class<?> wildcardClass40 = serializableNode34.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass40);
        serializableNode29.data = wildcardClass40;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode44 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int45 = serializableNode44.rank;
        int int46 = serializableNode44.rank;
        serializableNode44.data = (short) 100;
        serializableNode29.parent = serializableNode44;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode51 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable52 = serializableNode51.data;
        int int53 = serializableNode51.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode55 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode51.parent = serializableNode55;
        serializableNode51.data = '#';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode60 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int61 = serializableNode60.rank;
        int int62 = serializableNode60.rank;
        serializableNode60.data = (short) 100;
        serializableNode51.parent = serializableNode60;
        java.io.Serializable serializable66 = serializableNode60.data;
        int int67 = serializableNode60.rank;
        serializableNode60.rank = 10;
        java.io.Serializable serializable70 = serializableNode60.data;
        java.lang.Class<?> wildcardClass71 = serializable70.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode72 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>(serializable70);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode73 = null;
        serializableNode72.parent = serializableNode73;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode75 = serializableNode72.parent;
        serializableNode29.parent = serializableNode72;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode77 = serializableNode29.parent;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertEquals("'" + serializable10 + "' != '" + 10L + "'", serializable10, 10L);
        org.junit.Assert.assertNotNull(serializableNode11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(serializableNode29);
        org.junit.Assert.assertNotNull(serializable31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertEquals("'" + serializable37 + "' != '" + 10L + "'", serializable37, 10L);
        org.junit.Assert.assertNotNull(serializableNode38);
        org.junit.Assert.assertNotNull(serializableNode39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertEquals("'" + serializable52 + "' != '" + 10L + "'", serializable52, 10L);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertEquals("'" + serializable66 + "' != '" + (short) 100 + "'", serializable66, (short) 100);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertEquals("'" + serializable70 + "' != '" + (short) 100 + "'", serializable70, (short) 100);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNull(serializableNode75);
        org.junit.Assert.assertNotNull(serializableNode77);
    }

    @Test
    public void test0588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0588");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode1.parent = serializableNode5;
        java.io.Serializable serializable7 = serializableNode1.data;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
    }

    @Test
    public void test0589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0589");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        serializableNode1.rank = (byte) 10;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable11 = serializableNode10.data;
        int int12 = serializableNode10.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode10.parent = serializableNode14;
        serializableNode10.data = '#';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int20 = serializableNode19.rank;
        int int21 = serializableNode19.rank;
        serializableNode19.data = (short) 100;
        serializableNode10.parent = serializableNode19;
        java.lang.Class<?> wildcardClass25 = serializableNode10.getClass();
        serializableNode1.data = wildcardClass25;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test0590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0590");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int10 = serializableNode9.rank;
        int int11 = serializableNode9.rank;
        java.io.Serializable serializable12 = serializableNode9.data;
        serializableNode9.rank = (byte) 1;
        serializableNode9.data = 10.0d;
        java.lang.Class<?> wildcardClass17 = serializableNode9.getClass();
        serializableNode5.data = wildcardClass17;
        serializableNode5.data = 100.0d;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int23 = serializableNode22.rank;
        int int24 = serializableNode22.rank;
        java.io.Serializable serializable25 = serializableNode22.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = serializableNode22.parent;
        java.lang.Class<?> wildcardClass27 = serializableNode26.getClass();
        serializableNode5.data = wildcardClass27;
        serializableNode5.rank = (byte) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = serializableNode5.parent;
        java.lang.Class<?> wildcardClass32 = serializableNode31.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertEquals("'" + serializable25 + "' != '" + 10L + "'", serializable25, 10L);
        org.junit.Assert.assertNotNull(serializableNode26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(serializableNode31);
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test0591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0591");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable11 = serializableNode10.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode10.parent;
        java.io.Serializable serializable13 = serializableNode12.data;
        serializableNode12.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode12.parent;
        serializableNode8.parent = serializableNode16;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode8.parent;
        serializableNode18.rank = 35;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertNotNull(serializableNode18);
    }

    @Test
    public void test0592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0592");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        int int4 = serializableNode1.rank;
        java.io.Serializable serializable5 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode7.parent;
        serializableNode7.rank = (byte) 100;
        java.lang.Class<?> wildcardClass11 = serializableNode7.getClass();
        serializableNode1.data = wildcardClass11;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        java.lang.Class<?> wildcardClass16 = serializableNode15.getClass();
        serializableNode13.data = wildcardClass16;
        serializableNode13.rank = (short) 100;
        java.io.Serializable serializable20 = serializableNode13.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>(serializable20);
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + serializable5 + "' != '" + 10L + "'", serializable5, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(serializable20);
    }

    @Test
    public void test0593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0593");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        java.io.Serializable serializable8 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int11 = serializableNode10.rank;
        int int12 = serializableNode10.rank;
        java.io.Serializable serializable13 = serializableNode10.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = serializableNode10.parent;
        java.io.Serializable serializable15 = serializableNode14.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode14.parent;
        java.io.Serializable serializable17 = serializableNode14.data;
        java.io.Serializable serializable18 = serializableNode14.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int21 = serializableNode20.rank;
        int int22 = serializableNode20.rank;
        java.io.Serializable serializable23 = serializableNode20.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode20.parent;
        java.lang.Class<?> wildcardClass25 = serializableNode24.getClass();
        serializableNode14.data = wildcardClass25;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = serializableNode14.parent;
        serializableNode5.parent = serializableNode14;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int31 = serializableNode30.rank;
        int int32 = serializableNode30.rank;
        java.io.Serializable serializable33 = serializableNode30.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = serializableNode30.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode35 = serializableNode30.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable38 = serializableNode37.data;
        int int39 = serializableNode37.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode37.parent = serializableNode41;
        serializableNode35.parent = serializableNode37;
        int int44 = serializableNode35.rank;
        java.lang.Class<?> wildcardClass45 = serializableNode35.getClass();
        serializableNode5.data = wildcardClass45;
        java.lang.Class<?> wildcardClass47 = serializableNode5.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode14);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertEquals("'" + serializable17 + "' != '" + 10L + "'", serializable17, 10L);
        org.junit.Assert.assertEquals("'" + serializable18 + "' != '" + 10L + "'", serializable18, 10L);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(serializableNode27);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertEquals("'" + serializable33 + "' != '" + 10L + "'", serializable33, 10L);
        org.junit.Assert.assertNotNull(serializableNode34);
        org.junit.Assert.assertNotNull(serializableNode35);
        org.junit.Assert.assertEquals("'" + serializable38 + "' != '" + 10L + "'", serializable38, 10L);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test0594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0594");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int6 = serializableNode5.rank;
        int int7 = serializableNode5.rank;
        java.io.Serializable serializable8 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable11 = serializableNode10.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode10.parent;
        serializableNode5.parent = serializableNode10;
        serializableNode5.data = true;
        serializableNode1.parent = serializableNode5;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode17.parent;
        int int19 = serializableNode17.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int22 = serializableNode21.rank;
        int int23 = serializableNode21.rank;
        java.io.Serializable serializable24 = serializableNode21.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = serializableNode21.parent;
        java.io.Serializable serializable26 = serializableNode25.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = serializableNode25.parent;
        java.io.Serializable serializable28 = serializableNode25.data;
        java.io.Serializable serializable29 = serializableNode25.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int32 = serializableNode31.rank;
        int int33 = serializableNode31.rank;
        java.io.Serializable serializable34 = serializableNode31.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode35 = serializableNode31.parent;
        java.lang.Class<?> wildcardClass36 = serializableNode35.getClass();
        serializableNode25.data = wildcardClass36;
        java.io.Serializable serializable38 = serializableNode25.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode39 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>(serializable38);
        serializableNode39.data = 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode43 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int44 = serializableNode43.rank;
        int int45 = serializableNode43.rank;
        java.io.Serializable serializable46 = serializableNode43.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode47 = serializableNode43.parent;
        java.io.Serializable serializable48 = serializableNode47.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode49 = serializableNode47.parent;
        java.io.Serializable serializable50 = serializableNode47.data;
        java.io.Serializable serializable51 = serializableNode47.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode53 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int54 = serializableNode53.rank;
        int int55 = serializableNode53.rank;
        java.io.Serializable serializable56 = serializableNode53.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode57 = serializableNode53.parent;
        java.lang.Class<?> wildcardClass58 = serializableNode57.getClass();
        serializableNode47.data = wildcardClass58;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode60 = serializableNode47.parent;
        serializableNode60.rank = 'a';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode63 = serializableNode60.parent;
        serializableNode39.parent = serializableNode60;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode65 = serializableNode60.parent;
        serializableNode17.parent = serializableNode60;
        serializableNode60.rank = (short) -1;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertEquals("'" + serializable24 + "' != '" + 10L + "'", serializable24, 10L);
        org.junit.Assert.assertNotNull(serializableNode25);
        org.junit.Assert.assertEquals("'" + serializable26 + "' != '" + 10L + "'", serializable26, 10L);
        org.junit.Assert.assertNotNull(serializableNode27);
        org.junit.Assert.assertEquals("'" + serializable28 + "' != '" + 10L + "'", serializable28, 10L);
        org.junit.Assert.assertEquals("'" + serializable29 + "' != '" + 10L + "'", serializable29, 10L);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertEquals("'" + serializable34 + "' != '" + 10L + "'", serializable34, 10L);
        org.junit.Assert.assertNotNull(serializableNode35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(serializable38);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertEquals("'" + serializable46 + "' != '" + 10L + "'", serializable46, 10L);
        org.junit.Assert.assertNotNull(serializableNode47);
        org.junit.Assert.assertEquals("'" + serializable48 + "' != '" + 10L + "'", serializable48, 10L);
        org.junit.Assert.assertNotNull(serializableNode49);
        org.junit.Assert.assertEquals("'" + serializable50 + "' != '" + 10L + "'", serializable50, 10L);
        org.junit.Assert.assertEquals("'" + serializable51 + "' != '" + 10L + "'", serializable51, 10L);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertEquals("'" + serializable56 + "' != '" + 10L + "'", serializable56, 10L);
        org.junit.Assert.assertNotNull(serializableNode57);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(serializableNode60);
        org.junit.Assert.assertNotNull(serializableNode63);
        org.junit.Assert.assertNotNull(serializableNode65);
    }

    @Test
    public void test0595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0595");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = 'a';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int8 = serializableNode7.rank;
        int int9 = serializableNode7.rank;
        java.io.Serializable serializable10 = serializableNode7.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = serializableNode7.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode7.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable15 = serializableNode14.data;
        int int16 = serializableNode14.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode14.parent = serializableNode18;
        serializableNode12.parent = serializableNode14;
        int int21 = serializableNode12.rank;
        serializableNode1.parent = serializableNode12;
        serializableNode1.data = (short) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int27 = serializableNode26.rank;
        int int28 = serializableNode26.rank;
        java.io.Serializable serializable29 = serializableNode26.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = serializableNode26.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable33 = serializableNode32.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = serializableNode32.parent;
        serializableNode30.parent = serializableNode34;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int38 = serializableNode37.rank;
        int int39 = serializableNode37.rank;
        java.io.Serializable serializable40 = serializableNode37.data;
        serializableNode37.rank = (byte) 1;
        java.lang.Class<?> wildcardClass43 = serializableNode37.getClass();
        serializableNode30.data = wildcardClass43;
        java.lang.Class<?> wildcardClass45 = serializableNode30.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode46 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass45);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode47 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass45);
        java.io.Serializable serializable48 = serializableNode47.data;
        serializableNode1.data = serializable48;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode51 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable52 = serializableNode51.data;
        int int53 = serializableNode51.rank;
        serializableNode51.rank = 'a';
        java.lang.Class<?> wildcardClass56 = serializableNode51.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode57 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass56);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode58 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass56);
        serializableNode58.rank = ' ';
        java.io.Serializable serializable61 = serializableNode58.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode62 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>(serializable61);
        serializableNode1.data = serializable61;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertEquals("'" + serializable10 + "' != '" + 10L + "'", serializable10, 10L);
        org.junit.Assert.assertNotNull(serializableNode11);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertEquals("'" + serializable29 + "' != '" + 10L + "'", serializable29, 10L);
        org.junit.Assert.assertNotNull(serializableNode30);
        org.junit.Assert.assertEquals("'" + serializable33 + "' != '" + 10L + "'", serializable33, 10L);
        org.junit.Assert.assertNotNull(serializableNode34);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertEquals("'" + serializable40 + "' != '" + 10L + "'", serializable40, 10L);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(serializable48);
        org.junit.Assert.assertEquals("'" + serializable52 + "' != '" + 10L + "'", serializable52, 10L);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(serializable61);
    }

    @Test
    public void test0596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0596");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>> serializableNodeNode6 = new com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>>(serializableNode1);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode7.parent;
        serializableNode8.rank = (byte) 0;
        int int11 = serializableNode8.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
    }

    @Test
    public void test0597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0597");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        serializableNode1.rank = (short) 10;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int11 = serializableNode10.rank;
        int int12 = serializableNode10.rank;
        java.io.Serializable serializable13 = serializableNode10.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = serializableNode10.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable17 = serializableNode16.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode16.parent;
        serializableNode14.parent = serializableNode18;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int22 = serializableNode21.rank;
        int int23 = serializableNode21.rank;
        java.io.Serializable serializable24 = serializableNode21.data;
        serializableNode14.parent = serializableNode21;
        int int26 = serializableNode14.rank;
        java.io.Serializable serializable27 = serializableNode14.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int30 = serializableNode29.rank;
        int int31 = serializableNode29.rank;
        java.io.Serializable serializable32 = serializableNode29.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = serializableNode29.parent;
        java.io.Serializable serializable34 = serializableNode33.data;
        int int35 = serializableNode33.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode36 = serializableNode33.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = serializableNode33.parent;
        serializableNode14.parent = serializableNode33;
        serializableNode8.parent = serializableNode14;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable42 = serializableNode41.data;
        int int43 = serializableNode41.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode45 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int46 = serializableNode45.rank;
        int int47 = serializableNode45.rank;
        java.io.Serializable serializable48 = serializableNode45.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode50 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable51 = serializableNode50.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode52 = serializableNode50.parent;
        serializableNode45.parent = serializableNode50;
        serializableNode45.data = true;
        serializableNode41.parent = serializableNode45;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode57 = serializableNode45.parent;
        serializableNode14.parent = serializableNode45;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode60 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int61 = serializableNode60.rank;
        int int62 = serializableNode60.rank;
        java.io.Serializable serializable63 = serializableNode60.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode65 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable66 = serializableNode65.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode67 = serializableNode65.parent;
        serializableNode60.parent = serializableNode65;
        java.lang.Class<?> wildcardClass69 = serializableNode60.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.AnnotatedElement> annotatedElementNode70 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.AnnotatedElement>((java.lang.reflect.AnnotatedElement) wildcardClass69);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode71 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass69);
        serializableNode14.parent = serializableNode71;
        serializableNode71.rank = 'a';
        java.lang.Class<?> wildcardClass75 = serializableNode71.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode14);
        org.junit.Assert.assertEquals("'" + serializable17 + "' != '" + 10L + "'", serializable17, 10L);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertEquals("'" + serializable24 + "' != '" + 10L + "'", serializable24, 10L);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertEquals("'" + serializable27 + "' != '" + 10L + "'", serializable27, 10L);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertEquals("'" + serializable32 + "' != '" + 10L + "'", serializable32, 10L);
        org.junit.Assert.assertNotNull(serializableNode33);
        org.junit.Assert.assertEquals("'" + serializable34 + "' != '" + 10L + "'", serializable34, 10L);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(serializableNode36);
        org.junit.Assert.assertNotNull(serializableNode37);
        org.junit.Assert.assertEquals("'" + serializable42 + "' != '" + 10L + "'", serializable42, 10L);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertEquals("'" + serializable48 + "' != '" + 10L + "'", serializable48, 10L);
        org.junit.Assert.assertEquals("'" + serializable51 + "' != '" + 10L + "'", serializable51, 10L);
        org.junit.Assert.assertNotNull(serializableNode52);
        org.junit.Assert.assertNotNull(serializableNode57);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertEquals("'" + serializable63 + "' != '" + 10L + "'", serializable63, 10L);
        org.junit.Assert.assertEquals("'" + serializable66 + "' != '" + 10L + "'", serializable66, 10L);
        org.junit.Assert.assertNotNull(serializableNode67);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test0598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0598");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable8 = serializableNode7.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode7.parent;
        serializableNode5.parent = serializableNode9;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int13 = serializableNode12.rank;
        int int14 = serializableNode12.rank;
        java.io.Serializable serializable15 = serializableNode12.data;
        serializableNode5.parent = serializableNode12;
        int int17 = serializableNode5.rank;
        java.io.Serializable serializable18 = serializableNode5.data;
        java.lang.Class<?> wildcardClass19 = serializableNode5.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass19);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable23 = serializableNode22.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode22.parent;
        int int25 = serializableNode22.rank;
        java.io.Serializable serializable26 = serializableNode22.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = serializableNode28.parent;
        serializableNode28.rank = (byte) 100;
        java.lang.Class<?> wildcardClass32 = serializableNode28.getClass();
        serializableNode22.data = wildcardClass32;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = serializableNode22.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode36 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        java.lang.Class<?> wildcardClass37 = serializableNode36.getClass();
        serializableNode34.data = wildcardClass37;
        serializableNode20.data = wildcardClass37;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int42 = serializableNode41.rank;
        int int43 = serializableNode41.rank;
        java.io.Serializable serializable44 = serializableNode41.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode45 = serializableNode41.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode46 = serializableNode41.parent;
        java.lang.Class<?> wildcardClass47 = serializableNode41.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode48 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass47);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode49 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass47);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode50 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass47);
        serializableNode20.data = wildcardClass47;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode52 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass47);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertEquals("'" + serializable18 + "' != '" + 10L + "'", serializable18, 10L);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertEquals("'" + serializable26 + "' != '" + 10L + "'", serializable26, 10L);
        org.junit.Assert.assertNotNull(serializableNode29);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(serializableNode34);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertEquals("'" + serializable44 + "' != '" + 10L + "'", serializable44, 10L);
        org.junit.Assert.assertNotNull(serializableNode45);
        org.junit.Assert.assertNotNull(serializableNode46);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test0599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0599");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int6 = serializableNode5.rank;
        int int7 = serializableNode5.rank;
        java.io.Serializable serializable8 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable11 = serializableNode10.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode10.parent;
        serializableNode5.parent = serializableNode10;
        serializableNode5.data = true;
        serializableNode1.parent = serializableNode5;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode17.parent;
        int int19 = serializableNode18.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int22 = serializableNode21.rank;
        int int23 = serializableNode21.rank;
        java.io.Serializable serializable24 = serializableNode21.data;
        serializableNode21.rank = (byte) 1;
        int int27 = serializableNode21.rank;
        int int28 = serializableNode21.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable31 = serializableNode30.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = serializableNode30.parent;
        java.io.Serializable serializable33 = serializableNode32.data;
        serializableNode32.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode36 = serializableNode32.parent;
        int int37 = serializableNode36.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode38 = serializableNode36.parent;
        java.lang.Class<?> wildcardClass39 = serializableNode38.getClass();
        serializableNode21.data = wildcardClass39;
        serializableNode21.data = 100L;
        serializableNode21.rank = 1;
        java.lang.Class<?> wildcardClass45 = serializableNode21.getClass();
        serializableNode18.data = wildcardClass45;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertEquals("'" + serializable24 + "' != '" + 10L + "'", serializable24, 10L);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertEquals("'" + serializable31 + "' != '" + 10L + "'", serializable31, 10L);
        org.junit.Assert.assertNotNull(serializableNode32);
        org.junit.Assert.assertEquals("'" + serializable33 + "' != '" + 10L + "'", serializable33, 10L);
        org.junit.Assert.assertNotNull(serializableNode36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(serializableNode38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test0600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0600");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        serializableNode1.rank = (byte) 10;
        int int9 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (byte) 10);
        serializableNode1.parent = serializableNode11;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int15 = serializableNode14.rank;
        int int16 = serializableNode14.rank;
        java.io.Serializable serializable17 = serializableNode14.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable20 = serializableNode19.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode19.parent;
        serializableNode14.parent = serializableNode19;
        int int23 = serializableNode14.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode14.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = serializableNode14.parent;
        java.io.Serializable serializable26 = serializableNode14.data;
        java.lang.Class<?> wildcardClass27 = serializableNode14.getClass();
        serializableNode1.data = wildcardClass27;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 10 + "'", int9 == 10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertEquals("'" + serializable17 + "' != '" + 10L + "'", serializable17, 10L);
        org.junit.Assert.assertEquals("'" + serializable20 + "' != '" + 10L + "'", serializable20, 10L);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertNotNull(serializableNode25);
        org.junit.Assert.assertEquals("'" + serializable26 + "' != '" + 10L + "'", serializable26, 10L);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test0601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0601");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode5.parent;
        java.io.Serializable serializable10 = serializableNode5.data;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertEquals("'" + serializable10 + "' != '" + 10L + "'", serializable10, 10L);
    }

    @Test
    public void test0602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0602");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        java.lang.Class<?> wildcardClass4 = serializableNode1.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass4);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode5.parent;
        int int7 = serializableNode5.rank;
        int int8 = serializableNode5.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode5.parent;
        java.io.Serializable serializable10 = serializableNode5.data;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertNotNull(serializable10);
    }

    @Test
    public void test0603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0603");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        serializableNode1.rank = (short) 10;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode1.parent;
        serializableNode8.rank = (byte) -1;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode8);
    }

    @Test
    public void test0604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0604");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        java.io.Serializable serializable7 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int10 = serializableNode9.rank;
        int int11 = serializableNode9.rank;
        java.io.Serializable serializable12 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode9.parent;
        java.io.Serializable serializable14 = serializableNode13.data;
        int int15 = serializableNode13.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode13.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode16.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode17.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode17.parent;
        serializableNode6.parent = serializableNode19;
        serializableNode19.rank = (byte) 100;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode19.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.Object> objNode24 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.Object>((java.lang.Object) serializableNode19);
        int int25 = serializableNode19.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 100 + "'", int25 == 100);
    }

    @Test
    public void test0605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0605");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable9 = serializableNode8.data;
        int int10 = serializableNode8.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode8.parent = serializableNode12;
        serializableNode12.rank = 0;
        serializableNode12.data = 100;
        serializableNode6.parent = serializableNode12;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int21 = serializableNode20.rank;
        int int22 = serializableNode20.rank;
        java.io.Serializable serializable23 = serializableNode20.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode20.parent;
        serializableNode12.parent = serializableNode20;
        int int26 = serializableNode20.rank;
        serializableNode20.rank = 1;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
    }

    @Test
    public void test0606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0606");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) false);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) "");
        serializableNode3.rank = (byte) 100;
        serializableNode3.data = 'a';
        java.lang.Class<?> wildcardClass8 = serializableNode3.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass8);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode9.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int13 = serializableNode12.rank;
        int int14 = serializableNode12.rank;
        java.io.Serializable serializable15 = serializableNode12.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode12.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode12.parent;
        serializableNode12.rank = (byte) 10;
        int int20 = serializableNode12.rank;
        java.lang.Class<?> wildcardClass21 = serializableNode12.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass21);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass21);
        serializableNode9.data = wildcardClass21;
        serializableNode1.data = wildcardClass21;
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 10 + "'", int20 == 10);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test0607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0607");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (-1.0d));
        int int2 = serializableNode1.rank;
        java.lang.Class<?> wildcardClass3 = serializableNode1.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode4 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass3);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass3);
        serializableNode5.rank = 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode5.parent;
        int int9 = serializableNode8.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
    }

    @Test
    public void test0608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0608");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode1.parent = serializableNode5;
        serializableNode5.rank = 0;
        serializableNode5.data = 100;
        serializableNode5.data = false;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int15 = serializableNode14.rank;
        int int16 = serializableNode14.rank;
        java.io.Serializable serializable17 = serializableNode14.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode14.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable21 = serializableNode20.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = serializableNode20.parent;
        serializableNode18.parent = serializableNode22;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int26 = serializableNode25.rank;
        int int27 = serializableNode25.rank;
        java.io.Serializable serializable28 = serializableNode25.data;
        serializableNode18.parent = serializableNode25;
        java.io.Serializable serializable30 = serializableNode18.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (byte) 10);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = serializableNode32.parent;
        java.io.Serializable serializable34 = serializableNode33.data;
        serializableNode18.parent = serializableNode33;
        serializableNode33.rank = (-1);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode39 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int40 = serializableNode39.rank;
        int int41 = serializableNode39.rank;
        java.io.Serializable serializable42 = serializableNode39.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode43 = serializableNode39.parent;
        java.io.Serializable serializable44 = serializableNode43.data;
        int int45 = serializableNode43.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode46 = serializableNode43.parent;
        serializableNode43.data = (byte) -1;
        java.lang.Class<?> wildcardClass49 = serializableNode43.getClass();
        serializableNode33.data = wildcardClass49;
        serializableNode5.data = wildcardClass49;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertEquals("'" + serializable17 + "' != '" + 10L + "'", serializable17, 10L);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertEquals("'" + serializable21 + "' != '" + 10L + "'", serializable21, 10L);
        org.junit.Assert.assertNotNull(serializableNode22);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertEquals("'" + serializable28 + "' != '" + 10L + "'", serializable28, 10L);
        org.junit.Assert.assertEquals("'" + serializable30 + "' != '" + 10L + "'", serializable30, 10L);
        org.junit.Assert.assertNotNull(serializableNode33);
        org.junit.Assert.assertEquals("'" + serializable34 + "' != '" + (byte) 10 + "'", serializable34, (byte) 10);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertEquals("'" + serializable42 + "' != '" + 10L + "'", serializable42, 10L);
        org.junit.Assert.assertNotNull(serializableNode43);
        org.junit.Assert.assertEquals("'" + serializable44 + "' != '" + 10L + "'", serializable44, 10L);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(serializableNode46);
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test0609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0609");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable7 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode6.parent;
        serializableNode1.parent = serializableNode6;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode6.parent;
        java.io.Serializable serializable11 = serializableNode10.data;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
    }

    @Test
    public void test0610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0610");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        serializableNode1.rank = (byte) 1;
        int int7 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int11 = serializableNode10.rank;
        int int12 = serializableNode10.rank;
        java.io.Serializable serializable13 = serializableNode10.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = serializableNode10.parent;
        java.io.Serializable serializable15 = serializableNode14.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode14.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int19 = serializableNode18.rank;
        int int20 = serializableNode18.rank;
        java.io.Serializable serializable21 = serializableNode18.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = serializableNode18.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable25 = serializableNode24.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = serializableNode24.parent;
        serializableNode22.parent = serializableNode26;
        int int28 = serializableNode26.rank;
        serializableNode16.parent = serializableNode26;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (short) -1);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = serializableNode31.parent;
        serializableNode16.parent = serializableNode31;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = serializableNode31.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode36 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int37 = serializableNode36.rank;
        int int38 = serializableNode36.rank;
        java.io.Serializable serializable39 = serializableNode36.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode40 = serializableNode36.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode42 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable43 = serializableNode42.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode44 = serializableNode42.parent;
        serializableNode40.parent = serializableNode44;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode47 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int48 = serializableNode47.rank;
        int int49 = serializableNode47.rank;
        java.io.Serializable serializable50 = serializableNode47.data;
        serializableNode47.rank = (byte) 1;
        java.lang.Class<?> wildcardClass53 = serializableNode47.getClass();
        serializableNode40.data = wildcardClass53;
        java.io.Serializable serializable55 = serializableNode40.data;
        serializableNode31.data = serializable55;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode58 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int59 = serializableNode58.rank;
        int int60 = serializableNode58.rank;
        java.io.Serializable serializable61 = serializableNode58.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode62 = serializableNode58.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode63 = serializableNode58.parent;
        serializableNode58.rank = (byte) 10;
        int int66 = serializableNode58.rank;
        int int67 = serializableNode58.rank;
        serializableNode31.parent = serializableNode58;
        serializableNode8.parent = serializableNode58;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode70 = serializableNode58.parent;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode14);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertEquals("'" + serializable21 + "' != '" + 10L + "'", serializable21, 10L);
        org.junit.Assert.assertNotNull(serializableNode22);
        org.junit.Assert.assertEquals("'" + serializable25 + "' != '" + 10L + "'", serializable25, 10L);
        org.junit.Assert.assertNotNull(serializableNode26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(serializableNode32);
        org.junit.Assert.assertNotNull(serializableNode34);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertEquals("'" + serializable39 + "' != '" + 10L + "'", serializable39, 10L);
        org.junit.Assert.assertNotNull(serializableNode40);
        org.junit.Assert.assertEquals("'" + serializable43 + "' != '" + 10L + "'", serializable43, 10L);
        org.junit.Assert.assertNotNull(serializableNode44);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertEquals("'" + serializable50 + "' != '" + 10L + "'", serializable50, 10L);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(serializable55);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertEquals("'" + serializable61 + "' != '" + 10L + "'", serializable61, 10L);
        org.junit.Assert.assertNotNull(serializableNode62);
        org.junit.Assert.assertNotNull(serializableNode63);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 10 + "'", int66 == 10);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 10 + "'", int67 == 10);
        org.junit.Assert.assertNotNull(serializableNode70);
    }

    @Test
    public void test0611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0611");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int10 = serializableNode9.rank;
        int int11 = serializableNode9.rank;
        java.io.Serializable serializable12 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode9.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable16 = serializableNode15.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode15.parent;
        serializableNode13.parent = serializableNode17;
        int int19 = serializableNode17.rank;
        serializableNode7.parent = serializableNode17;
        com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>> serializableNodeNode21 = new com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>>(serializableNode7);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int24 = serializableNode23.rank;
        int int25 = serializableNode23.rank;
        java.io.Serializable serializable26 = serializableNode23.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = serializableNode23.parent;
        java.io.Serializable serializable28 = serializableNode27.data;
        int int29 = serializableNode27.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = serializableNode27.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = serializableNode27.parent;
        serializableNode7.parent = serializableNode27;
        java.io.Serializable serializable33 = serializableNode7.data;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertEquals("'" + serializable26 + "' != '" + 10L + "'", serializable26, 10L);
        org.junit.Assert.assertNotNull(serializableNode27);
        org.junit.Assert.assertEquals("'" + serializable28 + "' != '" + 10L + "'", serializable28, 10L);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(serializableNode30);
        org.junit.Assert.assertNotNull(serializableNode31);
        org.junit.Assert.assertEquals("'" + serializable33 + "' != '" + 10L + "'", serializable33, 10L);
    }

    @Test
    public void test0612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0612");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode2 = serializableNode1.parent;
        serializableNode2.rank = (byte) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int7 = serializableNode6.rank;
        int int8 = serializableNode6.rank;
        java.io.Serializable serializable9 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable12 = serializableNode11.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode11.parent;
        serializableNode6.parent = serializableNode11;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode11.parent;
        serializableNode2.parent = serializableNode15;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode2.parent;
        serializableNode2.rank = 0;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int22 = serializableNode21.rank;
        int int23 = serializableNode21.rank;
        java.io.Serializable serializable24 = serializableNode21.data;
        serializableNode21.rank = (byte) 1;
        int int27 = serializableNode21.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = serializableNode21.parent;
        serializableNode21.rank = (byte) 0;
        java.io.Serializable serializable31 = serializableNode21.data;
        serializableNode21.rank = (short) 10;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode35 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable36 = serializableNode35.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = serializableNode35.parent;
        java.io.Serializable serializable38 = serializableNode37.data;
        serializableNode37.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = serializableNode37.parent;
        int int42 = serializableNode41.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode43 = serializableNode41.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode44 = serializableNode43.parent;
        java.lang.Class<?> wildcardClass45 = serializableNode43.getClass();
        serializableNode21.data = wildcardClass45;
        serializableNode2.data = wildcardClass45;
        java.lang.Class<?> wildcardClass48 = serializableNode2.getClass();
        org.junit.Assert.assertNotNull(serializableNode2);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertEquals("'" + serializable24 + "' != '" + 10L + "'", serializable24, 10L);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertNotNull(serializableNode28);
        org.junit.Assert.assertEquals("'" + serializable31 + "' != '" + 10L + "'", serializable31, 10L);
        org.junit.Assert.assertEquals("'" + serializable36 + "' != '" + 10L + "'", serializable36, 10L);
        org.junit.Assert.assertNotNull(serializableNode37);
        org.junit.Assert.assertEquals("'" + serializable38 + "' != '" + 10L + "'", serializable38, 10L);
        org.junit.Assert.assertNotNull(serializableNode41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(serializableNode43);
        org.junit.Assert.assertNotNull(serializableNode44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test0613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0613");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        serializableNode1.data = (byte) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable10 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = serializableNode9.parent;
        int int12 = serializableNode9.rank;
        java.io.Serializable serializable13 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode15.parent;
        serializableNode15.rank = (byte) 100;
        java.lang.Class<?> wildcardClass19 = serializableNode15.getClass();
        serializableNode9.data = wildcardClass19;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode9.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        java.lang.Class<?> wildcardClass24 = serializableNode23.getClass();
        serializableNode21.data = wildcardClass24;
        int int26 = serializableNode21.rank;
        serializableNode21.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = serializableNode21.parent;
        serializableNode7.parent = serializableNode29;
        java.io.Serializable serializable31 = serializableNode29.data;
        int int32 = serializableNode29.rank;
        serializableNode29.rank = (byte) 100;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode35 = serializableNode29.parent;
        int int36 = serializableNode29.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertEquals("'" + serializable10 + "' != '" + 10L + "'", serializable10, 10L);
        org.junit.Assert.assertNotNull(serializableNode11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(serializableNode29);
        org.junit.Assert.assertNotNull(serializable31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(serializableNode35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 100 + "'", int36 == 100);
    }

    @Test
    public void test0614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0614");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int4 = serializableNode3.rank;
        int int5 = serializableNode3.rank;
        java.io.Serializable serializable6 = serializableNode3.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode3.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable10 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = serializableNode9.parent;
        serializableNode7.parent = serializableNode11;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int15 = serializableNode14.rank;
        int int16 = serializableNode14.rank;
        java.io.Serializable serializable17 = serializableNode14.data;
        serializableNode14.rank = (byte) 1;
        java.lang.Class<?> wildcardClass20 = serializableNode14.getClass();
        serializableNode7.data = wildcardClass20;
        java.io.Serializable serializable22 = serializableNode7.data;
        serializableNode1.data = serializable22;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int26 = serializableNode25.rank;
        int int27 = serializableNode25.rank;
        java.io.Serializable serializable28 = serializableNode25.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable31 = serializableNode30.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = serializableNode30.parent;
        serializableNode25.parent = serializableNode30;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = serializableNode30.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode36 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int37 = serializableNode36.rank;
        int int38 = serializableNode36.rank;
        java.io.Serializable serializable39 = serializableNode36.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode40 = serializableNode36.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = serializableNode36.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode43 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable44 = serializableNode43.data;
        int int45 = serializableNode43.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode47 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode43.parent = serializableNode47;
        serializableNode41.parent = serializableNode43;
        int int50 = serializableNode41.rank;
        serializableNode41.data = ' ';
        serializableNode34.parent = serializableNode41;
        serializableNode1.parent = serializableNode41;
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertEquals("'" + serializable10 + "' != '" + 10L + "'", serializable10, 10L);
        org.junit.Assert.assertNotNull(serializableNode11);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertEquals("'" + serializable17 + "' != '" + 10L + "'", serializable17, 10L);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(serializable22);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertEquals("'" + serializable28 + "' != '" + 10L + "'", serializable28, 10L);
        org.junit.Assert.assertEquals("'" + serializable31 + "' != '" + 10L + "'", serializable31, 10L);
        org.junit.Assert.assertNotNull(serializableNode32);
        org.junit.Assert.assertNotNull(serializableNode34);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertEquals("'" + serializable39 + "' != '" + 10L + "'", serializable39, 10L);
        org.junit.Assert.assertNotNull(serializableNode40);
        org.junit.Assert.assertNotNull(serializableNode41);
        org.junit.Assert.assertEquals("'" + serializable44 + "' != '" + 10L + "'", serializable44, 10L);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
    }

    @Test
    public void test0615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0615");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int10 = serializableNode9.rank;
        int int11 = serializableNode9.rank;
        java.io.Serializable serializable12 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode9.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable16 = serializableNode15.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode15.parent;
        serializableNode13.parent = serializableNode17;
        int int19 = serializableNode17.rank;
        serializableNode7.parent = serializableNode17;
        serializableNode7.rank = (short) 100;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
    }

    @Test
    public void test0616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0616");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (-1L));
        int int2 = serializableNode1.rank;
        java.lang.Class<?> wildcardClass3 = serializableNode1.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test0617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0617");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (-1.0d));
        int int6 = serializableNode5.rank;
        java.lang.Class<?> wildcardClass7 = serializableNode5.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass7);
        java.lang.Class<?> wildcardClass9 = serializableNode8.getClass();
        serializableNode3.data = wildcardClass9;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0618");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        java.io.Serializable serializable8 = serializableNode5.data;
        java.io.Serializable serializable9 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int12 = serializableNode11.rank;
        int int13 = serializableNode11.rank;
        java.io.Serializable serializable14 = serializableNode11.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode11.parent;
        java.lang.Class<?> wildcardClass16 = serializableNode15.getClass();
        serializableNode5.data = wildcardClass16;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable21 = serializableNode20.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = serializableNode20.parent;
        java.io.Serializable serializable23 = serializableNode22.data;
        serializableNode22.rank = (short) -1;
        java.lang.Class<?> wildcardClass26 = serializableNode22.getClass();
        serializableNode18.data = wildcardClass26;
        java.io.Serializable serializable28 = serializableNode18.data;
        int int29 = serializableNode18.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertEquals("'" + serializable21 + "' != '" + 10L + "'", serializable21, 10L);
        org.junit.Assert.assertNotNull(serializableNode22);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(serializable28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
    }

    @Test
    public void test0619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0619");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable8 = serializableNode7.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode7.parent;
        serializableNode5.parent = serializableNode9;
        int int11 = serializableNode9.rank;
        serializableNode9.data = (-1);
        int int14 = serializableNode9.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int17 = serializableNode16.rank;
        int int18 = serializableNode16.rank;
        java.io.Serializable serializable19 = serializableNode16.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = serializableNode16.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode16.parent;
        serializableNode16.rank = (byte) 10;
        serializableNode16.data = 10L;
        serializableNode9.parent = serializableNode16;
        int int27 = serializableNode16.rank;
        serializableNode16.rank = 10;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int32 = serializableNode31.rank;
        int int33 = serializableNode31.rank;
        java.io.Serializable serializable34 = serializableNode31.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode35 = serializableNode31.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode36 = serializableNode31.parent;
        int int37 = serializableNode36.rank;
        java.lang.Class<?> wildcardClass38 = serializableNode36.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode39 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass38);
        serializableNode16.parent = serializableNode39;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertEquals("'" + serializable19 + "' != '" + 10L + "'", serializable19, 10L);
        org.junit.Assert.assertNotNull(serializableNode20);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 10 + "'", int27 == 10);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertEquals("'" + serializable34 + "' != '" + 10L + "'", serializable34, 10L);
        org.junit.Assert.assertNotNull(serializableNode35);
        org.junit.Assert.assertNotNull(serializableNode36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test0620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0620");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int10 = serializableNode9.rank;
        int int11 = serializableNode9.rank;
        java.io.Serializable serializable12 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode9.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable16 = serializableNode15.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode15.parent;
        serializableNode13.parent = serializableNode17;
        int int19 = serializableNode17.rank;
        serializableNode7.parent = serializableNode17;
        int int21 = serializableNode17.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = serializableNode17.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int25 = serializableNode24.rank;
        int int26 = serializableNode24.rank;
        java.io.Serializable serializable27 = serializableNode24.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = serializableNode24.parent;
        serializableNode24.rank = (short) 10;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = serializableNode24.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int34 = serializableNode33.rank;
        int int35 = serializableNode33.rank;
        java.io.Serializable serializable36 = serializableNode33.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = serializableNode33.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode39 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable40 = serializableNode39.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = serializableNode39.parent;
        serializableNode37.parent = serializableNode41;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode44 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int45 = serializableNode44.rank;
        int int46 = serializableNode44.rank;
        java.io.Serializable serializable47 = serializableNode44.data;
        serializableNode37.parent = serializableNode44;
        int int49 = serializableNode37.rank;
        java.io.Serializable serializable50 = serializableNode37.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode52 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int53 = serializableNode52.rank;
        int int54 = serializableNode52.rank;
        java.io.Serializable serializable55 = serializableNode52.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode56 = serializableNode52.parent;
        java.io.Serializable serializable57 = serializableNode56.data;
        int int58 = serializableNode56.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode59 = serializableNode56.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode60 = serializableNode56.parent;
        serializableNode37.parent = serializableNode56;
        serializableNode31.parent = serializableNode37;
        java.lang.Class<?> wildcardClass63 = serializableNode37.getClass();
        serializableNode22.data = wildcardClass63;
        serializableNode22.rank = 0;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode68 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int69 = serializableNode68.rank;
        int int70 = serializableNode68.rank;
        java.io.Serializable serializable71 = serializableNode68.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode72 = serializableNode68.parent;
        java.io.Serializable serializable73 = serializableNode72.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode74 = serializableNode72.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode75 = serializableNode72.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode76 = serializableNode72.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode78 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int79 = serializableNode78.rank;
        int int80 = serializableNode78.rank;
        java.io.Serializable serializable81 = serializableNode78.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode82 = serializableNode78.parent;
        java.lang.Class<?> wildcardClass83 = serializableNode78.getClass();
        serializableNode72.data = wildcardClass83;
        serializableNode22.data = wildcardClass83;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(serializableNode22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertEquals("'" + serializable27 + "' != '" + 10L + "'", serializable27, 10L);
        org.junit.Assert.assertNotNull(serializableNode28);
        org.junit.Assert.assertNotNull(serializableNode31);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertEquals("'" + serializable36 + "' != '" + 10L + "'", serializable36, 10L);
        org.junit.Assert.assertNotNull(serializableNode37);
        org.junit.Assert.assertEquals("'" + serializable40 + "' != '" + 10L + "'", serializable40, 10L);
        org.junit.Assert.assertNotNull(serializableNode41);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertEquals("'" + serializable47 + "' != '" + 10L + "'", serializable47, 10L);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertEquals("'" + serializable50 + "' != '" + 10L + "'", serializable50, 10L);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertEquals("'" + serializable55 + "' != '" + 10L + "'", serializable55, 10L);
        org.junit.Assert.assertNotNull(serializableNode56);
        org.junit.Assert.assertEquals("'" + serializable57 + "' != '" + 10L + "'", serializable57, 10L);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(serializableNode59);
        org.junit.Assert.assertNotNull(serializableNode60);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertEquals("'" + serializable71 + "' != '" + 10L + "'", serializable71, 10L);
        org.junit.Assert.assertNotNull(serializableNode72);
        org.junit.Assert.assertEquals("'" + serializable73 + "' != '" + 10L + "'", serializable73, 10L);
        org.junit.Assert.assertNotNull(serializableNode74);
        org.junit.Assert.assertNotNull(serializableNode75);
        org.junit.Assert.assertNotNull(serializableNode76);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
        org.junit.Assert.assertEquals("'" + serializable81 + "' != '" + 10L + "'", serializable81, 10L);
        org.junit.Assert.assertNotNull(serializableNode82);
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test0621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0621");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        serializableNode1.rank = (short) 10;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int11 = serializableNode10.rank;
        int int12 = serializableNode10.rank;
        java.io.Serializable serializable13 = serializableNode10.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = serializableNode10.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable17 = serializableNode16.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode16.parent;
        serializableNode14.parent = serializableNode18;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int22 = serializableNode21.rank;
        int int23 = serializableNode21.rank;
        java.io.Serializable serializable24 = serializableNode21.data;
        serializableNode14.parent = serializableNode21;
        int int26 = serializableNode14.rank;
        java.io.Serializable serializable27 = serializableNode14.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int30 = serializableNode29.rank;
        int int31 = serializableNode29.rank;
        java.io.Serializable serializable32 = serializableNode29.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = serializableNode29.parent;
        java.io.Serializable serializable34 = serializableNode33.data;
        int int35 = serializableNode33.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode36 = serializableNode33.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = serializableNode33.parent;
        serializableNode14.parent = serializableNode33;
        serializableNode8.parent = serializableNode14;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable42 = serializableNode41.data;
        int int43 = serializableNode41.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode45 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int46 = serializableNode45.rank;
        int int47 = serializableNode45.rank;
        java.io.Serializable serializable48 = serializableNode45.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode50 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable51 = serializableNode50.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode52 = serializableNode50.parent;
        serializableNode45.parent = serializableNode50;
        serializableNode45.data = true;
        serializableNode41.parent = serializableNode45;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode57 = serializableNode45.parent;
        serializableNode14.parent = serializableNode45;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode60 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int61 = serializableNode60.rank;
        int int62 = serializableNode60.rank;
        java.io.Serializable serializable63 = serializableNode60.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode65 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable66 = serializableNode65.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode67 = serializableNode65.parent;
        serializableNode60.parent = serializableNode65;
        java.lang.Class<?> wildcardClass69 = serializableNode60.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.AnnotatedElement> annotatedElementNode70 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.AnnotatedElement>((java.lang.reflect.AnnotatedElement) wildcardClass69);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode71 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass69);
        serializableNode14.parent = serializableNode71;
        serializableNode71.rank = 'a';
        serializableNode71.rank = 100;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode14);
        org.junit.Assert.assertEquals("'" + serializable17 + "' != '" + 10L + "'", serializable17, 10L);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertEquals("'" + serializable24 + "' != '" + 10L + "'", serializable24, 10L);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertEquals("'" + serializable27 + "' != '" + 10L + "'", serializable27, 10L);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertEquals("'" + serializable32 + "' != '" + 10L + "'", serializable32, 10L);
        org.junit.Assert.assertNotNull(serializableNode33);
        org.junit.Assert.assertEquals("'" + serializable34 + "' != '" + 10L + "'", serializable34, 10L);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(serializableNode36);
        org.junit.Assert.assertNotNull(serializableNode37);
        org.junit.Assert.assertEquals("'" + serializable42 + "' != '" + 10L + "'", serializable42, 10L);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertEquals("'" + serializable48 + "' != '" + 10L + "'", serializable48, 10L);
        org.junit.Assert.assertEquals("'" + serializable51 + "' != '" + 10L + "'", serializable51, 10L);
        org.junit.Assert.assertNotNull(serializableNode52);
        org.junit.Assert.assertNotNull(serializableNode57);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertEquals("'" + serializable63 + "' != '" + 10L + "'", serializable63, 10L);
        org.junit.Assert.assertEquals("'" + serializable66 + "' != '" + 10L + "'", serializable66, 10L);
        org.junit.Assert.assertNotNull(serializableNode67);
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test0622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0622");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode2 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        java.io.Serializable serializable4 = serializableNode3.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int7 = serializableNode6.rank;
        int int8 = serializableNode6.rank;
        java.io.Serializable serializable9 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode6.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable13 = serializableNode12.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = serializableNode12.parent;
        serializableNode10.parent = serializableNode14;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int18 = serializableNode17.rank;
        int int19 = serializableNode17.rank;
        java.io.Serializable serializable20 = serializableNode17.data;
        serializableNode17.rank = (byte) 1;
        java.lang.Class<?> wildcardClass23 = serializableNode17.getClass();
        serializableNode10.data = wildcardClass23;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = serializableNode10.parent;
        serializableNode10.rank = 100;
        java.lang.Class<?> wildcardClass28 = serializableNode10.getClass();
        serializableNode3.data = wildcardClass28;
        java.io.Serializable serializable30 = serializableNode3.data;
        java.lang.Class<?> wildcardClass31 = serializable30.getClass();
        org.junit.Assert.assertNotNull(serializableNode2);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode14);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertEquals("'" + serializable20 + "' != '" + 10L + "'", serializable20, 10L);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(serializableNode25);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(serializable30);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test0623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0623");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        int int7 = serializableNode5.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int11 = serializableNode10.rank;
        int int12 = serializableNode10.rank;
        serializableNode10.rank = (short) -1;
        serializableNode10.rank = (short) -1;
        java.io.Serializable serializable17 = serializableNode10.data;
        int int18 = serializableNode10.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode10.parent;
        serializableNode5.parent = serializableNode10;
        java.io.Serializable serializable21 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int24 = serializableNode23.rank;
        int int25 = serializableNode23.rank;
        java.io.Serializable serializable26 = serializableNode23.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = serializableNode23.parent;
        java.lang.Class<?> wildcardClass28 = serializableNode23.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.AnnotatedElement> annotatedElementNode29 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.AnnotatedElement>((java.lang.reflect.AnnotatedElement) wildcardClass28);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass28);
        serializableNode30.rank = '4';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) "");
        java.lang.Class<?> wildcardClass35 = serializableNode34.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.GenericDeclaration> genericDeclarationNode36 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.GenericDeclaration>((java.lang.reflect.GenericDeclaration) wildcardClass35);
        serializableNode30.data = wildcardClass35;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode39 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int40 = serializableNode39.rank;
        int int41 = serializableNode39.rank;
        java.io.Serializable serializable42 = serializableNode39.data;
        serializableNode39.rank = (byte) 1;
        int int45 = serializableNode39.rank;
        int int46 = serializableNode39.rank;
        serializableNode30.parent = serializableNode39;
        serializableNode5.parent = serializableNode30;
        int int49 = serializableNode5.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable17 + "' != '" + 10L + "'", serializable17, 10L);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertEquals("'" + serializable21 + "' != '" + 10L + "'", serializable21, 10L);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertEquals("'" + serializable26 + "' != '" + 10L + "'", serializable26, 10L);
        org.junit.Assert.assertNotNull(serializableNode27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertEquals("'" + serializable42 + "' != '" + 10L + "'", serializable42, 10L);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
    }

    @Test
    public void test0624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0624");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable9 = serializableNode8.data;
        int int10 = serializableNode8.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode8.parent = serializableNode12;
        serializableNode12.rank = 0;
        serializableNode12.data = 100;
        serializableNode6.parent = serializableNode12;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int21 = serializableNode20.rank;
        int int22 = serializableNode20.rank;
        serializableNode20.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>> serializableNodeNode25 = new com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>>(serializableNode20);
        serializableNode12.parent = serializableNode20;
        serializableNode12.rank = 1;
        serializableNode12.rank = 35;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
    }

    @Test
    public void test0625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0625");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        serializableNode1.data = (byte) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode1.parent;
        int int8 = serializableNode1.rank;
        int int9 = serializableNode1.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    }

    @Test
    public void test0626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0626");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) "");
        serializableNode1.rank = (byte) 100;
        serializableNode1.data = 'a';
        java.io.Serializable serializable6 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int9 = serializableNode8.rank;
        int int10 = serializableNode8.rank;
        java.io.Serializable serializable11 = serializableNode8.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode8.parent;
        java.io.Serializable serializable13 = serializableNode8.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = serializableNode8.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int17 = serializableNode16.rank;
        int int18 = serializableNode16.rank;
        java.io.Serializable serializable19 = serializableNode16.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = serializableNode16.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable23 = serializableNode22.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode22.parent;
        serializableNode20.parent = serializableNode24;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int28 = serializableNode27.rank;
        int int29 = serializableNode27.rank;
        java.io.Serializable serializable30 = serializableNode27.data;
        serializableNode27.rank = (byte) 1;
        java.lang.Class<?> wildcardClass33 = serializableNode27.getClass();
        serializableNode20.data = wildcardClass33;
        java.io.Serializable serializable35 = serializableNode20.data;
        java.io.Serializable serializable36 = serializableNode20.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode38 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable39 = serializableNode38.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode40 = serializableNode38.parent;
        int int41 = serializableNode38.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode43 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable44 = serializableNode43.data;
        int int45 = serializableNode43.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode47 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode43.parent = serializableNode47;
        serializableNode47.data = 0.0d;
        serializableNode38.parent = serializableNode47;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode52 = serializableNode38.parent;
        serializableNode38.rank = (short) 0;
        serializableNode20.parent = serializableNode38;
        serializableNode14.parent = serializableNode20;
        serializableNode1.parent = serializableNode14;
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 'a' + "'", serializable6, 'a');
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode14);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertEquals("'" + serializable19 + "' != '" + 10L + "'", serializable19, 10L);
        org.junit.Assert.assertNotNull(serializableNode20);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertEquals("'" + serializable30 + "' != '" + 10L + "'", serializable30, 10L);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(serializable35);
        org.junit.Assert.assertNotNull(serializable36);
        org.junit.Assert.assertEquals("'" + serializable39 + "' != '" + 10L + "'", serializable39, 10L);
        org.junit.Assert.assertNotNull(serializableNode40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertEquals("'" + serializable44 + "' != '" + 10L + "'", serializable44, 10L);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(serializableNode52);
    }

    @Test
    public void test0627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0627");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable8 = serializableNode7.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode7.parent;
        serializableNode5.parent = serializableNode9;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int13 = serializableNode12.rank;
        int int14 = serializableNode12.rank;
        java.io.Serializable serializable15 = serializableNode12.data;
        serializableNode12.rank = (byte) 1;
        java.lang.Class<?> wildcardClass18 = serializableNode12.getClass();
        serializableNode5.data = wildcardClass18;
        java.lang.Class<?> wildcardClass20 = serializableNode5.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass20);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass20);
        java.io.Serializable serializable23 = serializableNode22.data;
        java.lang.Class<?> wildcardClass24 = serializable23.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(serializable23);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test0628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0628");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable8 = serializableNode7.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode7.parent;
        serializableNode5.parent = serializableNode9;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int13 = serializableNode12.rank;
        int int14 = serializableNode12.rank;
        java.io.Serializable serializable15 = serializableNode12.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode12.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable19 = serializableNode18.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = serializableNode18.parent;
        serializableNode16.parent = serializableNode20;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int24 = serializableNode23.rank;
        int int25 = serializableNode23.rank;
        java.io.Serializable serializable26 = serializableNode23.data;
        serializableNode23.rank = (byte) 1;
        java.lang.Class<?> wildcardClass29 = serializableNode23.getClass();
        serializableNode16.data = wildcardClass29;
        serializableNode16.rank = 'a';
        int int33 = serializableNode16.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = serializableNode16.parent;
        serializableNode9.parent = serializableNode34;
        java.io.Serializable serializable36 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode38 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable39 = serializableNode38.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode40 = serializableNode38.parent;
        int int41 = serializableNode38.rank;
        java.io.Serializable serializable42 = serializableNode38.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode44 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode45 = serializableNode44.parent;
        serializableNode44.rank = (byte) 100;
        java.lang.Class<?> wildcardClass48 = serializableNode44.getClass();
        serializableNode38.data = wildcardClass48;
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.GenericDeclaration> genericDeclarationNode50 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.GenericDeclaration>((java.lang.reflect.GenericDeclaration) wildcardClass48);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode51 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass48);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode53 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int54 = serializableNode53.rank;
        int int55 = serializableNode53.rank;
        java.io.Serializable serializable56 = serializableNode53.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode57 = serializableNode53.parent;
        java.io.Serializable serializable58 = serializableNode57.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode59 = serializableNode57.parent;
        java.io.Serializable serializable60 = serializableNode57.data;
        java.io.Serializable serializable61 = serializableNode57.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode63 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int64 = serializableNode63.rank;
        int int65 = serializableNode63.rank;
        java.io.Serializable serializable66 = serializableNode63.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode67 = serializableNode63.parent;
        java.lang.Class<?> wildcardClass68 = serializableNode67.getClass();
        serializableNode57.data = wildcardClass68;
        java.io.Serializable serializable70 = serializableNode57.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode71 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>(serializable70);
        serializableNode71.data = 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode75 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int76 = serializableNode75.rank;
        int int77 = serializableNode75.rank;
        java.io.Serializable serializable78 = serializableNode75.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode79 = serializableNode75.parent;
        java.io.Serializable serializable80 = serializableNode79.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode81 = serializableNode79.parent;
        java.io.Serializable serializable82 = serializableNode79.data;
        java.io.Serializable serializable83 = serializableNode79.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode85 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int86 = serializableNode85.rank;
        int int87 = serializableNode85.rank;
        java.io.Serializable serializable88 = serializableNode85.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode89 = serializableNode85.parent;
        java.lang.Class<?> wildcardClass90 = serializableNode89.getClass();
        serializableNode79.data = wildcardClass90;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode92 = serializableNode79.parent;
        serializableNode92.rank = 'a';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode95 = serializableNode92.parent;
        serializableNode71.parent = serializableNode92;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode97 = serializableNode92.parent;
        serializableNode51.parent = serializableNode97;
        serializableNode9.parent = serializableNode97;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertEquals("'" + serializable19 + "' != '" + 10L + "'", serializable19, 10L);
        org.junit.Assert.assertNotNull(serializableNode20);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertEquals("'" + serializable26 + "' != '" + 10L + "'", serializable26, 10L);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 97 + "'", int33 == 97);
        org.junit.Assert.assertNotNull(serializableNode34);
        org.junit.Assert.assertEquals("'" + serializable36 + "' != '" + 10L + "'", serializable36, 10L);
        org.junit.Assert.assertEquals("'" + serializable39 + "' != '" + 10L + "'", serializable39, 10L);
        org.junit.Assert.assertNotNull(serializableNode40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertEquals("'" + serializable42 + "' != '" + 10L + "'", serializable42, 10L);
        org.junit.Assert.assertNotNull(serializableNode45);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertEquals("'" + serializable56 + "' != '" + 10L + "'", serializable56, 10L);
        org.junit.Assert.assertNotNull(serializableNode57);
        org.junit.Assert.assertEquals("'" + serializable58 + "' != '" + 10L + "'", serializable58, 10L);
        org.junit.Assert.assertNotNull(serializableNode59);
        org.junit.Assert.assertEquals("'" + serializable60 + "' != '" + 10L + "'", serializable60, 10L);
        org.junit.Assert.assertEquals("'" + serializable61 + "' != '" + 10L + "'", serializable61, 10L);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertEquals("'" + serializable66 + "' != '" + 10L + "'", serializable66, 10L);
        org.junit.Assert.assertNotNull(serializableNode67);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(serializable70);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertEquals("'" + serializable78 + "' != '" + 10L + "'", serializable78, 10L);
        org.junit.Assert.assertNotNull(serializableNode79);
        org.junit.Assert.assertEquals("'" + serializable80 + "' != '" + 10L + "'", serializable80, 10L);
        org.junit.Assert.assertNotNull(serializableNode81);
        org.junit.Assert.assertEquals("'" + serializable82 + "' != '" + 10L + "'", serializable82, 10L);
        org.junit.Assert.assertEquals("'" + serializable83 + "' != '" + 10L + "'", serializable83, 10L);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 0 + "'", int86 == 0);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 0 + "'", int87 == 0);
        org.junit.Assert.assertEquals("'" + serializable88 + "' != '" + 10L + "'", serializable88, 10L);
        org.junit.Assert.assertNotNull(serializableNode89);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertNotNull(serializableNode92);
        org.junit.Assert.assertNotNull(serializableNode95);
        org.junit.Assert.assertNotNull(serializableNode97);
    }

    @Test
    public void test0629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0629");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        java.io.Serializable serializable7 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int10 = serializableNode9.rank;
        int int11 = serializableNode9.rank;
        java.io.Serializable serializable12 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode9.parent;
        java.io.Serializable serializable14 = serializableNode13.data;
        int int15 = serializableNode13.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode13.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode16.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode17.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode17.parent;
        serializableNode6.parent = serializableNode19;
        serializableNode19.rank = (byte) 100;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode19.parent;
        java.io.Serializable serializable24 = serializableNode19.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable27 = serializableNode26.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = serializableNode26.parent;
        serializableNode28.rank = (short) 0;
        serializableNode19.parent = serializableNode28;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertEquals("'" + serializable24 + "' != '" + 10L + "'", serializable24, 10L);
        org.junit.Assert.assertEquals("'" + serializable27 + "' != '" + 10L + "'", serializable27, 10L);
        org.junit.Assert.assertNotNull(serializableNode28);
    }

    @Test
    public void test0630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0630");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode1.data;
        java.io.Serializable serializable7 = serializableNode1.data;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
    }

    @Test
    public void test0631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0631");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        serializableNode1.rank = (byte) 1;
        int int7 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode1.parent;
        serializableNode1.rank = (byte) 0;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int14 = serializableNode13.rank;
        int int15 = serializableNode13.rank;
        java.io.Serializable serializable16 = serializableNode13.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode13.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable20 = serializableNode19.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode19.parent;
        serializableNode17.parent = serializableNode21;
        int int23 = serializableNode21.rank;
        serializableNode21.rank = (byte) 0;
        serializableNode21.rank = (byte) 1;
        int int28 = serializableNode21.rank;
        int int29 = serializableNode21.rank;
        serializableNode11.parent = serializableNode21;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(serializableNode11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertEquals("'" + serializable20 + "' != '" + 10L + "'", serializable20, 10L);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
    }

    @Test
    public void test0632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0632");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode1.parent = serializableNode5;
        serializableNode1.data = '#';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int11 = serializableNode10.rank;
        int int12 = serializableNode10.rank;
        serializableNode10.data = (short) 100;
        serializableNode1.parent = serializableNode10;
        java.io.Serializable serializable16 = serializableNode10.data;
        serializableNode10.rank = (short) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode10.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable22 = serializableNode21.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode21.parent;
        java.io.Serializable serializable24 = serializableNode23.data;
        serializableNode23.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = serializableNode23.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = serializableNode27.parent;
        serializableNode10.parent = serializableNode28;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int32 = serializableNode31.rank;
        int int33 = serializableNode31.rank;
        java.io.Serializable serializable34 = serializableNode31.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode35 = serializableNode31.parent;
        java.io.Serializable serializable36 = serializableNode35.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = serializableNode35.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode39 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int40 = serializableNode39.rank;
        int int41 = serializableNode39.rank;
        java.io.Serializable serializable42 = serializableNode39.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode43 = serializableNode39.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode45 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable46 = serializableNode45.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode47 = serializableNode45.parent;
        serializableNode43.parent = serializableNode47;
        int int49 = serializableNode47.rank;
        serializableNode37.parent = serializableNode47;
        com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>> serializableNodeNode51 = new com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>>(serializableNode37);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode53 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int54 = serializableNode53.rank;
        int int55 = serializableNode53.rank;
        java.io.Serializable serializable56 = serializableNode53.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode57 = serializableNode53.parent;
        java.io.Serializable serializable58 = serializableNode57.data;
        int int59 = serializableNode57.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode60 = serializableNode57.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode61 = serializableNode57.parent;
        serializableNode37.parent = serializableNode57;
        serializableNode10.parent = serializableNode57;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode65 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int66 = serializableNode65.rank;
        int int67 = serializableNode65.rank;
        java.io.Serializable serializable68 = serializableNode65.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode69 = serializableNode65.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode71 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int72 = serializableNode71.rank;
        int int73 = serializableNode71.rank;
        java.io.Serializable serializable74 = serializableNode71.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode75 = serializableNode71.parent;
        java.io.Serializable serializable76 = serializableNode75.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode77 = serializableNode75.parent;
        java.io.Serializable serializable78 = serializableNode75.data;
        java.io.Serializable serializable79 = serializableNode75.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode81 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int82 = serializableNode81.rank;
        int int83 = serializableNode81.rank;
        java.io.Serializable serializable84 = serializableNode81.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode85 = serializableNode81.parent;
        java.lang.Class<?> wildcardClass86 = serializableNode85.getClass();
        serializableNode75.data = wildcardClass86;
        serializableNode65.parent = serializableNode75;
        java.lang.Class<?> wildcardClass89 = serializableNode75.getClass();
        serializableNode10.data = wildcardClass89;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + (short) 100 + "'", serializable16, (short) 100);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertEquals("'" + serializable22 + "' != '" + 10L + "'", serializable22, 10L);
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertEquals("'" + serializable24 + "' != '" + 10L + "'", serializable24, 10L);
        org.junit.Assert.assertNotNull(serializableNode27);
        org.junit.Assert.assertNotNull(serializableNode28);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertEquals("'" + serializable34 + "' != '" + 10L + "'", serializable34, 10L);
        org.junit.Assert.assertNotNull(serializableNode35);
        org.junit.Assert.assertEquals("'" + serializable36 + "' != '" + 10L + "'", serializable36, 10L);
        org.junit.Assert.assertNotNull(serializableNode37);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertEquals("'" + serializable42 + "' != '" + 10L + "'", serializable42, 10L);
        org.junit.Assert.assertNotNull(serializableNode43);
        org.junit.Assert.assertEquals("'" + serializable46 + "' != '" + 10L + "'", serializable46, 10L);
        org.junit.Assert.assertNotNull(serializableNode47);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertEquals("'" + serializable56 + "' != '" + 10L + "'", serializable56, 10L);
        org.junit.Assert.assertNotNull(serializableNode57);
        org.junit.Assert.assertEquals("'" + serializable58 + "' != '" + 10L + "'", serializable58, 10L);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(serializableNode60);
        org.junit.Assert.assertNotNull(serializableNode61);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertEquals("'" + serializable68 + "' != '" + 10L + "'", serializable68, 10L);
        org.junit.Assert.assertNotNull(serializableNode69);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertEquals("'" + serializable74 + "' != '" + 10L + "'", serializable74, 10L);
        org.junit.Assert.assertNotNull(serializableNode75);
        org.junit.Assert.assertEquals("'" + serializable76 + "' != '" + 10L + "'", serializable76, 10L);
        org.junit.Assert.assertNotNull(serializableNode77);
        org.junit.Assert.assertEquals("'" + serializable78 + "' != '" + 10L + "'", serializable78, 10L);
        org.junit.Assert.assertEquals("'" + serializable79 + "' != '" + 10L + "'", serializable79, 10L);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
        org.junit.Assert.assertEquals("'" + serializable84 + "' != '" + 10L + "'", serializable84, 10L);
        org.junit.Assert.assertNotNull(serializableNode85);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test0633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0633");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable7 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode6.parent;
        serializableNode1.parent = serializableNode6;
        int int10 = serializableNode1.rank;
        java.lang.Class<?> wildcardClass11 = serializableNode1.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass11);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass11);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass11);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode14.parent;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(serializableNode15);
    }

    @Test
    public void test0634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0634");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        java.io.Serializable serializable8 = serializableNode5.data;
        java.io.Serializable serializable9 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int12 = serializableNode11.rank;
        int int13 = serializableNode11.rank;
        java.io.Serializable serializable14 = serializableNode11.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode11.parent;
        java.lang.Class<?> wildcardClass16 = serializableNode15.getClass();
        serializableNode5.data = wildcardClass16;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable21 = serializableNode20.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = serializableNode20.parent;
        java.io.Serializable serializable23 = serializableNode22.data;
        serializableNode22.rank = (short) -1;
        java.lang.Class<?> wildcardClass26 = serializableNode22.getClass();
        serializableNode18.data = wildcardClass26;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass26);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass26);
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.GenericDeclaration> genericDeclarationNode30 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.GenericDeclaration>((java.lang.reflect.GenericDeclaration) wildcardClass26);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass26);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertEquals("'" + serializable21 + "' != '" + 10L + "'", serializable21, 10L);
        org.junit.Assert.assertNotNull(serializableNode22);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test0635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0635");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        serializableNode1.rank = (byte) 10;
        int int9 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (byte) 10);
        serializableNode1.parent = serializableNode11;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int15 = serializableNode14.rank;
        int int16 = serializableNode14.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int19 = serializableNode18.rank;
        int int20 = serializableNode18.rank;
        java.io.Serializable serializable21 = serializableNode18.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = serializableNode18.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode18.parent;
        java.io.Serializable serializable24 = serializableNode23.data;
        int int25 = serializableNode23.rank;
        java.io.Serializable serializable26 = serializableNode23.data;
        serializableNode14.parent = serializableNode23;
        serializableNode11.parent = serializableNode14;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        java.io.Serializable serializable31 = serializableNode30.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int34 = serializableNode33.rank;
        int int35 = serializableNode33.rank;
        java.io.Serializable serializable36 = serializableNode33.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = serializableNode33.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode39 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable40 = serializableNode39.data;
        int int41 = serializableNode39.rank;
        serializableNode39.rank = 'a';
        java.lang.Class<?> wildcardClass44 = serializableNode39.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode45 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass44);
        serializableNode33.data = wildcardClass44;
        com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>> serializableNodeNode47 = new com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>>(serializableNode33);
        serializableNode30.parent = serializableNode33;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode50 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int51 = serializableNode50.rank;
        int int52 = serializableNode50.rank;
        java.io.Serializable serializable53 = serializableNode50.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode54 = serializableNode50.parent;
        java.io.Serializable serializable55 = serializableNode54.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode56 = serializableNode54.parent;
        java.io.Serializable serializable57 = serializableNode54.data;
        java.io.Serializable serializable58 = serializableNode54.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode60 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int61 = serializableNode60.rank;
        int int62 = serializableNode60.rank;
        java.io.Serializable serializable63 = serializableNode60.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode64 = serializableNode60.parent;
        java.lang.Class<?> wildcardClass65 = serializableNode64.getClass();
        serializableNode54.data = wildcardClass65;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode67 = serializableNode54.parent;
        java.io.Serializable serializable68 = serializableNode67.data;
        serializableNode30.data = serializable68;
        serializableNode14.data = serializable68;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 10 + "'", int9 == 10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertEquals("'" + serializable21 + "' != '" + 10L + "'", serializable21, 10L);
        org.junit.Assert.assertNotNull(serializableNode22);
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertEquals("'" + serializable24 + "' != '" + 10L + "'", serializable24, 10L);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertEquals("'" + serializable26 + "' != '" + 10L + "'", serializable26, 10L);
        org.junit.Assert.assertEquals("'" + serializable31 + "' != '" + 10.0f + "'", serializable31, 10.0f);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertEquals("'" + serializable36 + "' != '" + 10L + "'", serializable36, 10L);
        org.junit.Assert.assertNotNull(serializableNode37);
        org.junit.Assert.assertEquals("'" + serializable40 + "' != '" + 10L + "'", serializable40, 10L);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertEquals("'" + serializable53 + "' != '" + 10L + "'", serializable53, 10L);
        org.junit.Assert.assertNotNull(serializableNode54);
        org.junit.Assert.assertEquals("'" + serializable55 + "' != '" + 10L + "'", serializable55, 10L);
        org.junit.Assert.assertNotNull(serializableNode56);
        org.junit.Assert.assertEquals("'" + serializable57 + "' != '" + 10L + "'", serializable57, 10L);
        org.junit.Assert.assertEquals("'" + serializable58 + "' != '" + 10L + "'", serializable58, 10L);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertEquals("'" + serializable63 + "' != '" + 10L + "'", serializable63, 10L);
        org.junit.Assert.assertNotNull(serializableNode64);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(serializableNode67);
        org.junit.Assert.assertNotNull(serializable68);
    }

    @Test
    public void test0636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0636");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = (short) -1;
        serializableNode1.rank = (short) -1;
        java.io.Serializable serializable8 = serializableNode1.data;
        int int9 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 'a');
        serializableNode1.parent = serializableNode11;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int15 = serializableNode14.rank;
        int int16 = serializableNode14.rank;
        java.io.Serializable serializable17 = serializableNode14.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode14.parent;
        java.lang.Class<?> wildcardClass19 = serializableNode14.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.AnnotatedElement> annotatedElementNode20 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.AnnotatedElement>((java.lang.reflect.AnnotatedElement) wildcardClass19);
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.AnnotatedElement> annotatedElementNode21 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.AnnotatedElement>((java.lang.reflect.AnnotatedElement) wildcardClass19);
        serializableNode1.data = wildcardClass19;
        java.lang.Class<?> wildcardClass23 = serializableNode1.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertEquals("'" + serializable17 + "' != '" + 10L + "'", serializable17, 10L);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test0637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0637");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode4 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int5 = serializableNode4.rank;
        int int6 = serializableNode4.rank;
        java.io.Serializable serializable7 = serializableNode4.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode4.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable11 = serializableNode10.data;
        int int12 = serializableNode10.rank;
        serializableNode10.rank = 'a';
        java.lang.Class<?> wildcardClass15 = serializableNode10.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass15);
        serializableNode4.data = wildcardClass15;
        com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>> serializableNodeNode18 = new com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>>(serializableNode4);
        serializableNode1.parent = serializableNode4;
        serializableNode4.rank = 52;
        serializableNode4.rank = (short) -1;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10.0f + "'", serializable2, 10.0f);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0638");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        serializableNode1.rank = (byte) 1;
        serializableNode1.data = 10.0d;
        serializableNode1.rank = (byte) 100;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = serializableNode1.parent;
        int int12 = serializableNode1.rank;
        serializableNode1.rank = (byte) 10;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
    }

    @Test
    public void test0639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0639");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int6 = serializableNode5.rank;
        int int7 = serializableNode5.rank;
        java.io.Serializable serializable8 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable11 = serializableNode10.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode10.parent;
        serializableNode5.parent = serializableNode10;
        serializableNode5.data = true;
        serializableNode1.parent = serializableNode5;
        java.io.Serializable serializable17 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int20 = serializableNode19.rank;
        int int21 = serializableNode19.rank;
        java.io.Serializable serializable22 = serializableNode19.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable25 = serializableNode24.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = serializableNode24.parent;
        serializableNode19.parent = serializableNode24;
        int int28 = serializableNode19.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = serializableNode19.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable32 = serializableNode31.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = serializableNode31.parent;
        java.lang.Class<?> wildcardClass34 = serializableNode31.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode35 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass34);
        java.io.Serializable serializable36 = serializableNode35.data;
        serializableNode29.parent = serializableNode35;
        serializableNode5.parent = serializableNode35;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertEquals("'" + serializable17 + "' != '" + true + "'", serializable17, true);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertEquals("'" + serializable22 + "' != '" + 10L + "'", serializable22, 10L);
        org.junit.Assert.assertEquals("'" + serializable25 + "' != '" + 10L + "'", serializable25, 10L);
        org.junit.Assert.assertNotNull(serializableNode26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(serializableNode29);
        org.junit.Assert.assertEquals("'" + serializable32 + "' != '" + 10L + "'", serializable32, 10L);
        org.junit.Assert.assertNotNull(serializableNode33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(serializable36);
    }

    @Test
    public void test0640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0640");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        serializableNode1.rank = (short) 10;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) "");
        serializableNode9.rank = (byte) 100;
        serializableNode1.parent = serializableNode9;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int15 = serializableNode14.rank;
        int int16 = serializableNode14.rank;
        serializableNode14.rank = (short) -1;
        serializableNode14.rank = (short) -1;
        java.io.Serializable serializable21 = serializableNode14.data;
        int int22 = serializableNode14.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 'a');
        serializableNode14.parent = serializableNode24;
        serializableNode1.parent = serializableNode14;
        serializableNode14.rank = (byte) 10;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertEquals("'" + serializable21 + "' != '" + 10L + "'", serializable21, 10L);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
    }

    @Test
    public void test0641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0641");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = 'a';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        serializableNode1.rank = (byte) 0;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(serializableNode6);
    }

    @Test
    public void test0642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0642");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int6 = serializableNode5.rank;
        int int7 = serializableNode5.rank;
        java.io.Serializable serializable8 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable11 = serializableNode10.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode10.parent;
        serializableNode5.parent = serializableNode10;
        serializableNode5.data = true;
        serializableNode1.parent = serializableNode5;
        serializableNode1.rank = '4';
        serializableNode1.rank = 0;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = serializableNode21.parent;
        int int23 = serializableNode22.rank;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertNotNull(serializableNode22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
    }

    @Test
    public void test0643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0643");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        int int4 = serializableNode1.rank;
        java.io.Serializable serializable5 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode7.parent;
        serializableNode7.rank = (byte) 100;
        java.lang.Class<?> wildcardClass11 = serializableNode7.getClass();
        serializableNode1.data = wildcardClass11;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int16 = serializableNode15.rank;
        int int17 = serializableNode15.rank;
        java.io.Serializable serializable18 = serializableNode15.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode15.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable22 = serializableNode21.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode21.parent;
        serializableNode19.parent = serializableNode23;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int27 = serializableNode26.rank;
        int int28 = serializableNode26.rank;
        java.io.Serializable serializable29 = serializableNode26.data;
        serializableNode19.parent = serializableNode26;
        serializableNode1.parent = serializableNode19;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = serializableNode1.parent;
        java.io.Serializable serializable33 = serializableNode32.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode35 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable36 = serializableNode35.data;
        int int37 = serializableNode35.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode39 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode35.parent = serializableNode39;
        serializableNode35.data = '#';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode44 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int45 = serializableNode44.rank;
        int int46 = serializableNode44.rank;
        serializableNode44.data = (short) 100;
        serializableNode35.parent = serializableNode44;
        java.io.Serializable serializable50 = serializableNode44.data;
        int int51 = serializableNode44.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode52 = serializableNode44.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode54 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int55 = serializableNode54.rank;
        int int56 = serializableNode54.rank;
        serializableNode54.rank = (short) -1;
        serializableNode54.rank = (short) -1;
        java.io.Serializable serializable61 = serializableNode54.data;
        int int62 = serializableNode54.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode63 = serializableNode54.parent;
        serializableNode52.parent = serializableNode63;
        java.lang.Class<?> wildcardClass65 = serializableNode52.getClass();
        serializableNode32.data = wildcardClass65;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode67 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass65);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode69 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int70 = serializableNode69.rank;
        int int71 = serializableNode69.rank;
        java.io.Serializable serializable72 = serializableNode69.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode73 = serializableNode69.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode75 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable76 = serializableNode75.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode77 = serializableNode75.parent;
        serializableNode73.parent = serializableNode77;
        int int79 = serializableNode77.rank;
        serializableNode77.rank = (byte) 0;
        serializableNode77.rank = (byte) 1;
        int int84 = serializableNode77.rank;
        java.lang.Class<?> wildcardClass85 = serializableNode77.getClass();
        serializableNode67.data = wildcardClass85;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + serializable5 + "' != '" + 10L + "'", serializable5, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertEquals("'" + serializable18 + "' != '" + 10L + "'", serializable18, 10L);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertEquals("'" + serializable22 + "' != '" + 10L + "'", serializable22, 10L);
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertEquals("'" + serializable29 + "' != '" + 10L + "'", serializable29, 10L);
        org.junit.Assert.assertNotNull(serializableNode32);
        org.junit.Assert.assertEquals("'" + serializable33 + "' != '" + 10L + "'", serializable33, 10L);
        org.junit.Assert.assertEquals("'" + serializable36 + "' != '" + 10L + "'", serializable36, 10L);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertEquals("'" + serializable50 + "' != '" + (short) 100 + "'", serializable50, (short) 100);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(serializableNode52);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertEquals("'" + serializable61 + "' != '" + 10L + "'", serializable61, 10L);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNotNull(serializableNode63);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertEquals("'" + serializable72 + "' != '" + 10L + "'", serializable72, 10L);
        org.junit.Assert.assertNotNull(serializableNode73);
        org.junit.Assert.assertEquals("'" + serializable76 + "' != '" + 10L + "'", serializable76, 10L);
        org.junit.Assert.assertNotNull(serializableNode77);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 1 + "'", int84 == 1);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test0644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0644");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>> serializableNodeNode6 = new com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>>(serializableNode1);
        java.io.Serializable serializable7 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode1.parent;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
    }

    @Test
    public void test0645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0645");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        java.io.Serializable serializable8 = serializableNode5.data;
        java.io.Serializable serializable9 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int12 = serializableNode11.rank;
        int int13 = serializableNode11.rank;
        java.io.Serializable serializable14 = serializableNode11.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode11.parent;
        java.lang.Class<?> wildcardClass16 = serializableNode15.getClass();
        serializableNode5.data = wildcardClass16;
        serializableNode5.rank = 97;
        serializableNode5.rank = 10;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable24 = serializableNode23.data;
        int int25 = serializableNode23.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode23.parent = serializableNode27;
        serializableNode23.data = '#';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int33 = serializableNode32.rank;
        int int34 = serializableNode32.rank;
        serializableNode32.data = (short) 100;
        serializableNode23.parent = serializableNode32;
        serializableNode5.parent = serializableNode23;
        int int39 = serializableNode5.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int42 = serializableNode41.rank;
        int int43 = serializableNode41.rank;
        java.io.Serializable serializable44 = serializableNode41.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode45 = serializableNode41.parent;
        java.io.Serializable serializable46 = serializableNode45.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode47 = serializableNode45.parent;
        java.io.Serializable serializable48 = serializableNode45.data;
        java.io.Serializable serializable49 = serializableNode45.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode51 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int52 = serializableNode51.rank;
        int int53 = serializableNode51.rank;
        java.io.Serializable serializable54 = serializableNode51.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode55 = serializableNode51.parent;
        java.lang.Class<?> wildcardClass56 = serializableNode55.getClass();
        serializableNode45.data = wildcardClass56;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode58 = serializableNode45.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode60 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable61 = serializableNode60.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode62 = serializableNode60.parent;
        java.io.Serializable serializable63 = serializableNode62.data;
        serializableNode62.rank = (short) -1;
        java.lang.Class<?> wildcardClass66 = serializableNode62.getClass();
        serializableNode58.data = wildcardClass66;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode69 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable70 = serializableNode69.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode71 = serializableNode69.parent;
        int int72 = serializableNode69.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode74 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable75 = serializableNode74.data;
        int int76 = serializableNode74.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode78 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode74.parent = serializableNode78;
        serializableNode78.data = 0.0d;
        serializableNode69.parent = serializableNode78;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode83 = serializableNode69.parent;
        serializableNode58.parent = serializableNode83;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode85 = serializableNode83.parent;
        java.lang.Class<?> wildcardClass86 = serializableNode85.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode87 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass86);
        serializableNode5.data = wildcardClass86;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertEquals("'" + serializable24 + "' != '" + 10L + "'", serializable24, 10L);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 10 + "'", int39 == 10);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertEquals("'" + serializable44 + "' != '" + 10L + "'", serializable44, 10L);
        org.junit.Assert.assertNotNull(serializableNode45);
        org.junit.Assert.assertEquals("'" + serializable46 + "' != '" + 10L + "'", serializable46, 10L);
        org.junit.Assert.assertNotNull(serializableNode47);
        org.junit.Assert.assertEquals("'" + serializable48 + "' != '" + 10L + "'", serializable48, 10L);
        org.junit.Assert.assertEquals("'" + serializable49 + "' != '" + 10L + "'", serializable49, 10L);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertEquals("'" + serializable54 + "' != '" + 10L + "'", serializable54, 10L);
        org.junit.Assert.assertNotNull(serializableNode55);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(serializableNode58);
        org.junit.Assert.assertEquals("'" + serializable61 + "' != '" + 10L + "'", serializable61, 10L);
        org.junit.Assert.assertNotNull(serializableNode62);
        org.junit.Assert.assertEquals("'" + serializable63 + "' != '" + 10L + "'", serializable63, 10L);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertEquals("'" + serializable70 + "' != '" + 10L + "'", serializable70, 10L);
        org.junit.Assert.assertNotNull(serializableNode71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertEquals("'" + serializable75 + "' != '" + 10L + "'", serializable75, 10L);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertNotNull(serializableNode83);
        org.junit.Assert.assertNotNull(serializableNode85);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test0646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0646");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        serializableNode1.rank = (short) 10;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) "");
        serializableNode9.rank = (byte) 100;
        serializableNode1.parent = serializableNode9;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int15 = serializableNode14.rank;
        int int16 = serializableNode14.rank;
        java.io.Serializable serializable17 = serializableNode14.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode14.parent;
        java.io.Serializable serializable19 = serializableNode18.data;
        int int20 = serializableNode18.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode18.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = serializableNode18.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode22.parent;
        serializableNode1.parent = serializableNode22;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int27 = serializableNode26.rank;
        int int28 = serializableNode26.rank;
        java.io.Serializable serializable29 = serializableNode26.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = serializableNode26.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable33 = serializableNode32.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = serializableNode32.parent;
        serializableNode30.parent = serializableNode34;
        int int36 = serializableNode34.rank;
        serializableNode34.rank = (byte) 0;
        serializableNode34.rank = (byte) 1;
        int int41 = serializableNode34.rank;
        java.io.Serializable serializable42 = serializableNode34.data;
        serializableNode1.parent = serializableNode34;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode45 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable46 = serializableNode45.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode47 = serializableNode45.parent;
        java.io.Serializable serializable48 = serializableNode47.data;
        serializableNode47.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode51 = serializableNode47.parent;
        int int52 = serializableNode47.rank;
        serializableNode47.rank = (byte) -1;
        serializableNode1.parent = serializableNode47;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode57 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int58 = serializableNode57.rank;
        int int59 = serializableNode57.rank;
        java.io.Serializable serializable60 = serializableNode57.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode61 = serializableNode57.parent;
        java.io.Serializable serializable62 = serializableNode61.data;
        int int63 = serializableNode61.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode64 = serializableNode61.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode66 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int67 = serializableNode66.rank;
        int int68 = serializableNode66.rank;
        serializableNode66.rank = (short) -1;
        serializableNode66.rank = (short) -1;
        java.io.Serializable serializable73 = serializableNode66.data;
        int int74 = serializableNode66.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode75 = serializableNode66.parent;
        serializableNode61.parent = serializableNode66;
        int int77 = serializableNode66.rank;
        serializableNode47.parent = serializableNode66;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode80 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int81 = serializableNode80.rank;
        int int82 = serializableNode80.rank;
        java.io.Serializable serializable83 = serializableNode80.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode84 = serializableNode80.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode85 = serializableNode80.parent;
        java.lang.Class<?> wildcardClass86 = serializableNode80.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode87 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass86);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode88 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass86);
        serializableNode47.parent = serializableNode88;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertEquals("'" + serializable17 + "' != '" + 10L + "'", serializable17, 10L);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertEquals("'" + serializable19 + "' != '" + 10L + "'", serializable19, 10L);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertNotNull(serializableNode22);
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertEquals("'" + serializable29 + "' != '" + 10L + "'", serializable29, 10L);
        org.junit.Assert.assertNotNull(serializableNode30);
        org.junit.Assert.assertEquals("'" + serializable33 + "' != '" + 10L + "'", serializable33, 10L);
        org.junit.Assert.assertNotNull(serializableNode34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertEquals("'" + serializable42 + "' != '" + 10L + "'", serializable42, 10L);
        org.junit.Assert.assertEquals("'" + serializable46 + "' != '" + 10L + "'", serializable46, 10L);
        org.junit.Assert.assertNotNull(serializableNode47);
        org.junit.Assert.assertEquals("'" + serializable48 + "' != '" + 10L + "'", serializable48, 10L);
        org.junit.Assert.assertNotNull(serializableNode51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertEquals("'" + serializable60 + "' != '" + 10L + "'", serializable60, 10L);
        org.junit.Assert.assertNotNull(serializableNode61);
        org.junit.Assert.assertEquals("'" + serializable62 + "' != '" + 10L + "'", serializable62, 10L);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNotNull(serializableNode64);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertEquals("'" + serializable73 + "' != '" + 10L + "'", serializable73, 10L);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertNotNull(serializableNode75);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0);
        org.junit.Assert.assertEquals("'" + serializable83 + "' != '" + 10L + "'", serializable83, 10L);
        org.junit.Assert.assertNotNull(serializableNode84);
        org.junit.Assert.assertNotNull(serializableNode85);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test0647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0647");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode1.parent = serializableNode5;
        serializableNode1.data = '#';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int11 = serializableNode10.rank;
        int int12 = serializableNode10.rank;
        serializableNode10.data = (short) 100;
        serializableNode1.parent = serializableNode10;
        java.io.Serializable serializable16 = serializableNode10.data;
        serializableNode10.rank = (short) 1;
        serializableNode10.data = true;
        serializableNode10.data = "hi!";
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + (short) 100 + "'", serializable16, (short) 100);
    }

    @Test
    public void test0648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0648");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable8 = serializableNode7.data;
        int int9 = serializableNode7.rank;
        serializableNode7.rank = 'a';
        java.lang.Class<?> wildcardClass12 = serializableNode7.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass12);
        serializableNode1.data = wildcardClass12;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int18 = serializableNode17.rank;
        int int19 = serializableNode17.rank;
        java.io.Serializable serializable20 = serializableNode17.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode17.parent;
        java.io.Serializable serializable22 = serializableNode21.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode21.parent;
        java.io.Serializable serializable24 = serializableNode21.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int27 = serializableNode26.rank;
        int int28 = serializableNode26.rank;
        java.io.Serializable serializable29 = serializableNode26.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = serializableNode26.parent;
        java.io.Serializable serializable31 = serializableNode30.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = serializableNode30.parent;
        java.io.Serializable serializable33 = serializableNode30.data;
        java.io.Serializable serializable34 = serializableNode30.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode36 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int37 = serializableNode36.rank;
        int int38 = serializableNode36.rank;
        java.io.Serializable serializable39 = serializableNode36.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode40 = serializableNode36.parent;
        java.lang.Class<?> wildcardClass41 = serializableNode40.getClass();
        serializableNode30.data = wildcardClass41;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode43 = serializableNode30.parent;
        serializableNode21.parent = serializableNode30;
        java.lang.Class<?> wildcardClass45 = serializableNode30.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode46 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass45);
        serializableNode15.parent = serializableNode46;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode49 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable50 = serializableNode49.data;
        int int51 = serializableNode49.rank;
        serializableNode49.rank = 'a';
        java.lang.Class<?> wildcardClass54 = serializableNode49.getClass();
        serializableNode15.data = wildcardClass54;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertEquals("'" + serializable20 + "' != '" + 10L + "'", serializable20, 10L);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertEquals("'" + serializable22 + "' != '" + 10L + "'", serializable22, 10L);
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertEquals("'" + serializable24 + "' != '" + 10L + "'", serializable24, 10L);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertEquals("'" + serializable29 + "' != '" + 10L + "'", serializable29, 10L);
        org.junit.Assert.assertNotNull(serializableNode30);
        org.junit.Assert.assertEquals("'" + serializable31 + "' != '" + 10L + "'", serializable31, 10L);
        org.junit.Assert.assertNotNull(serializableNode32);
        org.junit.Assert.assertEquals("'" + serializable33 + "' != '" + 10L + "'", serializable33, 10L);
        org.junit.Assert.assertEquals("'" + serializable34 + "' != '" + 10L + "'", serializable34, 10L);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertEquals("'" + serializable39 + "' != '" + 10L + "'", serializable39, 10L);
        org.junit.Assert.assertNotNull(serializableNode40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(serializableNode43);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertEquals("'" + serializable50 + "' != '" + 10L + "'", serializable50, 10L);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test0649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0649");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable8 = serializableNode7.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode7.parent;
        serializableNode5.parent = serializableNode9;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int13 = serializableNode12.rank;
        int int14 = serializableNode12.rank;
        java.io.Serializable serializable15 = serializableNode12.data;
        serializableNode12.rank = (byte) 1;
        java.lang.Class<?> wildcardClass18 = serializableNode12.getClass();
        serializableNode5.data = wildcardClass18;
        serializableNode5.rank = 'a';
        int int22 = serializableNode5.rank;
        java.io.Serializable serializable23 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int26 = serializableNode25.rank;
        int int27 = serializableNode25.rank;
        java.io.Serializable serializable28 = serializableNode25.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = serializableNode25.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable32 = serializableNode31.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = serializableNode31.parent;
        serializableNode29.parent = serializableNode33;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode36 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int37 = serializableNode36.rank;
        int int38 = serializableNode36.rank;
        java.io.Serializable serializable39 = serializableNode36.data;
        serializableNode29.parent = serializableNode36;
        int int41 = serializableNode29.rank;
        java.io.Serializable serializable42 = serializableNode29.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode44 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 'a');
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode45 = serializableNode44.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode46 = serializableNode44.parent;
        serializableNode29.parent = serializableNode46;
        java.lang.Class<?> wildcardClass48 = serializableNode29.getClass();
        serializableNode5.data = wildcardClass48;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 97 + "'", int22 == 97);
        org.junit.Assert.assertNotNull(serializable23);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertEquals("'" + serializable28 + "' != '" + 10L + "'", serializable28, 10L);
        org.junit.Assert.assertNotNull(serializableNode29);
        org.junit.Assert.assertEquals("'" + serializable32 + "' != '" + 10L + "'", serializable32, 10L);
        org.junit.Assert.assertNotNull(serializableNode33);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertEquals("'" + serializable39 + "' != '" + 10L + "'", serializable39, 10L);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertEquals("'" + serializable42 + "' != '" + 10L + "'", serializable42, 10L);
        org.junit.Assert.assertNotNull(serializableNode45);
        org.junit.Assert.assertNotNull(serializableNode46);
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test0650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0650");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode4 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int5 = serializableNode4.rank;
        int int6 = serializableNode4.rank;
        java.io.Serializable serializable7 = serializableNode4.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode4.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable11 = serializableNode10.data;
        int int12 = serializableNode10.rank;
        serializableNode10.rank = 'a';
        java.lang.Class<?> wildcardClass15 = serializableNode10.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass15);
        serializableNode4.data = wildcardClass15;
        com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>> serializableNodeNode18 = new com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>>(serializableNode4);
        serializableNode1.parent = serializableNode4;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = serializableNode1.parent;
        java.io.Serializable serializable21 = serializableNode20.data;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10.0f + "'", serializable2, 10.0f);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(serializableNode20);
        org.junit.Assert.assertNotNull(serializable21);
    }

    @Test
    public void test0651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0651");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode2 = serializableNode1.parent;
        serializableNode2.rank = (byte) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int7 = serializableNode6.rank;
        int int8 = serializableNode6.rank;
        java.io.Serializable serializable9 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable12 = serializableNode11.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode11.parent;
        serializableNode6.parent = serializableNode11;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode11.parent;
        serializableNode2.parent = serializableNode15;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode2.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode17.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode18.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = serializableNode19.parent;
        serializableNode19.rank = (short) 100;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int25 = serializableNode24.rank;
        int int26 = serializableNode24.rank;
        java.io.Serializable serializable27 = serializableNode24.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = serializableNode24.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = serializableNode24.parent;
        serializableNode24.rank = (byte) 10;
        int int32 = serializableNode24.rank;
        java.lang.Class<?> wildcardClass33 = serializableNode24.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass33);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode35 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass33);
        serializableNode19.data = wildcardClass33;
        org.junit.Assert.assertNotNull(serializableNode2);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertNotNull(serializableNode20);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertEquals("'" + serializable27 + "' != '" + 10L + "'", serializable27, 10L);
        org.junit.Assert.assertNotNull(serializableNode28);
        org.junit.Assert.assertNotNull(serializableNode29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 10 + "'", int32 == 10);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test0652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0652");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        int int4 = serializableNode1.rank;
        java.io.Serializable serializable5 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode7.parent;
        serializableNode7.rank = (byte) 100;
        java.lang.Class<?> wildcardClass11 = serializableNode7.getClass();
        serializableNode1.data = wildcardClass11;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        java.lang.Class<?> wildcardClass16 = serializableNode15.getClass();
        serializableNode13.data = wildcardClass16;
        int int18 = serializableNode13.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int21 = serializableNode20.rank;
        int int22 = serializableNode20.rank;
        java.io.Serializable serializable23 = serializableNode20.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode20.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = serializableNode20.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable28 = serializableNode27.data;
        int int29 = serializableNode27.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode27.parent = serializableNode31;
        serializableNode25.parent = serializableNode27;
        int int34 = serializableNode25.rank;
        java.lang.Class<?> wildcardClass35 = serializableNode25.getClass();
        serializableNode13.data = wildcardClass35;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode38 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int39 = serializableNode38.rank;
        int int40 = serializableNode38.rank;
        java.io.Serializable serializable41 = serializableNode38.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode42 = serializableNode38.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode43 = serializableNode38.parent;
        serializableNode38.rank = (byte) 10;
        int int46 = serializableNode38.rank;
        java.lang.Class<?> wildcardClass47 = serializableNode38.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode48 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass47);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode49 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass47);
        serializableNode13.parent = serializableNode49;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode52 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int53 = serializableNode52.rank;
        int int54 = serializableNode52.rank;
        java.io.Serializable serializable55 = serializableNode52.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode56 = serializableNode52.parent;
        java.io.Serializable serializable57 = serializableNode56.data;
        int int58 = serializableNode56.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode59 = serializableNode56.parent;
        java.lang.Class<?> wildcardClass60 = serializableNode59.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode61 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass60);
        serializableNode13.data = wildcardClass60;
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.Type> typeNode63 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.Type>((java.lang.reflect.Type) wildcardClass60);
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + serializable5 + "' != '" + 10L + "'", serializable5, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertNotNull(serializableNode25);
        org.junit.Assert.assertEquals("'" + serializable28 + "' != '" + 10L + "'", serializable28, 10L);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertEquals("'" + serializable41 + "' != '" + 10L + "'", serializable41, 10L);
        org.junit.Assert.assertNotNull(serializableNode42);
        org.junit.Assert.assertNotNull(serializableNode43);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 10 + "'", int46 == 10);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertEquals("'" + serializable55 + "' != '" + 10L + "'", serializable55, 10L);
        org.junit.Assert.assertNotNull(serializableNode56);
        org.junit.Assert.assertEquals("'" + serializable57 + "' != '" + 10L + "'", serializable57, 10L);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(serializableNode59);
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test0653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0653");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        java.io.Serializable serializable4 = serializableNode3.data;
        serializableNode3.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode3.parent;
        int int8 = serializableNode7.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode7.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode9.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) "");
        serializableNode12.rank = (byte) 100;
        serializableNode12.data = 'a';
        java.lang.Class<?> wildcardClass17 = serializableNode12.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass17);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass17);
        serializableNode19.rank = 0;
        int int22 = serializableNode19.rank;
        serializableNode9.parent = serializableNode19;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int26 = serializableNode25.rank;
        int int27 = serializableNode25.rank;
        java.io.Serializable serializable28 = serializableNode25.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = serializableNode25.parent;
        java.io.Serializable serializable30 = serializableNode29.data;
        int int31 = serializableNode29.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = serializableNode29.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = serializableNode32.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode35 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int36 = serializableNode35.rank;
        int int37 = serializableNode35.rank;
        java.io.Serializable serializable38 = serializableNode35.data;
        serializableNode32.parent = serializableNode35;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable42 = serializableNode41.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode43 = serializableNode41.parent;
        int int44 = serializableNode41.rank;
        java.io.Serializable serializable45 = serializableNode41.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode47 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode48 = serializableNode47.parent;
        serializableNode47.rank = (byte) 100;
        java.lang.Class<?> wildcardClass51 = serializableNode47.getClass();
        serializableNode41.data = wildcardClass51;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode53 = serializableNode41.parent;
        java.io.Serializable serializable54 = serializableNode41.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode55 = serializableNode41.parent;
        serializableNode32.parent = serializableNode55;
        int int57 = serializableNode55.rank;
        serializableNode9.parent = serializableNode55;
        serializableNode55.rank = (short) 100;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertEquals("'" + serializable28 + "' != '" + 10L + "'", serializable28, 10L);
        org.junit.Assert.assertNotNull(serializableNode29);
        org.junit.Assert.assertEquals("'" + serializable30 + "' != '" + 10L + "'", serializable30, 10L);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(serializableNode32);
        org.junit.Assert.assertNotNull(serializableNode33);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertEquals("'" + serializable38 + "' != '" + 10L + "'", serializable38, 10L);
        org.junit.Assert.assertEquals("'" + serializable42 + "' != '" + 10L + "'", serializable42, 10L);
        org.junit.Assert.assertNotNull(serializableNode43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertEquals("'" + serializable45 + "' != '" + 10L + "'", serializable45, 10L);
        org.junit.Assert.assertNotNull(serializableNode48);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(serializableNode53);
        org.junit.Assert.assertNotNull(serializable54);
        org.junit.Assert.assertNotNull(serializableNode55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
    }

    @Test
    public void test0654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0654");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (byte) 0);
        java.io.Serializable serializable2 = serializableNode1.data;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + (byte) 0 + "'", serializable2, (byte) 0);
    }

    @Test
    public void test0655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0655");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 'a');
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode2 = serializableNode1.parent;
        java.io.Serializable serializable3 = serializableNode2.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode4 = serializableNode2.parent;
        org.junit.Assert.assertNotNull(serializableNode2);
        org.junit.Assert.assertEquals("'" + serializable3 + "' != '" + 'a' + "'", serializable3, 'a');
        org.junit.Assert.assertNotNull(serializableNode4);
    }

    @Test
    public void test0656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0656");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        int int7 = serializableNode5.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode5.parent;
        int int9 = serializableNode5.rank;
        java.io.Serializable serializable10 = serializableNode5.data;
        serializableNode5.rank = (byte) 10;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertEquals("'" + serializable10 + "' != '" + 10L + "'", serializable10, 10L);
    }

    @Test
    public void test0657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0657");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = (short) -1;
        serializableNode1.rank = (short) -1;
        java.io.Serializable serializable8 = serializableNode1.data;
        int int9 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode1.parent;
        java.io.Serializable serializable11 = serializableNode1.data;
        int int12 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = null;
        serializableNode1.parent = serializableNode13;
        java.io.Serializable serializable15 = serializableNode1.data;
        java.io.Serializable serializable16 = serializableNode1.data;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
    }

    @Test
    public void test0658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0658");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        serializableNode1.rank = (byte) 1;
        int int7 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode1.parent;
        java.io.Serializable serializable9 = serializableNode8.data;
        java.lang.Class<?> wildcardClass10 = serializableNode8.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0659");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        int int4 = serializableNode1.rank;
        java.io.Serializable serializable5 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode7.parent;
        serializableNode7.rank = (byte) 100;
        java.lang.Class<?> wildcardClass11 = serializableNode7.getClass();
        serializableNode1.data = wildcardClass11;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int16 = serializableNode15.rank;
        int int17 = serializableNode15.rank;
        java.io.Serializable serializable18 = serializableNode15.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode15.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable22 = serializableNode21.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode21.parent;
        serializableNode19.parent = serializableNode23;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int27 = serializableNode26.rank;
        int int28 = serializableNode26.rank;
        java.io.Serializable serializable29 = serializableNode26.data;
        serializableNode19.parent = serializableNode26;
        serializableNode1.parent = serializableNode19;
        int int32 = serializableNode1.rank;
        serializableNode1.rank = '#';
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + serializable5 + "' != '" + 10L + "'", serializable5, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertEquals("'" + serializable18 + "' != '" + 10L + "'", serializable18, 10L);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertEquals("'" + serializable22 + "' != '" + 10L + "'", serializable22, 10L);
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertEquals("'" + serializable29 + "' != '" + 10L + "'", serializable29, 10L);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
    }

    @Test
    public void test0660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0660");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        int int7 = serializableNode5.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int11 = serializableNode10.rank;
        int int12 = serializableNode10.rank;
        serializableNode10.rank = (short) -1;
        serializableNode10.rank = (short) -1;
        java.io.Serializable serializable17 = serializableNode10.data;
        int int18 = serializableNode10.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode10.parent;
        serializableNode5.parent = serializableNode10;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int23 = serializableNode22.rank;
        int int24 = serializableNode22.rank;
        java.io.Serializable serializable25 = serializableNode22.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = serializableNode22.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = serializableNode22.parent;
        java.io.Serializable serializable28 = serializableNode27.data;
        int int29 = serializableNode27.rank;
        java.io.Serializable serializable30 = serializableNode27.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int33 = serializableNode32.rank;
        int int34 = serializableNode32.rank;
        serializableNode32.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>> serializableNodeNode37 = new com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>>(serializableNode32);
        java.io.Serializable serializable38 = serializableNode32.data;
        java.lang.Class<?> wildcardClass39 = serializableNode32.getClass();
        serializableNode27.data = wildcardClass39;
        serializableNode10.data = wildcardClass39;
        int int42 = serializableNode10.rank;
        serializableNode10.rank = (short) 100;
        int int45 = serializableNode10.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable17 + "' != '" + 10L + "'", serializable17, 10L);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertEquals("'" + serializable25 + "' != '" + 10L + "'", serializable25, 10L);
        org.junit.Assert.assertNotNull(serializableNode26);
        org.junit.Assert.assertNotNull(serializableNode27);
        org.junit.Assert.assertEquals("'" + serializable28 + "' != '" + 10L + "'", serializable28, 10L);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertEquals("'" + serializable30 + "' != '" + 10L + "'", serializable30, 10L);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertEquals("'" + serializable38 + "' != '" + 10L + "'", serializable38, 10L);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 100 + "'", int45 == 100);
    }

    @Test
    public void test0661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0661");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        java.io.Serializable serializable3 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.CharSequence> charSequenceNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.CharSequence>((java.lang.CharSequence) "");
        java.lang.Class<?> wildcardClass6 = charSequenceNode5.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass6);
        serializableNode1.data = wildcardClass6;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertEquals("'" + serializable3 + "' != '" + 10L + "'", serializable3, 10L);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0662");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = (short) -1;
        serializableNode1.rank = (short) -1;
        int int8 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int11 = serializableNode10.rank;
        int int12 = serializableNode10.rank;
        java.io.Serializable serializable13 = serializableNode10.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = serializableNode10.parent;
        java.io.Serializable serializable15 = serializableNode14.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode14.parent;
        java.io.Serializable serializable17 = serializableNode14.data;
        java.io.Serializable serializable18 = serializableNode14.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int21 = serializableNode20.rank;
        int int22 = serializableNode20.rank;
        java.io.Serializable serializable23 = serializableNode20.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode20.parent;
        java.lang.Class<?> wildcardClass25 = serializableNode24.getClass();
        serializableNode14.data = wildcardClass25;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = serializableNode14.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable30 = serializableNode29.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = serializableNode29.parent;
        java.io.Serializable serializable32 = serializableNode31.data;
        serializableNode31.rank = (short) -1;
        java.lang.Class<?> wildcardClass35 = serializableNode31.getClass();
        serializableNode27.data = wildcardClass35;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode38 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable39 = serializableNode38.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode40 = serializableNode38.parent;
        int int41 = serializableNode38.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode43 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable44 = serializableNode43.data;
        int int45 = serializableNode43.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode47 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode43.parent = serializableNode47;
        serializableNode47.data = 0.0d;
        serializableNode38.parent = serializableNode47;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode52 = serializableNode38.parent;
        serializableNode27.parent = serializableNode52;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode54 = serializableNode52.parent;
        java.lang.Class<?> wildcardClass55 = serializableNode54.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode56 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass55);
        serializableNode56.rank = 0;
        serializableNode1.parent = serializableNode56;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode14);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertEquals("'" + serializable17 + "' != '" + 10L + "'", serializable17, 10L);
        org.junit.Assert.assertEquals("'" + serializable18 + "' != '" + 10L + "'", serializable18, 10L);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(serializableNode27);
        org.junit.Assert.assertEquals("'" + serializable30 + "' != '" + 10L + "'", serializable30, 10L);
        org.junit.Assert.assertNotNull(serializableNode31);
        org.junit.Assert.assertEquals("'" + serializable32 + "' != '" + 10L + "'", serializable32, 10L);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertEquals("'" + serializable39 + "' != '" + 10L + "'", serializable39, 10L);
        org.junit.Assert.assertNotNull(serializableNode40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertEquals("'" + serializable44 + "' != '" + 10L + "'", serializable44, 10L);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(serializableNode52);
        org.junit.Assert.assertNotNull(serializableNode54);
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test0663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0663");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        serializableNode1.rank = (byte) 1;
        int int7 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int11 = serializableNode10.rank;
        java.io.Serializable serializable12 = serializableNode10.data;
        java.lang.Class<?> wildcardClass13 = serializable12.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass13);
        serializableNode1.parent = serializableNode14;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode14.parent;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(serializableNode16);
    }

    @Test
    public void test0664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0664");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode2 = serializableNode1.parent;
        serializableNode2.rank = (byte) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int7 = serializableNode6.rank;
        int int8 = serializableNode6.rank;
        java.io.Serializable serializable9 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable12 = serializableNode11.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode11.parent;
        serializableNode6.parent = serializableNode11;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode11.parent;
        serializableNode2.parent = serializableNode15;
        java.lang.Class<?> wildcardClass17 = serializableNode15.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass17);
        java.io.Serializable serializable19 = serializableNode18.data;
        org.junit.Assert.assertNotNull(serializableNode2);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(serializable19);
    }

    @Test
    public void test0665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0665");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable11 = serializableNode10.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode10.parent;
        java.io.Serializable serializable13 = serializableNode12.data;
        serializableNode12.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode12.parent;
        serializableNode8.parent = serializableNode16;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable20 = serializableNode19.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode19.parent;
        int int22 = serializableNode19.rank;
        java.io.Serializable serializable23 = serializableNode19.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = serializableNode25.parent;
        serializableNode25.rank = (byte) 100;
        java.lang.Class<?> wildcardClass29 = serializableNode25.getClass();
        serializableNode19.data = wildcardClass29;
        serializableNode16.parent = serializableNode19;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable34 = serializableNode33.data;
        int int35 = serializableNode33.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int38 = serializableNode37.rank;
        int int39 = serializableNode37.rank;
        java.io.Serializable serializable40 = serializableNode37.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode42 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable43 = serializableNode42.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode44 = serializableNode42.parent;
        serializableNode37.parent = serializableNode42;
        serializableNode37.data = true;
        serializableNode33.parent = serializableNode37;
        serializableNode19.parent = serializableNode37;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode50 = serializableNode37.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode52 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable53 = serializableNode52.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode54 = serializableNode52.parent;
        java.io.Serializable serializable55 = serializableNode54.data;
        serializableNode54.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode58 = serializableNode54.parent;
        int int59 = serializableNode58.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode60 = serializableNode58.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode61 = serializableNode60.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode63 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable64 = serializableNode63.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode65 = serializableNode63.parent;
        int int66 = serializableNode63.rank;
        java.io.Serializable serializable67 = serializableNode63.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode69 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode70 = serializableNode69.parent;
        serializableNode69.rank = (byte) 100;
        java.lang.Class<?> wildcardClass73 = serializableNode69.getClass();
        serializableNode63.data = wildcardClass73;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode75 = serializableNode63.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode77 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        java.lang.Class<?> wildcardClass78 = serializableNode77.getClass();
        serializableNode75.data = wildcardClass78;
        serializableNode75.rank = (short) 100;
        serializableNode60.parent = serializableNode75;
        int int83 = serializableNode75.rank;
        serializableNode37.parent = serializableNode75;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertEquals("'" + serializable20 + "' != '" + 10L + "'", serializable20, 10L);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertNotNull(serializableNode26);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertEquals("'" + serializable34 + "' != '" + 10L + "'", serializable34, 10L);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertEquals("'" + serializable40 + "' != '" + 10L + "'", serializable40, 10L);
        org.junit.Assert.assertEquals("'" + serializable43 + "' != '" + 10L + "'", serializable43, 10L);
        org.junit.Assert.assertNotNull(serializableNode44);
        org.junit.Assert.assertNotNull(serializableNode50);
        org.junit.Assert.assertEquals("'" + serializable53 + "' != '" + 10L + "'", serializable53, 10L);
        org.junit.Assert.assertNotNull(serializableNode54);
        org.junit.Assert.assertEquals("'" + serializable55 + "' != '" + 10L + "'", serializable55, 10L);
        org.junit.Assert.assertNotNull(serializableNode58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(serializableNode60);
        org.junit.Assert.assertNotNull(serializableNode61);
        org.junit.Assert.assertEquals("'" + serializable64 + "' != '" + 10L + "'", serializable64, 10L);
        org.junit.Assert.assertNotNull(serializableNode65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertEquals("'" + serializable67 + "' != '" + 10L + "'", serializable67, 10L);
        org.junit.Assert.assertNotNull(serializableNode70);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(serializableNode75);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 100 + "'", int83 == 100);
    }

    @Test
    public void test0666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0666");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>> serializableNodeNode8 = new com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>>(serializableNode7);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode7.parent;
        int int10 = serializableNode7.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
    }

    @Test
    public void test0667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0667");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode2 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode4 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 100L);
        serializableNode4.parent = serializableNode6;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int10 = serializableNode9.rank;
        int int11 = serializableNode9.rank;
        serializableNode9.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>> serializableNodeNode14 = new com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>>(serializableNode9);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode9.parent;
        serializableNode6.parent = serializableNode9;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode6.parent;
        org.junit.Assert.assertNotNull(serializableNode2);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertNotNull(serializableNode4);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertNotNull(serializableNode17);
    }

    @Test
    public void test0668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0668");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        int int7 = serializableNode5.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode5.parent;
        int int10 = serializableNode9.rank;
        java.lang.Class<?> wildcardClass11 = serializableNode9.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0669");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode1.parent = serializableNode5;
        serializableNode1.data = '#';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int11 = serializableNode10.rank;
        int int12 = serializableNode10.rank;
        serializableNode10.data = (short) 100;
        serializableNode1.parent = serializableNode10;
        serializableNode1.rank = (byte) 10;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
    }

    @Test
    public void test0670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0670");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = (short) -1;
        serializableNode1.rank = (short) -1;
        java.io.Serializable serializable8 = serializableNode1.data;
        serializableNode1.data = (byte) 0;
        int int11 = serializableNode1.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
    }

    @Test
    public void test0671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0671");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        java.io.Serializable serializable8 = serializableNode5.data;
        java.io.Serializable serializable9 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int12 = serializableNode11.rank;
        int int13 = serializableNode11.rank;
        java.io.Serializable serializable14 = serializableNode11.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode11.parent;
        java.lang.Class<?> wildcardClass16 = serializableNode15.getClass();
        serializableNode5.data = wildcardClass16;
        java.io.Serializable serializable18 = serializableNode5.data;
        java.io.Serializable serializable19 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int22 = serializableNode21.rank;
        int int23 = serializableNode21.rank;
        java.io.Serializable serializable24 = serializableNode21.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = serializableNode21.parent;
        java.io.Serializable serializable26 = serializableNode25.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = serializableNode25.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int30 = serializableNode29.rank;
        int int31 = serializableNode29.rank;
        java.io.Serializable serializable32 = serializableNode29.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = serializableNode29.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode35 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable36 = serializableNode35.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = serializableNode35.parent;
        serializableNode33.parent = serializableNode37;
        int int39 = serializableNode37.rank;
        serializableNode27.parent = serializableNode37;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode42 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (short) -1);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode43 = serializableNode42.parent;
        serializableNode27.parent = serializableNode42;
        serializableNode42.rank = (short) -1;
        java.io.Serializable serializable47 = serializableNode42.data;
        serializableNode5.parent = serializableNode42;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(serializable18);
        org.junit.Assert.assertNotNull(serializable19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertEquals("'" + serializable24 + "' != '" + 10L + "'", serializable24, 10L);
        org.junit.Assert.assertNotNull(serializableNode25);
        org.junit.Assert.assertEquals("'" + serializable26 + "' != '" + 10L + "'", serializable26, 10L);
        org.junit.Assert.assertNotNull(serializableNode27);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertEquals("'" + serializable32 + "' != '" + 10L + "'", serializable32, 10L);
        org.junit.Assert.assertNotNull(serializableNode33);
        org.junit.Assert.assertEquals("'" + serializable36 + "' != '" + 10L + "'", serializable36, 10L);
        org.junit.Assert.assertNotNull(serializableNode37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(serializableNode43);
        org.junit.Assert.assertEquals("'" + serializable47 + "' != '" + (short) -1 + "'", serializable47, (short) -1);
    }

    @Test
    public void test0672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0672");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable7 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode6.parent;
        serializableNode1.parent = serializableNode6;
        int int10 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode1.parent;
        serializableNode1.rank = (short) 10;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(serializableNode11);
        org.junit.Assert.assertNotNull(serializableNode12);
    }

    @Test
    public void test0673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0673");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable8 = serializableNode7.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode7.parent;
        serializableNode5.parent = serializableNode9;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int13 = serializableNode12.rank;
        int int14 = serializableNode12.rank;
        java.io.Serializable serializable15 = serializableNode12.data;
        serializableNode12.rank = (byte) 1;
        java.lang.Class<?> wildcardClass18 = serializableNode12.getClass();
        serializableNode5.data = wildcardClass18;
        java.lang.Class<?> wildcardClass20 = serializableNode5.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass20);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass20);
        java.io.Serializable serializable23 = serializableNode22.data;
        java.lang.Class<?> wildcardClass24 = serializableNode22.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(serializable23);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test0674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0674");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable9 = serializableNode8.data;
        int int10 = serializableNode8.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode8.parent = serializableNode12;
        serializableNode12.rank = 0;
        serializableNode12.data = 100;
        serializableNode6.parent = serializableNode12;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int21 = serializableNode20.rank;
        int int22 = serializableNode20.rank;
        java.io.Serializable serializable23 = serializableNode20.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode20.parent;
        serializableNode12.parent = serializableNode20;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = serializableNode27.parent;
        serializableNode28.rank = (byte) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int33 = serializableNode32.rank;
        int int34 = serializableNode32.rank;
        java.io.Serializable serializable35 = serializableNode32.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable38 = serializableNode37.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode39 = serializableNode37.parent;
        serializableNode32.parent = serializableNode37;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = serializableNode37.parent;
        serializableNode28.parent = serializableNode41;
        serializableNode12.parent = serializableNode28;
        serializableNode28.rank = 'a';
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertNotNull(serializableNode28);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertEquals("'" + serializable35 + "' != '" + 10L + "'", serializable35, 10L);
        org.junit.Assert.assertEquals("'" + serializable38 + "' != '" + 10L + "'", serializable38, 10L);
        org.junit.Assert.assertNotNull(serializableNode39);
        org.junit.Assert.assertNotNull(serializableNode41);
    }

    @Test
    public void test0675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0675");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        serializableNode1.data = (byte) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable10 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = serializableNode9.parent;
        int int12 = serializableNode9.rank;
        java.io.Serializable serializable13 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode15.parent;
        serializableNode15.rank = (byte) 100;
        java.lang.Class<?> wildcardClass19 = serializableNode15.getClass();
        serializableNode9.data = wildcardClass19;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode9.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        java.lang.Class<?> wildcardClass24 = serializableNode23.getClass();
        serializableNode21.data = wildcardClass24;
        int int26 = serializableNode21.rank;
        serializableNode21.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = serializableNode21.parent;
        serializableNode7.parent = serializableNode29;
        java.io.Serializable serializable31 = serializableNode29.data;
        int int32 = serializableNode29.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int35 = serializableNode34.rank;
        int int36 = serializableNode34.rank;
        java.io.Serializable serializable37 = serializableNode34.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode38 = serializableNode34.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode39 = serializableNode34.parent;
        java.lang.Class<?> wildcardClass40 = serializableNode34.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass40);
        serializableNode29.data = wildcardClass40;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode44 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int45 = serializableNode44.rank;
        int int46 = serializableNode44.rank;
        serializableNode44.data = (short) 100;
        serializableNode29.parent = serializableNode44;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode51 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable52 = serializableNode51.data;
        int int53 = serializableNode51.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode55 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode51.parent = serializableNode55;
        serializableNode51.data = '#';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode60 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int61 = serializableNode60.rank;
        int int62 = serializableNode60.rank;
        serializableNode60.data = (short) 100;
        serializableNode51.parent = serializableNode60;
        java.io.Serializable serializable66 = serializableNode60.data;
        int int67 = serializableNode60.rank;
        serializableNode60.rank = 10;
        java.io.Serializable serializable70 = serializableNode60.data;
        java.lang.Class<?> wildcardClass71 = serializable70.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode72 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>(serializable70);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode73 = null;
        serializableNode72.parent = serializableNode73;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode75 = serializableNode72.parent;
        serializableNode29.parent = serializableNode72;
        java.io.Serializable serializable77 = serializableNode29.data;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertEquals("'" + serializable10 + "' != '" + 10L + "'", serializable10, 10L);
        org.junit.Assert.assertNotNull(serializableNode11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(serializableNode29);
        org.junit.Assert.assertNotNull(serializable31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertEquals("'" + serializable37 + "' != '" + 10L + "'", serializable37, 10L);
        org.junit.Assert.assertNotNull(serializableNode38);
        org.junit.Assert.assertNotNull(serializableNode39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertEquals("'" + serializable52 + "' != '" + 10L + "'", serializable52, 10L);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertEquals("'" + serializable66 + "' != '" + (short) 100 + "'", serializable66, (short) 100);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertEquals("'" + serializable70 + "' != '" + (short) 100 + "'", serializable70, (short) 100);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNull(serializableNode75);
        org.junit.Assert.assertNotNull(serializable77);
    }

    @Test
    public void test0676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0676");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) "");
        serializableNode1.rank = (byte) 100;
        serializableNode1.data = 'a';
        java.lang.Class<?> wildcardClass6 = serializableNode1.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass6);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode7.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int11 = serializableNode10.rank;
        int int12 = serializableNode10.rank;
        java.io.Serializable serializable13 = serializableNode10.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = serializableNode10.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode10.parent;
        serializableNode10.rank = (byte) 10;
        int int18 = serializableNode10.rank;
        java.lang.Class<?> wildcardClass19 = serializableNode10.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass19);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass19);
        serializableNode7.data = wildcardClass19;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode7.parent;
        java.io.Serializable serializable24 = serializableNode7.data;
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode14);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 10 + "'", int18 == 10);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertNotNull(serializable24);
    }

    @Test
    public void test0677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0677");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode1.parent = serializableNode5;
        serializableNode1.data = '#';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int11 = serializableNode10.rank;
        int int12 = serializableNode10.rank;
        serializableNode10.data = (short) 100;
        serializableNode1.parent = serializableNode10;
        java.io.Serializable serializable16 = serializableNode10.data;
        serializableNode10.rank = (short) 1;
        int int19 = serializableNode10.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int22 = serializableNode21.rank;
        int int23 = serializableNode21.rank;
        java.io.Serializable serializable24 = serializableNode21.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = serializableNode21.parent;
        java.io.Serializable serializable26 = serializableNode25.data;
        int int27 = serializableNode25.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = serializableNode25.parent;
        serializableNode25.data = (byte) -1;
        serializableNode10.parent = serializableNode25;
        java.io.Serializable serializable32 = serializableNode10.data;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + (short) 100 + "'", serializable16, (short) 100);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertEquals("'" + serializable24 + "' != '" + 10L + "'", serializable24, 10L);
        org.junit.Assert.assertNotNull(serializableNode25);
        org.junit.Assert.assertEquals("'" + serializable26 + "' != '" + 10L + "'", serializable26, 10L);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(serializableNode28);
        org.junit.Assert.assertEquals("'" + serializable32 + "' != '" + (short) 100 + "'", serializable32, (short) 100);
    }

    @Test
    public void test0678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0678");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int6 = serializableNode5.rank;
        int int7 = serializableNode5.rank;
        java.io.Serializable serializable8 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable11 = serializableNode10.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode10.parent;
        serializableNode5.parent = serializableNode10;
        serializableNode5.data = true;
        serializableNode1.parent = serializableNode5;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int20 = serializableNode19.rank;
        int int21 = serializableNode19.rank;
        java.io.Serializable serializable22 = serializableNode19.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode19.parent;
        java.io.Serializable serializable24 = serializableNode23.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = serializableNode23.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = serializableNode23.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable29 = serializableNode28.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = serializableNode28.parent;
        java.io.Serializable serializable31 = serializableNode30.data;
        serializableNode30.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = serializableNode30.parent;
        serializableNode26.parent = serializableNode34;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int38 = serializableNode37.rank;
        int int39 = serializableNode37.rank;
        java.io.Serializable serializable40 = serializableNode37.data;
        serializableNode37.rank = (byte) 1;
        int int43 = serializableNode37.rank;
        serializableNode37.rank = '#';
        serializableNode26.parent = serializableNode37;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode48 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable49 = serializableNode48.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode50 = serializableNode48.parent;
        java.io.Serializable serializable51 = serializableNode50.data;
        serializableNode50.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode55 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) "");
        serializableNode55.rank = (byte) 100;
        serializableNode55.data = 'a';
        java.lang.Class<?> wildcardClass60 = serializableNode55.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode61 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass60);
        serializableNode50.data = wildcardClass60;
        serializableNode37.data = wildcardClass60;
        serializableNode5.parent = serializableNode37;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode66 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable67 = serializableNode66.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode68 = serializableNode66.parent;
        int int69 = serializableNode66.rank;
        java.io.Serializable serializable70 = serializableNode66.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode72 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode73 = serializableNode72.parent;
        serializableNode72.rank = (byte) 100;
        java.lang.Class<?> wildcardClass76 = serializableNode72.getClass();
        serializableNode66.data = wildcardClass76;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode78 = serializableNode66.parent;
        serializableNode5.parent = serializableNode78;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertEquals("'" + serializable22 + "' != '" + 10L + "'", serializable22, 10L);
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertEquals("'" + serializable24 + "' != '" + 10L + "'", serializable24, 10L);
        org.junit.Assert.assertNotNull(serializableNode25);
        org.junit.Assert.assertNotNull(serializableNode26);
        org.junit.Assert.assertEquals("'" + serializable29 + "' != '" + 10L + "'", serializable29, 10L);
        org.junit.Assert.assertNotNull(serializableNode30);
        org.junit.Assert.assertEquals("'" + serializable31 + "' != '" + 10L + "'", serializable31, 10L);
        org.junit.Assert.assertNotNull(serializableNode34);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertEquals("'" + serializable40 + "' != '" + 10L + "'", serializable40, 10L);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertEquals("'" + serializable49 + "' != '" + 10L + "'", serializable49, 10L);
        org.junit.Assert.assertNotNull(serializableNode50);
        org.junit.Assert.assertEquals("'" + serializable51 + "' != '" + 10L + "'", serializable51, 10L);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertEquals("'" + serializable67 + "' != '" + 10L + "'", serializable67, 10L);
        org.junit.Assert.assertNotNull(serializableNode68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertEquals("'" + serializable70 + "' != '" + 10L + "'", serializable70, 10L);
        org.junit.Assert.assertNotNull(serializableNode73);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(serializableNode78);
    }

    @Test
    public void test0679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0679");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        java.io.Serializable serializable4 = serializableNode3.data;
        serializableNode3.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode3.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int10 = serializableNode9.rank;
        int int11 = serializableNode9.rank;
        java.io.Serializable serializable12 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode9.parent;
        java.io.Serializable serializable14 = serializableNode13.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode13.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int18 = serializableNode17.rank;
        int int19 = serializableNode17.rank;
        java.io.Serializable serializable20 = serializableNode17.data;
        serializableNode17.rank = (byte) 1;
        serializableNode17.data = 10.0d;
        java.lang.Class<?> wildcardClass25 = serializableNode17.getClass();
        serializableNode13.data = wildcardClass25;
        serializableNode3.data = wildcardClass25;
        serializableNode3.rank = ' ';
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertEquals("'" + serializable20 + "' != '" + 10L + "'", serializable20, 10L);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test0680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0680");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable8 = serializableNode7.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode7.parent;
        serializableNode5.parent = serializableNode9;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int13 = serializableNode12.rank;
        int int14 = serializableNode12.rank;
        java.io.Serializable serializable15 = serializableNode12.data;
        serializableNode5.parent = serializableNode12;
        java.io.Serializable serializable17 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (byte) 10);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = serializableNode19.parent;
        java.io.Serializable serializable21 = serializableNode20.data;
        serializableNode5.parent = serializableNode20;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable25 = serializableNode24.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = serializableNode24.parent;
        java.io.Serializable serializable27 = serializableNode26.data;
        serializableNode26.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = serializableNode26.parent;
        int int31 = serializableNode30.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = serializableNode30.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = serializableNode32.parent;
        java.lang.Class<?> wildcardClass34 = serializableNode32.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode35 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass34);
        serializableNode5.parent = serializableNode35;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertEquals("'" + serializable17 + "' != '" + 10L + "'", serializable17, 10L);
        org.junit.Assert.assertNotNull(serializableNode20);
        org.junit.Assert.assertEquals("'" + serializable21 + "' != '" + (byte) 10 + "'", serializable21, (byte) 10);
        org.junit.Assert.assertEquals("'" + serializable25 + "' != '" + 10L + "'", serializable25, 10L);
        org.junit.Assert.assertNotNull(serializableNode26);
        org.junit.Assert.assertEquals("'" + serializable27 + "' != '" + 10L + "'", serializable27, 10L);
        org.junit.Assert.assertNotNull(serializableNode30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(serializableNode32);
        org.junit.Assert.assertNotNull(serializableNode33);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test0681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0681");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        java.io.Serializable serializable4 = serializableNode3.data;
        serializableNode3.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode3.parent;
        int int8 = serializableNode7.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode7.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode9.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable13 = serializableNode12.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = serializableNode12.parent;
        int int15 = serializableNode12.rank;
        java.io.Serializable serializable16 = serializableNode12.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode18.parent;
        serializableNode18.rank = (byte) 100;
        java.lang.Class<?> wildcardClass22 = serializableNode18.getClass();
        serializableNode12.data = wildcardClass22;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode12.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        java.lang.Class<?> wildcardClass27 = serializableNode26.getClass();
        serializableNode24.data = wildcardClass27;
        serializableNode24.rank = (short) 100;
        serializableNode9.parent = serializableNode24;
        int int32 = serializableNode24.rank;
        serializableNode24.rank = 'a';
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 100 + "'", int32 == 100);
    }

    @Test
    public void test0682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0682");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int10 = serializableNode9.rank;
        int int11 = serializableNode9.rank;
        java.io.Serializable serializable12 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode9.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable16 = serializableNode15.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode15.parent;
        serializableNode13.parent = serializableNode17;
        int int19 = serializableNode17.rank;
        serializableNode7.parent = serializableNode17;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode17.parent;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(serializableNode21);
    }

    @Test
    public void test0683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0683");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        java.lang.Class<?> wildcardClass4 = serializableNode1.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass4);
        java.io.Serializable serializable6 = serializableNode5.data;
        serializableNode5.rank = (-1);
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(serializable6);
    }

    @Test
    public void test0684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0684");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable8 = serializableNode7.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode7.parent;
        serializableNode5.parent = serializableNode9;
        int int11 = serializableNode9.rank;
        serializableNode9.data = (-1);
        int int14 = serializableNode9.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int17 = serializableNode16.rank;
        int int18 = serializableNode16.rank;
        java.io.Serializable serializable19 = serializableNode16.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = serializableNode16.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode16.parent;
        serializableNode16.rank = (byte) 10;
        serializableNode16.data = 10L;
        serializableNode9.parent = serializableNode16;
        java.io.Serializable serializable27 = serializableNode9.data;
        java.io.Serializable serializable28 = serializableNode9.data;
        int int29 = serializableNode9.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertEquals("'" + serializable19 + "' != '" + 10L + "'", serializable19, 10L);
        org.junit.Assert.assertNotNull(serializableNode20);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertEquals("'" + serializable27 + "' != '" + (-1) + "'", serializable27, (-1));
        org.junit.Assert.assertEquals("'" + serializable28 + "' != '" + (-1) + "'", serializable28, (-1));
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
    }

    @Test
    public void test0685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0685");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode1.parent = serializableNode5;
        serializableNode1.data = '#';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int11 = serializableNode10.rank;
        int int12 = serializableNode10.rank;
        serializableNode10.data = (short) 100;
        serializableNode1.parent = serializableNode10;
        java.io.Serializable serializable16 = serializableNode10.data;
        int int17 = serializableNode10.rank;
        serializableNode10.rank = 10;
        java.io.Serializable serializable20 = serializableNode10.data;
        java.lang.Class<?> wildcardClass21 = serializable20.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>(serializable20);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) "");
        serializableNode24.rank = (byte) 100;
        serializableNode24.data = 'a';
        java.lang.Class<?> wildcardClass29 = serializableNode24.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass29);
        int int31 = serializableNode30.rank;
        serializableNode30.rank = 1;
        serializableNode22.parent = serializableNode30;
        int int35 = serializableNode30.rank;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + (short) 100 + "'", serializable16, (short) 100);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertEquals("'" + serializable20 + "' != '" + (short) 100 + "'", serializable20, (short) 100);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
    }

    @Test
    public void test0686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0686");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = (short) -1;
        serializableNode1.rank = (short) -1;
        java.io.Serializable serializable8 = serializableNode1.data;
        int int9 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 'a');
        serializableNode1.parent = serializableNode11;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode11.parent;
        java.io.Serializable serializable14 = null;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>(serializable14);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable18 = serializableNode17.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode17.parent;
        int int20 = serializableNode17.rank;
        java.io.Serializable serializable21 = serializableNode17.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode23.parent;
        serializableNode23.rank = (byte) 100;
        java.lang.Class<?> wildcardClass27 = serializableNode23.getClass();
        serializableNode17.data = wildcardClass27;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = serializableNode17.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int32 = serializableNode31.rank;
        int int33 = serializableNode31.rank;
        java.io.Serializable serializable34 = serializableNode31.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode35 = serializableNode31.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable38 = serializableNode37.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode39 = serializableNode37.parent;
        serializableNode35.parent = serializableNode39;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode42 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int43 = serializableNode42.rank;
        int int44 = serializableNode42.rank;
        java.io.Serializable serializable45 = serializableNode42.data;
        serializableNode35.parent = serializableNode42;
        serializableNode17.parent = serializableNode35;
        serializableNode15.parent = serializableNode17;
        serializableNode11.parent = serializableNode17;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode51 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int52 = serializableNode51.rank;
        int int53 = serializableNode51.rank;
        java.io.Serializable serializable54 = serializableNode51.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode55 = serializableNode51.parent;
        java.io.Serializable serializable56 = serializableNode55.data;
        int int57 = serializableNode55.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode58 = serializableNode55.parent;
        serializableNode55.data = (byte) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode61 = serializableNode55.parent;
        serializableNode11.parent = serializableNode55;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertEquals("'" + serializable18 + "' != '" + 10L + "'", serializable18, 10L);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertEquals("'" + serializable21 + "' != '" + 10L + "'", serializable21, 10L);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(serializableNode29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertEquals("'" + serializable34 + "' != '" + 10L + "'", serializable34, 10L);
        org.junit.Assert.assertNotNull(serializableNode35);
        org.junit.Assert.assertEquals("'" + serializable38 + "' != '" + 10L + "'", serializable38, 10L);
        org.junit.Assert.assertNotNull(serializableNode39);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertEquals("'" + serializable45 + "' != '" + 10L + "'", serializable45, 10L);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertEquals("'" + serializable54 + "' != '" + 10L + "'", serializable54, 10L);
        org.junit.Assert.assertNotNull(serializableNode55);
        org.junit.Assert.assertEquals("'" + serializable56 + "' != '" + 10L + "'", serializable56, 10L);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(serializableNode58);
        org.junit.Assert.assertNotNull(serializableNode61);
    }

    @Test
    public void test0687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0687");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 100.0f);
    }

    @Test
    public void test0688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0688");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        int int4 = serializableNode1.rank;
        java.io.Serializable serializable5 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode7.parent;
        serializableNode7.rank = (byte) 100;
        java.lang.Class<?> wildcardClass11 = serializableNode7.getClass();
        serializableNode1.data = wildcardClass11;
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.GenericDeclaration> genericDeclarationNode13 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.GenericDeclaration>((java.lang.reflect.GenericDeclaration) wildcardClass11);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass11);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode16.parent;
        serializableNode17.rank = (byte) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int22 = serializableNode21.rank;
        int int23 = serializableNode21.rank;
        java.io.Serializable serializable24 = serializableNode21.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable27 = serializableNode26.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = serializableNode26.parent;
        serializableNode21.parent = serializableNode26;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = serializableNode26.parent;
        serializableNode17.parent = serializableNode30;
        serializableNode14.parent = serializableNode17;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int35 = serializableNode34.rank;
        int int36 = serializableNode34.rank;
        serializableNode34.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>> serializableNodeNode39 = new com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>>(serializableNode34);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int42 = serializableNode41.rank;
        int int43 = serializableNode41.rank;
        java.io.Serializable serializable44 = serializableNode41.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode45 = serializableNode41.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode47 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable48 = serializableNode47.data;
        int int49 = serializableNode47.rank;
        serializableNode47.rank = 'a';
        java.lang.Class<?> wildcardClass52 = serializableNode47.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode53 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass52);
        serializableNode41.data = wildcardClass52;
        serializableNode34.data = wildcardClass52;
        serializableNode17.data = wildcardClass52;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode57 = serializableNode17.parent;
        int int58 = serializableNode17.rank;
        serializableNode17.rank = (short) 100;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode62 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable63 = serializableNode62.data;
        int int64 = serializableNode62.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode66 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int67 = serializableNode66.rank;
        int int68 = serializableNode66.rank;
        java.io.Serializable serializable69 = serializableNode66.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode71 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable72 = serializableNode71.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode73 = serializableNode71.parent;
        serializableNode66.parent = serializableNode71;
        serializableNode66.data = true;
        serializableNode62.parent = serializableNode66;
        serializableNode62.rank = '4';
        serializableNode62.rank = (byte) 10;
        serializableNode17.parent = serializableNode62;
        int int83 = serializableNode62.rank;
        serializableNode62.rank = (-1);
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + serializable5 + "' != '" + 10L + "'", serializable5, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertEquals("'" + serializable24 + "' != '" + 10L + "'", serializable24, 10L);
        org.junit.Assert.assertEquals("'" + serializable27 + "' != '" + 10L + "'", serializable27, 10L);
        org.junit.Assert.assertNotNull(serializableNode28);
        org.junit.Assert.assertNotNull(serializableNode30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertEquals("'" + serializable44 + "' != '" + 10L + "'", serializable44, 10L);
        org.junit.Assert.assertNotNull(serializableNode45);
        org.junit.Assert.assertEquals("'" + serializable48 + "' != '" + 10L + "'", serializable48, 10L);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(serializableNode57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertEquals("'" + serializable63 + "' != '" + 10L + "'", serializable63, 10L);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertEquals("'" + serializable69 + "' != '" + 10L + "'", serializable69, 10L);
        org.junit.Assert.assertEquals("'" + serializable72 + "' != '" + 10L + "'", serializable72, 10L);
        org.junit.Assert.assertNotNull(serializableNode73);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 10 + "'", int83 == 10);
    }

    @Test
    public void test0689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0689");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int6 = serializableNode5.rank;
        int int7 = serializableNode5.rank;
        java.io.Serializable serializable8 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode5.parent;
        java.io.Serializable serializable10 = serializableNode9.data;
        int int11 = serializableNode9.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode9.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode12.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int16 = serializableNode15.rank;
        int int17 = serializableNode15.rank;
        java.io.Serializable serializable18 = serializableNode15.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode15.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable22 = serializableNode21.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode21.parent;
        serializableNode19.parent = serializableNode23;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int27 = serializableNode26.rank;
        int int28 = serializableNode26.rank;
        java.io.Serializable serializable29 = serializableNode26.data;
        serializableNode19.parent = serializableNode26;
        int int31 = serializableNode19.rank;
        java.io.Serializable serializable32 = serializableNode19.data;
        serializableNode13.parent = serializableNode19;
        serializableNode1.parent = serializableNode13;
        serializableNode1.rank = (short) 10;
        java.lang.Class<?> wildcardClass37 = serializableNode1.getClass();
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertEquals("'" + serializable10 + "' != '" + 10L + "'", serializable10, 10L);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertEquals("'" + serializable18 + "' != '" + 10L + "'", serializable18, 10L);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertEquals("'" + serializable22 + "' != '" + 10L + "'", serializable22, 10L);
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertEquals("'" + serializable29 + "' != '" + 10L + "'", serializable29, 10L);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertEquals("'" + serializable32 + "' != '" + 10L + "'", serializable32, 10L);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test0690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0690");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode5.parent;
        java.lang.Class<?> wildcardClass10 = serializableNode9.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0691");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode2 = serializableNode1.parent;
        serializableNode2.rank = (byte) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int7 = serializableNode6.rank;
        int int8 = serializableNode6.rank;
        java.io.Serializable serializable9 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable12 = serializableNode11.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode11.parent;
        serializableNode6.parent = serializableNode11;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode11.parent;
        serializableNode2.parent = serializableNode15;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode15.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int20 = serializableNode19.rank;
        int int21 = serializableNode19.rank;
        java.io.Serializable serializable22 = serializableNode19.data;
        serializableNode19.data = (byte) 1;
        int int25 = serializableNode19.rank;
        int int26 = serializableNode19.rank;
        java.lang.Class<?> wildcardClass27 = serializableNode19.getClass();
        serializableNode15.data = wildcardClass27;
        java.lang.Class<?> wildcardClass29 = serializableNode15.getClass();
        org.junit.Assert.assertNotNull(serializableNode2);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertEquals("'" + serializable22 + "' != '" + 10L + "'", serializable22, 10L);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test0692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0692");
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.constant.ConstantDesc> constantDescNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.constant.ConstantDesc>((java.lang.constant.ConstantDesc) 1L);
    }

    @Test
    public void test0693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0693");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable8 = serializableNode7.data;
        int int9 = serializableNode7.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode7.parent = serializableNode11;
        java.lang.Class<?> wildcardClass13 = serializableNode11.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass13);
        serializableNode1.parent = serializableNode14;
        int int16 = serializableNode1.rank;
        java.lang.Class<?> wildcardClass17 = serializableNode1.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass17);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0694");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode1.parent = serializableNode5;
        serializableNode1.data = '#';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int11 = serializableNode10.rank;
        int int12 = serializableNode10.rank;
        serializableNode10.data = (short) 100;
        serializableNode1.parent = serializableNode10;
        java.io.Serializable serializable16 = serializableNode10.data;
        serializableNode10.rank = (short) 1;
        int int19 = serializableNode10.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int22 = serializableNode21.rank;
        int int23 = serializableNode21.rank;
        java.io.Serializable serializable24 = serializableNode21.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = serializableNode21.parent;
        java.io.Serializable serializable26 = serializableNode25.data;
        int int27 = serializableNode25.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = serializableNode25.parent;
        serializableNode25.data = (byte) -1;
        serializableNode10.parent = serializableNode25;
        java.lang.Class<?> wildcardClass32 = serializableNode25.getClass();
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + (short) 100 + "'", serializable16, (short) 100);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertEquals("'" + serializable24 + "' != '" + 10L + "'", serializable24, 10L);
        org.junit.Assert.assertNotNull(serializableNode25);
        org.junit.Assert.assertEquals("'" + serializable26 + "' != '" + 10L + "'", serializable26, 10L);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(serializableNode28);
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test0695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0695");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int10 = serializableNode9.rank;
        int int11 = serializableNode9.rank;
        java.io.Serializable serializable12 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode9.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable16 = serializableNode15.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode15.parent;
        serializableNode13.parent = serializableNode17;
        int int19 = serializableNode17.rank;
        serializableNode7.parent = serializableNode17;
        com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>> serializableNodeNode21 = new com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>>(serializableNode7);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = serializableNode7.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode22.parent;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(serializableNode22);
        org.junit.Assert.assertNotNull(serializableNode23);
    }

    @Test
    public void test0696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0696");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode2 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        java.io.Serializable serializable4 = serializableNode3.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int7 = serializableNode6.rank;
        int int8 = serializableNode6.rank;
        java.io.Serializable serializable9 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode6.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable13 = serializableNode12.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = serializableNode12.parent;
        serializableNode10.parent = serializableNode14;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int18 = serializableNode17.rank;
        int int19 = serializableNode17.rank;
        java.io.Serializable serializable20 = serializableNode17.data;
        serializableNode17.rank = (byte) 1;
        java.lang.Class<?> wildcardClass23 = serializableNode17.getClass();
        serializableNode10.data = wildcardClass23;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = serializableNode10.parent;
        serializableNode10.rank = 100;
        java.lang.Class<?> wildcardClass28 = serializableNode10.getClass();
        serializableNode3.data = wildcardClass28;
        java.io.Serializable serializable30 = serializableNode3.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>(serializable30);
        java.io.Serializable serializable32 = serializableNode31.data;
        org.junit.Assert.assertNotNull(serializableNode2);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode14);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertEquals("'" + serializable20 + "' != '" + 10L + "'", serializable20, 10L);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(serializableNode25);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(serializable30);
        org.junit.Assert.assertNotNull(serializable32);
    }

    @Test
    public void test0697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0697");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable8 = serializableNode7.data;
        int int9 = serializableNode7.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode7.parent = serializableNode11;
        java.lang.Class<?> wildcardClass13 = serializableNode11.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass13);
        serializableNode1.parent = serializableNode14;
        serializableNode14.rank = (short) 0;
        serializableNode14.rank = 100;
        serializableNode14.rank = (byte) 0;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = serializableNode14.parent;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(serializableNode22);
    }

    @Test
    public void test0698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0698");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode1.parent = serializableNode5;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int9 = serializableNode8.rank;
        int int10 = serializableNode8.rank;
        java.io.Serializable serializable11 = serializableNode8.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode8.parent;
        java.io.Serializable serializable13 = serializableNode12.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = serializableNode12.parent;
        java.io.Serializable serializable15 = serializableNode12.data;
        java.io.Serializable serializable16 = serializableNode12.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int19 = serializableNode18.rank;
        int int20 = serializableNode18.rank;
        java.io.Serializable serializable21 = serializableNode18.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = serializableNode18.parent;
        java.lang.Class<?> wildcardClass23 = serializableNode22.getClass();
        serializableNode12.data = wildcardClass23;
        serializableNode1.data = wildcardClass23;
        serializableNode1.rank = 0;
        serializableNode1.data = "";
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int32 = serializableNode31.rank;
        int int33 = serializableNode31.rank;
        java.io.Serializable serializable34 = serializableNode31.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode35 = serializableNode31.parent;
        java.io.Serializable serializable36 = serializableNode35.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = serializableNode35.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode38 = serializableNode35.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode40 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable41 = serializableNode40.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode42 = serializableNode40.parent;
        java.io.Serializable serializable43 = serializableNode42.data;
        serializableNode42.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode46 = serializableNode42.parent;
        serializableNode38.parent = serializableNode46;
        serializableNode1.parent = serializableNode38;
        java.lang.Class<?> wildcardClass49 = serializableNode1.getClass();
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode14);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertEquals("'" + serializable21 + "' != '" + 10L + "'", serializable21, 10L);
        org.junit.Assert.assertNotNull(serializableNode22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertEquals("'" + serializable34 + "' != '" + 10L + "'", serializable34, 10L);
        org.junit.Assert.assertNotNull(serializableNode35);
        org.junit.Assert.assertEquals("'" + serializable36 + "' != '" + 10L + "'", serializable36, 10L);
        org.junit.Assert.assertNotNull(serializableNode37);
        org.junit.Assert.assertNotNull(serializableNode38);
        org.junit.Assert.assertEquals("'" + serializable41 + "' != '" + 10L + "'", serializable41, 10L);
        org.junit.Assert.assertNotNull(serializableNode42);
        org.junit.Assert.assertEquals("'" + serializable43 + "' != '" + 10L + "'", serializable43, 10L);
        org.junit.Assert.assertNotNull(serializableNode46);
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test0699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0699");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        int int7 = serializableNode5.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode9.parent;
        com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>> serializableNodeNode11 = new com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>>(serializableNode10);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertNotNull(serializableNode10);
    }

    @Test
    public void test0700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0700");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode5.parent;
        int int9 = serializableNode8.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int12 = serializableNode11.rank;
        int int13 = serializableNode11.rank;
        java.io.Serializable serializable14 = serializableNode11.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode11.parent;
        java.io.Serializable serializable16 = serializableNode15.data;
        int int17 = serializableNode15.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode15.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int21 = serializableNode20.rank;
        int int22 = serializableNode20.rank;
        serializableNode20.rank = (short) -1;
        serializableNode20.rank = (short) -1;
        java.io.Serializable serializable27 = serializableNode20.data;
        int int28 = serializableNode20.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = serializableNode20.parent;
        serializableNode15.parent = serializableNode20;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = serializableNode15.parent;
        java.lang.Class<?> wildcardClass32 = serializableNode31.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass32);
        serializableNode8.data = wildcardClass32;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertEquals("'" + serializable27 + "' != '" + 10L + "'", serializable27, 10L);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(serializableNode29);
        org.junit.Assert.assertNotNull(serializableNode31);
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test0701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0701");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable11 = serializableNode10.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode10.parent;
        java.io.Serializable serializable13 = serializableNode12.data;
        serializableNode12.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode12.parent;
        serializableNode8.parent = serializableNode16;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int20 = serializableNode19.rank;
        int int21 = serializableNode19.rank;
        java.io.Serializable serializable22 = serializableNode19.data;
        serializableNode19.rank = (byte) 1;
        int int25 = serializableNode19.rank;
        serializableNode19.rank = '#';
        serializableNode8.parent = serializableNode19;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable31 = serializableNode30.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = serializableNode30.parent;
        java.io.Serializable serializable33 = serializableNode32.data;
        serializableNode32.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) "");
        serializableNode37.rank = (byte) 100;
        serializableNode37.data = 'a';
        java.lang.Class<?> wildcardClass42 = serializableNode37.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode43 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass42);
        serializableNode32.data = wildcardClass42;
        serializableNode19.data = wildcardClass42;
        int int46 = serializableNode19.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertEquals("'" + serializable22 + "' != '" + 10L + "'", serializable22, 10L);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertEquals("'" + serializable31 + "' != '" + 10L + "'", serializable31, 10L);
        org.junit.Assert.assertNotNull(serializableNode32);
        org.junit.Assert.assertEquals("'" + serializable33 + "' != '" + 10L + "'", serializable33, 10L);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 35 + "'", int46 == 35);
    }

    @Test
    public void test0702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0702");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        java.io.Serializable serializable8 = serializableNode5.data;
        java.io.Serializable serializable9 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int12 = serializableNode11.rank;
        int int13 = serializableNode11.rank;
        java.io.Serializable serializable14 = serializableNode11.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode11.parent;
        java.lang.Class<?> wildcardClass16 = serializableNode15.getClass();
        serializableNode5.data = wildcardClass16;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable21 = serializableNode20.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = serializableNode20.parent;
        java.io.Serializable serializable23 = serializableNode22.data;
        serializableNode22.rank = (short) -1;
        java.lang.Class<?> wildcardClass26 = serializableNode22.getClass();
        serializableNode18.data = wildcardClass26;
        java.lang.Class<?> wildcardClass28 = serializableNode18.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass28);
        java.io.Serializable serializable30 = serializableNode29.data;
        java.io.Serializable serializable31 = serializableNode29.data;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertEquals("'" + serializable21 + "' != '" + 10L + "'", serializable21, 10L);
        org.junit.Assert.assertNotNull(serializableNode22);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(serializable30);
        org.junit.Assert.assertNotNull(serializable31);
    }

    @Test
    public void test0703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0703");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        int int8 = serializableNode5.rank;
        java.io.Serializable serializable9 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode11.parent;
        serializableNode11.rank = (byte) 100;
        java.lang.Class<?> wildcardClass15 = serializableNode11.getClass();
        serializableNode5.data = wildcardClass15;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        java.lang.Class<?> wildcardClass20 = serializableNode19.getClass();
        serializableNode17.data = wildcardClass20;
        int int22 = serializableNode17.rank;
        serializableNode17.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = serializableNode17.parent;
        java.lang.Class<?> wildcardClass26 = serializableNode25.getClass();
        serializableNode1.data = wildcardClass26;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass26);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(serializableNode25);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test0704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0704");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable7 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode6.parent;
        serializableNode1.parent = serializableNode6;
        serializableNode1.data = true;
        serializableNode1.rank = 0;
        java.io.Serializable serializable14 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode1.parent;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + true + "'", serializable14, true);
        org.junit.Assert.assertNotNull(serializableNode15);
    }

    @Test
    public void test0705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0705");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        serializableNode3.rank = (short) 0;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode3.parent;
        serializableNode6.rank = 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode6.parent;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertNotNull(serializableNode9);
    }

    @Test
    public void test0706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0706");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        int int4 = serializableNode1.rank;
        java.io.Serializable serializable5 = serializableNode1.data;
        java.io.Serializable serializable6 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode1.parent;
        java.io.Serializable serializable8 = serializableNode1.data;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + serializable5 + "' != '" + 10L + "'", serializable5, 10L);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
    }

    @Test
    public void test0707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0707");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode1.parent = serializableNode5;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int9 = serializableNode8.rank;
        int int10 = serializableNode8.rank;
        java.io.Serializable serializable11 = serializableNode8.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode8.parent;
        java.io.Serializable serializable13 = serializableNode12.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = serializableNode12.parent;
        java.io.Serializable serializable15 = serializableNode12.data;
        java.io.Serializable serializable16 = serializableNode12.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int19 = serializableNode18.rank;
        int int20 = serializableNode18.rank;
        java.io.Serializable serializable21 = serializableNode18.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = serializableNode18.parent;
        java.lang.Class<?> wildcardClass23 = serializableNode22.getClass();
        serializableNode12.data = wildcardClass23;
        serializableNode1.data = wildcardClass23;
        serializableNode1.rank = 0;
        int int28 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = serializableNode1.parent;
        serializableNode29.rank = 100;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode14);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertEquals("'" + serializable21 + "' != '" + 10L + "'", serializable21, 10L);
        org.junit.Assert.assertNotNull(serializableNode22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(serializableNode29);
    }

    @Test
    public void test0708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0708");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode1.parent = serializableNode5;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int9 = serializableNode8.rank;
        int int10 = serializableNode8.rank;
        java.io.Serializable serializable11 = serializableNode8.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode8.parent;
        java.io.Serializable serializable13 = serializableNode12.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = serializableNode12.parent;
        java.io.Serializable serializable15 = serializableNode12.data;
        java.io.Serializable serializable16 = serializableNode12.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int19 = serializableNode18.rank;
        int int20 = serializableNode18.rank;
        java.io.Serializable serializable21 = serializableNode18.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = serializableNode18.parent;
        java.lang.Class<?> wildcardClass23 = serializableNode22.getClass();
        serializableNode12.data = wildcardClass23;
        serializableNode1.data = wildcardClass23;
        serializableNode1.rank = 0;
        int int28 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = serializableNode1.parent;
        java.io.Serializable serializable30 = serializableNode1.data;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode14);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertEquals("'" + serializable21 + "' != '" + 10L + "'", serializable21, 10L);
        org.junit.Assert.assertNotNull(serializableNode22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(serializableNode29);
        org.junit.Assert.assertNotNull(serializable30);
    }

    @Test
    public void test0709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0709");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int9 = serializableNode8.rank;
        int int10 = serializableNode8.rank;
        java.io.Serializable serializable11 = serializableNode8.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable14 = serializableNode13.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode13.parent;
        serializableNode8.parent = serializableNode13;
        int int17 = serializableNode8.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode8.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode8.parent;
        java.io.Serializable serializable20 = serializableNode8.data;
        serializableNode6.parent = serializableNode8;
        serializableNode6.rank = 10;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertEquals("'" + serializable20 + "' != '" + 10L + "'", serializable20, 10L);
    }

    @Test
    public void test0710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0710");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        java.io.Serializable serializable4 = serializableNode3.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable7 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode6.parent;
        java.io.Serializable serializable9 = serializableNode8.data;
        serializableNode8.rank = (short) -1;
        int int12 = serializableNode8.rank;
        serializableNode3.parent = serializableNode8;
        int int14 = serializableNode3.rank;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
    }

    @Test
    public void test0711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0711");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable8 = serializableNode7.data;
        int int9 = serializableNode7.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode7.parent = serializableNode11;
        java.lang.Class<?> wildcardClass13 = serializableNode11.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass13);
        serializableNode1.parent = serializableNode14;
        serializableNode14.rank = (short) 0;
        serializableNode14.rank = 97;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = serializableNode14.parent;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(serializableNode20);
    }

    @Test
    public void test0712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0712");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        java.io.Serializable serializable8 = serializableNode5.data;
        java.io.Serializable serializable9 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int12 = serializableNode11.rank;
        int int13 = serializableNode11.rank;
        java.io.Serializable serializable14 = serializableNode11.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode11.parent;
        java.lang.Class<?> wildcardClass16 = serializableNode15.getClass();
        serializableNode5.data = wildcardClass16;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable21 = serializableNode20.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = serializableNode20.parent;
        java.io.Serializable serializable23 = serializableNode22.data;
        serializableNode22.rank = (short) -1;
        java.lang.Class<?> wildcardClass26 = serializableNode22.getClass();
        serializableNode18.data = wildcardClass26;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass26);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass26);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = serializableNode29.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = serializableNode29.parent;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertEquals("'" + serializable21 + "' != '" + 10L + "'", serializable21, 10L);
        org.junit.Assert.assertNotNull(serializableNode22);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(serializableNode30);
        org.junit.Assert.assertNotNull(serializableNode31);
    }

    @Test
    public void test0713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0713");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        int int4 = serializableNode1.rank;
        java.io.Serializable serializable5 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode7.parent;
        serializableNode7.rank = (byte) 100;
        java.lang.Class<?> wildcardClass11 = serializableNode7.getClass();
        serializableNode1.data = wildcardClass11;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode1.parent;
        java.io.Serializable serializable14 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode1.parent;
        java.lang.Class<?> wildcardClass16 = serializableNode1.getClass();
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + serializable5 + "' != '" + 10L + "'", serializable5, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertNotNull(serializable14);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0714");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        java.io.Serializable serializable4 = serializableNode3.data;
        serializableNode3.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode3.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode7.parent;
        serializableNode8.rank = (byte) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int13 = serializableNode12.rank;
        int int14 = serializableNode12.rank;
        java.io.Serializable serializable15 = serializableNode12.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode12.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode12.parent;
        serializableNode12.rank = (byte) 10;
        int int20 = serializableNode12.rank;
        int int21 = serializableNode12.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = serializableNode12.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode12.parent;
        serializableNode8.parent = serializableNode23;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = null;
        serializableNode23.parent = serializableNode25;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 10 + "'", int20 == 10);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 10 + "'", int21 == 10);
        org.junit.Assert.assertNotNull(serializableNode22);
        org.junit.Assert.assertNotNull(serializableNode23);
    }

    @Test
    public void test0715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0715");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable8 = serializableNode7.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode7.parent;
        serializableNode5.parent = serializableNode9;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int13 = serializableNode12.rank;
        int int14 = serializableNode12.rank;
        java.io.Serializable serializable15 = serializableNode12.data;
        serializableNode5.parent = serializableNode12;
        java.io.Serializable serializable17 = serializableNode12.data;
        java.io.Serializable serializable18 = serializableNode12.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode12.parent;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertEquals("'" + serializable17 + "' != '" + 10L + "'", serializable17, 10L);
        org.junit.Assert.assertEquals("'" + serializable18 + "' != '" + 10L + "'", serializable18, 10L);
        org.junit.Assert.assertNotNull(serializableNode19);
    }

    @Test
    public void test0716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0716");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        java.io.Serializable serializable7 = serializableNode6.data;
        int int8 = serializableNode6.rank;
        java.io.Serializable serializable9 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int12 = serializableNode11.rank;
        int int13 = serializableNode11.rank;
        serializableNode11.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>> serializableNodeNode16 = new com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>>(serializableNode11);
        java.io.Serializable serializable17 = serializableNode11.data;
        java.lang.Class<?> wildcardClass18 = serializableNode11.getClass();
        serializableNode6.data = wildcardClass18;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass18);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int23 = serializableNode22.rank;
        int int24 = serializableNode22.rank;
        java.io.Serializable serializable25 = serializableNode22.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = serializableNode22.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = serializableNode22.parent;
        serializableNode22.rank = (byte) 10;
        int int30 = serializableNode22.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (byte) 10);
        serializableNode22.parent = serializableNode32;
        java.lang.Class<?> wildcardClass34 = serializableNode32.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.GenericDeclaration> genericDeclarationNode35 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.GenericDeclaration>((java.lang.reflect.GenericDeclaration) wildcardClass34);
        serializableNode20.data = wildcardClass34;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + serializable17 + "' != '" + 10L + "'", serializable17, 10L);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertEquals("'" + serializable25 + "' != '" + 10L + "'", serializable25, 10L);
        org.junit.Assert.assertNotNull(serializableNode26);
        org.junit.Assert.assertNotNull(serializableNode27);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 10 + "'", int30 == 10);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test0717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0717");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        serializableNode1.rank = (short) 10;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int11 = serializableNode10.rank;
        int int12 = serializableNode10.rank;
        java.io.Serializable serializable13 = serializableNode10.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = serializableNode10.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable17 = serializableNode16.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode16.parent;
        serializableNode14.parent = serializableNode18;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int22 = serializableNode21.rank;
        int int23 = serializableNode21.rank;
        java.io.Serializable serializable24 = serializableNode21.data;
        serializableNode14.parent = serializableNode21;
        int int26 = serializableNode14.rank;
        java.io.Serializable serializable27 = serializableNode14.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int30 = serializableNode29.rank;
        int int31 = serializableNode29.rank;
        java.io.Serializable serializable32 = serializableNode29.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = serializableNode29.parent;
        java.io.Serializable serializable34 = serializableNode33.data;
        int int35 = serializableNode33.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode36 = serializableNode33.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = serializableNode33.parent;
        serializableNode14.parent = serializableNode33;
        serializableNode8.parent = serializableNode14;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable42 = serializableNode41.data;
        int int43 = serializableNode41.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode45 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int46 = serializableNode45.rank;
        int int47 = serializableNode45.rank;
        java.io.Serializable serializable48 = serializableNode45.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode50 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable51 = serializableNode50.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode52 = serializableNode50.parent;
        serializableNode45.parent = serializableNode50;
        serializableNode45.data = true;
        serializableNode41.parent = serializableNode45;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode57 = serializableNode45.parent;
        serializableNode14.parent = serializableNode45;
        serializableNode45.rank = (byte) 1;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode14);
        org.junit.Assert.assertEquals("'" + serializable17 + "' != '" + 10L + "'", serializable17, 10L);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertEquals("'" + serializable24 + "' != '" + 10L + "'", serializable24, 10L);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertEquals("'" + serializable27 + "' != '" + 10L + "'", serializable27, 10L);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertEquals("'" + serializable32 + "' != '" + 10L + "'", serializable32, 10L);
        org.junit.Assert.assertNotNull(serializableNode33);
        org.junit.Assert.assertEquals("'" + serializable34 + "' != '" + 10L + "'", serializable34, 10L);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(serializableNode36);
        org.junit.Assert.assertNotNull(serializableNode37);
        org.junit.Assert.assertEquals("'" + serializable42 + "' != '" + 10L + "'", serializable42, 10L);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertEquals("'" + serializable48 + "' != '" + 10L + "'", serializable48, 10L);
        org.junit.Assert.assertEquals("'" + serializable51 + "' != '" + 10L + "'", serializable51, 10L);
        org.junit.Assert.assertNotNull(serializableNode52);
        org.junit.Assert.assertNotNull(serializableNode57);
    }

    @Test
    public void test0718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0718");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int10 = serializableNode9.rank;
        int int11 = serializableNode9.rank;
        java.io.Serializable serializable12 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode9.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable16 = serializableNode15.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode15.parent;
        serializableNode13.parent = serializableNode17;
        int int19 = serializableNode17.rank;
        serializableNode7.parent = serializableNode17;
        int int21 = serializableNode17.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = serializableNode17.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int25 = serializableNode24.rank;
        int int26 = serializableNode24.rank;
        java.io.Serializable serializable27 = serializableNode24.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = serializableNode24.parent;
        serializableNode24.rank = (short) 10;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = serializableNode24.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int34 = serializableNode33.rank;
        int int35 = serializableNode33.rank;
        java.io.Serializable serializable36 = serializableNode33.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = serializableNode33.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode39 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable40 = serializableNode39.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = serializableNode39.parent;
        serializableNode37.parent = serializableNode41;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode44 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int45 = serializableNode44.rank;
        int int46 = serializableNode44.rank;
        java.io.Serializable serializable47 = serializableNode44.data;
        serializableNode37.parent = serializableNode44;
        int int49 = serializableNode37.rank;
        java.io.Serializable serializable50 = serializableNode37.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode52 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int53 = serializableNode52.rank;
        int int54 = serializableNode52.rank;
        java.io.Serializable serializable55 = serializableNode52.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode56 = serializableNode52.parent;
        java.io.Serializable serializable57 = serializableNode56.data;
        int int58 = serializableNode56.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode59 = serializableNode56.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode60 = serializableNode56.parent;
        serializableNode37.parent = serializableNode56;
        serializableNode31.parent = serializableNode37;
        java.lang.Class<?> wildcardClass63 = serializableNode37.getClass();
        serializableNode22.data = wildcardClass63;
        int int65 = serializableNode22.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(serializableNode22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertEquals("'" + serializable27 + "' != '" + 10L + "'", serializable27, 10L);
        org.junit.Assert.assertNotNull(serializableNode28);
        org.junit.Assert.assertNotNull(serializableNode31);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertEquals("'" + serializable36 + "' != '" + 10L + "'", serializable36, 10L);
        org.junit.Assert.assertNotNull(serializableNode37);
        org.junit.Assert.assertEquals("'" + serializable40 + "' != '" + 10L + "'", serializable40, 10L);
        org.junit.Assert.assertNotNull(serializableNode41);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertEquals("'" + serializable47 + "' != '" + 10L + "'", serializable47, 10L);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertEquals("'" + serializable50 + "' != '" + 10L + "'", serializable50, 10L);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertEquals("'" + serializable55 + "' != '" + 10L + "'", serializable55, 10L);
        org.junit.Assert.assertNotNull(serializableNode56);
        org.junit.Assert.assertEquals("'" + serializable57 + "' != '" + 10L + "'", serializable57, 10L);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(serializableNode59);
        org.junit.Assert.assertNotNull(serializableNode60);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
    }

    @Test
    public void test0719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0719");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        serializableNode1.data = (byte) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable10 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = serializableNode9.parent;
        int int12 = serializableNode9.rank;
        java.io.Serializable serializable13 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode15.parent;
        serializableNode15.rank = (byte) 100;
        java.lang.Class<?> wildcardClass19 = serializableNode15.getClass();
        serializableNode9.data = wildcardClass19;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode9.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        java.lang.Class<?> wildcardClass24 = serializableNode23.getClass();
        serializableNode21.data = wildcardClass24;
        int int26 = serializableNode21.rank;
        serializableNode21.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = serializableNode21.parent;
        serializableNode7.parent = serializableNode29;
        java.io.Serializable serializable31 = serializableNode29.data;
        int int32 = serializableNode29.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int35 = serializableNode34.rank;
        int int36 = serializableNode34.rank;
        java.io.Serializable serializable37 = serializableNode34.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode38 = serializableNode34.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode39 = serializableNode34.parent;
        java.lang.Class<?> wildcardClass40 = serializableNode34.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass40);
        serializableNode29.data = wildcardClass40;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode44 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int45 = serializableNode44.rank;
        int int46 = serializableNode44.rank;
        serializableNode44.data = (short) 100;
        serializableNode29.parent = serializableNode44;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode51 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int52 = serializableNode51.rank;
        int int53 = serializableNode51.rank;
        java.io.Serializable serializable54 = serializableNode51.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode55 = serializableNode51.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode56 = serializableNode51.parent;
        java.io.Serializable serializable57 = serializableNode56.data;
        serializableNode44.parent = serializableNode56;
        int int59 = serializableNode56.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertEquals("'" + serializable10 + "' != '" + 10L + "'", serializable10, 10L);
        org.junit.Assert.assertNotNull(serializableNode11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(serializableNode29);
        org.junit.Assert.assertNotNull(serializable31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertEquals("'" + serializable37 + "' != '" + 10L + "'", serializable37, 10L);
        org.junit.Assert.assertNotNull(serializableNode38);
        org.junit.Assert.assertNotNull(serializableNode39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertEquals("'" + serializable54 + "' != '" + 10L + "'", serializable54, 10L);
        org.junit.Assert.assertNotNull(serializableNode55);
        org.junit.Assert.assertNotNull(serializableNode56);
        org.junit.Assert.assertEquals("'" + serializable57 + "' != '" + 10L + "'", serializable57, 10L);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
    }

    @Test
    public void test0720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0720");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (-1.0d));
        int int2 = serializableNode1.rank;
        java.lang.Class<?> wildcardClass3 = serializableNode1.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode4 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass3);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass3);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass3);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test0721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0721");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable8 = serializableNode7.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode7.parent;
        serializableNode5.parent = serializableNode9;
        int int11 = serializableNode9.rank;
        serializableNode9.rank = (byte) 0;
        serializableNode9.rank = (byte) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int18 = serializableNode17.rank;
        int int19 = serializableNode17.rank;
        java.io.Serializable serializable20 = serializableNode17.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode17.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = serializableNode17.parent;
        java.io.Serializable serializable23 = serializableNode22.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int26 = serializableNode25.rank;
        int int27 = serializableNode25.rank;
        java.io.Serializable serializable28 = serializableNode25.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = serializableNode25.parent;
        java.io.Serializable serializable30 = serializableNode29.data;
        int int31 = serializableNode29.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = serializableNode29.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = serializableNode32.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = serializableNode33.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode35 = serializableNode33.parent;
        serializableNode22.parent = serializableNode35;
        serializableNode35.rank = (byte) 100;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode39 = serializableNode35.parent;
        serializableNode9.parent = serializableNode39;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = serializableNode9.parent;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertEquals("'" + serializable20 + "' != '" + 10L + "'", serializable20, 10L);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertNotNull(serializableNode22);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertEquals("'" + serializable28 + "' != '" + 10L + "'", serializable28, 10L);
        org.junit.Assert.assertNotNull(serializableNode29);
        org.junit.Assert.assertEquals("'" + serializable30 + "' != '" + 10L + "'", serializable30, 10L);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(serializableNode32);
        org.junit.Assert.assertNotNull(serializableNode33);
        org.junit.Assert.assertNotNull(serializableNode34);
        org.junit.Assert.assertNotNull(serializableNode35);
        org.junit.Assert.assertNotNull(serializableNode39);
        org.junit.Assert.assertNotNull(serializableNode41);
    }

    @Test
    public void test0722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0722");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable9 = serializableNode8.data;
        int int10 = serializableNode8.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode8.parent = serializableNode12;
        serializableNode6.parent = serializableNode8;
        int int15 = serializableNode6.rank;
        serializableNode6.rank = (byte) 0;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode6.parent;
        java.io.Serializable serializable19 = serializableNode6.data;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertEquals("'" + serializable19 + "' != '" + 10L + "'", serializable19, 10L);
    }

    @Test
    public void test0723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0723");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = (short) -1;
        serializableNode1.rank = (short) -1;
        java.io.Serializable serializable8 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int11 = serializableNode10.rank;
        int int12 = serializableNode10.rank;
        serializableNode10.rank = (short) -1;
        serializableNode10.rank = (short) -1;
        java.io.Serializable serializable17 = serializableNode10.data;
        serializableNode1.parent = serializableNode10;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode10.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = serializableNode21.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode21.parent;
        int int24 = serializableNode21.rank;
        java.lang.Class<?> wildcardClass25 = serializableNode21.getClass();
        serializableNode19.data = wildcardClass25;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable17 + "' != '" + 10L + "'", serializable17, 10L);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertNotNull(serializableNode22);
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test0724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0724");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable9 = serializableNode8.data;
        int int10 = serializableNode8.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode8.parent = serializableNode12;
        serializableNode12.rank = 0;
        serializableNode12.data = 100;
        serializableNode6.parent = serializableNode12;
        serializableNode12.rank = (byte) 0;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int23 = serializableNode22.rank;
        int int24 = serializableNode22.rank;
        java.io.Serializable serializable25 = serializableNode22.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = serializableNode22.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = serializableNode22.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable30 = serializableNode29.data;
        int int31 = serializableNode29.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode29.parent = serializableNode33;
        serializableNode27.parent = serializableNode29;
        int int36 = serializableNode27.rank;
        int int37 = serializableNode27.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode39 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int40 = serializableNode39.rank;
        int int41 = serializableNode39.rank;
        serializableNode39.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode44 = serializableNode39.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode46 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode47 = serializableNode46.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode48 = serializableNode46.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode50 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable51 = serializableNode50.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode52 = serializableNode50.parent;
        int int53 = serializableNode50.rank;
        java.io.Serializable serializable54 = serializableNode50.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode56 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode57 = serializableNode56.parent;
        serializableNode56.rank = (byte) 100;
        java.lang.Class<?> wildcardClass60 = serializableNode56.getClass();
        serializableNode50.data = wildcardClass60;
        serializableNode46.data = wildcardClass60;
        serializableNode39.data = wildcardClass60;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode65 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int66 = serializableNode65.rank;
        int int67 = serializableNode65.rank;
        java.io.Serializable serializable68 = serializableNode65.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode69 = serializableNode65.parent;
        java.io.Serializable serializable70 = serializableNode69.data;
        int int71 = serializableNode69.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode72 = serializableNode69.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode74 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int75 = serializableNode74.rank;
        int int76 = serializableNode74.rank;
        serializableNode74.rank = (short) -1;
        serializableNode74.rank = (short) -1;
        java.io.Serializable serializable81 = serializableNode74.data;
        int int82 = serializableNode74.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode83 = serializableNode74.parent;
        serializableNode69.parent = serializableNode74;
        java.io.Serializable serializable85 = serializableNode69.data;
        serializableNode39.parent = serializableNode69;
        serializableNode27.parent = serializableNode39;
        serializableNode12.parent = serializableNode27;
        int int89 = serializableNode27.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertEquals("'" + serializable25 + "' != '" + 10L + "'", serializable25, 10L);
        org.junit.Assert.assertNotNull(serializableNode26);
        org.junit.Assert.assertNotNull(serializableNode27);
        org.junit.Assert.assertEquals("'" + serializable30 + "' != '" + 10L + "'", serializable30, 10L);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(serializableNode44);
        org.junit.Assert.assertNotNull(serializableNode47);
        org.junit.Assert.assertNotNull(serializableNode48);
        org.junit.Assert.assertEquals("'" + serializable51 + "' != '" + 10L + "'", serializable51, 10L);
        org.junit.Assert.assertNotNull(serializableNode52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertEquals("'" + serializable54 + "' != '" + 10L + "'", serializable54, 10L);
        org.junit.Assert.assertNotNull(serializableNode57);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertEquals("'" + serializable68 + "' != '" + 10L + "'", serializable68, 10L);
        org.junit.Assert.assertNotNull(serializableNode69);
        org.junit.Assert.assertEquals("'" + serializable70 + "' != '" + 10L + "'", serializable70, 10L);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertNotNull(serializableNode72);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertEquals("'" + serializable81 + "' != '" + 10L + "'", serializable81, 10L);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
        org.junit.Assert.assertNotNull(serializableNode83);
        org.junit.Assert.assertEquals("'" + serializable85 + "' != '" + 10L + "'", serializable85, 10L);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 0 + "'", int89 == 0);
    }

    @Test
    public void test0725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0725");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        serializableNode1.data = (byte) 1;
        int int7 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int10 = serializableNode9.rank;
        int int11 = serializableNode9.rank;
        java.io.Serializable serializable12 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode9.parent;
        java.io.Serializable serializable14 = serializableNode13.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode13.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode13.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable19 = serializableNode18.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = serializableNode18.parent;
        java.io.Serializable serializable21 = serializableNode20.data;
        serializableNode20.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode20.parent;
        serializableNode16.parent = serializableNode24;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable28 = serializableNode27.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = serializableNode27.parent;
        int int30 = serializableNode27.rank;
        java.io.Serializable serializable31 = serializableNode27.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = serializableNode33.parent;
        serializableNode33.rank = (byte) 100;
        java.lang.Class<?> wildcardClass37 = serializableNode33.getClass();
        serializableNode27.data = wildcardClass37;
        serializableNode24.parent = serializableNode27;
        int int40 = serializableNode24.rank;
        serializableNode1.parent = serializableNode24;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertEquals("'" + serializable19 + "' != '" + 10L + "'", serializable19, 10L);
        org.junit.Assert.assertNotNull(serializableNode20);
        org.junit.Assert.assertEquals("'" + serializable21 + "' != '" + 10L + "'", serializable21, 10L);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertEquals("'" + serializable28 + "' != '" + 10L + "'", serializable28, 10L);
        org.junit.Assert.assertNotNull(serializableNode29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertEquals("'" + serializable31 + "' != '" + 10L + "'", serializable31, 10L);
        org.junit.Assert.assertNotNull(serializableNode34);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
    }

    @Test
    public void test0726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0726");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable7 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode6.parent;
        serializableNode1.parent = serializableNode6;
        int int10 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = serializableNode13.parent;
        java.io.Serializable serializable15 = serializableNode13.data;
        java.io.Serializable serializable16 = serializableNode13.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int19 = serializableNode18.rank;
        int int20 = serializableNode18.rank;
        java.io.Serializable serializable21 = serializableNode18.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = serializableNode18.parent;
        java.io.Serializable serializable23 = serializableNode22.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode22.parent;
        java.io.Serializable serializable25 = serializableNode22.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int28 = serializableNode27.rank;
        int int29 = serializableNode27.rank;
        java.io.Serializable serializable30 = serializableNode27.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = serializableNode27.parent;
        java.io.Serializable serializable32 = serializableNode31.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = serializableNode31.parent;
        java.io.Serializable serializable34 = serializableNode31.data;
        java.io.Serializable serializable35 = serializableNode31.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int38 = serializableNode37.rank;
        int int39 = serializableNode37.rank;
        java.io.Serializable serializable40 = serializableNode37.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = serializableNode37.parent;
        java.lang.Class<?> wildcardClass42 = serializableNode41.getClass();
        serializableNode31.data = wildcardClass42;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode44 = serializableNode31.parent;
        serializableNode22.parent = serializableNode31;
        java.lang.Class<?> wildcardClass46 = serializableNode31.getClass();
        serializableNode13.data = wildcardClass46;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode48 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass46);
        serializableNode1.parent = serializableNode48;
        int int50 = serializableNode48.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode52 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int53 = serializableNode52.rank;
        int int54 = serializableNode52.rank;
        java.io.Serializable serializable55 = serializableNode52.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode56 = serializableNode52.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode57 = serializableNode52.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode59 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable60 = serializableNode59.data;
        int int61 = serializableNode59.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode63 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode59.parent = serializableNode63;
        serializableNode57.parent = serializableNode59;
        serializableNode57.rank = 0;
        java.io.Serializable serializable68 = serializableNode57.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode70 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int71 = serializableNode70.rank;
        int int72 = serializableNode70.rank;
        java.io.Serializable serializable73 = serializableNode70.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode74 = serializableNode70.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode75 = serializableNode70.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode77 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable78 = serializableNode77.data;
        int int79 = serializableNode77.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode81 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode77.parent = serializableNode81;
        serializableNode75.parent = serializableNode77;
        int int84 = serializableNode75.rank;
        serializableNode75.data = ' ';
        serializableNode57.parent = serializableNode75;
        serializableNode48.parent = serializableNode57;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(serializableNode11);
        org.junit.Assert.assertNotNull(serializableNode14);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertEquals("'" + serializable21 + "' != '" + 10L + "'", serializable21, 10L);
        org.junit.Assert.assertNotNull(serializableNode22);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertEquals("'" + serializable25 + "' != '" + 10L + "'", serializable25, 10L);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertEquals("'" + serializable30 + "' != '" + 10L + "'", serializable30, 10L);
        org.junit.Assert.assertNotNull(serializableNode31);
        org.junit.Assert.assertEquals("'" + serializable32 + "' != '" + 10L + "'", serializable32, 10L);
        org.junit.Assert.assertNotNull(serializableNode33);
        org.junit.Assert.assertEquals("'" + serializable34 + "' != '" + 10L + "'", serializable34, 10L);
        org.junit.Assert.assertEquals("'" + serializable35 + "' != '" + 10L + "'", serializable35, 10L);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertEquals("'" + serializable40 + "' != '" + 10L + "'", serializable40, 10L);
        org.junit.Assert.assertNotNull(serializableNode41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(serializableNode44);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertEquals("'" + serializable55 + "' != '" + 10L + "'", serializable55, 10L);
        org.junit.Assert.assertNotNull(serializableNode56);
        org.junit.Assert.assertNotNull(serializableNode57);
        org.junit.Assert.assertEquals("'" + serializable60 + "' != '" + 10L + "'", serializable60, 10L);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertEquals("'" + serializable68 + "' != '" + 10L + "'", serializable68, 10L);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertEquals("'" + serializable73 + "' != '" + 10L + "'", serializable73, 10L);
        org.junit.Assert.assertNotNull(serializableNode74);
        org.junit.Assert.assertNotNull(serializableNode75);
        org.junit.Assert.assertEquals("'" + serializable78 + "' != '" + 10L + "'", serializable78, 10L);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 0 + "'", int84 == 0);
    }

    @Test
    public void test0727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0727");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable8 = serializableNode7.data;
        int int9 = serializableNode7.rank;
        serializableNode7.rank = 'a';
        java.lang.Class<?> wildcardClass12 = serializableNode7.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass12);
        serializableNode1.data = wildcardClass12;
        com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>> serializableNodeNode15 = new com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>>(serializableNode1);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode1.parent;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertNotNull(serializableNode17);
    }

    @Test
    public void test0728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0728");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int10 = serializableNode9.rank;
        int int11 = serializableNode9.rank;
        java.io.Serializable serializable12 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode9.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable16 = serializableNode15.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode15.parent;
        serializableNode13.parent = serializableNode17;
        int int19 = serializableNode17.rank;
        serializableNode7.parent = serializableNode17;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (short) -1);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode22.parent;
        serializableNode7.parent = serializableNode22;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = serializableNode22.parent;
        int int26 = serializableNode25.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertNotNull(serializableNode25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
    }

    @Test
    public void test0729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0729");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable7 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode6.parent;
        serializableNode1.parent = serializableNode6;
        int int10 = serializableNode1.rank;
        java.lang.Class<?> wildcardClass11 = serializableNode1.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass11);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int15 = serializableNode14.rank;
        int int16 = serializableNode14.rank;
        java.io.Serializable serializable17 = serializableNode14.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode14.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode14.parent;
        serializableNode14.rank = (byte) 10;
        int int22 = serializableNode14.rank;
        int int23 = serializableNode14.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode14.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = serializableNode14.parent;
        serializableNode12.parent = serializableNode25;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable29 = serializableNode28.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = serializableNode28.parent;
        serializableNode30.rank = (short) 0;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int35 = serializableNode34.rank;
        int int36 = serializableNode34.rank;
        java.io.Serializable serializable37 = serializableNode34.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode38 = serializableNode34.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode39 = serializableNode34.parent;
        java.io.Serializable serializable40 = serializableNode39.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode42 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int43 = serializableNode42.rank;
        int int44 = serializableNode42.rank;
        java.io.Serializable serializable45 = serializableNode42.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode46 = serializableNode42.parent;
        java.io.Serializable serializable47 = serializableNode46.data;
        int int48 = serializableNode46.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode49 = serializableNode46.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode50 = serializableNode49.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode51 = serializableNode50.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode52 = serializableNode50.parent;
        serializableNode39.parent = serializableNode52;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode55 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int56 = serializableNode55.rank;
        int int57 = serializableNode55.rank;
        java.io.Serializable serializable58 = serializableNode55.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode59 = serializableNode55.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode61 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable62 = serializableNode61.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode63 = serializableNode61.parent;
        serializableNode59.parent = serializableNode63;
        int int65 = serializableNode63.rank;
        serializableNode63.data = (-1);
        int int68 = serializableNode63.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode70 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int71 = serializableNode70.rank;
        int int72 = serializableNode70.rank;
        java.io.Serializable serializable73 = serializableNode70.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode74 = serializableNode70.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode75 = serializableNode70.parent;
        serializableNode70.rank = (byte) 10;
        serializableNode70.data = 10L;
        serializableNode63.parent = serializableNode70;
        serializableNode52.parent = serializableNode70;
        serializableNode30.parent = serializableNode52;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode83 = serializableNode52.parent;
        java.lang.Class<?> wildcardClass84 = serializableNode83.getClass();
        serializableNode25.data = wildcardClass84;
        java.io.Serializable serializable86 = serializableNode25.data;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertEquals("'" + serializable17 + "' != '" + 10L + "'", serializable17, 10L);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 10 + "'", int22 == 10);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 10 + "'", int23 == 10);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertNotNull(serializableNode25);
        org.junit.Assert.assertEquals("'" + serializable29 + "' != '" + 10L + "'", serializable29, 10L);
        org.junit.Assert.assertNotNull(serializableNode30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertEquals("'" + serializable37 + "' != '" + 10L + "'", serializable37, 10L);
        org.junit.Assert.assertNotNull(serializableNode38);
        org.junit.Assert.assertNotNull(serializableNode39);
        org.junit.Assert.assertEquals("'" + serializable40 + "' != '" + 10L + "'", serializable40, 10L);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertEquals("'" + serializable45 + "' != '" + 10L + "'", serializable45, 10L);
        org.junit.Assert.assertNotNull(serializableNode46);
        org.junit.Assert.assertEquals("'" + serializable47 + "' != '" + 10L + "'", serializable47, 10L);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(serializableNode49);
        org.junit.Assert.assertNotNull(serializableNode50);
        org.junit.Assert.assertNotNull(serializableNode51);
        org.junit.Assert.assertNotNull(serializableNode52);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertEquals("'" + serializable58 + "' != '" + 10L + "'", serializable58, 10L);
        org.junit.Assert.assertNotNull(serializableNode59);
        org.junit.Assert.assertEquals("'" + serializable62 + "' != '" + 10L + "'", serializable62, 10L);
        org.junit.Assert.assertNotNull(serializableNode63);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertEquals("'" + serializable73 + "' != '" + 10L + "'", serializable73, 10L);
        org.junit.Assert.assertNotNull(serializableNode74);
        org.junit.Assert.assertNotNull(serializableNode75);
        org.junit.Assert.assertNotNull(serializableNode83);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertNotNull(serializable86);
    }

    @Test
    public void test0730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0730");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable7 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode6.parent;
        serializableNode1.parent = serializableNode6;
        serializableNode1.data = true;
        serializableNode1.rank = 0;
        int int14 = serializableNode1.rank;
        int int15 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable18 = serializableNode17.data;
        int int19 = serializableNode17.rank;
        int int20 = serializableNode17.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode17.parent;
        serializableNode1.parent = serializableNode21;
        java.io.Serializable serializable23 = serializableNode21.data;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertEquals("'" + serializable18 + "' != '" + 10L + "'", serializable18, 10L);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
    }

    @Test
    public void test0731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0731");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode2 = serializableNode1.parent;
        serializableNode2.rank = (byte) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int7 = serializableNode6.rank;
        int int8 = serializableNode6.rank;
        java.io.Serializable serializable9 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode6.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = serializableNode6.parent;
        serializableNode6.rank = (byte) 10;
        int int14 = serializableNode6.rank;
        serializableNode2.parent = serializableNode6;
        serializableNode6.rank = 1;
        int int18 = serializableNode6.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode6.parent;
        org.junit.Assert.assertNotNull(serializableNode2);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertNotNull(serializableNode11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 10 + "'", int14 == 10);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(serializableNode19);
    }

    @Test
    public void test0732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0732");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode2 = serializableNode1.parent;
        serializableNode2.rank = (byte) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int7 = serializableNode6.rank;
        int int8 = serializableNode6.rank;
        java.io.Serializable serializable9 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable12 = serializableNode11.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode11.parent;
        serializableNode6.parent = serializableNode11;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode11.parent;
        serializableNode2.parent = serializableNode15;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode2.parent;
        java.io.Serializable serializable18 = serializableNode2.data;
        int int19 = serializableNode2.rank;
        org.junit.Assert.assertNotNull(serializableNode2);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertEquals("'" + serializable18 + "' != '" + 10L + "'", serializable18, 10L);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
    }

    @Test
    public void test0733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0733");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode6.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode7.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = serializableNode10.parent;
        serializableNode11.rank = (byte) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int16 = serializableNode15.rank;
        int int17 = serializableNode15.rank;
        java.io.Serializable serializable18 = serializableNode15.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable21 = serializableNode20.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = serializableNode20.parent;
        serializableNode15.parent = serializableNode20;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode20.parent;
        serializableNode11.parent = serializableNode24;
        serializableNode8.parent = serializableNode11;
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.CharSequence> charSequenceNode28 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.CharSequence>((java.lang.CharSequence) "");
        java.lang.Class<?> wildcardClass29 = charSequenceNode28.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass29);
        serializableNode11.parent = serializableNode30;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = serializableNode11.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = serializableNode11.parent;
        java.io.Serializable serializable34 = serializableNode11.data;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(serializableNode11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertEquals("'" + serializable18 + "' != '" + 10L + "'", serializable18, 10L);
        org.junit.Assert.assertEquals("'" + serializable21 + "' != '" + 10L + "'", serializable21, 10L);
        org.junit.Assert.assertNotNull(serializableNode22);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(serializableNode32);
        org.junit.Assert.assertNotNull(serializableNode33);
        org.junit.Assert.assertEquals("'" + serializable34 + "' != '" + 10L + "'", serializable34, 10L);
    }

    @Test
    public void test0734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0734");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode1.parent = serializableNode5;
        serializableNode5.rank = 0;
        serializableNode5.data = 100;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = serializableNode5.parent;
        serializableNode5.rank = (byte) 1;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(serializableNode11);
    }

    @Test
    public void test0735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0735");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>> serializableNodeNode6 = new com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>>(serializableNode1);
        java.io.Serializable serializable7 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int10 = serializableNode9.rank;
        int int11 = serializableNode9.rank;
        java.io.Serializable serializable12 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode9.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = serializableNode9.parent;
        java.io.Serializable serializable15 = serializableNode14.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int18 = serializableNode17.rank;
        int int19 = serializableNode17.rank;
        java.io.Serializable serializable20 = serializableNode17.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode17.parent;
        java.io.Serializable serializable22 = serializableNode21.data;
        int int23 = serializableNode21.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode21.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = serializableNode24.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = serializableNode25.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = serializableNode25.parent;
        serializableNode14.parent = serializableNode27;
        serializableNode14.data = 10.0d;
        serializableNode1.parent = serializableNode14;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = serializableNode14.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int35 = serializableNode34.rank;
        int int36 = serializableNode34.rank;
        java.io.Serializable serializable37 = serializableNode34.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode38 = serializableNode34.parent;
        java.io.Serializable serializable39 = serializableNode38.data;
        int int40 = serializableNode38.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = serializableNode38.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode43 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int44 = serializableNode43.rank;
        int int45 = serializableNode43.rank;
        serializableNode43.rank = (short) -1;
        serializableNode43.rank = (short) -1;
        java.io.Serializable serializable50 = serializableNode43.data;
        int int51 = serializableNode43.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode52 = serializableNode43.parent;
        serializableNode38.parent = serializableNode43;
        int int54 = serializableNode43.rank;
        serializableNode43.rank = ' ';
        serializableNode14.parent = serializableNode43;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertNotNull(serializableNode14);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertEquals("'" + serializable20 + "' != '" + 10L + "'", serializable20, 10L);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertEquals("'" + serializable22 + "' != '" + 10L + "'", serializable22, 10L);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertNotNull(serializableNode25);
        org.junit.Assert.assertNotNull(serializableNode26);
        org.junit.Assert.assertNotNull(serializableNode27);
        org.junit.Assert.assertNotNull(serializableNode32);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertEquals("'" + serializable37 + "' != '" + 10L + "'", serializable37, 10L);
        org.junit.Assert.assertNotNull(serializableNode38);
        org.junit.Assert.assertEquals("'" + serializable39 + "' != '" + 10L + "'", serializable39, 10L);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(serializableNode41);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertEquals("'" + serializable50 + "' != '" + 10L + "'", serializable50, 10L);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNotNull(serializableNode52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
    }

    @Test
    public void test0736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0736");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.lang.Class<?> wildcardClass6 = serializableNode1.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.AnnotatedElement> annotatedElementNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.AnnotatedElement>((java.lang.reflect.AnnotatedElement) wildcardClass6);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass6);
        serializableNode8.rank = '4';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) "");
        java.lang.Class<?> wildcardClass13 = serializableNode12.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.GenericDeclaration> genericDeclarationNode14 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.GenericDeclaration>((java.lang.reflect.GenericDeclaration) wildcardClass13);
        serializableNode8.data = wildcardClass13;
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.Type> typeNode16 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.Type>((java.lang.reflect.Type) wildcardClass13);
        java.lang.Class<?> wildcardClass17 = typeNode16.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0737");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        serializableNode1.data = (byte) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable10 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = serializableNode9.parent;
        int int12 = serializableNode9.rank;
        java.io.Serializable serializable13 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode15.parent;
        serializableNode15.rank = (byte) 100;
        java.lang.Class<?> wildcardClass19 = serializableNode15.getClass();
        serializableNode9.data = wildcardClass19;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode9.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        java.lang.Class<?> wildcardClass24 = serializableNode23.getClass();
        serializableNode21.data = wildcardClass24;
        int int26 = serializableNode21.rank;
        serializableNode21.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = serializableNode21.parent;
        serializableNode7.parent = serializableNode29;
        java.io.Serializable serializable31 = serializableNode29.data;
        int int32 = serializableNode29.rank;
        serializableNode29.rank = (byte) 100;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode35 = serializableNode29.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode36 = serializableNode29.parent;
        serializableNode29.rank = (byte) 0;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertEquals("'" + serializable10 + "' != '" + 10L + "'", serializable10, 10L);
        org.junit.Assert.assertNotNull(serializableNode11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(serializableNode29);
        org.junit.Assert.assertNotNull(serializable31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(serializableNode35);
        org.junit.Assert.assertNotNull(serializableNode36);
    }

    @Test
    public void test0738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0738");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int6 = serializableNode5.rank;
        int int7 = serializableNode5.rank;
        java.io.Serializable serializable8 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable11 = serializableNode10.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode10.parent;
        serializableNode5.parent = serializableNode10;
        serializableNode5.data = true;
        serializableNode1.parent = serializableNode5;
        serializableNode1.rank = '4';
        serializableNode1.rank = 0;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = serializableNode21.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode21.parent;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertNotNull(serializableNode22);
        org.junit.Assert.assertNotNull(serializableNode23);
    }

    @Test
    public void test0739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0739");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode2 = serializableNode1.parent;
        serializableNode2.rank = (byte) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int7 = serializableNode6.rank;
        int int8 = serializableNode6.rank;
        java.io.Serializable serializable9 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable12 = serializableNode11.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode11.parent;
        serializableNode6.parent = serializableNode11;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode11.parent;
        serializableNode2.parent = serializableNode15;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode2.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode17.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode18.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = serializableNode19.parent;
        serializableNode19.rank = (short) 100;
        serializableNode19.rank = 97;
        org.junit.Assert.assertNotNull(serializableNode2);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertNotNull(serializableNode20);
    }

    @Test
    public void test0740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0740");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        serializableNode1.rank = (byte) 1;
        int int7 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode1.parent;
        serializableNode1.rank = (byte) 0;
        serializableNode1.rank = (byte) 10;
        java.lang.Class<?> wildcardClass13 = serializableNode1.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0741");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode2 = serializableNode1.parent;
        serializableNode2.rank = (byte) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int7 = serializableNode6.rank;
        int int8 = serializableNode6.rank;
        java.io.Serializable serializable9 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable12 = serializableNode11.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode11.parent;
        serializableNode6.parent = serializableNode11;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode11.parent;
        serializableNode2.parent = serializableNode15;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode15.parent;
        java.lang.Class<?> wildcardClass18 = serializableNode17.getClass();
        org.junit.Assert.assertNotNull(serializableNode2);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test0742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0742");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode2 = serializableNode1.parent;
        serializableNode2.rank = (byte) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int7 = serializableNode6.rank;
        int int8 = serializableNode6.rank;
        java.io.Serializable serializable9 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode6.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = serializableNode6.parent;
        serializableNode6.rank = (byte) 10;
        int int14 = serializableNode6.rank;
        serializableNode2.parent = serializableNode6;
        int int16 = serializableNode2.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int19 = serializableNode18.rank;
        int int20 = serializableNode18.rank;
        java.io.Serializable serializable21 = serializableNode18.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable24 = serializableNode23.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = serializableNode23.parent;
        serializableNode18.parent = serializableNode23;
        int int27 = serializableNode18.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = serializableNode18.parent;
        int int29 = serializableNode18.rank;
        serializableNode2.parent = serializableNode18;
        java.lang.Class<?> wildcardClass31 = serializableNode18.getClass();
        org.junit.Assert.assertNotNull(serializableNode2);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertNotNull(serializableNode11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 10 + "'", int14 == 10);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertEquals("'" + serializable21 + "' != '" + 10L + "'", serializable21, 10L);
        org.junit.Assert.assertEquals("'" + serializable24 + "' != '" + 10L + "'", serializable24, 10L);
        org.junit.Assert.assertNotNull(serializableNode25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(serializableNode28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test0743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0743");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        serializableNode1.rank = (byte) 1;
        int int7 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int11 = serializableNode10.rank;
        java.io.Serializable serializable12 = serializableNode10.data;
        java.lang.Class<?> wildcardClass13 = serializable12.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass13);
        serializableNode1.parent = serializableNode14;
        java.lang.Class<?> wildcardClass16 = serializableNode14.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0744");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable7 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode6.parent;
        serializableNode1.parent = serializableNode6;
        int int10 = serializableNode1.rank;
        java.lang.Class<?> wildcardClass11 = serializableNode1.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass11);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int15 = serializableNode14.rank;
        int int16 = serializableNode14.rank;
        java.io.Serializable serializable17 = serializableNode14.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode14.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode14.parent;
        serializableNode14.rank = (byte) 10;
        int int22 = serializableNode14.rank;
        int int23 = serializableNode14.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode14.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = serializableNode14.parent;
        serializableNode12.parent = serializableNode25;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) "");
        serializableNode28.rank = (byte) 100;
        serializableNode28.data = 'a';
        java.lang.Class<?> wildcardClass33 = serializableNode28.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass33);
        int int35 = serializableNode34.rank;
        serializableNode34.rank = 1;
        int int38 = serializableNode34.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode40 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable41 = serializableNode40.data;
        int int42 = serializableNode40.rank;
        serializableNode40.rank = 'a';
        int int45 = serializableNode40.rank;
        serializableNode34.parent = serializableNode40;
        serializableNode12.parent = serializableNode40;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertEquals("'" + serializable17 + "' != '" + 10L + "'", serializable17, 10L);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 10 + "'", int22 == 10);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 10 + "'", int23 == 10);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertNotNull(serializableNode25);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertEquals("'" + serializable41 + "' != '" + 10L + "'", serializable41, 10L);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 97 + "'", int45 == 97);
    }

    @Test
    public void test0745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0745");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        java.io.Serializable serializable4 = serializableNode3.data;
        serializableNode3.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode3.parent;
        java.lang.Class<?> wildcardClass8 = serializableNode7.getClass();
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0746");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        int int4 = serializableNode1.rank;
        java.io.Serializable serializable5 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode7.parent;
        serializableNode7.rank = (byte) 100;
        java.lang.Class<?> wildcardClass11 = serializableNode7.getClass();
        serializableNode1.data = wildcardClass11;
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.GenericDeclaration> genericDeclarationNode13 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.GenericDeclaration>((java.lang.reflect.GenericDeclaration) wildcardClass11);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass11);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode16.parent;
        serializableNode17.rank = (byte) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int22 = serializableNode21.rank;
        int int23 = serializableNode21.rank;
        java.io.Serializable serializable24 = serializableNode21.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable27 = serializableNode26.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = serializableNode26.parent;
        serializableNode21.parent = serializableNode26;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = serializableNode26.parent;
        serializableNode17.parent = serializableNode30;
        serializableNode14.parent = serializableNode17;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int35 = serializableNode34.rank;
        int int36 = serializableNode34.rank;
        serializableNode34.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>> serializableNodeNode39 = new com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>>(serializableNode34);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int42 = serializableNode41.rank;
        int int43 = serializableNode41.rank;
        java.io.Serializable serializable44 = serializableNode41.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode45 = serializableNode41.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode47 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable48 = serializableNode47.data;
        int int49 = serializableNode47.rank;
        serializableNode47.rank = 'a';
        java.lang.Class<?> wildcardClass52 = serializableNode47.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode53 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass52);
        serializableNode41.data = wildcardClass52;
        serializableNode34.data = wildcardClass52;
        serializableNode17.data = wildcardClass52;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode58 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int59 = serializableNode58.rank;
        int int60 = serializableNode58.rank;
        java.io.Serializable serializable61 = serializableNode58.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode62 = serializableNode58.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode63 = serializableNode58.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode65 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int66 = serializableNode65.rank;
        int int67 = serializableNode65.rank;
        java.io.Serializable serializable68 = serializableNode65.data;
        serializableNode65.rank = (byte) 1;
        serializableNode65.data = 10.0d;
        serializableNode63.parent = serializableNode65;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode74 = serializableNode63.parent;
        int int75 = serializableNode63.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode77 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int78 = serializableNode77.rank;
        int int79 = serializableNode77.rank;
        java.io.Serializable serializable80 = serializableNode77.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode81 = serializableNode77.parent;
        java.io.Serializable serializable82 = serializableNode81.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode83 = serializableNode81.parent;
        java.io.Serializable serializable84 = serializableNode81.data;
        java.io.Serializable serializable85 = serializableNode81.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode87 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int88 = serializableNode87.rank;
        int int89 = serializableNode87.rank;
        java.io.Serializable serializable90 = serializableNode87.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode91 = serializableNode87.parent;
        java.lang.Class<?> wildcardClass92 = serializableNode91.getClass();
        serializableNode81.data = wildcardClass92;
        java.io.Serializable serializable94 = serializableNode81.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode95 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>(serializable94);
        serializableNode63.parent = serializableNode95;
        serializableNode17.parent = serializableNode95;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + serializable5 + "' != '" + 10L + "'", serializable5, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertEquals("'" + serializable24 + "' != '" + 10L + "'", serializable24, 10L);
        org.junit.Assert.assertEquals("'" + serializable27 + "' != '" + 10L + "'", serializable27, 10L);
        org.junit.Assert.assertNotNull(serializableNode28);
        org.junit.Assert.assertNotNull(serializableNode30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertEquals("'" + serializable44 + "' != '" + 10L + "'", serializable44, 10L);
        org.junit.Assert.assertNotNull(serializableNode45);
        org.junit.Assert.assertEquals("'" + serializable48 + "' != '" + 10L + "'", serializable48, 10L);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertEquals("'" + serializable61 + "' != '" + 10L + "'", serializable61, 10L);
        org.junit.Assert.assertNotNull(serializableNode62);
        org.junit.Assert.assertNotNull(serializableNode63);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertEquals("'" + serializable68 + "' != '" + 10L + "'", serializable68, 10L);
        org.junit.Assert.assertNotNull(serializableNode74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertEquals("'" + serializable80 + "' != '" + 10L + "'", serializable80, 10L);
        org.junit.Assert.assertNotNull(serializableNode81);
        org.junit.Assert.assertEquals("'" + serializable82 + "' != '" + 10L + "'", serializable82, 10L);
        org.junit.Assert.assertNotNull(serializableNode83);
        org.junit.Assert.assertEquals("'" + serializable84 + "' != '" + 10L + "'", serializable84, 10L);
        org.junit.Assert.assertEquals("'" + serializable85 + "' != '" + 10L + "'", serializable85, 10L);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 0 + "'", int88 == 0);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 0 + "'", int89 == 0);
        org.junit.Assert.assertEquals("'" + serializable90 + "' != '" + 10L + "'", serializable90, 10L);
        org.junit.Assert.assertNotNull(serializableNode91);
        org.junit.Assert.assertNotNull(wildcardClass92);
        org.junit.Assert.assertNotNull(serializable94);
    }

    @Test
    public void test0747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0747");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        int int4 = serializableNode1.rank;
        java.io.Serializable serializable5 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode7.parent;
        serializableNode7.rank = (byte) 100;
        java.lang.Class<?> wildcardClass11 = serializableNode7.getClass();
        serializableNode1.data = wildcardClass11;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode1.parent;
        java.io.Serializable serializable14 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (-1.0d));
        int int18 = serializableNode17.rank;
        java.lang.Class<?> wildcardClass19 = serializableNode17.getClass();
        serializableNode1.data = wildcardClass19;
        java.io.Serializable serializable21 = serializableNode1.data;
        java.lang.Class<?> wildcardClass22 = serializableNode1.getClass();
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + serializable5 + "' != '" + 10L + "'", serializable5, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertNotNull(serializable14);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(serializable21);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test0748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0748");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        java.io.Serializable serializable4 = serializableNode3.data;
        serializableNode3.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode3.parent;
        int int8 = serializableNode7.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode7.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode9.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable13 = serializableNode12.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = serializableNode12.parent;
        int int15 = serializableNode12.rank;
        java.io.Serializable serializable16 = serializableNode12.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode18.parent;
        serializableNode18.rank = (byte) 100;
        java.lang.Class<?> wildcardClass22 = serializableNode18.getClass();
        serializableNode12.data = wildcardClass22;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode12.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        java.lang.Class<?> wildcardClass27 = serializableNode26.getClass();
        serializableNode24.data = wildcardClass27;
        serializableNode24.rank = (short) 100;
        serializableNode9.parent = serializableNode24;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable34 = serializableNode33.data;
        int int35 = serializableNode33.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode33.parent = serializableNode37;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode40 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int41 = serializableNode40.rank;
        int int42 = serializableNode40.rank;
        java.io.Serializable serializable43 = serializableNode40.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode44 = serializableNode40.parent;
        java.io.Serializable serializable45 = serializableNode44.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode46 = serializableNode44.parent;
        java.io.Serializable serializable47 = serializableNode44.data;
        java.io.Serializable serializable48 = serializableNode44.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode50 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int51 = serializableNode50.rank;
        int int52 = serializableNode50.rank;
        java.io.Serializable serializable53 = serializableNode50.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode54 = serializableNode50.parent;
        java.lang.Class<?> wildcardClass55 = serializableNode54.getClass();
        serializableNode44.data = wildcardClass55;
        serializableNode33.data = wildcardClass55;
        serializableNode33.rank = 0;
        serializableNode33.data = "";
        java.lang.Class<?> wildcardClass62 = serializableNode33.getClass();
        serializableNode9.data = wildcardClass62;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode65 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int66 = serializableNode65.rank;
        int int67 = serializableNode65.rank;
        java.io.Serializable serializable68 = serializableNode65.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode69 = serializableNode65.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode71 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable72 = serializableNode71.data;
        int int73 = serializableNode71.rank;
        serializableNode71.rank = 'a';
        java.lang.Class<?> wildcardClass76 = serializableNode71.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode77 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass76);
        serializableNode65.data = wildcardClass76;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode79 = serializableNode65.parent;
        serializableNode79.data = (short) 1;
        int int82 = serializableNode79.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode84 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        serializableNode84.rank = 0;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode88 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable89 = serializableNode88.data;
        int int90 = serializableNode88.rank;
        serializableNode84.parent = serializableNode88;
        serializableNode79.parent = serializableNode88;
        int int93 = serializableNode88.rank;
        java.io.Serializable serializable94 = serializableNode88.data;
        serializableNode9.parent = serializableNode88;
        serializableNode9.rank = (short) 1;
        java.lang.Class<?> wildcardClass98 = serializableNode9.getClass();
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertEquals("'" + serializable34 + "' != '" + 10L + "'", serializable34, 10L);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertEquals("'" + serializable43 + "' != '" + 10L + "'", serializable43, 10L);
        org.junit.Assert.assertNotNull(serializableNode44);
        org.junit.Assert.assertEquals("'" + serializable45 + "' != '" + 10L + "'", serializable45, 10L);
        org.junit.Assert.assertNotNull(serializableNode46);
        org.junit.Assert.assertEquals("'" + serializable47 + "' != '" + 10L + "'", serializable47, 10L);
        org.junit.Assert.assertEquals("'" + serializable48 + "' != '" + 10L + "'", serializable48, 10L);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertEquals("'" + serializable53 + "' != '" + 10L + "'", serializable53, 10L);
        org.junit.Assert.assertNotNull(serializableNode54);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertEquals("'" + serializable68 + "' != '" + 10L + "'", serializable68, 10L);
        org.junit.Assert.assertNotNull(serializableNode69);
        org.junit.Assert.assertEquals("'" + serializable72 + "' != '" + 10L + "'", serializable72, 10L);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(serializableNode79);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0);
        org.junit.Assert.assertEquals("'" + serializable89 + "' != '" + 10L + "'", serializable89, 10L);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 0 + "'", int90 == 0);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 0 + "'", int93 == 0);
        org.junit.Assert.assertEquals("'" + serializable94 + "' != '" + 10L + "'", serializable94, 10L);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test0749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0749");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        java.io.Serializable serializable8 = serializableNode5.data;
        java.io.Serializable serializable9 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int12 = serializableNode11.rank;
        int int13 = serializableNode11.rank;
        java.io.Serializable serializable14 = serializableNode11.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode11.parent;
        java.lang.Class<?> wildcardClass16 = serializableNode15.getClass();
        serializableNode5.data = wildcardClass16;
        java.io.Serializable serializable18 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>(serializable18);
        serializableNode19.data = 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int24 = serializableNode23.rank;
        int int25 = serializableNode23.rank;
        java.io.Serializable serializable26 = serializableNode23.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = serializableNode23.parent;
        java.io.Serializable serializable28 = serializableNode27.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = serializableNode27.parent;
        java.io.Serializable serializable30 = serializableNode27.data;
        java.io.Serializable serializable31 = serializableNode27.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int34 = serializableNode33.rank;
        int int35 = serializableNode33.rank;
        java.io.Serializable serializable36 = serializableNode33.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = serializableNode33.parent;
        java.lang.Class<?> wildcardClass38 = serializableNode37.getClass();
        serializableNode27.data = wildcardClass38;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode40 = serializableNode27.parent;
        serializableNode40.rank = 'a';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode43 = serializableNode40.parent;
        serializableNode19.parent = serializableNode40;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode45 = serializableNode40.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode47 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int48 = serializableNode47.rank;
        int int49 = serializableNode47.rank;
        java.io.Serializable serializable50 = serializableNode47.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode51 = serializableNode47.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode52 = serializableNode47.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode54 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable55 = serializableNode54.data;
        int int56 = serializableNode54.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode58 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode54.parent = serializableNode58;
        serializableNode52.parent = serializableNode54;
        int int61 = serializableNode52.rank;
        int int62 = serializableNode52.rank;
        serializableNode40.parent = serializableNode52;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode64 = serializableNode52.parent;
        serializableNode52.data = 10;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode67 = serializableNode52.parent;
        int int68 = serializableNode52.rank;
        java.lang.Class<?> wildcardClass69 = serializableNode52.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(serializable18);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertEquals("'" + serializable26 + "' != '" + 10L + "'", serializable26, 10L);
        org.junit.Assert.assertNotNull(serializableNode27);
        org.junit.Assert.assertEquals("'" + serializable28 + "' != '" + 10L + "'", serializable28, 10L);
        org.junit.Assert.assertNotNull(serializableNode29);
        org.junit.Assert.assertEquals("'" + serializable30 + "' != '" + 10L + "'", serializable30, 10L);
        org.junit.Assert.assertEquals("'" + serializable31 + "' != '" + 10L + "'", serializable31, 10L);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertEquals("'" + serializable36 + "' != '" + 10L + "'", serializable36, 10L);
        org.junit.Assert.assertNotNull(serializableNode37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(serializableNode40);
        org.junit.Assert.assertNotNull(serializableNode43);
        org.junit.Assert.assertNotNull(serializableNode45);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertEquals("'" + serializable50 + "' != '" + 10L + "'", serializable50, 10L);
        org.junit.Assert.assertNotNull(serializableNode51);
        org.junit.Assert.assertNotNull(serializableNode52);
        org.junit.Assert.assertEquals("'" + serializable55 + "' != '" + 10L + "'", serializable55, 10L);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(serializableNode64);
        org.junit.Assert.assertNotNull(serializableNode67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test0750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0750");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode2 = serializableNode1.parent;
        java.io.Serializable serializable3 = serializableNode1.data;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int7 = serializableNode6.rank;
        int int8 = serializableNode6.rank;
        java.io.Serializable serializable9 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode6.parent;
        java.io.Serializable serializable11 = serializableNode10.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode10.parent;
        java.io.Serializable serializable13 = serializableNode10.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int16 = serializableNode15.rank;
        int int17 = serializableNode15.rank;
        java.io.Serializable serializable18 = serializableNode15.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode15.parent;
        java.io.Serializable serializable20 = serializableNode19.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode19.parent;
        java.io.Serializable serializable22 = serializableNode19.data;
        java.io.Serializable serializable23 = serializableNode19.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int26 = serializableNode25.rank;
        int int27 = serializableNode25.rank;
        java.io.Serializable serializable28 = serializableNode25.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = serializableNode25.parent;
        java.lang.Class<?> wildcardClass30 = serializableNode29.getClass();
        serializableNode19.data = wildcardClass30;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = serializableNode19.parent;
        serializableNode10.parent = serializableNode19;
        java.lang.Class<?> wildcardClass34 = serializableNode19.getClass();
        serializableNode1.data = wildcardClass34;
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.AnnotatedElement> annotatedElementNode36 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.AnnotatedElement>((java.lang.reflect.AnnotatedElement) wildcardClass34);
        org.junit.Assert.assertNotNull(serializableNode2);
        org.junit.Assert.assertEquals("'" + serializable3 + "' != '" + 10L + "'", serializable3, 10L);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertEquals("'" + serializable18 + "' != '" + 10L + "'", serializable18, 10L);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertEquals("'" + serializable20 + "' != '" + 10L + "'", serializable20, 10L);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertEquals("'" + serializable22 + "' != '" + 10L + "'", serializable22, 10L);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertEquals("'" + serializable28 + "' != '" + 10L + "'", serializable28, 10L);
        org.junit.Assert.assertNotNull(serializableNode29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(serializableNode32);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test0751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0751");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int9 = serializableNode8.rank;
        int int10 = serializableNode8.rank;
        java.io.Serializable serializable11 = serializableNode8.data;
        serializableNode8.rank = (byte) 1;
        serializableNode8.data = 10.0d;
        serializableNode6.parent = serializableNode8;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode8.parent;
        java.io.Serializable serializable18 = serializableNode8.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int21 = serializableNode20.rank;
        int int22 = serializableNode20.rank;
        java.io.Serializable serializable23 = serializableNode20.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode20.parent;
        serializableNode20.rank = (short) 10;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) "");
        serializableNode28.rank = (byte) 100;
        serializableNode20.parent = serializableNode28;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int34 = serializableNode33.rank;
        int int35 = serializableNode33.rank;
        java.io.Serializable serializable36 = serializableNode33.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = serializableNode33.parent;
        java.io.Serializable serializable38 = serializableNode37.data;
        int int39 = serializableNode37.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode40 = serializableNode37.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = serializableNode37.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode42 = serializableNode41.parent;
        serializableNode20.parent = serializableNode41;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode45 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int46 = serializableNode45.rank;
        int int47 = serializableNode45.rank;
        java.io.Serializable serializable48 = serializableNode45.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode49 = serializableNode45.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode51 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable52 = serializableNode51.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode53 = serializableNode51.parent;
        serializableNode49.parent = serializableNode53;
        int int55 = serializableNode53.rank;
        serializableNode53.rank = (byte) 0;
        serializableNode53.rank = (byte) 1;
        int int60 = serializableNode53.rank;
        java.io.Serializable serializable61 = serializableNode53.data;
        serializableNode20.parent = serializableNode53;
        java.lang.Class<?> wildcardClass63 = serializableNode20.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode64 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass63);
        java.io.Serializable serializable65 = serializableNode64.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode66 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>(serializable65);
        serializableNode8.parent = serializableNode66;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertEquals("'" + serializable18 + "' != '" + 10.0d + "'", serializable18, 10.0d);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertEquals("'" + serializable36 + "' != '" + 10L + "'", serializable36, 10L);
        org.junit.Assert.assertNotNull(serializableNode37);
        org.junit.Assert.assertEquals("'" + serializable38 + "' != '" + 10L + "'", serializable38, 10L);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(serializableNode40);
        org.junit.Assert.assertNotNull(serializableNode41);
        org.junit.Assert.assertNotNull(serializableNode42);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertEquals("'" + serializable48 + "' != '" + 10L + "'", serializable48, 10L);
        org.junit.Assert.assertNotNull(serializableNode49);
        org.junit.Assert.assertEquals("'" + serializable52 + "' != '" + 10L + "'", serializable52, 10L);
        org.junit.Assert.assertNotNull(serializableNode53);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertEquals("'" + serializable61 + "' != '" + 10L + "'", serializable61, 10L);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(serializable65);
    }

    @Test
    public void test0752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0752");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable8 = serializableNode7.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode7.parent;
        serializableNode5.parent = serializableNode9;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int13 = serializableNode12.rank;
        int int14 = serializableNode12.rank;
        java.io.Serializable serializable15 = serializableNode12.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode12.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable19 = serializableNode18.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = serializableNode18.parent;
        serializableNode16.parent = serializableNode20;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int24 = serializableNode23.rank;
        int int25 = serializableNode23.rank;
        java.io.Serializable serializable26 = serializableNode23.data;
        serializableNode23.rank = (byte) 1;
        java.lang.Class<?> wildcardClass29 = serializableNode23.getClass();
        serializableNode16.data = wildcardClass29;
        serializableNode16.rank = 'a';
        int int33 = serializableNode16.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = serializableNode16.parent;
        serializableNode9.parent = serializableNode34;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int38 = serializableNode37.rank;
        int int39 = serializableNode37.rank;
        java.io.Serializable serializable40 = serializableNode37.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = serializableNode37.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode43 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable44 = serializableNode43.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode45 = serializableNode43.parent;
        serializableNode41.parent = serializableNode45;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode48 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int49 = serializableNode48.rank;
        int int50 = serializableNode48.rank;
        java.io.Serializable serializable51 = serializableNode48.data;
        serializableNode41.parent = serializableNode48;
        java.io.Serializable serializable53 = serializableNode41.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode55 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (byte) 10);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode56 = serializableNode55.parent;
        java.io.Serializable serializable57 = serializableNode56.data;
        serializableNode41.parent = serializableNode56;
        serializableNode56.rank = ' ';
        serializableNode34.parent = serializableNode56;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertEquals("'" + serializable19 + "' != '" + 10L + "'", serializable19, 10L);
        org.junit.Assert.assertNotNull(serializableNode20);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertEquals("'" + serializable26 + "' != '" + 10L + "'", serializable26, 10L);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 97 + "'", int33 == 97);
        org.junit.Assert.assertNotNull(serializableNode34);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertEquals("'" + serializable40 + "' != '" + 10L + "'", serializable40, 10L);
        org.junit.Assert.assertNotNull(serializableNode41);
        org.junit.Assert.assertEquals("'" + serializable44 + "' != '" + 10L + "'", serializable44, 10L);
        org.junit.Assert.assertNotNull(serializableNode45);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertEquals("'" + serializable51 + "' != '" + 10L + "'", serializable51, 10L);
        org.junit.Assert.assertEquals("'" + serializable53 + "' != '" + 10L + "'", serializable53, 10L);
        org.junit.Assert.assertNotNull(serializableNode56);
        org.junit.Assert.assertEquals("'" + serializable57 + "' != '" + (byte) 10 + "'", serializable57, (byte) 10);
    }

    @Test
    public void test0753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0753");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        int int4 = serializableNode1.rank;
        java.io.Serializable serializable5 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode7.parent;
        serializableNode7.rank = (byte) 100;
        java.lang.Class<?> wildcardClass11 = serializableNode7.getClass();
        serializableNode1.data = wildcardClass11;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode14.parent;
        serializableNode15.rank = (byte) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int20 = serializableNode19.rank;
        int int21 = serializableNode19.rank;
        java.io.Serializable serializable22 = serializableNode19.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode19.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode19.parent;
        serializableNode19.rank = (byte) 10;
        int int27 = serializableNode19.rank;
        serializableNode15.parent = serializableNode19;
        serializableNode15.rank = 52;
        serializableNode1.parent = serializableNode15;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = serializableNode15.parent;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + serializable5 + "' != '" + 10L + "'", serializable5, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertEquals("'" + serializable22 + "' != '" + 10L + "'", serializable22, 10L);
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 10 + "'", int27 == 10);
        org.junit.Assert.assertNotNull(serializableNode32);
    }

    @Test
    public void test0754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0754");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        serializableNode3.rank = (short) 0;
        int int6 = serializableNode3.rank;
        java.lang.Class<?> wildcardClass7 = serializableNode3.getClass();
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0755");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode1.parent = serializableNode5;
        serializableNode1.data = '#';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int11 = serializableNode10.rank;
        int int12 = serializableNode10.rank;
        serializableNode10.data = (short) 100;
        serializableNode1.parent = serializableNode10;
        java.io.Serializable serializable16 = serializableNode10.data;
        int int17 = serializableNode10.rank;
        serializableNode10.rank = 10;
        java.io.Serializable serializable20 = serializableNode10.data;
        serializableNode10.rank = 'a';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable25 = serializableNode24.data;
        int int26 = serializableNode24.rank;
        serializableNode24.rank = 'a';
        java.lang.Class<?> wildcardClass29 = serializableNode24.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass29);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass29);
        serializableNode10.data = wildcardClass29;
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.AnnotatedElement> annotatedElementNode33 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.AnnotatedElement>((java.lang.reflect.AnnotatedElement) wildcardClass29);
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + (short) 100 + "'", serializable16, (short) 100);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertEquals("'" + serializable20 + "' != '" + (short) 100 + "'", serializable20, (short) 100);
        org.junit.Assert.assertEquals("'" + serializable25 + "' != '" + 10L + "'", serializable25, 10L);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test0756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0756");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        serializableNode1.rank = (short) 10;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int11 = serializableNode10.rank;
        int int12 = serializableNode10.rank;
        java.io.Serializable serializable13 = serializableNode10.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = serializableNode10.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable17 = serializableNode16.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode16.parent;
        serializableNode14.parent = serializableNode18;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int22 = serializableNode21.rank;
        int int23 = serializableNode21.rank;
        java.io.Serializable serializable24 = serializableNode21.data;
        serializableNode14.parent = serializableNode21;
        int int26 = serializableNode14.rank;
        java.io.Serializable serializable27 = serializableNode14.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int30 = serializableNode29.rank;
        int int31 = serializableNode29.rank;
        java.io.Serializable serializable32 = serializableNode29.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = serializableNode29.parent;
        java.io.Serializable serializable34 = serializableNode33.data;
        int int35 = serializableNode33.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode36 = serializableNode33.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = serializableNode33.parent;
        serializableNode14.parent = serializableNode33;
        serializableNode8.parent = serializableNode14;
        java.lang.Class<?> wildcardClass40 = serializableNode8.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.AnnotatedElement> annotatedElementNode41 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.AnnotatedElement>((java.lang.reflect.AnnotatedElement) wildcardClass40);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode42 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass40);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode14);
        org.junit.Assert.assertEquals("'" + serializable17 + "' != '" + 10L + "'", serializable17, 10L);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertEquals("'" + serializable24 + "' != '" + 10L + "'", serializable24, 10L);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertEquals("'" + serializable27 + "' != '" + 10L + "'", serializable27, 10L);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertEquals("'" + serializable32 + "' != '" + 10L + "'", serializable32, 10L);
        org.junit.Assert.assertNotNull(serializableNode33);
        org.junit.Assert.assertEquals("'" + serializable34 + "' != '" + 10L + "'", serializable34, 10L);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(serializableNode36);
        org.junit.Assert.assertNotNull(serializableNode37);
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test0757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0757");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (byte) 10);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode2 = serializableNode1.parent;
        java.io.Serializable serializable3 = serializableNode2.data;
        java.io.Serializable serializable4 = serializableNode2.data;
        java.lang.Class<?> wildcardClass5 = serializableNode2.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass5);
        org.junit.Assert.assertNotNull(serializableNode2);
        org.junit.Assert.assertEquals("'" + serializable3 + "' != '" + (byte) 10 + "'", serializable3, (byte) 10);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + (byte) 10 + "'", serializable4, (byte) 10);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test0758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0758");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        int int8 = serializableNode5.rank;
        java.io.Serializable serializable9 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode11.parent;
        serializableNode11.rank = (byte) 100;
        java.lang.Class<?> wildcardClass15 = serializableNode11.getClass();
        serializableNode5.data = wildcardClass15;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        java.lang.Class<?> wildcardClass20 = serializableNode19.getClass();
        serializableNode17.data = wildcardClass20;
        int int22 = serializableNode17.rank;
        serializableNode17.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = serializableNode17.parent;
        java.lang.Class<?> wildcardClass26 = serializableNode25.getClass();
        serializableNode1.data = wildcardClass26;
        int int28 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = serializableNode1.parent;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(serializableNode25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(serializableNode29);
    }

    @Test
    public void test0759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0759");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        java.io.Serializable serializable7 = serializableNode6.data;
        int int8 = serializableNode6.rank;
        java.io.Serializable serializable9 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable12 = serializableNode11.data;
        int int13 = serializableNode11.rank;
        serializableNode11.rank = 'a';
        java.lang.Class<?> wildcardClass16 = serializableNode11.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass16);
        serializableNode6.parent = serializableNode17;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        java.io.Serializable serializable21 = serializableNode20.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int24 = serializableNode23.rank;
        int int25 = serializableNode23.rank;
        java.io.Serializable serializable26 = serializableNode23.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = serializableNode23.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable30 = serializableNode29.data;
        int int31 = serializableNode29.rank;
        serializableNode29.rank = 'a';
        java.lang.Class<?> wildcardClass34 = serializableNode29.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode35 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass34);
        serializableNode23.data = wildcardClass34;
        com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>> serializableNodeNode37 = new com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>>(serializableNode23);
        serializableNode20.parent = serializableNode23;
        java.io.Serializable serializable39 = serializableNode23.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable42 = serializableNode41.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode43 = serializableNode41.parent;
        int int44 = serializableNode41.rank;
        java.io.Serializable serializable45 = serializableNode41.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode47 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode48 = serializableNode47.parent;
        serializableNode47.rank = (byte) 100;
        java.lang.Class<?> wildcardClass51 = serializableNode47.getClass();
        serializableNode41.data = wildcardClass51;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode53 = serializableNode41.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode55 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        java.lang.Class<?> wildcardClass56 = serializableNode55.getClass();
        serializableNode53.data = wildcardClass56;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode59 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable60 = serializableNode59.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode61 = serializableNode59.parent;
        int int62 = serializableNode59.rank;
        java.io.Serializable serializable63 = serializableNode59.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode65 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode66 = serializableNode65.parent;
        serializableNode65.rank = (byte) 100;
        java.lang.Class<?> wildcardClass69 = serializableNode65.getClass();
        serializableNode59.data = wildcardClass69;
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.GenericDeclaration> genericDeclarationNode71 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.GenericDeclaration>((java.lang.reflect.GenericDeclaration) wildcardClass69);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode72 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass69);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode74 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode75 = serializableNode74.parent;
        serializableNode75.rank = (byte) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode79 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int80 = serializableNode79.rank;
        int int81 = serializableNode79.rank;
        java.io.Serializable serializable82 = serializableNode79.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode84 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable85 = serializableNode84.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode86 = serializableNode84.parent;
        serializableNode79.parent = serializableNode84;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode88 = serializableNode84.parent;
        serializableNode75.parent = serializableNode88;
        serializableNode72.parent = serializableNode75;
        serializableNode75.rank = (byte) -1;
        serializableNode53.parent = serializableNode75;
        java.lang.Class<?> wildcardClass94 = serializableNode75.getClass();
        serializableNode23.data = wildcardClass94;
        serializableNode17.data = wildcardClass94;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertEquals("'" + serializable21 + "' != '" + 10.0f + "'", serializable21, 10.0f);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertEquals("'" + serializable26 + "' != '" + 10L + "'", serializable26, 10L);
        org.junit.Assert.assertNotNull(serializableNode27);
        org.junit.Assert.assertEquals("'" + serializable30 + "' != '" + 10L + "'", serializable30, 10L);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(serializable39);
        org.junit.Assert.assertEquals("'" + serializable42 + "' != '" + 10L + "'", serializable42, 10L);
        org.junit.Assert.assertNotNull(serializableNode43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertEquals("'" + serializable45 + "' != '" + 10L + "'", serializable45, 10L);
        org.junit.Assert.assertNotNull(serializableNode48);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(serializableNode53);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertEquals("'" + serializable60 + "' != '" + 10L + "'", serializable60, 10L);
        org.junit.Assert.assertNotNull(serializableNode61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertEquals("'" + serializable63 + "' != '" + 10L + "'", serializable63, 10L);
        org.junit.Assert.assertNotNull(serializableNode66);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(serializableNode75);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
        org.junit.Assert.assertEquals("'" + serializable82 + "' != '" + 10L + "'", serializable82, 10L);
        org.junit.Assert.assertEquals("'" + serializable85 + "' != '" + 10L + "'", serializable85, 10L);
        org.junit.Assert.assertNotNull(serializableNode86);
        org.junit.Assert.assertNotNull(serializableNode88);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0760");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        int int4 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable7 = serializableNode6.data;
        int int8 = serializableNode6.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode6.parent = serializableNode10;
        serializableNode10.data = 0.0d;
        serializableNode1.parent = serializableNode10;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode15.parent;
        java.io.Serializable serializable17 = serializableNode15.data;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertEquals("'" + serializable17 + "' != '" + 0.0d + "'", serializable17, 0.0d);
    }

    @Test
    public void test0761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0761");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable8 = serializableNode7.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode7.parent;
        serializableNode5.parent = serializableNode9;
        int int11 = serializableNode9.rank;
        serializableNode9.rank = (byte) 0;
        java.io.Serializable serializable14 = serializableNode9.data;
        int int15 = serializableNode9.rank;
        serializableNode9.rank = 0;
        int int18 = serializableNode9.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
    }

    @Test
    public void test0762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0762");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        java.io.Serializable serializable4 = serializableNode3.data;
        serializableNode3.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode3.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode7.parent;
        int int9 = serializableNode7.rank;
        java.io.Serializable serializable10 = serializableNode7.data;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertEquals("'" + serializable10 + "' != '" + 10L + "'", serializable10, 10L);
    }

    @Test
    public void test0763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0763");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int6 = serializableNode5.rank;
        int int7 = serializableNode5.rank;
        java.io.Serializable serializable8 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable11 = serializableNode10.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode10.parent;
        serializableNode5.parent = serializableNode10;
        serializableNode5.data = true;
        serializableNode1.parent = serializableNode5;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode1.parent;
        java.io.Serializable serializable18 = serializableNode17.data;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertEquals("'" + serializable18 + "' != '" + true + "'", serializable18, true);
    }

    @Test
    public void test0764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0764");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        int int7 = serializableNode5.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode8.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode9.parent;
        serializableNode9.rank = (byte) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int15 = serializableNode14.rank;
        int int16 = serializableNode14.rank;
        java.io.Serializable serializable17 = serializableNode14.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode14.parent;
        java.io.Serializable serializable19 = serializableNode18.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = serializableNode18.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode18.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable24 = serializableNode23.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = serializableNode23.parent;
        java.io.Serializable serializable26 = serializableNode25.data;
        serializableNode25.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = serializableNode25.parent;
        serializableNode21.parent = serializableNode29;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable33 = serializableNode32.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = serializableNode32.parent;
        int int35 = serializableNode32.rank;
        java.io.Serializable serializable36 = serializableNode32.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode38 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode39 = serializableNode38.parent;
        serializableNode38.rank = (byte) 100;
        java.lang.Class<?> wildcardClass42 = serializableNode38.getClass();
        serializableNode32.data = wildcardClass42;
        serializableNode29.parent = serializableNode32;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode46 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) "");
        java.lang.Class<?> wildcardClass47 = serializableNode46.getClass();
        serializableNode32.data = wildcardClass47;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode49 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass47);
        serializableNode9.parent = serializableNode49;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode51 = serializableNode49.parent;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertEquals("'" + serializable17 + "' != '" + 10L + "'", serializable17, 10L);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertEquals("'" + serializable19 + "' != '" + 10L + "'", serializable19, 10L);
        org.junit.Assert.assertNotNull(serializableNode20);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertEquals("'" + serializable24 + "' != '" + 10L + "'", serializable24, 10L);
        org.junit.Assert.assertNotNull(serializableNode25);
        org.junit.Assert.assertEquals("'" + serializable26 + "' != '" + 10L + "'", serializable26, 10L);
        org.junit.Assert.assertNotNull(serializableNode29);
        org.junit.Assert.assertEquals("'" + serializable33 + "' != '" + 10L + "'", serializable33, 10L);
        org.junit.Assert.assertNotNull(serializableNode34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertEquals("'" + serializable36 + "' != '" + 10L + "'", serializable36, 10L);
        org.junit.Assert.assertNotNull(serializableNode39);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(serializableNode51);
    }

    @Test
    public void test0765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0765");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>> serializableNodeNode8 = new com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>>(serializableNode7);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode7.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode7.parent;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertNotNull(serializableNode10);
    }

    @Test
    public void test0766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0766");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        int int4 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        serializableNode1.data = (short) 0;
        serializableNode1.data = (-1);
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(serializableNode5);
    }

    @Test
    public void test0767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0767");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        serializableNode1.rank = (byte) 10;
        int int9 = serializableNode1.rank;
        java.lang.Class<?> wildcardClass10 = serializableNode1.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass10);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass10);
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.AnnotatedElement> annotatedElementNode13 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.AnnotatedElement>((java.lang.reflect.AnnotatedElement) wildcardClass10);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 10 + "'", int9 == 10);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0768");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        int int4 = serializableNode1.rank;
        java.io.Serializable serializable5 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode7.parent;
        serializableNode7.rank = (byte) 100;
        java.lang.Class<?> wildcardClass11 = serializableNode7.getClass();
        serializableNode1.data = wildcardClass11;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        java.lang.Class<?> wildcardClass16 = serializableNode15.getClass();
        serializableNode13.data = wildcardClass16;
        int int18 = serializableNode13.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int21 = serializableNode20.rank;
        int int22 = serializableNode20.rank;
        java.io.Serializable serializable23 = serializableNode20.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable26 = serializableNode25.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = serializableNode25.parent;
        serializableNode20.parent = serializableNode25;
        int int29 = serializableNode20.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int32 = serializableNode31.rank;
        int int33 = serializableNode31.rank;
        java.io.Serializable serializable34 = serializableNode31.data;
        serializableNode31.rank = (byte) 1;
        serializableNode31.data = 10.0d;
        java.lang.Class<?> wildcardClass39 = serializableNode31.getClass();
        serializableNode20.data = wildcardClass39;
        serializableNode13.data = wildcardClass39;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode42 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass39);
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + serializable5 + "' != '" + 10L + "'", serializable5, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertEquals("'" + serializable26 + "' != '" + 10L + "'", serializable26, 10L);
        org.junit.Assert.assertNotNull(serializableNode27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertEquals("'" + serializable34 + "' != '" + 10L + "'", serializable34, 10L);
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test0769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0769");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        int int7 = serializableNode5.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode8.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable12 = serializableNode11.data;
        int int13 = serializableNode11.rank;
        serializableNode11.rank = 'a';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int18 = serializableNode17.rank;
        int int19 = serializableNode17.rank;
        java.io.Serializable serializable20 = serializableNode17.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode17.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = serializableNode17.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable25 = serializableNode24.data;
        int int26 = serializableNode24.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode24.parent = serializableNode28;
        serializableNode22.parent = serializableNode24;
        int int31 = serializableNode22.rank;
        serializableNode11.parent = serializableNode22;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int35 = serializableNode34.rank;
        int int36 = serializableNode34.rank;
        java.io.Serializable serializable37 = serializableNode34.data;
        serializableNode22.parent = serializableNode34;
        java.lang.Class<?> wildcardClass39 = serializableNode34.getClass();
        serializableNode8.data = wildcardClass39;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode42 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable43 = serializableNode42.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode44 = serializableNode42.parent;
        java.io.Serializable serializable45 = serializableNode44.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode47 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable48 = serializableNode47.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode49 = serializableNode47.parent;
        java.io.Serializable serializable50 = serializableNode49.data;
        serializableNode49.rank = (short) -1;
        int int53 = serializableNode49.rank;
        serializableNode44.parent = serializableNode49;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode56 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int57 = serializableNode56.rank;
        int int58 = serializableNode56.rank;
        java.io.Serializable serializable59 = serializableNode56.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode60 = serializableNode56.parent;
        java.io.Serializable serializable61 = serializableNode60.data;
        int int62 = serializableNode60.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode63 = serializableNode60.parent;
        int int64 = serializableNode60.rank;
        serializableNode44.parent = serializableNode60;
        serializableNode8.parent = serializableNode44;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertEquals("'" + serializable20 + "' != '" + 10L + "'", serializable20, 10L);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertNotNull(serializableNode22);
        org.junit.Assert.assertEquals("'" + serializable25 + "' != '" + 10L + "'", serializable25, 10L);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertEquals("'" + serializable37 + "' != '" + 10L + "'", serializable37, 10L);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertEquals("'" + serializable43 + "' != '" + 10L + "'", serializable43, 10L);
        org.junit.Assert.assertNotNull(serializableNode44);
        org.junit.Assert.assertEquals("'" + serializable45 + "' != '" + 10L + "'", serializable45, 10L);
        org.junit.Assert.assertEquals("'" + serializable48 + "' != '" + 10L + "'", serializable48, 10L);
        org.junit.Assert.assertNotNull(serializableNode49);
        org.junit.Assert.assertEquals("'" + serializable50 + "' != '" + 10L + "'", serializable50, 10L);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertEquals("'" + serializable59 + "' != '" + 10L + "'", serializable59, 10L);
        org.junit.Assert.assertNotNull(serializableNode60);
        org.junit.Assert.assertEquals("'" + serializable61 + "' != '" + 10L + "'", serializable61, 10L);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(serializableNode63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
    }

    @Test
    public void test0770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0770");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        java.io.Serializable serializable4 = serializableNode3.data;
        serializableNode3.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode3.parent;
        int int8 = serializableNode7.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode7.parent;
        java.io.Serializable serializable10 = serializableNode9.data;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertEquals("'" + serializable10 + "' != '" + 10L + "'", serializable10, 10L);
    }

    @Test
    public void test0771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0771");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        serializableNode1.data = (byte) 1;
        serializableNode1.rank = (short) 1;
        java.io.Serializable serializable9 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode1.parent;
        serializableNode1.rank = 52;
        int int13 = serializableNode1.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + (byte) 1 + "'", serializable9, (byte) 1);
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
    }

    @Test
    public void test0772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0772");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        java.io.Serializable serializable4 = serializableNode3.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode3.parent;
        int int6 = serializableNode3.rank;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    }

    @Test
    public void test0773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0773");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode1.parent = serializableNode5;
        java.lang.Class<?> wildcardClass7 = serializableNode5.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass7);
        serializableNode8.data = 10;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int13 = serializableNode12.rank;
        int int14 = serializableNode12.rank;
        serializableNode12.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode12.parent;
        serializableNode17.rank = (byte) 0;
        java.lang.Class<?> wildcardClass20 = serializableNode17.getClass();
        serializableNode8.data = wildcardClass20;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test0774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0774");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        int int5 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int8 = serializableNode7.rank;
        int int9 = serializableNode7.rank;
        java.io.Serializable serializable10 = serializableNode7.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = serializableNode7.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode7.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int15 = serializableNode14.rank;
        int int16 = serializableNode14.rank;
        java.io.Serializable serializable17 = serializableNode14.data;
        serializableNode14.rank = (byte) 1;
        serializableNode14.data = 10.0d;
        serializableNode12.parent = serializableNode14;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode12.parent;
        int int24 = serializableNode12.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int27 = serializableNode26.rank;
        int int28 = serializableNode26.rank;
        java.io.Serializable serializable29 = serializableNode26.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = serializableNode26.parent;
        java.io.Serializable serializable31 = serializableNode30.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = serializableNode30.parent;
        java.io.Serializable serializable33 = serializableNode30.data;
        java.io.Serializable serializable34 = serializableNode30.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode36 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int37 = serializableNode36.rank;
        int int38 = serializableNode36.rank;
        java.io.Serializable serializable39 = serializableNode36.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode40 = serializableNode36.parent;
        java.lang.Class<?> wildcardClass41 = serializableNode40.getClass();
        serializableNode30.data = wildcardClass41;
        java.io.Serializable serializable43 = serializableNode30.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode44 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>(serializable43);
        serializableNode12.parent = serializableNode44;
        serializableNode1.parent = serializableNode12;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertEquals("'" + serializable10 + "' != '" + 10L + "'", serializable10, 10L);
        org.junit.Assert.assertNotNull(serializableNode11);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertEquals("'" + serializable17 + "' != '" + 10L + "'", serializable17, 10L);
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertEquals("'" + serializable29 + "' != '" + 10L + "'", serializable29, 10L);
        org.junit.Assert.assertNotNull(serializableNode30);
        org.junit.Assert.assertEquals("'" + serializable31 + "' != '" + 10L + "'", serializable31, 10L);
        org.junit.Assert.assertNotNull(serializableNode32);
        org.junit.Assert.assertEquals("'" + serializable33 + "' != '" + 10L + "'", serializable33, 10L);
        org.junit.Assert.assertEquals("'" + serializable34 + "' != '" + 10L + "'", serializable34, 10L);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertEquals("'" + serializable39 + "' != '" + 10L + "'", serializable39, 10L);
        org.junit.Assert.assertNotNull(serializableNode40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(serializable43);
    }

    @Test
    public void test0775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0775");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode1.parent = serializableNode5;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int9 = serializableNode8.rank;
        int int10 = serializableNode8.rank;
        java.io.Serializable serializable11 = serializableNode8.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode8.parent;
        java.io.Serializable serializable13 = serializableNode12.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = serializableNode12.parent;
        java.io.Serializable serializable15 = serializableNode12.data;
        java.io.Serializable serializable16 = serializableNode12.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int19 = serializableNode18.rank;
        int int20 = serializableNode18.rank;
        java.io.Serializable serializable21 = serializableNode18.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = serializableNode18.parent;
        java.lang.Class<?> wildcardClass23 = serializableNode22.getClass();
        serializableNode12.data = wildcardClass23;
        serializableNode1.data = wildcardClass23;
        serializableNode1.rank = 0;
        int int28 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable31 = serializableNode30.data;
        int int32 = serializableNode30.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int35 = serializableNode34.rank;
        int int36 = serializableNode34.rank;
        java.io.Serializable serializable37 = serializableNode34.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode39 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable40 = serializableNode39.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = serializableNode39.parent;
        serializableNode34.parent = serializableNode39;
        serializableNode34.data = true;
        serializableNode30.parent = serializableNode34;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode46 = serializableNode34.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode47 = serializableNode46.parent;
        int int48 = serializableNode47.rank;
        serializableNode1.parent = serializableNode47;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode14);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertEquals("'" + serializable21 + "' != '" + 10L + "'", serializable21, 10L);
        org.junit.Assert.assertNotNull(serializableNode22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertEquals("'" + serializable31 + "' != '" + 10L + "'", serializable31, 10L);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertEquals("'" + serializable37 + "' != '" + 10L + "'", serializable37, 10L);
        org.junit.Assert.assertEquals("'" + serializable40 + "' != '" + 10L + "'", serializable40, 10L);
        org.junit.Assert.assertNotNull(serializableNode41);
        org.junit.Assert.assertNotNull(serializableNode46);
        org.junit.Assert.assertNotNull(serializableNode47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
    }

    @Test
    public void test0776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0776");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        serializableNode1.rank = (byte) 10;
        int int9 = serializableNode1.rank;
        int int10 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int16 = serializableNode15.rank;
        int int17 = serializableNode15.rank;
        java.io.Serializable serializable18 = serializableNode15.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode15.parent;
        java.io.Serializable serializable20 = serializableNode15.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode15.parent;
        java.lang.Class<?> wildcardClass22 = serializableNode21.getClass();
        serializableNode13.data = wildcardClass22;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 10 + "'", int9 == 10);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 10 + "'", int10 == 10);
        org.junit.Assert.assertNotNull(serializableNode11);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertEquals("'" + serializable18 + "' != '" + 10L + "'", serializable18, 10L);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertEquals("'" + serializable20 + "' != '" + 10L + "'", serializable20, 10L);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test0777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0777");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode4 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int5 = serializableNode4.rank;
        int int6 = serializableNode4.rank;
        java.io.Serializable serializable7 = serializableNode4.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode4.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable11 = serializableNode10.data;
        int int12 = serializableNode10.rank;
        serializableNode10.rank = 'a';
        java.lang.Class<?> wildcardClass15 = serializableNode10.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass15);
        serializableNode4.data = wildcardClass15;
        com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>> serializableNodeNode18 = new com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>>(serializableNode4);
        serializableNode1.parent = serializableNode4;
        int int20 = serializableNode4.rank;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10.0f + "'", serializable2, 10.0f);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
    }

    @Test
    public void test0778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0778");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        serializableNode1.rank = (byte) 10;
        int int9 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (byte) 10);
        serializableNode1.parent = serializableNode11;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int15 = serializableNode14.rank;
        int int16 = serializableNode14.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int19 = serializableNode18.rank;
        int int20 = serializableNode18.rank;
        java.io.Serializable serializable21 = serializableNode18.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = serializableNode18.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode18.parent;
        java.io.Serializable serializable24 = serializableNode23.data;
        int int25 = serializableNode23.rank;
        java.io.Serializable serializable26 = serializableNode23.data;
        serializableNode14.parent = serializableNode23;
        serializableNode11.parent = serializableNode14;
        java.io.Serializable serializable29 = serializableNode14.data;
        java.io.Serializable serializable30 = serializableNode14.data;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 10 + "'", int9 == 10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertEquals("'" + serializable21 + "' != '" + 10L + "'", serializable21, 10L);
        org.junit.Assert.assertNotNull(serializableNode22);
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertEquals("'" + serializable24 + "' != '" + 10L + "'", serializable24, 10L);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertEquals("'" + serializable26 + "' != '" + 10L + "'", serializable26, 10L);
        org.junit.Assert.assertEquals("'" + serializable29 + "' != '" + 10L + "'", serializable29, 10L);
        org.junit.Assert.assertEquals("'" + serializable30 + "' != '" + 10L + "'", serializable30, 10L);
    }

    @Test
    public void test0779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0779");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        serializableNode1.rank = (byte) 1;
        serializableNode1.data = 10.0d;
        serializableNode1.rank = (byte) 100;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int15 = serializableNode14.rank;
        int int16 = serializableNode14.rank;
        serializableNode14.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode14.parent;
        java.io.Serializable serializable20 = serializableNode14.data;
        serializableNode12.parent = serializableNode14;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode11);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertEquals("'" + serializable20 + "' != '" + 10L + "'", serializable20, 10L);
    }

    @Test
    public void test0780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0780");
        java.lang.reflect.GenericDeclaration genericDeclaration0 = null;
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.GenericDeclaration> genericDeclarationNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.GenericDeclaration>(genericDeclaration0);
        java.lang.Class<?> wildcardClass2 = genericDeclarationNode1.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
    }

    @Test
    public void test0781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0781");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable8 = serializableNode7.data;
        int int9 = serializableNode7.rank;
        serializableNode7.rank = 'a';
        java.lang.Class<?> wildcardClass12 = serializableNode7.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass12);
        serializableNode1.data = wildcardClass12;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode1.parent;
        serializableNode15.data = (short) 1;
        int int18 = serializableNode15.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        serializableNode20.rank = 0;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable25 = serializableNode24.data;
        int int26 = serializableNode24.rank;
        serializableNode20.parent = serializableNode24;
        serializableNode15.parent = serializableNode24;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = serializableNode24.parent;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertEquals("'" + serializable25 + "' != '" + 10L + "'", serializable25, 10L);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(serializableNode29);
    }

    @Test
    public void test0782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0782");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        java.io.Serializable serializable4 = serializableNode3.data;
        serializableNode3.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode3.parent;
        int int8 = serializableNode7.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode7.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode9.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = serializableNode9.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable14 = serializableNode13.data;
        int int15 = serializableNode13.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode13.parent = serializableNode17;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int21 = serializableNode20.rank;
        int int22 = serializableNode20.rank;
        java.io.Serializable serializable23 = serializableNode20.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode20.parent;
        java.io.Serializable serializable25 = serializableNode24.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = serializableNode24.parent;
        java.io.Serializable serializable27 = serializableNode24.data;
        java.io.Serializable serializable28 = serializableNode24.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int31 = serializableNode30.rank;
        int int32 = serializableNode30.rank;
        java.io.Serializable serializable33 = serializableNode30.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = serializableNode30.parent;
        java.lang.Class<?> wildcardClass35 = serializableNode34.getClass();
        serializableNode24.data = wildcardClass35;
        serializableNode13.data = wildcardClass35;
        serializableNode13.rank = 0;
        int int40 = serializableNode13.rank;
        java.lang.Class<?> wildcardClass41 = serializableNode13.getClass();
        serializableNode11.data = wildcardClass41;
        int int43 = serializableNode11.rank;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertNotNull(serializableNode11);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertEquals("'" + serializable25 + "' != '" + 10L + "'", serializable25, 10L);
        org.junit.Assert.assertNotNull(serializableNode26);
        org.junit.Assert.assertEquals("'" + serializable27 + "' != '" + 10L + "'", serializable27, 10L);
        org.junit.Assert.assertEquals("'" + serializable28 + "' != '" + 10L + "'", serializable28, 10L);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertEquals("'" + serializable33 + "' != '" + 10L + "'", serializable33, 10L);
        org.junit.Assert.assertNotNull(serializableNode34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
    }

    @Test
    public void test0783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0783");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable8 = serializableNode7.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode7.parent;
        serializableNode5.parent = serializableNode9;
        int int11 = serializableNode9.rank;
        serializableNode9.data = (-1);
        int int14 = serializableNode9.rank;
        serializableNode9.data = 97;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int19 = serializableNode18.rank;
        int int20 = serializableNode18.rank;
        java.io.Serializable serializable21 = serializableNode18.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable24 = serializableNode23.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = serializableNode23.parent;
        serializableNode18.parent = serializableNode23;
        serializableNode18.data = true;
        serializableNode18.rank = 0;
        int int31 = serializableNode18.rank;
        int int32 = serializableNode18.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable35 = serializableNode34.data;
        int int36 = serializableNode34.rank;
        int int37 = serializableNode34.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode38 = serializableNode34.parent;
        serializableNode18.parent = serializableNode38;
        serializableNode9.parent = serializableNode18;
        serializableNode9.rank = 'a';
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertEquals("'" + serializable21 + "' != '" + 10L + "'", serializable21, 10L);
        org.junit.Assert.assertEquals("'" + serializable24 + "' != '" + 10L + "'", serializable24, 10L);
        org.junit.Assert.assertNotNull(serializableNode25);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertEquals("'" + serializable35 + "' != '" + 10L + "'", serializable35, 10L);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(serializableNode38);
    }

    @Test
    public void test0784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0784");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = (short) -1;
        java.io.Serializable serializable6 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable9 = serializableNode8.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode8.parent;
        java.io.Serializable serializable11 = serializableNode10.data;
        serializableNode10.rank = (short) -1;
        java.lang.Class<?> wildcardClass14 = serializableNode10.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass14);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass14);
        serializableNode1.parent = serializableNode16;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode1.parent;
        serializableNode18.rank = (short) 100;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(serializableNode18);
    }

    @Test
    public void test0785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0785");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable8 = serializableNode7.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode7.parent;
        serializableNode5.parent = serializableNode9;
        int int11 = serializableNode9.rank;
        serializableNode9.data = (-1);
        int int14 = serializableNode9.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int17 = serializableNode16.rank;
        int int18 = serializableNode16.rank;
        java.io.Serializable serializable19 = serializableNode16.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = serializableNode16.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode16.parent;
        serializableNode16.rank = (byte) 10;
        serializableNode16.data = 10L;
        serializableNode9.parent = serializableNode16;
        serializableNode9.rank = (short) 100;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertEquals("'" + serializable19 + "' != '" + 10L + "'", serializable19, 10L);
        org.junit.Assert.assertNotNull(serializableNode20);
        org.junit.Assert.assertNotNull(serializableNode21);
    }

    @Test
    public void test0786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0786");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode2 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode4 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 100L);
        serializableNode4.parent = serializableNode6;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int10 = serializableNode9.rank;
        int int11 = serializableNode9.rank;
        java.io.Serializable serializable12 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode9.parent;
        java.io.Serializable serializable14 = serializableNode13.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode13.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode13.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable19 = serializableNode18.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = serializableNode18.parent;
        java.io.Serializable serializable21 = serializableNode20.data;
        serializableNode20.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode20.parent;
        serializableNode16.parent = serializableNode24;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable28 = serializableNode27.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = serializableNode27.parent;
        int int30 = serializableNode27.rank;
        java.io.Serializable serializable31 = serializableNode27.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = serializableNode33.parent;
        serializableNode33.rank = (byte) 100;
        java.lang.Class<?> wildcardClass37 = serializableNode33.getClass();
        serializableNode27.data = wildcardClass37;
        serializableNode24.parent = serializableNode27;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable42 = serializableNode41.data;
        int int43 = serializableNode41.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode45 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int46 = serializableNode45.rank;
        int int47 = serializableNode45.rank;
        java.io.Serializable serializable48 = serializableNode45.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode50 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable51 = serializableNode50.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode52 = serializableNode50.parent;
        serializableNode45.parent = serializableNode50;
        serializableNode45.data = true;
        serializableNode41.parent = serializableNode45;
        serializableNode27.parent = serializableNode45;
        serializableNode4.parent = serializableNode27;
        int int59 = serializableNode4.rank;
        java.io.Serializable serializable60 = serializableNode4.data;
        org.junit.Assert.assertNotNull(serializableNode2);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertNotNull(serializableNode4);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertEquals("'" + serializable19 + "' != '" + 10L + "'", serializable19, 10L);
        org.junit.Assert.assertNotNull(serializableNode20);
        org.junit.Assert.assertEquals("'" + serializable21 + "' != '" + 10L + "'", serializable21, 10L);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertEquals("'" + serializable28 + "' != '" + 10L + "'", serializable28, 10L);
        org.junit.Assert.assertNotNull(serializableNode29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertEquals("'" + serializable31 + "' != '" + 10L + "'", serializable31, 10L);
        org.junit.Assert.assertNotNull(serializableNode34);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertEquals("'" + serializable42 + "' != '" + 10L + "'", serializable42, 10L);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertEquals("'" + serializable48 + "' != '" + 10L + "'", serializable48, 10L);
        org.junit.Assert.assertEquals("'" + serializable51 + "' != '" + 10L + "'", serializable51, 10L);
        org.junit.Assert.assertNotNull(serializableNode52);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertEquals("'" + serializable60 + "' != '" + 10L + "'", serializable60, 10L);
    }

    @Test
    public void test0787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0787");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable8 = serializableNode7.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode7.parent;
        serializableNode5.parent = serializableNode9;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int13 = serializableNode12.rank;
        int int14 = serializableNode12.rank;
        java.io.Serializable serializable15 = serializableNode12.data;
        serializableNode12.rank = (byte) 1;
        java.lang.Class<?> wildcardClass18 = serializableNode12.getClass();
        serializableNode5.data = wildcardClass18;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int25 = serializableNode24.rank;
        int int26 = serializableNode24.rank;
        serializableNode24.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = serializableNode24.parent;
        java.lang.Class<?> wildcardClass30 = serializableNode29.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.invoke.TypeDescriptor> typeDescriptorNode31 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.invoke.TypeDescriptor>((java.lang.invoke.TypeDescriptor) wildcardClass30);
        serializableNode22.data = wildcardClass30;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass30);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = serializableNode33.parent;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(serializableNode20);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertNotNull(serializableNode22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(serializableNode29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(serializableNode34);
    }

    @Test
    public void test0788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0788");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode2 = serializableNode1.parent;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int6 = serializableNode5.rank;
        int int7 = serializableNode5.rank;
        java.io.Serializable serializable8 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode5.parent;
        java.io.Serializable serializable10 = serializableNode9.data;
        int int11 = serializableNode9.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode9.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int15 = serializableNode14.rank;
        int int16 = serializableNode14.rank;
        serializableNode14.rank = (short) -1;
        serializableNode14.rank = (short) -1;
        java.io.Serializable serializable21 = serializableNode14.data;
        int int22 = serializableNode14.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode14.parent;
        serializableNode9.parent = serializableNode14;
        java.io.Serializable serializable25 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int28 = serializableNode27.rank;
        int int29 = serializableNode27.rank;
        java.io.Serializable serializable30 = serializableNode27.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = serializableNode27.parent;
        java.lang.Class<?> wildcardClass32 = serializableNode27.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.AnnotatedElement> annotatedElementNode33 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.AnnotatedElement>((java.lang.reflect.AnnotatedElement) wildcardClass32);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass32);
        serializableNode34.rank = '4';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode38 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) "");
        java.lang.Class<?> wildcardClass39 = serializableNode38.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.GenericDeclaration> genericDeclarationNode40 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.GenericDeclaration>((java.lang.reflect.GenericDeclaration) wildcardClass39);
        serializableNode34.data = wildcardClass39;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode43 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int44 = serializableNode43.rank;
        int int45 = serializableNode43.rank;
        java.io.Serializable serializable46 = serializableNode43.data;
        serializableNode43.rank = (byte) 1;
        int int49 = serializableNode43.rank;
        int int50 = serializableNode43.rank;
        serializableNode34.parent = serializableNode43;
        serializableNode9.parent = serializableNode34;
        serializableNode1.parent = serializableNode9;
        org.junit.Assert.assertNotNull(serializableNode2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertEquals("'" + serializable10 + "' != '" + 10L + "'", serializable10, 10L);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertEquals("'" + serializable21 + "' != '" + 10L + "'", serializable21, 10L);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertEquals("'" + serializable25 + "' != '" + 10L + "'", serializable25, 10L);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertEquals("'" + serializable30 + "' != '" + 10L + "'", serializable30, 10L);
        org.junit.Assert.assertNotNull(serializableNode31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertEquals("'" + serializable46 + "' != '" + 10L + "'", serializable46, 10L);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
    }

    @Test
    public void test0789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0789");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>> serializableNodeNode6 = new com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>>(serializableNode1);
        java.io.Serializable serializable7 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable10 = serializableNode9.data;
        int int11 = serializableNode9.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode9.parent = serializableNode13;
        serializableNode9.data = '#';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int19 = serializableNode18.rank;
        int int20 = serializableNode18.rank;
        serializableNode18.data = (short) 100;
        serializableNode9.parent = serializableNode18;
        java.io.Serializable serializable24 = serializableNode18.data;
        int int25 = serializableNode18.rank;
        serializableNode18.rank = 10;
        int int28 = serializableNode18.rank;
        serializableNode18.rank = (byte) 10;
        serializableNode1.parent = serializableNode18;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertEquals("'" + serializable10 + "' != '" + 10L + "'", serializable10, 10L);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertEquals("'" + serializable24 + "' != '" + (short) 100 + "'", serializable24, (short) 100);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 10 + "'", int28 == 10);
    }

    @Test
    public void test0790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0790");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.lang.Class<?> wildcardClass6 = serializableNode1.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.AnnotatedElement> annotatedElementNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.AnnotatedElement>((java.lang.reflect.AnnotatedElement) wildcardClass6);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass6);
        serializableNode8.rank = '4';
        java.lang.Class<?> wildcardClass11 = serializableNode8.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0791");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        int int7 = serializableNode5.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode8.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode9.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable13 = serializableNode12.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = serializableNode12.parent;
        int int15 = serializableNode12.rank;
        java.io.Serializable serializable16 = serializableNode12.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode18.parent;
        serializableNode18.rank = (byte) 100;
        java.lang.Class<?> wildcardClass22 = serializableNode18.getClass();
        serializableNode12.data = wildcardClass22;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode12.parent;
        java.io.Serializable serializable25 = serializableNode12.data;
        serializableNode10.data = serializable25;
        java.io.Serializable serializable27 = serializableNode10.data;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertNotNull(serializable25);
        org.junit.Assert.assertNotNull(serializable27);
    }

    @Test
    public void test0792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0792");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        int int4 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable7 = serializableNode6.data;
        int int8 = serializableNode6.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode6.parent = serializableNode10;
        serializableNode10.data = 0.0d;
        serializableNode1.parent = serializableNode10;
        int int15 = serializableNode10.rank;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
    }

    @Test
    public void test0793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0793");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable11 = serializableNode10.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode10.parent;
        java.io.Serializable serializable13 = serializableNode12.data;
        serializableNode12.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode12.parent;
        serializableNode8.parent = serializableNode16;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode16.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode18.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (byte) 10);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int24 = serializableNode23.rank;
        int int25 = serializableNode23.rank;
        java.io.Serializable serializable26 = serializableNode23.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = serializableNode23.parent;
        java.io.Serializable serializable28 = serializableNode27.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = serializableNode27.parent;
        java.io.Serializable serializable30 = serializableNode27.data;
        java.io.Serializable serializable31 = serializableNode27.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int34 = serializableNode33.rank;
        int int35 = serializableNode33.rank;
        java.io.Serializable serializable36 = serializableNode33.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = serializableNode33.parent;
        java.lang.Class<?> wildcardClass38 = serializableNode37.getClass();
        serializableNode27.data = wildcardClass38;
        serializableNode21.data = wildcardClass38;
        serializableNode19.parent = serializableNode21;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode42 = serializableNode21.parent;
        serializableNode21.rank = 0;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertEquals("'" + serializable26 + "' != '" + 10L + "'", serializable26, 10L);
        org.junit.Assert.assertNotNull(serializableNode27);
        org.junit.Assert.assertEquals("'" + serializable28 + "' != '" + 10L + "'", serializable28, 10L);
        org.junit.Assert.assertNotNull(serializableNode29);
        org.junit.Assert.assertEquals("'" + serializable30 + "' != '" + 10L + "'", serializable30, 10L);
        org.junit.Assert.assertEquals("'" + serializable31 + "' != '" + 10L + "'", serializable31, 10L);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertEquals("'" + serializable36 + "' != '" + 10L + "'", serializable36, 10L);
        org.junit.Assert.assertNotNull(serializableNode37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(serializableNode42);
    }

    @Test
    public void test0794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0794");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        serializableNode1.rank = (byte) 10;
        int int9 = serializableNode1.rank;
        int int10 = serializableNode1.rank;
        int int11 = serializableNode1.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 10 + "'", int9 == 10);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 10 + "'", int10 == 10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 10 + "'", int11 == 10);
    }

    @Test
    public void test0795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0795");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        java.io.Serializable serializable7 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int10 = serializableNode9.rank;
        int int11 = serializableNode9.rank;
        java.io.Serializable serializable12 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode9.parent;
        java.io.Serializable serializable14 = serializableNode13.data;
        int int15 = serializableNode13.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode13.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode16.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode17.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode17.parent;
        serializableNode6.parent = serializableNode19;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int23 = serializableNode22.rank;
        int int24 = serializableNode22.rank;
        java.io.Serializable serializable25 = serializableNode22.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = serializableNode22.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable29 = serializableNode28.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = serializableNode28.parent;
        serializableNode26.parent = serializableNode30;
        int int32 = serializableNode30.rank;
        serializableNode30.data = (-1);
        int int35 = serializableNode30.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int38 = serializableNode37.rank;
        int int39 = serializableNode37.rank;
        java.io.Serializable serializable40 = serializableNode37.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = serializableNode37.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode42 = serializableNode37.parent;
        serializableNode37.rank = (byte) 10;
        serializableNode37.data = 10L;
        serializableNode30.parent = serializableNode37;
        serializableNode19.parent = serializableNode37;
        java.io.Serializable serializable49 = serializableNode37.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode51 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode52 = serializableNode51.parent;
        serializableNode52.rank = (byte) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode56 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int57 = serializableNode56.rank;
        int int58 = serializableNode56.rank;
        java.io.Serializable serializable59 = serializableNode56.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode61 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable62 = serializableNode61.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode63 = serializableNode61.parent;
        serializableNode56.parent = serializableNode61;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode65 = serializableNode61.parent;
        serializableNode52.parent = serializableNode65;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode67 = serializableNode52.parent;
        serializableNode52.rank = 0;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode70 = serializableNode52.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode72 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable73 = serializableNode72.data;
        int int74 = serializableNode72.rank;
        serializableNode72.rank = 'a';
        java.lang.Class<?> wildcardClass77 = serializableNode72.getClass();
        serializableNode52.data = wildcardClass77;
        serializableNode37.data = wildcardClass77;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode81 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int82 = serializableNode81.rank;
        int int83 = serializableNode81.rank;
        java.io.Serializable serializable84 = serializableNode81.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode85 = serializableNode81.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode86 = serializableNode81.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode88 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable89 = serializableNode88.data;
        int int90 = serializableNode88.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode92 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode88.parent = serializableNode92;
        serializableNode86.parent = serializableNode88;
        int int95 = serializableNode86.rank;
        int int96 = serializableNode86.rank;
        java.lang.Class<?> wildcardClass97 = serializableNode86.getClass();
        serializableNode37.data = wildcardClass97;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode99 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass97);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertEquals("'" + serializable25 + "' != '" + 10L + "'", serializable25, 10L);
        org.junit.Assert.assertNotNull(serializableNode26);
        org.junit.Assert.assertEquals("'" + serializable29 + "' != '" + 10L + "'", serializable29, 10L);
        org.junit.Assert.assertNotNull(serializableNode30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertEquals("'" + serializable40 + "' != '" + 10L + "'", serializable40, 10L);
        org.junit.Assert.assertNotNull(serializableNode41);
        org.junit.Assert.assertNotNull(serializableNode42);
        org.junit.Assert.assertEquals("'" + serializable49 + "' != '" + 10L + "'", serializable49, 10L);
        org.junit.Assert.assertNotNull(serializableNode52);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertEquals("'" + serializable59 + "' != '" + 10L + "'", serializable59, 10L);
        org.junit.Assert.assertEquals("'" + serializable62 + "' != '" + 10L + "'", serializable62, 10L);
        org.junit.Assert.assertNotNull(serializableNode63);
        org.junit.Assert.assertNotNull(serializableNode65);
        org.junit.Assert.assertNotNull(serializableNode67);
        org.junit.Assert.assertNotNull(serializableNode70);
        org.junit.Assert.assertEquals("'" + serializable73 + "' != '" + 10L + "'", serializable73, 10L);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
        org.junit.Assert.assertEquals("'" + serializable84 + "' != '" + 10L + "'", serializable84, 10L);
        org.junit.Assert.assertNotNull(serializableNode85);
        org.junit.Assert.assertNotNull(serializableNode86);
        org.junit.Assert.assertEquals("'" + serializable89 + "' != '" + 10L + "'", serializable89, 10L);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 0 + "'", int90 == 0);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 0 + "'", int95 == 0);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + 0 + "'", int96 == 0);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test0796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0796");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        int int4 = serializableNode1.rank;
        java.io.Serializable serializable5 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode7.parent;
        serializableNode7.rank = (byte) 100;
        java.lang.Class<?> wildcardClass11 = serializableNode7.getClass();
        serializableNode1.data = wildcardClass11;
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.GenericDeclaration> genericDeclarationNode13 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.GenericDeclaration>((java.lang.reflect.GenericDeclaration) wildcardClass11);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass11);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode16.parent;
        serializableNode17.rank = (byte) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int22 = serializableNode21.rank;
        int int23 = serializableNode21.rank;
        java.io.Serializable serializable24 = serializableNode21.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable27 = serializableNode26.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = serializableNode26.parent;
        serializableNode21.parent = serializableNode26;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = serializableNode26.parent;
        serializableNode17.parent = serializableNode30;
        serializableNode14.parent = serializableNode17;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int35 = serializableNode34.rank;
        int int36 = serializableNode34.rank;
        serializableNode34.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>> serializableNodeNode39 = new com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>>(serializableNode34);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int42 = serializableNode41.rank;
        int int43 = serializableNode41.rank;
        java.io.Serializable serializable44 = serializableNode41.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode45 = serializableNode41.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode47 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable48 = serializableNode47.data;
        int int49 = serializableNode47.rank;
        serializableNode47.rank = 'a';
        java.lang.Class<?> wildcardClass52 = serializableNode47.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode53 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass52);
        serializableNode41.data = wildcardClass52;
        serializableNode34.data = wildcardClass52;
        serializableNode17.data = wildcardClass52;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode57 = serializableNode17.parent;
        int int58 = serializableNode17.rank;
        serializableNode17.rank = (short) 100;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode62 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable63 = serializableNode62.data;
        int int64 = serializableNode62.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode66 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int67 = serializableNode66.rank;
        int int68 = serializableNode66.rank;
        java.io.Serializable serializable69 = serializableNode66.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode71 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable72 = serializableNode71.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode73 = serializableNode71.parent;
        serializableNode66.parent = serializableNode71;
        serializableNode66.data = true;
        serializableNode62.parent = serializableNode66;
        serializableNode62.rank = '4';
        serializableNode62.rank = (byte) 10;
        serializableNode17.parent = serializableNode62;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode83 = serializableNode17.parent;
        java.lang.Class<?> wildcardClass84 = serializableNode83.getClass();
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + serializable5 + "' != '" + 10L + "'", serializable5, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertEquals("'" + serializable24 + "' != '" + 10L + "'", serializable24, 10L);
        org.junit.Assert.assertEquals("'" + serializable27 + "' != '" + 10L + "'", serializable27, 10L);
        org.junit.Assert.assertNotNull(serializableNode28);
        org.junit.Assert.assertNotNull(serializableNode30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertEquals("'" + serializable44 + "' != '" + 10L + "'", serializable44, 10L);
        org.junit.Assert.assertNotNull(serializableNode45);
        org.junit.Assert.assertEquals("'" + serializable48 + "' != '" + 10L + "'", serializable48, 10L);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(serializableNode57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertEquals("'" + serializable63 + "' != '" + 10L + "'", serializable63, 10L);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertEquals("'" + serializable69 + "' != '" + 10L + "'", serializable69, 10L);
        org.junit.Assert.assertEquals("'" + serializable72 + "' != '" + 10L + "'", serializable72, 10L);
        org.junit.Assert.assertNotNull(serializableNode73);
        org.junit.Assert.assertNotNull(serializableNode83);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test0797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0797");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode8.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode8.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable13 = serializableNode12.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = serializableNode12.parent;
        int int15 = serializableNode12.rank;
        java.io.Serializable serializable16 = serializableNode12.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode18.parent;
        serializableNode18.rank = (byte) 100;
        java.lang.Class<?> wildcardClass22 = serializableNode18.getClass();
        serializableNode12.data = wildcardClass22;
        serializableNode8.data = wildcardClass22;
        serializableNode1.data = wildcardClass22;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable29 = serializableNode28.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = serializableNode28.parent;
        int int31 = serializableNode28.rank;
        java.io.Serializable serializable32 = serializableNode28.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode35 = serializableNode34.parent;
        serializableNode34.rank = (byte) 100;
        java.lang.Class<?> wildcardClass38 = serializableNode34.getClass();
        serializableNode28.data = wildcardClass38;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode40 = serializableNode28.parent;
        java.io.Serializable serializable41 = serializableNode28.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode42 = serializableNode28.parent;
        serializableNode26.parent = serializableNode42;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(serializableNode26);
        org.junit.Assert.assertEquals("'" + serializable29 + "' != '" + 10L + "'", serializable29, 10L);
        org.junit.Assert.assertNotNull(serializableNode30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertEquals("'" + serializable32 + "' != '" + 10L + "'", serializable32, 10L);
        org.junit.Assert.assertNotNull(serializableNode35);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(serializableNode40);
        org.junit.Assert.assertNotNull(serializable41);
        org.junit.Assert.assertNotNull(serializableNode42);
    }

    @Test
    public void test0798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0798");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode1.parent = serializableNode5;
        serializableNode1.data = '#';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int11 = serializableNode10.rank;
        int int12 = serializableNode10.rank;
        serializableNode10.data = (short) 100;
        serializableNode1.parent = serializableNode10;
        java.io.Serializable serializable16 = serializableNode10.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (short) -1);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode18.parent;
        serializableNode10.parent = serializableNode19;
        serializableNode19.rank = (byte) -1;
        serializableNode19.rank = 52;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int27 = serializableNode26.rank;
        int int28 = serializableNode26.rank;
        java.io.Serializable serializable29 = serializableNode26.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = serializableNode26.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable33 = serializableNode32.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = serializableNode32.parent;
        serializableNode30.parent = serializableNode34;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int38 = serializableNode37.rank;
        int int39 = serializableNode37.rank;
        java.io.Serializable serializable40 = serializableNode37.data;
        serializableNode37.rank = (byte) 1;
        java.lang.Class<?> wildcardClass43 = serializableNode37.getClass();
        serializableNode30.data = wildcardClass43;
        java.lang.Class<?> wildcardClass45 = serializableNode30.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode46 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass45);
        serializableNode19.data = wildcardClass45;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + (short) 100 + "'", serializable16, (short) 100);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertEquals("'" + serializable29 + "' != '" + 10L + "'", serializable29, 10L);
        org.junit.Assert.assertNotNull(serializableNode30);
        org.junit.Assert.assertEquals("'" + serializable33 + "' != '" + 10L + "'", serializable33, 10L);
        org.junit.Assert.assertNotNull(serializableNode34);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertEquals("'" + serializable40 + "' != '" + 10L + "'", serializable40, 10L);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test0799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0799");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int6 = serializableNode5.rank;
        int int7 = serializableNode5.rank;
        java.io.Serializable serializable8 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode5.parent;
        java.io.Serializable serializable10 = serializableNode9.data;
        int int11 = serializableNode9.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode9.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode12.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int16 = serializableNode15.rank;
        int int17 = serializableNode15.rank;
        java.io.Serializable serializable18 = serializableNode15.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode15.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable22 = serializableNode21.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode21.parent;
        serializableNode19.parent = serializableNode23;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int27 = serializableNode26.rank;
        int int28 = serializableNode26.rank;
        java.io.Serializable serializable29 = serializableNode26.data;
        serializableNode19.parent = serializableNode26;
        int int31 = serializableNode19.rank;
        java.io.Serializable serializable32 = serializableNode19.data;
        serializableNode13.parent = serializableNode19;
        serializableNode1.parent = serializableNode13;
        serializableNode13.rank = '#';
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertEquals("'" + serializable10 + "' != '" + 10L + "'", serializable10, 10L);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertEquals("'" + serializable18 + "' != '" + 10L + "'", serializable18, 10L);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertEquals("'" + serializable22 + "' != '" + 10L + "'", serializable22, 10L);
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertEquals("'" + serializable29 + "' != '" + 10L + "'", serializable29, 10L);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertEquals("'" + serializable32 + "' != '" + 10L + "'", serializable32, 10L);
    }

    @Test
    public void test0800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0800");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = (short) -1;
        serializableNode1.rank = (short) -1;
        java.io.Serializable serializable8 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int11 = serializableNode10.rank;
        int int12 = serializableNode10.rank;
        serializableNode10.rank = (short) -1;
        serializableNode10.rank = (short) -1;
        java.io.Serializable serializable17 = serializableNode10.data;
        serializableNode1.parent = serializableNode10;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode10.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = serializableNode19.parent;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable17 + "' != '" + 10L + "'", serializable17, 10L);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertNotNull(serializableNode20);
    }

    @Test
    public void test0801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0801");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode1.parent = serializableNode5;
        serializableNode1.data = '#';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int11 = serializableNode10.rank;
        int int12 = serializableNode10.rank;
        serializableNode10.data = (short) 100;
        serializableNode1.parent = serializableNode10;
        java.io.Serializable serializable16 = serializableNode10.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (short) -1);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode18.parent;
        serializableNode10.parent = serializableNode19;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode19.parent;
        java.lang.Class<?> wildcardClass22 = serializableNode21.getClass();
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + (short) 100 + "'", serializable16, (short) 100);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test0802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0802");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode8.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode8.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable13 = serializableNode12.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = serializableNode12.parent;
        int int15 = serializableNode12.rank;
        java.io.Serializable serializable16 = serializableNode12.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode18.parent;
        serializableNode18.rank = (byte) 100;
        java.lang.Class<?> wildcardClass22 = serializableNode18.getClass();
        serializableNode12.data = wildcardClass22;
        serializableNode8.data = wildcardClass22;
        serializableNode1.data = wildcardClass22;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.lang.Class<?> wildcardClass28 = serializableNode27.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass28);
        serializableNode1.parent = serializableNode29;
        java.io.Serializable serializable31 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int34 = serializableNode33.rank;
        int int35 = serializableNode33.rank;
        java.io.Serializable serializable36 = serializableNode33.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = serializableNode33.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode39 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable40 = serializableNode39.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = serializableNode39.parent;
        serializableNode37.parent = serializableNode41;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode44 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int45 = serializableNode44.rank;
        int int46 = serializableNode44.rank;
        java.io.Serializable serializable47 = serializableNode44.data;
        serializableNode44.rank = (byte) 1;
        java.lang.Class<?> wildcardClass50 = serializableNode44.getClass();
        serializableNode37.data = wildcardClass50;
        java.io.Serializable serializable52 = serializableNode37.data;
        java.io.Serializable serializable53 = serializableNode37.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode55 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int56 = serializableNode55.rank;
        int int57 = serializableNode55.rank;
        java.io.Serializable serializable58 = serializableNode55.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode59 = serializableNode55.parent;
        java.io.Serializable serializable60 = serializableNode59.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode61 = serializableNode59.parent;
        java.io.Serializable serializable62 = serializableNode59.data;
        java.io.Serializable serializable63 = serializableNode59.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode65 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int66 = serializableNode65.rank;
        int int67 = serializableNode65.rank;
        java.io.Serializable serializable68 = serializableNode65.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode69 = serializableNode65.parent;
        java.lang.Class<?> wildcardClass70 = serializableNode69.getClass();
        serializableNode59.data = wildcardClass70;
        java.io.Serializable serializable72 = serializableNode59.data;
        serializableNode37.data = serializable72;
        serializableNode1.parent = serializableNode37;
        java.lang.Class<?> wildcardClass75 = serializableNode1.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(serializable31);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertEquals("'" + serializable36 + "' != '" + 10L + "'", serializable36, 10L);
        org.junit.Assert.assertNotNull(serializableNode37);
        org.junit.Assert.assertEquals("'" + serializable40 + "' != '" + 10L + "'", serializable40, 10L);
        org.junit.Assert.assertNotNull(serializableNode41);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertEquals("'" + serializable47 + "' != '" + 10L + "'", serializable47, 10L);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(serializable52);
        org.junit.Assert.assertNotNull(serializable53);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertEquals("'" + serializable58 + "' != '" + 10L + "'", serializable58, 10L);
        org.junit.Assert.assertNotNull(serializableNode59);
        org.junit.Assert.assertEquals("'" + serializable60 + "' != '" + 10L + "'", serializable60, 10L);
        org.junit.Assert.assertNotNull(serializableNode61);
        org.junit.Assert.assertEquals("'" + serializable62 + "' != '" + 10L + "'", serializable62, 10L);
        org.junit.Assert.assertEquals("'" + serializable63 + "' != '" + 10L + "'", serializable63, 10L);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertEquals("'" + serializable68 + "' != '" + 10L + "'", serializable68, 10L);
        org.junit.Assert.assertNotNull(serializableNode69);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(serializable72);
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test0803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0803");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        serializableNode1.rank = (short) 10;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode1.parent;
        serializableNode1.rank = (-1);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = serializableNode1.parent;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(serializableNode11);
    }

    @Test
    public void test0804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0804");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        int int7 = serializableNode5.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode8.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode9.parent;
        int int11 = serializableNode10.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int14 = serializableNode13.rank;
        int int15 = serializableNode13.rank;
        java.io.Serializable serializable16 = serializableNode13.data;
        serializableNode13.data = (byte) 1;
        serializableNode13.rank = (short) 1;
        java.io.Serializable serializable21 = serializableNode13.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = serializableNode13.parent;
        serializableNode10.parent = serializableNode22;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode22.parent;
        java.io.Serializable serializable25 = serializableNode24.data;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertEquals("'" + serializable21 + "' != '" + (byte) 1 + "'", serializable21, (byte) 1);
        org.junit.Assert.assertNotNull(serializableNode22);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertEquals("'" + serializable25 + "' != '" + (byte) 1 + "'", serializable25, (byte) 1);
    }

    @Test
    public void test0805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0805");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int9 = serializableNode8.rank;
        int int10 = serializableNode8.rank;
        java.io.Serializable serializable11 = serializableNode8.data;
        serializableNode8.rank = (byte) 1;
        serializableNode8.data = 10.0d;
        serializableNode6.parent = serializableNode8;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode6.parent;
        int int18 = serializableNode6.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable21 = serializableNode20.data;
        int int22 = serializableNode20.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode20.parent = serializableNode24;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int28 = serializableNode27.rank;
        int int29 = serializableNode27.rank;
        java.io.Serializable serializable30 = serializableNode27.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = serializableNode27.parent;
        java.io.Serializable serializable32 = serializableNode31.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = serializableNode31.parent;
        java.io.Serializable serializable34 = serializableNode31.data;
        java.io.Serializable serializable35 = serializableNode31.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int38 = serializableNode37.rank;
        int int39 = serializableNode37.rank;
        java.io.Serializable serializable40 = serializableNode37.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = serializableNode37.parent;
        java.lang.Class<?> wildcardClass42 = serializableNode41.getClass();
        serializableNode31.data = wildcardClass42;
        serializableNode20.data = wildcardClass42;
        serializableNode6.data = wildcardClass42;
        java.io.Serializable serializable46 = serializableNode6.data;
        java.io.Serializable serializable47 = serializableNode6.data;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertEquals("'" + serializable21 + "' != '" + 10L + "'", serializable21, 10L);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertEquals("'" + serializable30 + "' != '" + 10L + "'", serializable30, 10L);
        org.junit.Assert.assertNotNull(serializableNode31);
        org.junit.Assert.assertEquals("'" + serializable32 + "' != '" + 10L + "'", serializable32, 10L);
        org.junit.Assert.assertNotNull(serializableNode33);
        org.junit.Assert.assertEquals("'" + serializable34 + "' != '" + 10L + "'", serializable34, 10L);
        org.junit.Assert.assertEquals("'" + serializable35 + "' != '" + 10L + "'", serializable35, 10L);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertEquals("'" + serializable40 + "' != '" + 10L + "'", serializable40, 10L);
        org.junit.Assert.assertNotNull(serializableNode41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(serializable46);
        org.junit.Assert.assertNotNull(serializable47);
    }

    @Test
    public void test0806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0806");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        serializableNode3.rank = (short) 0;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode3.parent;
        java.io.Serializable serializable7 = serializableNode3.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = null;
        serializableNode3.parent = serializableNode8;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
    }

    @Test
    public void test0807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0807");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        serializableNode1.data = (byte) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable10 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = serializableNode9.parent;
        int int12 = serializableNode9.rank;
        java.io.Serializable serializable13 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode15.parent;
        serializableNode15.rank = (byte) 100;
        java.lang.Class<?> wildcardClass19 = serializableNode15.getClass();
        serializableNode9.data = wildcardClass19;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode9.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        java.lang.Class<?> wildcardClass24 = serializableNode23.getClass();
        serializableNode21.data = wildcardClass24;
        int int26 = serializableNode21.rank;
        serializableNode21.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = serializableNode21.parent;
        serializableNode7.parent = serializableNode29;
        java.io.Serializable serializable31 = serializableNode29.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int34 = serializableNode33.rank;
        int int35 = serializableNode33.rank;
        serializableNode33.rank = (short) -1;
        serializableNode33.rank = (short) -1;
        int int40 = serializableNode33.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode42 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int43 = serializableNode42.rank;
        int int44 = serializableNode42.rank;
        java.io.Serializable serializable45 = serializableNode42.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode46 = serializableNode42.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode48 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable49 = serializableNode48.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode50 = serializableNode48.parent;
        serializableNode46.parent = serializableNode50;
        int int52 = serializableNode46.rank;
        serializableNode46.rank = 'a';
        java.lang.Class<?> wildcardClass55 = serializableNode46.getClass();
        serializableNode33.data = wildcardClass55;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode57 = serializableNode33.parent;
        java.lang.Class<?> wildcardClass58 = serializableNode33.getClass();
        serializableNode29.data = wildcardClass58;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertEquals("'" + serializable10 + "' != '" + 10L + "'", serializable10, 10L);
        org.junit.Assert.assertNotNull(serializableNode11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(serializableNode29);
        org.junit.Assert.assertNotNull(serializable31);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertEquals("'" + serializable45 + "' != '" + 10L + "'", serializable45, 10L);
        org.junit.Assert.assertNotNull(serializableNode46);
        org.junit.Assert.assertEquals("'" + serializable49 + "' != '" + 10L + "'", serializable49, 10L);
        org.junit.Assert.assertNotNull(serializableNode50);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(serializableNode57);
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test0808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0808");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>> serializableNodeNode8 = new com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>>(serializableNode7);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode7.parent;
        serializableNode7.rank = 0;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        java.io.Serializable serializable14 = serializableNode13.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int17 = serializableNode16.rank;
        int int18 = serializableNode16.rank;
        java.io.Serializable serializable19 = serializableNode16.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = serializableNode16.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable23 = serializableNode22.data;
        int int24 = serializableNode22.rank;
        serializableNode22.rank = 'a';
        java.lang.Class<?> wildcardClass27 = serializableNode22.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass27);
        serializableNode16.data = wildcardClass27;
        com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>> serializableNodeNode30 = new com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>>(serializableNode16);
        serializableNode13.parent = serializableNode16;
        java.io.Serializable serializable32 = serializableNode16.data;
        serializableNode7.data = serializable32;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10.0f + "'", serializable14, 10.0f);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertEquals("'" + serializable19 + "' != '" + 10L + "'", serializable19, 10L);
        org.junit.Assert.assertNotNull(serializableNode20);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(serializable32);
    }

    @Test
    public void test0809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0809");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.lang.Class<?> wildcardClass6 = serializableNode1.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.AnnotatedElement> annotatedElementNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.AnnotatedElement>((java.lang.reflect.AnnotatedElement) wildcardClass6);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass6);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode8.parent;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(serializableNode9);
    }

    @Test
    public void test0810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0810");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = (short) -1;
        serializableNode1.rank = (short) -1;
        int int8 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int11 = serializableNode10.rank;
        int int12 = serializableNode10.rank;
        java.io.Serializable serializable13 = serializableNode10.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = serializableNode10.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable17 = serializableNode16.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode16.parent;
        serializableNode14.parent = serializableNode18;
        int int20 = serializableNode14.rank;
        serializableNode14.rank = 'a';
        java.lang.Class<?> wildcardClass23 = serializableNode14.getClass();
        serializableNode1.data = wildcardClass23;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = serializableNode1.parent;
        serializableNode1.rank = 97;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = serializableNode1.parent;
        int int29 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = serializableNode1.parent;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode14);
        org.junit.Assert.assertEquals("'" + serializable17 + "' != '" + 10L + "'", serializable17, 10L);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(serializableNode25);
        org.junit.Assert.assertNotNull(serializableNode28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 97 + "'", int29 == 97);
        org.junit.Assert.assertNotNull(serializableNode30);
    }

    @Test
    public void test0811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0811");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        serializableNode1.rank = (byte) 10;
        int int9 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int12 = serializableNode11.rank;
        int int13 = serializableNode11.rank;
        java.io.Serializable serializable14 = serializableNode11.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode11.parent;
        java.lang.Class<?> wildcardClass16 = serializableNode11.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.AnnotatedElement> annotatedElementNode17 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.AnnotatedElement>((java.lang.reflect.AnnotatedElement) wildcardClass16);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass16);
        serializableNode1.data = wildcardClass16;
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.constant.Constable> constableNode20 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.constant.Constable>((java.lang.constant.Constable) wildcardClass16);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 10 + "'", int9 == 10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0812");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        java.io.Serializable serializable8 = serializableNode5.data;
        java.io.Serializable serializable9 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int12 = serializableNode11.rank;
        int int13 = serializableNode11.rank;
        java.io.Serializable serializable14 = serializableNode11.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode11.parent;
        java.lang.Class<?> wildcardClass16 = serializableNode15.getClass();
        serializableNode5.data = wildcardClass16;
        java.io.Serializable serializable18 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>(serializable18);
        serializableNode19.data = 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int24 = serializableNode23.rank;
        int int25 = serializableNode23.rank;
        java.io.Serializable serializable26 = serializableNode23.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = serializableNode23.parent;
        java.io.Serializable serializable28 = serializableNode27.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = serializableNode27.parent;
        java.io.Serializable serializable30 = serializableNode27.data;
        java.io.Serializable serializable31 = serializableNode27.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int34 = serializableNode33.rank;
        int int35 = serializableNode33.rank;
        java.io.Serializable serializable36 = serializableNode33.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = serializableNode33.parent;
        java.lang.Class<?> wildcardClass38 = serializableNode37.getClass();
        serializableNode27.data = wildcardClass38;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode40 = serializableNode27.parent;
        serializableNode40.rank = 'a';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode43 = serializableNode40.parent;
        serializableNode19.parent = serializableNode40;
        java.io.Serializable serializable45 = serializableNode40.data;
        serializableNode40.rank = 100;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(serializable18);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertEquals("'" + serializable26 + "' != '" + 10L + "'", serializable26, 10L);
        org.junit.Assert.assertNotNull(serializableNode27);
        org.junit.Assert.assertEquals("'" + serializable28 + "' != '" + 10L + "'", serializable28, 10L);
        org.junit.Assert.assertNotNull(serializableNode29);
        org.junit.Assert.assertEquals("'" + serializable30 + "' != '" + 10L + "'", serializable30, 10L);
        org.junit.Assert.assertEquals("'" + serializable31 + "' != '" + 10L + "'", serializable31, 10L);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertEquals("'" + serializable36 + "' != '" + 10L + "'", serializable36, 10L);
        org.junit.Assert.assertNotNull(serializableNode37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(serializableNode40);
        org.junit.Assert.assertNotNull(serializableNode43);
        org.junit.Assert.assertNotNull(serializable45);
    }

    @Test
    public void test0813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0813");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable11 = serializableNode10.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode10.parent;
        java.io.Serializable serializable13 = serializableNode12.data;
        serializableNode12.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode12.parent;
        serializableNode8.parent = serializableNode16;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode16.parent;
        java.io.Serializable serializable19 = serializableNode16.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable22 = serializableNode21.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode21.parent;
        int int24 = serializableNode21.rank;
        java.io.Serializable serializable25 = serializableNode21.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = serializableNode27.parent;
        serializableNode27.rank = (byte) 100;
        java.lang.Class<?> wildcardClass31 = serializableNode27.getClass();
        serializableNode21.data = wildcardClass31;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = serializableNode21.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode35 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        java.lang.Class<?> wildcardClass36 = serializableNode35.getClass();
        serializableNode33.data = wildcardClass36;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode39 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable40 = serializableNode39.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = serializableNode39.parent;
        int int42 = serializableNode39.rank;
        java.io.Serializable serializable43 = serializableNode39.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode45 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode46 = serializableNode45.parent;
        serializableNode45.rank = (byte) 100;
        java.lang.Class<?> wildcardClass49 = serializableNode45.getClass();
        serializableNode39.data = wildcardClass49;
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.GenericDeclaration> genericDeclarationNode51 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.GenericDeclaration>((java.lang.reflect.GenericDeclaration) wildcardClass49);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode52 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass49);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode54 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode55 = serializableNode54.parent;
        serializableNode55.rank = (byte) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode59 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int60 = serializableNode59.rank;
        int int61 = serializableNode59.rank;
        java.io.Serializable serializable62 = serializableNode59.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode64 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable65 = serializableNode64.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode66 = serializableNode64.parent;
        serializableNode59.parent = serializableNode64;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode68 = serializableNode64.parent;
        serializableNode55.parent = serializableNode68;
        serializableNode52.parent = serializableNode55;
        serializableNode55.rank = (byte) -1;
        serializableNode33.parent = serializableNode55;
        java.lang.Class<?> wildcardClass74 = serializableNode55.getClass();
        serializableNode16.data = wildcardClass74;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertEquals("'" + serializable19 + "' != '" + 10L + "'", serializable19, 10L);
        org.junit.Assert.assertEquals("'" + serializable22 + "' != '" + 10L + "'", serializable22, 10L);
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertEquals("'" + serializable25 + "' != '" + 10L + "'", serializable25, 10L);
        org.junit.Assert.assertNotNull(serializableNode28);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(serializableNode33);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertEquals("'" + serializable40 + "' != '" + 10L + "'", serializable40, 10L);
        org.junit.Assert.assertNotNull(serializableNode41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertEquals("'" + serializable43 + "' != '" + 10L + "'", serializable43, 10L);
        org.junit.Assert.assertNotNull(serializableNode46);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(serializableNode55);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertEquals("'" + serializable62 + "' != '" + 10L + "'", serializable62, 10L);
        org.junit.Assert.assertEquals("'" + serializable65 + "' != '" + 10L + "'", serializable65, 10L);
        org.junit.Assert.assertNotNull(serializableNode66);
        org.junit.Assert.assertNotNull(serializableNode68);
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test0814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0814");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) "");
        serializableNode1.rank = (byte) 100;
        serializableNode1.data = 'a';
        java.lang.Class<?> wildcardClass6 = serializableNode1.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass6);
        int int8 = serializableNode7.rank;
        java.io.Serializable serializable9 = serializableNode7.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = null;
        serializableNode7.parent = serializableNode10;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode7.parent;
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(serializable9);
        org.junit.Assert.assertNull(serializableNode12);
    }

    @Test
    public void test0815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0815");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode2 = serializableNode1.parent;
        java.io.Serializable serializable3 = serializableNode1.data;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int7 = serializableNode6.rank;
        int int8 = serializableNode6.rank;
        java.io.Serializable serializable9 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode6.parent;
        java.io.Serializable serializable11 = serializableNode10.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode10.parent;
        java.io.Serializable serializable13 = serializableNode10.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int16 = serializableNode15.rank;
        int int17 = serializableNode15.rank;
        java.io.Serializable serializable18 = serializableNode15.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode15.parent;
        java.io.Serializable serializable20 = serializableNode19.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode19.parent;
        java.io.Serializable serializable22 = serializableNode19.data;
        java.io.Serializable serializable23 = serializableNode19.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int26 = serializableNode25.rank;
        int int27 = serializableNode25.rank;
        java.io.Serializable serializable28 = serializableNode25.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = serializableNode25.parent;
        java.lang.Class<?> wildcardClass30 = serializableNode29.getClass();
        serializableNode19.data = wildcardClass30;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = serializableNode19.parent;
        serializableNode10.parent = serializableNode19;
        java.lang.Class<?> wildcardClass34 = serializableNode19.getClass();
        serializableNode1.data = wildcardClass34;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode36 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass34);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass34);
        org.junit.Assert.assertNotNull(serializableNode2);
        org.junit.Assert.assertEquals("'" + serializable3 + "' != '" + 10L + "'", serializable3, 10L);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertEquals("'" + serializable18 + "' != '" + 10L + "'", serializable18, 10L);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertEquals("'" + serializable20 + "' != '" + 10L + "'", serializable20, 10L);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertEquals("'" + serializable22 + "' != '" + 10L + "'", serializable22, 10L);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertEquals("'" + serializable28 + "' != '" + 10L + "'", serializable28, 10L);
        org.junit.Assert.assertNotNull(serializableNode29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(serializableNode32);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test0816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0816");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable7 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode6.parent;
        serializableNode1.parent = serializableNode6;
        int int10 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode1.parent;
        java.io.Serializable serializable13 = serializableNode12.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int16 = serializableNode15.rank;
        int int17 = serializableNode15.rank;
        java.io.Serializable serializable18 = serializableNode15.data;
        serializableNode15.rank = (byte) 1;
        serializableNode15.data = 10.0d;
        serializableNode15.rank = (byte) 100;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = serializableNode15.parent;
        int int26 = serializableNode15.rank;
        serializableNode12.parent = serializableNode15;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int30 = serializableNode29.rank;
        int int31 = serializableNode29.rank;
        java.io.Serializable serializable32 = serializableNode29.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = serializableNode29.parent;
        java.io.Serializable serializable34 = serializableNode33.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode35 = serializableNode33.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int38 = serializableNode37.rank;
        int int39 = serializableNode37.rank;
        java.io.Serializable serializable40 = serializableNode37.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = serializableNode37.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode43 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable44 = serializableNode43.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode45 = serializableNode43.parent;
        serializableNode41.parent = serializableNode45;
        int int47 = serializableNode45.rank;
        serializableNode35.parent = serializableNode45;
        int int49 = serializableNode45.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode50 = serializableNode45.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode52 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int53 = serializableNode52.rank;
        int int54 = serializableNode52.rank;
        java.io.Serializable serializable55 = serializableNode52.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode56 = serializableNode52.parent;
        serializableNode52.rank = (short) 10;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode59 = serializableNode52.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode61 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int62 = serializableNode61.rank;
        int int63 = serializableNode61.rank;
        java.io.Serializable serializable64 = serializableNode61.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode65 = serializableNode61.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode67 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable68 = serializableNode67.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode69 = serializableNode67.parent;
        serializableNode65.parent = serializableNode69;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode72 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int73 = serializableNode72.rank;
        int int74 = serializableNode72.rank;
        java.io.Serializable serializable75 = serializableNode72.data;
        serializableNode65.parent = serializableNode72;
        int int77 = serializableNode65.rank;
        java.io.Serializable serializable78 = serializableNode65.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode80 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int81 = serializableNode80.rank;
        int int82 = serializableNode80.rank;
        java.io.Serializable serializable83 = serializableNode80.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode84 = serializableNode80.parent;
        java.io.Serializable serializable85 = serializableNode84.data;
        int int86 = serializableNode84.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode87 = serializableNode84.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode88 = serializableNode84.parent;
        serializableNode65.parent = serializableNode84;
        serializableNode59.parent = serializableNode65;
        java.lang.Class<?> wildcardClass91 = serializableNode65.getClass();
        serializableNode50.data = wildcardClass91;
        serializableNode15.data = wildcardClass91;
        java.io.Serializable serializable94 = serializableNode15.data;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(serializableNode11);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertEquals("'" + serializable18 + "' != '" + 10L + "'", serializable18, 10L);
        org.junit.Assert.assertNotNull(serializableNode25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 100 + "'", int26 == 100);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertEquals("'" + serializable32 + "' != '" + 10L + "'", serializable32, 10L);
        org.junit.Assert.assertNotNull(serializableNode33);
        org.junit.Assert.assertEquals("'" + serializable34 + "' != '" + 10L + "'", serializable34, 10L);
        org.junit.Assert.assertNotNull(serializableNode35);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertEquals("'" + serializable40 + "' != '" + 10L + "'", serializable40, 10L);
        org.junit.Assert.assertNotNull(serializableNode41);
        org.junit.Assert.assertEquals("'" + serializable44 + "' != '" + 10L + "'", serializable44, 10L);
        org.junit.Assert.assertNotNull(serializableNode45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(serializableNode50);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertEquals("'" + serializable55 + "' != '" + 10L + "'", serializable55, 10L);
        org.junit.Assert.assertNotNull(serializableNode56);
        org.junit.Assert.assertNotNull(serializableNode59);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertEquals("'" + serializable64 + "' != '" + 10L + "'", serializable64, 10L);
        org.junit.Assert.assertNotNull(serializableNode65);
        org.junit.Assert.assertEquals("'" + serializable68 + "' != '" + 10L + "'", serializable68, 10L);
        org.junit.Assert.assertNotNull(serializableNode69);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertEquals("'" + serializable75 + "' != '" + 10L + "'", serializable75, 10L);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertEquals("'" + serializable78 + "' != '" + 10L + "'", serializable78, 10L);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0);
        org.junit.Assert.assertEquals("'" + serializable83 + "' != '" + 10L + "'", serializable83, 10L);
        org.junit.Assert.assertNotNull(serializableNode84);
        org.junit.Assert.assertEquals("'" + serializable85 + "' != '" + 10L + "'", serializable85, 10L);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 0 + "'", int86 == 0);
        org.junit.Assert.assertNotNull(serializableNode87);
        org.junit.Assert.assertNotNull(serializableNode88);
        org.junit.Assert.assertNotNull(wildcardClass91);
        org.junit.Assert.assertNotNull(serializable94);
    }

    @Test
    public void test0817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0817");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable8 = serializableNode7.data;
        int int9 = serializableNode7.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode7.parent = serializableNode11;
        java.lang.Class<?> wildcardClass13 = serializableNode11.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass13);
        serializableNode1.parent = serializableNode14;
        serializableNode14.rank = (short) 0;
        serializableNode14.rank = 100;
        serializableNode14.rank = 10;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0818");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode1.parent = serializableNode5;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int9 = serializableNode8.rank;
        int int10 = serializableNode8.rank;
        java.io.Serializable serializable11 = serializableNode8.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode8.parent;
        java.io.Serializable serializable13 = serializableNode12.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = serializableNode12.parent;
        java.io.Serializable serializable15 = serializableNode12.data;
        java.io.Serializable serializable16 = serializableNode12.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int19 = serializableNode18.rank;
        int int20 = serializableNode18.rank;
        java.io.Serializable serializable21 = serializableNode18.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = serializableNode18.parent;
        java.lang.Class<?> wildcardClass23 = serializableNode22.getClass();
        serializableNode12.data = wildcardClass23;
        serializableNode1.data = wildcardClass23;
        serializableNode1.rank = 0;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable30 = serializableNode29.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = serializableNode29.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int34 = serializableNode33.rank;
        int int35 = serializableNode33.rank;
        java.io.Serializable serializable36 = serializableNode33.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = serializableNode33.parent;
        java.io.Serializable serializable38 = serializableNode37.data;
        int int39 = serializableNode37.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode40 = serializableNode37.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = serializableNode40.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode43 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int44 = serializableNode43.rank;
        int int45 = serializableNode43.rank;
        java.io.Serializable serializable46 = serializableNode43.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode47 = serializableNode43.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode49 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable50 = serializableNode49.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode51 = serializableNode49.parent;
        serializableNode47.parent = serializableNode51;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode54 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int55 = serializableNode54.rank;
        int int56 = serializableNode54.rank;
        java.io.Serializable serializable57 = serializableNode54.data;
        serializableNode47.parent = serializableNode54;
        int int59 = serializableNode47.rank;
        java.io.Serializable serializable60 = serializableNode47.data;
        serializableNode41.parent = serializableNode47;
        serializableNode29.parent = serializableNode41;
        serializableNode1.parent = serializableNode41;
        java.io.Serializable serializable64 = serializableNode41.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode66 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable67 = serializableNode66.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode68 = serializableNode66.parent;
        java.lang.Class<?> wildcardClass69 = serializableNode66.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode70 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass69);
        java.io.Serializable serializable71 = serializableNode70.data;
        serializableNode41.data = serializable71;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode14);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertEquals("'" + serializable21 + "' != '" + 10L + "'", serializable21, 10L);
        org.junit.Assert.assertNotNull(serializableNode22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertEquals("'" + serializable30 + "' != '" + 10L + "'", serializable30, 10L);
        org.junit.Assert.assertNotNull(serializableNode31);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertEquals("'" + serializable36 + "' != '" + 10L + "'", serializable36, 10L);
        org.junit.Assert.assertNotNull(serializableNode37);
        org.junit.Assert.assertEquals("'" + serializable38 + "' != '" + 10L + "'", serializable38, 10L);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(serializableNode40);
        org.junit.Assert.assertNotNull(serializableNode41);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertEquals("'" + serializable46 + "' != '" + 10L + "'", serializable46, 10L);
        org.junit.Assert.assertNotNull(serializableNode47);
        org.junit.Assert.assertEquals("'" + serializable50 + "' != '" + 10L + "'", serializable50, 10L);
        org.junit.Assert.assertNotNull(serializableNode51);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertEquals("'" + serializable57 + "' != '" + 10L + "'", serializable57, 10L);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertEquals("'" + serializable60 + "' != '" + 10L + "'", serializable60, 10L);
        org.junit.Assert.assertEquals("'" + serializable64 + "' != '" + 10L + "'", serializable64, 10L);
        org.junit.Assert.assertEquals("'" + serializable67 + "' != '" + 10L + "'", serializable67, 10L);
        org.junit.Assert.assertNotNull(serializableNode68);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(serializable71);
    }

    @Test
    public void test0819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0819");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode2 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode4 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 100L);
        serializableNode4.parent = serializableNode6;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int10 = serializableNode9.rank;
        int int11 = serializableNode9.rank;
        serializableNode9.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>> serializableNodeNode14 = new com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>>(serializableNode9);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode9.parent;
        serializableNode6.parent = serializableNode9;
        serializableNode6.rank = 0;
        org.junit.Assert.assertNotNull(serializableNode2);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertNotNull(serializableNode4);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(serializableNode15);
    }

    @Test
    public void test0820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0820");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode2 = serializableNode1.parent;
        serializableNode1.rank = (byte) 100;
        java.io.Serializable serializable5 = serializableNode1.data;
        java.lang.Class<?> wildcardClass6 = serializableNode1.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass6);
        java.lang.Class<?> wildcardClass8 = serializableNode7.getClass();
        org.junit.Assert.assertNotNull(serializableNode2);
        org.junit.Assert.assertEquals("'" + serializable5 + "' != '" + 10L + "'", serializable5, 10L);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0821");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        serializableNode1.rank = (short) 10;
        java.lang.Class<?> wildcardClass5 = serializableNode1.getClass();
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test0822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0822");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode1.parent = serializableNode5;
        serializableNode5.rank = 0;
        java.io.Serializable serializable9 = serializableNode5.data;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
    }

    @Test
    public void test0823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0823");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable8 = serializableNode7.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode7.parent;
        serializableNode5.parent = serializableNode9;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int13 = serializableNode12.rank;
        int int14 = serializableNode12.rank;
        java.io.Serializable serializable15 = serializableNode12.data;
        serializableNode12.rank = (byte) 1;
        java.lang.Class<?> wildcardClass18 = serializableNode12.getClass();
        serializableNode5.data = wildcardClass18;
        serializableNode5.rank = 'a';
        int int22 = serializableNode5.rank;
        java.io.Serializable serializable23 = serializableNode5.data;
        java.lang.Class<?> wildcardClass24 = serializable23.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 97 + "'", int22 == 97);
        org.junit.Assert.assertNotNull(serializable23);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test0824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0824");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        int int7 = serializableNode5.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode8.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode9.parent;
        serializableNode9.rank = (byte) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int15 = serializableNode14.rank;
        int int16 = serializableNode14.rank;
        java.io.Serializable serializable17 = serializableNode14.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode14.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable21 = serializableNode20.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = serializableNode20.parent;
        serializableNode18.parent = serializableNode22;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int26 = serializableNode25.rank;
        int int27 = serializableNode25.rank;
        java.io.Serializable serializable28 = serializableNode25.data;
        serializableNode25.rank = (byte) 1;
        java.lang.Class<?> wildcardClass31 = serializableNode25.getClass();
        serializableNode18.data = wildcardClass31;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable35 = serializableNode34.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode36 = serializableNode34.parent;
        int int37 = serializableNode34.rank;
        java.io.Serializable serializable38 = serializableNode34.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode40 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = serializableNode40.parent;
        serializableNode40.rank = (byte) 100;
        java.lang.Class<?> wildcardClass44 = serializableNode40.getClass();
        serializableNode34.data = wildcardClass44;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode46 = serializableNode34.parent;
        java.io.Serializable serializable47 = serializableNode34.data;
        serializableNode18.parent = serializableNode34;
        serializableNode9.parent = serializableNode18;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertEquals("'" + serializable17 + "' != '" + 10L + "'", serializable17, 10L);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertEquals("'" + serializable21 + "' != '" + 10L + "'", serializable21, 10L);
        org.junit.Assert.assertNotNull(serializableNode22);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertEquals("'" + serializable28 + "' != '" + 10L + "'", serializable28, 10L);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertEquals("'" + serializable35 + "' != '" + 10L + "'", serializable35, 10L);
        org.junit.Assert.assertNotNull(serializableNode36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertEquals("'" + serializable38 + "' != '" + 10L + "'", serializable38, 10L);
        org.junit.Assert.assertNotNull(serializableNode41);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(serializableNode46);
        org.junit.Assert.assertNotNull(serializable47);
    }

    @Test
    public void test0825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0825");
        java.lang.constant.ConstantDesc constantDesc0 = null;
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.constant.ConstantDesc> constantDescNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.constant.ConstantDesc>(constantDesc0);
    }

    @Test
    public void test0826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0826");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        serializableNode1.rank = (byte) 1;
        int int7 = serializableNode1.rank;
        int int8 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable11 = serializableNode10.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode10.parent;
        java.io.Serializable serializable13 = serializableNode12.data;
        serializableNode12.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode12.parent;
        int int17 = serializableNode16.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode16.parent;
        java.lang.Class<?> wildcardClass19 = serializableNode18.getClass();
        serializableNode1.data = wildcardClass19;
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.invoke.TypeDescriptor> typeDescriptorNode21 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.invoke.TypeDescriptor>((java.lang.invoke.TypeDescriptor) wildcardClass19);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test0827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0827");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = (short) -1;
        serializableNode1.rank = (short) -1;
        java.io.Serializable serializable8 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int11 = serializableNode10.rank;
        int int12 = serializableNode10.rank;
        serializableNode10.rank = (short) -1;
        serializableNode10.rank = (short) -1;
        java.io.Serializable serializable17 = serializableNode10.data;
        serializableNode1.parent = serializableNode10;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int21 = serializableNode20.rank;
        int int22 = serializableNode20.rank;
        java.io.Serializable serializable23 = serializableNode20.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode20.parent;
        java.io.Serializable serializable25 = serializableNode24.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = serializableNode24.parent;
        java.io.Serializable serializable27 = serializableNode24.data;
        java.io.Serializable serializable28 = serializableNode24.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int31 = serializableNode30.rank;
        int int32 = serializableNode30.rank;
        java.io.Serializable serializable33 = serializableNode30.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = serializableNode30.parent;
        java.lang.Class<?> wildcardClass35 = serializableNode34.getClass();
        serializableNode24.data = wildcardClass35;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = serializableNode24.parent;
        java.io.Serializable serializable38 = serializableNode37.data;
        serializableNode10.data = serializable38;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode40 = serializableNode10.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = serializableNode10.parent;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable17 + "' != '" + 10L + "'", serializable17, 10L);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertEquals("'" + serializable25 + "' != '" + 10L + "'", serializable25, 10L);
        org.junit.Assert.assertNotNull(serializableNode26);
        org.junit.Assert.assertEquals("'" + serializable27 + "' != '" + 10L + "'", serializable27, 10L);
        org.junit.Assert.assertEquals("'" + serializable28 + "' != '" + 10L + "'", serializable28, 10L);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertEquals("'" + serializable33 + "' != '" + 10L + "'", serializable33, 10L);
        org.junit.Assert.assertNotNull(serializableNode34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(serializableNode37);
        org.junit.Assert.assertNotNull(serializable38);
        org.junit.Assert.assertNotNull(serializableNode40);
        org.junit.Assert.assertNotNull(serializableNode41);
    }

    @Test
    public void test0828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0828");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable8 = serializableNode7.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode7.parent;
        serializableNode5.parent = serializableNode9;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int13 = serializableNode12.rank;
        int int14 = serializableNode12.rank;
        java.io.Serializable serializable15 = serializableNode12.data;
        serializableNode5.parent = serializableNode12;
        java.io.Serializable serializable17 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (byte) 10);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = serializableNode19.parent;
        java.io.Serializable serializable21 = serializableNode20.data;
        serializableNode5.parent = serializableNode20;
        serializableNode5.rank = (-1);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = serializableNode5.parent;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertEquals("'" + serializable17 + "' != '" + 10L + "'", serializable17, 10L);
        org.junit.Assert.assertNotNull(serializableNode20);
        org.junit.Assert.assertEquals("'" + serializable21 + "' != '" + (byte) 10 + "'", serializable21, (byte) 10);
        org.junit.Assert.assertNotNull(serializableNode25);
    }

    @Test
    public void test0829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0829");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        java.lang.Class<?> wildcardClass7 = serializableNode1.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass7);
        int int9 = serializableNode8.rank;
        int int10 = serializableNode8.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
    }

    @Test
    public void test0830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0830");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode2 = serializableNode1.parent;
        java.io.Serializable serializable3 = serializableNode1.data;
        serializableNode1.rank = 1;
        org.junit.Assert.assertNotNull(serializableNode2);
        org.junit.Assert.assertEquals("'" + serializable3 + "' != '" + 10L + "'", serializable3, 10L);
    }

    @Test
    public void test0831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0831");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable7 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode6.parent;
        serializableNode1.parent = serializableNode6;
        int int10 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = serializableNode1.parent;
        java.io.Serializable serializable12 = serializableNode11.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int15 = serializableNode14.rank;
        int int16 = serializableNode14.rank;
        java.io.Serializable serializable17 = serializableNode14.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable20 = serializableNode19.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode19.parent;
        serializableNode14.parent = serializableNode19;
        int int23 = serializableNode14.rank;
        java.lang.Class<?> wildcardClass24 = serializableNode14.getClass();
        serializableNode11.data = wildcardClass24;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(serializableNode11);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertEquals("'" + serializable17 + "' != '" + 10L + "'", serializable17, 10L);
        org.junit.Assert.assertEquals("'" + serializable20 + "' != '" + 10L + "'", serializable20, 10L);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test0832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0832");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int12 = serializableNode11.rank;
        int int13 = serializableNode11.rank;
        java.io.Serializable serializable14 = serializableNode11.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode11.parent;
        java.lang.Class<?> wildcardClass16 = serializableNode11.getClass();
        serializableNode5.data = wildcardClass16;
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.constant.Constable> constableNode18 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.constant.Constable>((java.lang.constant.Constable) wildcardClass16);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass16);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = serializableNode19.parent;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(serializableNode20);
    }

    @Test
    public void test0833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0833");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) true);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    }

    @Test
    public void test0834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0834");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        int int4 = serializableNode1.rank;
        java.io.Serializable serializable5 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode7.parent;
        serializableNode7.rank = (byte) 100;
        java.lang.Class<?> wildcardClass11 = serializableNode7.getClass();
        serializableNode1.data = wildcardClass11;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        java.lang.Class<?> wildcardClass16 = serializableNode15.getClass();
        serializableNode13.data = wildcardClass16;
        int int18 = serializableNode13.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int21 = serializableNode20.rank;
        int int22 = serializableNode20.rank;
        java.io.Serializable serializable23 = serializableNode20.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode20.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = serializableNode20.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable28 = serializableNode27.data;
        int int29 = serializableNode27.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode27.parent = serializableNode31;
        serializableNode25.parent = serializableNode27;
        int int34 = serializableNode25.rank;
        java.lang.Class<?> wildcardClass35 = serializableNode25.getClass();
        serializableNode13.data = wildcardClass35;
        serializableNode13.rank = (byte) 1;
        serializableNode13.rank = (byte) 0;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + serializable5 + "' != '" + 10L + "'", serializable5, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertNotNull(serializableNode25);
        org.junit.Assert.assertEquals("'" + serializable28 + "' != '" + 10L + "'", serializable28, 10L);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test0835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0835");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable7 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode6.parent;
        serializableNode1.parent = serializableNode6;
        int int10 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = serializableNode13.parent;
        java.io.Serializable serializable15 = serializableNode13.data;
        java.io.Serializable serializable16 = serializableNode13.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int19 = serializableNode18.rank;
        int int20 = serializableNode18.rank;
        java.io.Serializable serializable21 = serializableNode18.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = serializableNode18.parent;
        java.io.Serializable serializable23 = serializableNode22.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode22.parent;
        java.io.Serializable serializable25 = serializableNode22.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int28 = serializableNode27.rank;
        int int29 = serializableNode27.rank;
        java.io.Serializable serializable30 = serializableNode27.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = serializableNode27.parent;
        java.io.Serializable serializable32 = serializableNode31.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = serializableNode31.parent;
        java.io.Serializable serializable34 = serializableNode31.data;
        java.io.Serializable serializable35 = serializableNode31.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int38 = serializableNode37.rank;
        int int39 = serializableNode37.rank;
        java.io.Serializable serializable40 = serializableNode37.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = serializableNode37.parent;
        java.lang.Class<?> wildcardClass42 = serializableNode41.getClass();
        serializableNode31.data = wildcardClass42;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode44 = serializableNode31.parent;
        serializableNode22.parent = serializableNode31;
        java.lang.Class<?> wildcardClass46 = serializableNode31.getClass();
        serializableNode13.data = wildcardClass46;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode48 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass46);
        serializableNode1.parent = serializableNode48;
        java.io.Serializable serializable50 = serializableNode48.data;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(serializableNode11);
        org.junit.Assert.assertNotNull(serializableNode14);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertEquals("'" + serializable21 + "' != '" + 10L + "'", serializable21, 10L);
        org.junit.Assert.assertNotNull(serializableNode22);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertEquals("'" + serializable25 + "' != '" + 10L + "'", serializable25, 10L);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertEquals("'" + serializable30 + "' != '" + 10L + "'", serializable30, 10L);
        org.junit.Assert.assertNotNull(serializableNode31);
        org.junit.Assert.assertEquals("'" + serializable32 + "' != '" + 10L + "'", serializable32, 10L);
        org.junit.Assert.assertNotNull(serializableNode33);
        org.junit.Assert.assertEquals("'" + serializable34 + "' != '" + 10L + "'", serializable34, 10L);
        org.junit.Assert.assertEquals("'" + serializable35 + "' != '" + 10L + "'", serializable35, 10L);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertEquals("'" + serializable40 + "' != '" + 10L + "'", serializable40, 10L);
        org.junit.Assert.assertNotNull(serializableNode41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(serializableNode44);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(serializable50);
    }

    @Test
    public void test0836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0836");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        serializableNode1.rank = (byte) 1;
        serializableNode1.data = 10.0d;
        serializableNode1.rank = (byte) 100;
        serializableNode1.rank = (byte) 10;
        serializableNode1.rank = (byte) 100;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int17 = serializableNode16.rank;
        int int18 = serializableNode16.rank;
        java.io.Serializable serializable19 = serializableNode16.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = serializableNode16.parent;
        java.io.Serializable serializable21 = serializableNode20.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = serializableNode20.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int25 = serializableNode24.rank;
        int int26 = serializableNode24.rank;
        java.io.Serializable serializable27 = serializableNode24.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = serializableNode24.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable31 = serializableNode30.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = serializableNode30.parent;
        serializableNode28.parent = serializableNode32;
        int int34 = serializableNode32.rank;
        serializableNode22.parent = serializableNode32;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (short) -1);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode38 = serializableNode37.parent;
        serializableNode22.parent = serializableNode37;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable42 = serializableNode41.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode43 = serializableNode41.parent;
        int int44 = serializableNode41.rank;
        serializableNode22.parent = serializableNode41;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode47 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int48 = serializableNode47.rank;
        int int49 = serializableNode47.rank;
        serializableNode47.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode52 = serializableNode47.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode54 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode55 = serializableNode54.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode56 = serializableNode54.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode58 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable59 = serializableNode58.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode60 = serializableNode58.parent;
        int int61 = serializableNode58.rank;
        java.io.Serializable serializable62 = serializableNode58.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode64 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode65 = serializableNode64.parent;
        serializableNode64.rank = (byte) 100;
        java.lang.Class<?> wildcardClass68 = serializableNode64.getClass();
        serializableNode58.data = wildcardClass68;
        serializableNode54.data = wildcardClass68;
        serializableNode47.data = wildcardClass68;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode72 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass68);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode73 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass68);
        serializableNode41.data = wildcardClass68;
        serializableNode1.data = wildcardClass68;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertEquals("'" + serializable19 + "' != '" + 10L + "'", serializable19, 10L);
        org.junit.Assert.assertNotNull(serializableNode20);
        org.junit.Assert.assertEquals("'" + serializable21 + "' != '" + 10L + "'", serializable21, 10L);
        org.junit.Assert.assertNotNull(serializableNode22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertEquals("'" + serializable27 + "' != '" + 10L + "'", serializable27, 10L);
        org.junit.Assert.assertNotNull(serializableNode28);
        org.junit.Assert.assertEquals("'" + serializable31 + "' != '" + 10L + "'", serializable31, 10L);
        org.junit.Assert.assertNotNull(serializableNode32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(serializableNode38);
        org.junit.Assert.assertEquals("'" + serializable42 + "' != '" + 10L + "'", serializable42, 10L);
        org.junit.Assert.assertNotNull(serializableNode43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(serializableNode52);
        org.junit.Assert.assertNotNull(serializableNode55);
        org.junit.Assert.assertNotNull(serializableNode56);
        org.junit.Assert.assertEquals("'" + serializable59 + "' != '" + 10L + "'", serializable59, 10L);
        org.junit.Assert.assertNotNull(serializableNode60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertEquals("'" + serializable62 + "' != '" + 10L + "'", serializable62, 10L);
        org.junit.Assert.assertNotNull(serializableNode65);
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test0837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0837");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int12 = serializableNode11.rank;
        int int13 = serializableNode11.rank;
        java.io.Serializable serializable14 = serializableNode11.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode11.parent;
        java.lang.Class<?> wildcardClass16 = serializableNode11.getClass();
        serializableNode5.data = wildcardClass16;
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.invoke.TypeDescriptor> typeDescriptorNode18 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.invoke.TypeDescriptor>((java.lang.invoke.TypeDescriptor) wildcardClass16);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0838");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>> serializableNodeNode8 = new com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>>(serializableNode7);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode7.parent;
        serializableNode7.rank = 0;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode7.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int15 = serializableNode14.rank;
        int int16 = serializableNode14.rank;
        serializableNode14.rank = (short) -1;
        serializableNode14.rank = (short) -1;
        java.io.Serializable serializable21 = serializableNode14.data;
        int int22 = serializableNode14.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode14.parent;
        java.io.Serializable serializable24 = serializableNode14.data;
        java.io.Serializable serializable25 = serializableNode14.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = serializableNode14.parent;
        serializableNode12.parent = serializableNode14;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = serializableNode29.parent;
        serializableNode30.rank = (byte) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int35 = serializableNode34.rank;
        int int36 = serializableNode34.rank;
        java.io.Serializable serializable37 = serializableNode34.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode38 = serializableNode34.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode39 = serializableNode34.parent;
        serializableNode34.rank = (byte) 10;
        int int42 = serializableNode34.rank;
        serializableNode30.parent = serializableNode34;
        int int44 = serializableNode30.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode46 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int47 = serializableNode46.rank;
        int int48 = serializableNode46.rank;
        java.io.Serializable serializable49 = serializableNode46.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode51 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable52 = serializableNode51.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode53 = serializableNode51.parent;
        serializableNode46.parent = serializableNode51;
        int int55 = serializableNode46.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode56 = serializableNode46.parent;
        int int57 = serializableNode46.rank;
        serializableNode30.parent = serializableNode46;
        serializableNode14.parent = serializableNode46;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertEquals("'" + serializable21 + "' != '" + 10L + "'", serializable21, 10L);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertEquals("'" + serializable24 + "' != '" + 10L + "'", serializable24, 10L);
        org.junit.Assert.assertEquals("'" + serializable25 + "' != '" + 10L + "'", serializable25, 10L);
        org.junit.Assert.assertNotNull(serializableNode26);
        org.junit.Assert.assertNotNull(serializableNode30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertEquals("'" + serializable37 + "' != '" + 10L + "'", serializable37, 10L);
        org.junit.Assert.assertNotNull(serializableNode38);
        org.junit.Assert.assertNotNull(serializableNode39);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 10 + "'", int42 == 10);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertEquals("'" + serializable49 + "' != '" + 10L + "'", serializable49, 10L);
        org.junit.Assert.assertEquals("'" + serializable52 + "' != '" + 10L + "'", serializable52, 10L);
        org.junit.Assert.assertNotNull(serializableNode53);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(serializableNode56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
    }

    @Test
    public void test0839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0839");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        java.io.Serializable serializable4 = serializableNode3.data;
        serializableNode3.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode3.parent;
        int int8 = serializableNode7.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode7.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode9.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable13 = serializableNode12.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = serializableNode12.parent;
        int int15 = serializableNode12.rank;
        java.io.Serializable serializable16 = serializableNode12.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode18.parent;
        serializableNode18.rank = (byte) 100;
        java.lang.Class<?> wildcardClass22 = serializableNode18.getClass();
        serializableNode12.data = wildcardClass22;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode12.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        java.lang.Class<?> wildcardClass27 = serializableNode26.getClass();
        serializableNode24.data = wildcardClass27;
        serializableNode24.rank = (short) 100;
        serializableNode9.parent = serializableNode24;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = serializableNode24.parent;
        serializableNode32.rank = 52;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode35 = null;
        serializableNode32.parent = serializableNode35;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(serializableNode32);
    }

    @Test
    public void test0840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0840");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode1.parent = serializableNode5;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int9 = serializableNode8.rank;
        int int10 = serializableNode8.rank;
        java.io.Serializable serializable11 = serializableNode8.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode8.parent;
        java.io.Serializable serializable13 = serializableNode12.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = serializableNode12.parent;
        java.io.Serializable serializable15 = serializableNode12.data;
        java.io.Serializable serializable16 = serializableNode12.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int19 = serializableNode18.rank;
        int int20 = serializableNode18.rank;
        java.io.Serializable serializable21 = serializableNode18.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = serializableNode18.parent;
        java.lang.Class<?> wildcardClass23 = serializableNode22.getClass();
        serializableNode12.data = wildcardClass23;
        serializableNode1.data = wildcardClass23;
        serializableNode1.rank = 0;
        int int28 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable32 = serializableNode31.data;
        int int33 = serializableNode31.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode35 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int36 = serializableNode35.rank;
        int int37 = serializableNode35.rank;
        java.io.Serializable serializable38 = serializableNode35.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode40 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable41 = serializableNode40.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode42 = serializableNode40.parent;
        serializableNode35.parent = serializableNode40;
        serializableNode35.data = true;
        serializableNode31.parent = serializableNode35;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode47 = serializableNode31.parent;
        serializableNode47.rank = 35;
        serializableNode29.parent = serializableNode47;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode14);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertEquals("'" + serializable21 + "' != '" + 10L + "'", serializable21, 10L);
        org.junit.Assert.assertNotNull(serializableNode22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(serializableNode29);
        org.junit.Assert.assertEquals("'" + serializable32 + "' != '" + 10L + "'", serializable32, 10L);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertEquals("'" + serializable38 + "' != '" + 10L + "'", serializable38, 10L);
        org.junit.Assert.assertEquals("'" + serializable41 + "' != '" + 10L + "'", serializable41, 10L);
        org.junit.Assert.assertNotNull(serializableNode42);
        org.junit.Assert.assertNotNull(serializableNode47);
    }

    @Test
    public void test0841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0841");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        java.io.Serializable serializable7 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int10 = serializableNode9.rank;
        int int11 = serializableNode9.rank;
        java.io.Serializable serializable12 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode9.parent;
        java.io.Serializable serializable14 = serializableNode13.data;
        int int15 = serializableNode13.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode13.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode16.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode17.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode17.parent;
        serializableNode6.parent = serializableNode19;
        serializableNode19.rank = (byte) 100;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode19.parent;
        java.io.Serializable serializable24 = serializableNode19.data;
        int int25 = serializableNode19.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertEquals("'" + serializable24 + "' != '" + 10L + "'", serializable24, 10L);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 100 + "'", int25 == 100);
    }

    @Test
    public void test0842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0842");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode1.parent = serializableNode5;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int9 = serializableNode8.rank;
        int int10 = serializableNode8.rank;
        java.io.Serializable serializable11 = serializableNode8.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode8.parent;
        java.io.Serializable serializable13 = serializableNode12.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = serializableNode12.parent;
        java.io.Serializable serializable15 = serializableNode12.data;
        java.io.Serializable serializable16 = serializableNode12.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int19 = serializableNode18.rank;
        int int20 = serializableNode18.rank;
        java.io.Serializable serializable21 = serializableNode18.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = serializableNode18.parent;
        java.lang.Class<?> wildcardClass23 = serializableNode22.getClass();
        serializableNode12.data = wildcardClass23;
        serializableNode1.data = wildcardClass23;
        serializableNode1.rank = 0;
        int int28 = serializableNode1.rank;
        java.lang.Class<?> wildcardClass29 = serializableNode1.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.Type> typeNode30 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.Type>((java.lang.reflect.Type) wildcardClass29);
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode14);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertEquals("'" + serializable21 + "' != '" + 10L + "'", serializable21, 10L);
        org.junit.Assert.assertNotNull(serializableNode22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test0843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0843");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode1.parent = serializableNode5;
        serializableNode1.data = '#';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int11 = serializableNode10.rank;
        int int12 = serializableNode10.rank;
        serializableNode10.data = (short) 100;
        serializableNode1.parent = serializableNode10;
        java.io.Serializable serializable16 = serializableNode10.data;
        int int17 = serializableNode10.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode10.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int21 = serializableNode20.rank;
        int int22 = serializableNode20.rank;
        java.io.Serializable serializable23 = serializableNode20.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode20.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = serializableNode20.parent;
        int int26 = serializableNode25.rank;
        java.io.Serializable serializable27 = serializableNode25.data;
        serializableNode10.parent = serializableNode25;
        java.io.Serializable serializable29 = serializableNode10.data;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + (short) 100 + "'", serializable16, (short) 100);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertNotNull(serializableNode25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertEquals("'" + serializable27 + "' != '" + 10L + "'", serializable27, 10L);
        org.junit.Assert.assertEquals("'" + serializable29 + "' != '" + (short) 100 + "'", serializable29, (short) 100);
    }

    @Test
    public void test0844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0844");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable8 = serializableNode7.data;
        int int9 = serializableNode7.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode7.parent = serializableNode11;
        java.lang.Class<?> wildcardClass13 = serializableNode11.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass13);
        serializableNode1.parent = serializableNode14;
        serializableNode14.rank = (short) 0;
        serializableNode14.rank = 100;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int22 = serializableNode21.rank;
        int int23 = serializableNode21.rank;
        java.io.Serializable serializable24 = serializableNode21.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = serializableNode21.parent;
        java.io.Serializable serializable26 = serializableNode25.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = serializableNode25.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = serializableNode25.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable31 = serializableNode30.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = serializableNode30.parent;
        java.io.Serializable serializable33 = serializableNode32.data;
        serializableNode32.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode36 = serializableNode32.parent;
        serializableNode28.parent = serializableNode36;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode39 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int40 = serializableNode39.rank;
        int int41 = serializableNode39.rank;
        java.io.Serializable serializable42 = serializableNode39.data;
        serializableNode39.rank = (byte) 1;
        int int45 = serializableNode39.rank;
        serializableNode39.rank = '#';
        serializableNode28.parent = serializableNode39;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode50 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable51 = serializableNode50.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode52 = serializableNode50.parent;
        java.io.Serializable serializable53 = serializableNode52.data;
        serializableNode52.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode57 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) "");
        serializableNode57.rank = (byte) 100;
        serializableNode57.data = 'a';
        java.lang.Class<?> wildcardClass62 = serializableNode57.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode63 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass62);
        serializableNode52.data = wildcardClass62;
        serializableNode39.data = wildcardClass62;
        serializableNode14.parent = serializableNode39;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode67 = serializableNode39.parent;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertEquals("'" + serializable24 + "' != '" + 10L + "'", serializable24, 10L);
        org.junit.Assert.assertNotNull(serializableNode25);
        org.junit.Assert.assertEquals("'" + serializable26 + "' != '" + 10L + "'", serializable26, 10L);
        org.junit.Assert.assertNotNull(serializableNode27);
        org.junit.Assert.assertNotNull(serializableNode28);
        org.junit.Assert.assertEquals("'" + serializable31 + "' != '" + 10L + "'", serializable31, 10L);
        org.junit.Assert.assertNotNull(serializableNode32);
        org.junit.Assert.assertEquals("'" + serializable33 + "' != '" + 10L + "'", serializable33, 10L);
        org.junit.Assert.assertNotNull(serializableNode36);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertEquals("'" + serializable42 + "' != '" + 10L + "'", serializable42, 10L);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertEquals("'" + serializable51 + "' != '" + 10L + "'", serializable51, 10L);
        org.junit.Assert.assertNotNull(serializableNode52);
        org.junit.Assert.assertEquals("'" + serializable53 + "' != '" + 10L + "'", serializable53, 10L);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(serializableNode67);
    }

    @Test
    public void test0845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0845");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        serializableNode1.rank = (byte) 1;
        int int7 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable11 = serializableNode10.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode10.parent;
        java.io.Serializable serializable13 = serializableNode12.data;
        serializableNode12.rank = (short) -1;
        java.lang.Class<?> wildcardClass16 = serializableNode12.getClass();
        serializableNode1.data = wildcardClass16;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0846");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int9 = serializableNode8.rank;
        int int10 = serializableNode8.rank;
        java.io.Serializable serializable11 = serializableNode8.data;
        serializableNode8.rank = (byte) 1;
        serializableNode8.data = 10.0d;
        serializableNode6.parent = serializableNode8;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode6.parent;
        int int18 = serializableNode6.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable21 = serializableNode20.data;
        int int22 = serializableNode20.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode20.parent = serializableNode24;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int28 = serializableNode27.rank;
        int int29 = serializableNode27.rank;
        java.io.Serializable serializable30 = serializableNode27.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = serializableNode27.parent;
        java.io.Serializable serializable32 = serializableNode31.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = serializableNode31.parent;
        java.io.Serializable serializable34 = serializableNode31.data;
        java.io.Serializable serializable35 = serializableNode31.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int38 = serializableNode37.rank;
        int int39 = serializableNode37.rank;
        java.io.Serializable serializable40 = serializableNode37.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = serializableNode37.parent;
        java.lang.Class<?> wildcardClass42 = serializableNode41.getClass();
        serializableNode31.data = wildcardClass42;
        serializableNode20.data = wildcardClass42;
        serializableNode6.data = wildcardClass42;
        java.io.Serializable serializable46 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode48 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int49 = serializableNode48.rank;
        int int50 = serializableNode48.rank;
        java.io.Serializable serializable51 = serializableNode48.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode52 = serializableNode48.parent;
        java.io.Serializable serializable53 = serializableNode52.data;
        int int54 = serializableNode52.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode55 = serializableNode52.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode56 = serializableNode55.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode57 = serializableNode56.parent;
        int int58 = serializableNode57.rank;
        serializableNode57.rank = 97;
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.Object> objNode62 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.Object>((java.lang.Object) true);
        java.lang.Class<?> wildcardClass63 = objNode62.getClass();
        serializableNode57.data = wildcardClass63;
        serializableNode6.parent = serializableNode57;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertEquals("'" + serializable21 + "' != '" + 10L + "'", serializable21, 10L);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertEquals("'" + serializable30 + "' != '" + 10L + "'", serializable30, 10L);
        org.junit.Assert.assertNotNull(serializableNode31);
        org.junit.Assert.assertEquals("'" + serializable32 + "' != '" + 10L + "'", serializable32, 10L);
        org.junit.Assert.assertNotNull(serializableNode33);
        org.junit.Assert.assertEquals("'" + serializable34 + "' != '" + 10L + "'", serializable34, 10L);
        org.junit.Assert.assertEquals("'" + serializable35 + "' != '" + 10L + "'", serializable35, 10L);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertEquals("'" + serializable40 + "' != '" + 10L + "'", serializable40, 10L);
        org.junit.Assert.assertNotNull(serializableNode41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(serializable46);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertEquals("'" + serializable51 + "' != '" + 10L + "'", serializable51, 10L);
        org.junit.Assert.assertNotNull(serializableNode52);
        org.junit.Assert.assertEquals("'" + serializable53 + "' != '" + 10L + "'", serializable53, 10L);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNotNull(serializableNode55);
        org.junit.Assert.assertNotNull(serializableNode56);
        org.junit.Assert.assertNotNull(serializableNode57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test0847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0847");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        java.io.Serializable serializable4 = serializableNode3.data;
        serializableNode3.rank = (short) -1;
        java.lang.Class<?> wildcardClass7 = serializableNode3.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass7);
        int int9 = serializableNode8.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode8.parent;
        java.io.Serializable serializable11 = serializableNode10.data;
        int int12 = serializableNode10.rank;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertNotNull(serializable11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
    }

    @Test
    public void test0848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0848");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        int int7 = serializableNode5.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int11 = serializableNode10.rank;
        int int12 = serializableNode10.rank;
        serializableNode10.rank = (short) -1;
        serializableNode10.rank = (short) -1;
        java.io.Serializable serializable17 = serializableNode10.data;
        int int18 = serializableNode10.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode10.parent;
        serializableNode5.parent = serializableNode10;
        java.io.Serializable serializable21 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = serializableNode5.parent;
        java.io.Serializable serializable23 = serializableNode22.data;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable17 + "' != '" + 10L + "'", serializable17, 10L);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertEquals("'" + serializable21 + "' != '" + 10L + "'", serializable21, 10L);
        org.junit.Assert.assertNotNull(serializableNode22);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
    }

    @Test
    public void test0849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0849");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.lang.Class<?> wildcardClass2 = serializableNode1.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.AnnotatedElement> annotatedElementNode3 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.AnnotatedElement>((java.lang.reflect.AnnotatedElement) wildcardClass2);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode4 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass2);
        serializableNode4.rank = (byte) -1;
        org.junit.Assert.assertNotNull(wildcardClass2);
    }

    @Test
    public void test0850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0850");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        java.io.Serializable serializable7 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int10 = serializableNode9.rank;
        int int11 = serializableNode9.rank;
        java.io.Serializable serializable12 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode9.parent;
        java.io.Serializable serializable14 = serializableNode13.data;
        int int15 = serializableNode13.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode13.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode16.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode17.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode17.parent;
        serializableNode6.parent = serializableNode19;
        serializableNode6.data = 10.0d;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode6.parent;
        java.io.Serializable serializable24 = serializableNode6.data;
        java.lang.Class<?> wildcardClass25 = serializable24.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertEquals("'" + serializable24 + "' != '" + 10.0d + "'", serializable24, 10.0d);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test0851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0851");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode1.parent = serializableNode5;
        serializableNode1.data = '#';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int11 = serializableNode10.rank;
        int int12 = serializableNode10.rank;
        serializableNode10.data = (short) 100;
        serializableNode1.parent = serializableNode10;
        java.io.Serializable serializable16 = serializableNode10.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (short) -1);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode18.parent;
        serializableNode10.parent = serializableNode19;
        serializableNode19.rank = (byte) -1;
        java.lang.Class<?> wildcardClass23 = serializableNode19.getClass();
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + (short) 100 + "'", serializable16, (short) 100);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test0852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0852");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable7 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode6.parent;
        serializableNode1.parent = serializableNode6;
        int int10 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable14 = serializableNode13.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode13.parent;
        java.lang.Class<?> wildcardClass16 = serializableNode13.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass16);
        java.io.Serializable serializable18 = serializableNode17.data;
        serializableNode11.parent = serializableNode17;
        java.io.Serializable serializable20 = serializableNode11.data;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(serializableNode11);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(serializable18);
        org.junit.Assert.assertEquals("'" + serializable20 + "' != '" + 10L + "'", serializable20, 10L);
    }

    @Test
    public void test0853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0853");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        int int7 = serializableNode5.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int10 = serializableNode9.rank;
        int int11 = serializableNode9.rank;
        java.io.Serializable serializable12 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode9.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = serializableNode9.parent;
        serializableNode9.rank = (byte) 10;
        int int17 = serializableNode9.rank;
        java.lang.Class<?> wildcardClass18 = serializableNode9.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass18);
        serializableNode5.data = wildcardClass18;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable23 = serializableNode22.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode22.parent;
        java.io.Serializable serializable25 = serializableNode24.data;
        serializableNode24.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = serializableNode24.parent;
        int int29 = serializableNode28.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = serializableNode28.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = serializableNode30.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable34 = serializableNode33.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode35 = serializableNode33.parent;
        int int36 = serializableNode33.rank;
        java.io.Serializable serializable37 = serializableNode33.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode39 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode40 = serializableNode39.parent;
        serializableNode39.rank = (byte) 100;
        java.lang.Class<?> wildcardClass43 = serializableNode39.getClass();
        serializableNode33.data = wildcardClass43;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode45 = serializableNode33.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode47 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        java.lang.Class<?> wildcardClass48 = serializableNode47.getClass();
        serializableNode45.data = wildcardClass48;
        serializableNode45.rank = (short) 100;
        serializableNode30.parent = serializableNode45;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode53 = serializableNode45.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode54 = serializableNode53.parent;
        serializableNode53.rank = (byte) -1;
        java.io.Serializable serializable57 = serializableNode53.data;
        serializableNode5.data = serializable57;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertNotNull(serializableNode14);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 10 + "'", int17 == 10);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertEquals("'" + serializable25 + "' != '" + 10L + "'", serializable25, 10L);
        org.junit.Assert.assertNotNull(serializableNode28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(serializableNode30);
        org.junit.Assert.assertNotNull(serializableNode31);
        org.junit.Assert.assertEquals("'" + serializable34 + "' != '" + 10L + "'", serializable34, 10L);
        org.junit.Assert.assertNotNull(serializableNode35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertEquals("'" + serializable37 + "' != '" + 10L + "'", serializable37, 10L);
        org.junit.Assert.assertNotNull(serializableNode40);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(serializableNode45);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(serializableNode53);
        org.junit.Assert.assertNotNull(serializableNode54);
        org.junit.Assert.assertNotNull(serializable57);
    }

    @Test
    public void test0854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0854");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable8 = serializableNode7.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode7.parent;
        serializableNode5.parent = serializableNode9;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int13 = serializableNode12.rank;
        int int14 = serializableNode12.rank;
        java.io.Serializable serializable15 = serializableNode12.data;
        serializableNode12.rank = (byte) 1;
        java.lang.Class<?> wildcardClass18 = serializableNode12.getClass();
        serializableNode5.data = wildcardClass18;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode5.parent;
        serializableNode5.rank = (byte) -1;
        java.io.Serializable serializable24 = serializableNode5.data;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(serializableNode20);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertNotNull(serializable24);
    }

    @Test
    public void test0855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0855");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        java.io.Serializable serializable8 = serializableNode5.data;
        java.io.Serializable serializable9 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int12 = serializableNode11.rank;
        int int13 = serializableNode11.rank;
        java.io.Serializable serializable14 = serializableNode11.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode11.parent;
        java.lang.Class<?> wildcardClass16 = serializableNode15.getClass();
        serializableNode5.data = wildcardClass16;
        java.io.Serializable serializable18 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>(serializable18);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable22 = serializableNode21.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode21.parent;
        java.io.Serializable serializable24 = serializableNode23.data;
        serializableNode23.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = serializableNode23.parent;
        int int28 = serializableNode27.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = serializableNode27.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = serializableNode29.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) "");
        serializableNode32.rank = (byte) 100;
        serializableNode32.data = 'a';
        java.lang.Class<?> wildcardClass37 = serializableNode32.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode38 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass37);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode39 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass37);
        serializableNode39.rank = 0;
        int int42 = serializableNode39.rank;
        serializableNode29.parent = serializableNode39;
        serializableNode19.parent = serializableNode39;
        int int45 = serializableNode19.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode47 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode48 = serializableNode47.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode49 = serializableNode47.parent;
        serializableNode19.parent = serializableNode47;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(serializable18);
        org.junit.Assert.assertEquals("'" + serializable22 + "' != '" + 10L + "'", serializable22, 10L);
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertEquals("'" + serializable24 + "' != '" + 10L + "'", serializable24, 10L);
        org.junit.Assert.assertNotNull(serializableNode27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(serializableNode29);
        org.junit.Assert.assertNotNull(serializableNode30);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(serializableNode48);
        org.junit.Assert.assertNotNull(serializableNode49);
    }

    @Test
    public void test0856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0856");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = (short) -1;
        serializableNode1.rank = (short) -1;
        java.io.Serializable serializable8 = serializableNode1.data;
        int int9 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode1.parent;
        java.io.Serializable serializable11 = serializableNode10.data;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
    }

    @Test
    public void test0857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0857");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int10 = serializableNode9.rank;
        int int11 = serializableNode9.rank;
        java.io.Serializable serializable12 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode9.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable16 = serializableNode15.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode15.parent;
        serializableNode13.parent = serializableNode17;
        int int19 = serializableNode17.rank;
        serializableNode7.parent = serializableNode17;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (short) -1);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode22.parent;
        serializableNode7.parent = serializableNode22;
        serializableNode22.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = serializableNode22.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = serializableNode27.parent;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertNotNull(serializableNode27);
        org.junit.Assert.assertNotNull(serializableNode28);
    }

    @Test
    public void test0858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0858");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        serializableNode1.rank = (short) 10;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) "");
        serializableNode9.rank = (byte) 100;
        serializableNode1.parent = serializableNode9;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int15 = serializableNode14.rank;
        int int16 = serializableNode14.rank;
        java.io.Serializable serializable17 = serializableNode14.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode14.parent;
        java.io.Serializable serializable19 = serializableNode18.data;
        int int20 = serializableNode18.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode18.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = serializableNode18.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode22.parent;
        serializableNode1.parent = serializableNode22;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int27 = serializableNode26.rank;
        int int28 = serializableNode26.rank;
        java.io.Serializable serializable29 = serializableNode26.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = serializableNode26.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable33 = serializableNode32.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = serializableNode32.parent;
        serializableNode30.parent = serializableNode34;
        int int36 = serializableNode34.rank;
        serializableNode34.rank = (byte) 0;
        serializableNode34.rank = (byte) 1;
        int int41 = serializableNode34.rank;
        java.io.Serializable serializable42 = serializableNode34.data;
        serializableNode1.parent = serializableNode34;
        java.lang.Class<?> wildcardClass44 = serializableNode1.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode45 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass44);
        java.io.Serializable serializable46 = serializableNode45.data;
        java.lang.Class<?> wildcardClass47 = serializableNode45.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertEquals("'" + serializable17 + "' != '" + 10L + "'", serializable17, 10L);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertEquals("'" + serializable19 + "' != '" + 10L + "'", serializable19, 10L);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertNotNull(serializableNode22);
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertEquals("'" + serializable29 + "' != '" + 10L + "'", serializable29, 10L);
        org.junit.Assert.assertNotNull(serializableNode30);
        org.junit.Assert.assertEquals("'" + serializable33 + "' != '" + 10L + "'", serializable33, 10L);
        org.junit.Assert.assertNotNull(serializableNode34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertEquals("'" + serializable42 + "' != '" + 10L + "'", serializable42, 10L);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(serializable46);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test0859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0859");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode2 = serializableNode1.parent;
        serializableNode2.rank = (byte) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int7 = serializableNode6.rank;
        int int8 = serializableNode6.rank;
        java.io.Serializable serializable9 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable12 = serializableNode11.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode11.parent;
        serializableNode6.parent = serializableNode11;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode11.parent;
        serializableNode2.parent = serializableNode15;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode2.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode17.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode18.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = serializableNode19.parent;
        java.io.Serializable serializable21 = serializableNode19.data;
        org.junit.Assert.assertNotNull(serializableNode2);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertNotNull(serializableNode20);
        org.junit.Assert.assertEquals("'" + serializable21 + "' != '" + 10L + "'", serializable21, 10L);
    }

    @Test
    public void test0860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0860");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        int int4 = serializableNode1.rank;
        java.io.Serializable serializable5 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode7.parent;
        serializableNode7.rank = (byte) 100;
        java.lang.Class<?> wildcardClass11 = serializableNode7.getClass();
        serializableNode1.data = wildcardClass11;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        java.lang.Class<?> wildcardClass16 = serializableNode15.getClass();
        serializableNode13.data = wildcardClass16;
        int int18 = serializableNode13.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int21 = serializableNode20.rank;
        int int22 = serializableNode20.rank;
        java.io.Serializable serializable23 = serializableNode20.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode20.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = serializableNode20.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable28 = serializableNode27.data;
        int int29 = serializableNode27.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode27.parent = serializableNode31;
        serializableNode25.parent = serializableNode27;
        int int34 = serializableNode25.rank;
        java.lang.Class<?> wildcardClass35 = serializableNode25.getClass();
        serializableNode13.data = wildcardClass35;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode38 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable39 = serializableNode38.data;
        int int40 = serializableNode38.rank;
        serializableNode38.rank = 'a';
        java.lang.Class<?> wildcardClass43 = serializableNode38.getClass();
        serializableNode13.data = wildcardClass43;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + serializable5 + "' != '" + 10L + "'", serializable5, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertNotNull(serializableNode25);
        org.junit.Assert.assertEquals("'" + serializable28 + "' != '" + 10L + "'", serializable28, 10L);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertEquals("'" + serializable39 + "' != '" + 10L + "'", serializable39, 10L);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test0861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0861");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        int int7 = serializableNode5.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode8.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode9.parent;
        int int11 = serializableNode10.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode10.parent;
        serializableNode12.rank = (byte) 0;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(serializableNode12);
    }

    @Test
    public void test0862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0862");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        serializableNode1.rank = (byte) 10;
        serializableNode1.data = 10L;
        serializableNode1.rank = ' ';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode1.parent;
        int int14 = serializableNode1.rank;
        int int15 = serializableNode1.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 32 + "'", int14 == 32);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 32 + "'", int15 == 32);
    }

    @Test
    public void test0863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0863");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = (short) -1;
        serializableNode1.rank = (short) -1;
        java.io.Serializable serializable8 = serializableNode1.data;
        int int9 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 'a');
        serializableNode1.parent = serializableNode11;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = serializableNode1.parent;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertNotNull(serializableNode14);
    }

    @Test
    public void test0864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0864");
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.constant.ConstantDesc> constantDescNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.constant.ConstantDesc>((java.lang.constant.ConstantDesc) 0.0d);
    }

    @Test
    public void test0865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0865");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        java.io.Serializable serializable7 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int10 = serializableNode9.rank;
        int int11 = serializableNode9.rank;
        java.io.Serializable serializable12 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode9.parent;
        java.io.Serializable serializable14 = serializableNode13.data;
        int int15 = serializableNode13.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode13.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode16.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode17.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode17.parent;
        serializableNode6.parent = serializableNode19;
        serializableNode19.rank = (byte) 100;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode19.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.Object> objNode24 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.Object>((java.lang.Object) serializableNode19);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = serializableNode19.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = serializableNode19.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = serializableNode19.parent;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertNotNull(serializableNode25);
        org.junit.Assert.assertNotNull(serializableNode26);
        org.junit.Assert.assertNotNull(serializableNode27);
    }

    @Test
    public void test0866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0866");
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.constant.ConstantDesc> constantDescNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.constant.ConstantDesc>((java.lang.constant.ConstantDesc) 10L);
    }

    @Test
    public void test0867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0867");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (-1L));
        java.io.Serializable serializable2 = serializableNode1.data;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + (-1L) + "'", serializable2, (-1L));
    }

    @Test
    public void test0868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0868");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode1.parent = serializableNode5;
        serializableNode1.data = '#';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int11 = serializableNode10.rank;
        int int12 = serializableNode10.rank;
        serializableNode10.data = (short) 100;
        serializableNode1.parent = serializableNode10;
        java.io.Serializable serializable16 = serializableNode10.data;
        int int17 = serializableNode10.rank;
        serializableNode10.rank = 10;
        java.io.Serializable serializable20 = serializableNode10.data;
        java.lang.Class<?> wildcardClass21 = serializable20.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>(serializable20);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) "");
        serializableNode24.rank = (byte) 100;
        serializableNode24.data = 'a';
        java.lang.Class<?> wildcardClass29 = serializableNode24.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass29);
        int int31 = serializableNode30.rank;
        serializableNode30.rank = 1;
        serializableNode22.parent = serializableNode30;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode36 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int37 = serializableNode36.rank;
        int int38 = serializableNode36.rank;
        java.io.Serializable serializable39 = serializableNode36.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode40 = serializableNode36.parent;
        java.io.Serializable serializable41 = serializableNode40.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode42 = serializableNode40.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode44 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int45 = serializableNode44.rank;
        int int46 = serializableNode44.rank;
        java.io.Serializable serializable47 = serializableNode44.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode48 = serializableNode44.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode50 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable51 = serializableNode50.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode52 = serializableNode50.parent;
        serializableNode48.parent = serializableNode52;
        int int54 = serializableNode52.rank;
        serializableNode42.parent = serializableNode52;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode57 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (short) -1);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode58 = serializableNode57.parent;
        serializableNode42.parent = serializableNode57;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode60 = serializableNode57.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode61 = serializableNode57.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode63 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int64 = serializableNode63.rank;
        int int65 = serializableNode63.rank;
        java.io.Serializable serializable66 = serializableNode63.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode67 = serializableNode63.parent;
        java.io.Serializable serializable68 = serializableNode67.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode69 = serializableNode67.parent;
        java.io.Serializable serializable70 = serializableNode67.data;
        java.io.Serializable serializable71 = serializableNode67.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode73 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int74 = serializableNode73.rank;
        int int75 = serializableNode73.rank;
        java.io.Serializable serializable76 = serializableNode73.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode77 = serializableNode73.parent;
        java.lang.Class<?> wildcardClass78 = serializableNode77.getClass();
        serializableNode67.data = wildcardClass78;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode80 = serializableNode67.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode82 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable83 = serializableNode82.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode84 = serializableNode82.parent;
        java.io.Serializable serializable85 = serializableNode84.data;
        serializableNode84.rank = (short) -1;
        java.lang.Class<?> wildcardClass88 = serializableNode84.getClass();
        serializableNode80.data = wildcardClass88;
        serializableNode80.rank = 1;
        serializableNode57.parent = serializableNode80;
        java.lang.Class<?> wildcardClass93 = serializableNode57.getClass();
        serializableNode22.data = wildcardClass93;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + (short) 100 + "'", serializable16, (short) 100);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertEquals("'" + serializable20 + "' != '" + (short) 100 + "'", serializable20, (short) 100);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertEquals("'" + serializable39 + "' != '" + 10L + "'", serializable39, 10L);
        org.junit.Assert.assertNotNull(serializableNode40);
        org.junit.Assert.assertEquals("'" + serializable41 + "' != '" + 10L + "'", serializable41, 10L);
        org.junit.Assert.assertNotNull(serializableNode42);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertEquals("'" + serializable47 + "' != '" + 10L + "'", serializable47, 10L);
        org.junit.Assert.assertNotNull(serializableNode48);
        org.junit.Assert.assertEquals("'" + serializable51 + "' != '" + 10L + "'", serializable51, 10L);
        org.junit.Assert.assertNotNull(serializableNode52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNotNull(serializableNode58);
        org.junit.Assert.assertNotNull(serializableNode60);
        org.junit.Assert.assertNotNull(serializableNode61);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertEquals("'" + serializable66 + "' != '" + 10L + "'", serializable66, 10L);
        org.junit.Assert.assertNotNull(serializableNode67);
        org.junit.Assert.assertEquals("'" + serializable68 + "' != '" + 10L + "'", serializable68, 10L);
        org.junit.Assert.assertNotNull(serializableNode69);
        org.junit.Assert.assertEquals("'" + serializable70 + "' != '" + 10L + "'", serializable70, 10L);
        org.junit.Assert.assertEquals("'" + serializable71 + "' != '" + 10L + "'", serializable71, 10L);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
        org.junit.Assert.assertEquals("'" + serializable76 + "' != '" + 10L + "'", serializable76, 10L);
        org.junit.Assert.assertNotNull(serializableNode77);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(serializableNode80);
        org.junit.Assert.assertEquals("'" + serializable83 + "' != '" + 10L + "'", serializable83, 10L);
        org.junit.Assert.assertNotNull(serializableNode84);
        org.junit.Assert.assertEquals("'" + serializable85 + "' != '" + 10L + "'", serializable85, 10L);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0869");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        serializableNode1.rank = (byte) 1;
        int int7 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode1.parent;
        java.io.Serializable serializable9 = serializableNode8.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode8.parent;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertNotNull(serializableNode10);
    }

    @Test
    public void test0870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0870");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable8 = serializableNode7.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode7.parent;
        serializableNode5.parent = serializableNode9;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int13 = serializableNode12.rank;
        int int14 = serializableNode12.rank;
        java.io.Serializable serializable15 = serializableNode12.data;
        serializableNode12.rank = (byte) 1;
        java.lang.Class<?> wildcardClass18 = serializableNode12.getClass();
        serializableNode5.data = wildcardClass18;
        java.io.Serializable serializable20 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>(serializable20);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(serializable20);
    }

    @Test
    public void test0871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0871");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable11 = serializableNode10.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode10.parent;
        java.io.Serializable serializable13 = serializableNode12.data;
        serializableNode12.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode12.parent;
        serializableNode8.parent = serializableNode16;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int20 = serializableNode19.rank;
        int int21 = serializableNode19.rank;
        java.io.Serializable serializable22 = serializableNode19.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode19.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable26 = serializableNode25.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = serializableNode25.parent;
        serializableNode23.parent = serializableNode27;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int31 = serializableNode30.rank;
        int int32 = serializableNode30.rank;
        java.io.Serializable serializable33 = serializableNode30.data;
        serializableNode30.rank = (byte) 1;
        java.lang.Class<?> wildcardClass36 = serializableNode30.getClass();
        serializableNode23.data = wildcardClass36;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode39 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable40 = serializableNode39.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = serializableNode39.parent;
        int int42 = serializableNode39.rank;
        java.io.Serializable serializable43 = serializableNode39.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode45 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode46 = serializableNode45.parent;
        serializableNode45.rank = (byte) 100;
        java.lang.Class<?> wildcardClass49 = serializableNode45.getClass();
        serializableNode39.data = wildcardClass49;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode51 = serializableNode39.parent;
        java.io.Serializable serializable52 = serializableNode39.data;
        serializableNode23.parent = serializableNode39;
        java.io.Serializable serializable54 = serializableNode39.data;
        serializableNode8.parent = serializableNode39;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertEquals("'" + serializable22 + "' != '" + 10L + "'", serializable22, 10L);
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertEquals("'" + serializable26 + "' != '" + 10L + "'", serializable26, 10L);
        org.junit.Assert.assertNotNull(serializableNode27);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertEquals("'" + serializable33 + "' != '" + 10L + "'", serializable33, 10L);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertEquals("'" + serializable40 + "' != '" + 10L + "'", serializable40, 10L);
        org.junit.Assert.assertNotNull(serializableNode41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertEquals("'" + serializable43 + "' != '" + 10L + "'", serializable43, 10L);
        org.junit.Assert.assertNotNull(serializableNode46);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(serializableNode51);
        org.junit.Assert.assertNotNull(serializable52);
        org.junit.Assert.assertNotNull(serializable54);
    }

    @Test
    public void test0872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0872");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        serializableNode1.rank = (byte) 10;
        int int9 = serializableNode1.rank;
        int int10 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int14 = serializableNode13.rank;
        int int15 = serializableNode13.rank;
        serializableNode13.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable20 = serializableNode19.data;
        int int21 = serializableNode19.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode19.parent = serializableNode23;
        java.lang.Class<?> wildcardClass25 = serializableNode23.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass25);
        serializableNode13.parent = serializableNode26;
        serializableNode11.parent = serializableNode13;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 10 + "'", int9 == 10);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 10 + "'", int10 == 10);
        org.junit.Assert.assertNotNull(serializableNode11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertEquals("'" + serializable20 + "' != '" + 10L + "'", serializable20, 10L);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test0873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0873");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        java.io.Serializable serializable8 = serializableNode5.data;
        java.io.Serializable serializable9 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int12 = serializableNode11.rank;
        int int13 = serializableNode11.rank;
        java.io.Serializable serializable14 = serializableNode11.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode11.parent;
        java.lang.Class<?> wildcardClass16 = serializableNode15.getClass();
        serializableNode5.data = wildcardClass16;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode5.parent;
        serializableNode18.rank = 'a';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int23 = serializableNode22.rank;
        int int24 = serializableNode22.rank;
        java.io.Serializable serializable25 = serializableNode22.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = serializableNode22.parent;
        java.io.Serializable serializable27 = serializableNode26.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = serializableNode26.parent;
        java.io.Serializable serializable29 = serializableNode26.data;
        java.io.Serializable serializable30 = serializableNode26.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int33 = serializableNode32.rank;
        int int34 = serializableNode32.rank;
        java.io.Serializable serializable35 = serializableNode32.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode36 = serializableNode32.parent;
        java.lang.Class<?> wildcardClass37 = serializableNode36.getClass();
        serializableNode26.data = wildcardClass37;
        java.io.Serializable serializable39 = serializableNode26.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode40 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>(serializable39);
        serializableNode40.data = 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode44 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int45 = serializableNode44.rank;
        int int46 = serializableNode44.rank;
        java.io.Serializable serializable47 = serializableNode44.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode48 = serializableNode44.parent;
        java.io.Serializable serializable49 = serializableNode48.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode50 = serializableNode48.parent;
        java.io.Serializable serializable51 = serializableNode48.data;
        java.io.Serializable serializable52 = serializableNode48.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode54 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int55 = serializableNode54.rank;
        int int56 = serializableNode54.rank;
        java.io.Serializable serializable57 = serializableNode54.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode58 = serializableNode54.parent;
        java.lang.Class<?> wildcardClass59 = serializableNode58.getClass();
        serializableNode48.data = wildcardClass59;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode61 = serializableNode48.parent;
        serializableNode61.rank = 'a';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode64 = serializableNode61.parent;
        serializableNode40.parent = serializableNode61;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode67 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int68 = serializableNode67.rank;
        int int69 = serializableNode67.rank;
        serializableNode67.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>> serializableNodeNode72 = new com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>>(serializableNode67);
        java.lang.Class<?> wildcardClass73 = serializableNode67.getClass();
        serializableNode40.data = wildcardClass73;
        serializableNode18.data = wildcardClass73;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertEquals("'" + serializable25 + "' != '" + 10L + "'", serializable25, 10L);
        org.junit.Assert.assertNotNull(serializableNode26);
        org.junit.Assert.assertEquals("'" + serializable27 + "' != '" + 10L + "'", serializable27, 10L);
        org.junit.Assert.assertNotNull(serializableNode28);
        org.junit.Assert.assertEquals("'" + serializable29 + "' != '" + 10L + "'", serializable29, 10L);
        org.junit.Assert.assertEquals("'" + serializable30 + "' != '" + 10L + "'", serializable30, 10L);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertEquals("'" + serializable35 + "' != '" + 10L + "'", serializable35, 10L);
        org.junit.Assert.assertNotNull(serializableNode36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(serializable39);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertEquals("'" + serializable47 + "' != '" + 10L + "'", serializable47, 10L);
        org.junit.Assert.assertNotNull(serializableNode48);
        org.junit.Assert.assertEquals("'" + serializable49 + "' != '" + 10L + "'", serializable49, 10L);
        org.junit.Assert.assertNotNull(serializableNode50);
        org.junit.Assert.assertEquals("'" + serializable51 + "' != '" + 10L + "'", serializable51, 10L);
        org.junit.Assert.assertEquals("'" + serializable52 + "' != '" + 10L + "'", serializable52, 10L);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertEquals("'" + serializable57 + "' != '" + 10L + "'", serializable57, 10L);
        org.junit.Assert.assertNotNull(serializableNode58);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(serializableNode61);
        org.junit.Assert.assertNotNull(serializableNode64);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test0874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0874");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        java.io.Serializable serializable7 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int10 = serializableNode9.rank;
        int int11 = serializableNode9.rank;
        java.io.Serializable serializable12 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode9.parent;
        java.io.Serializable serializable14 = serializableNode13.data;
        int int15 = serializableNode13.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode13.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode16.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode17.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode17.parent;
        serializableNode6.parent = serializableNode19;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int23 = serializableNode22.rank;
        int int24 = serializableNode22.rank;
        java.io.Serializable serializable25 = serializableNode22.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = serializableNode22.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable29 = serializableNode28.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = serializableNode28.parent;
        serializableNode26.parent = serializableNode30;
        int int32 = serializableNode30.rank;
        serializableNode30.data = (-1);
        int int35 = serializableNode30.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int38 = serializableNode37.rank;
        int int39 = serializableNode37.rank;
        java.io.Serializable serializable40 = serializableNode37.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = serializableNode37.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode42 = serializableNode37.parent;
        serializableNode37.rank = (byte) 10;
        serializableNode37.data = 10L;
        serializableNode30.parent = serializableNode37;
        serializableNode19.parent = serializableNode37;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode50 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable51 = serializableNode50.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode52 = serializableNode50.parent;
        java.io.Serializable serializable53 = serializableNode52.data;
        serializableNode52.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode56 = serializableNode52.parent;
        int int57 = serializableNode56.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode58 = serializableNode56.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode59 = serializableNode58.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode61 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable62 = serializableNode61.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode63 = serializableNode61.parent;
        int int64 = serializableNode61.rank;
        java.io.Serializable serializable65 = serializableNode61.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode67 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode68 = serializableNode67.parent;
        serializableNode67.rank = (byte) 100;
        java.lang.Class<?> wildcardClass71 = serializableNode67.getClass();
        serializableNode61.data = wildcardClass71;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode73 = serializableNode61.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode75 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        java.lang.Class<?> wildcardClass76 = serializableNode75.getClass();
        serializableNode73.data = wildcardClass76;
        serializableNode73.rank = (short) 100;
        serializableNode58.parent = serializableNode73;
        serializableNode37.parent = serializableNode73;
        serializableNode37.rank = (byte) 100;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertEquals("'" + serializable25 + "' != '" + 10L + "'", serializable25, 10L);
        org.junit.Assert.assertNotNull(serializableNode26);
        org.junit.Assert.assertEquals("'" + serializable29 + "' != '" + 10L + "'", serializable29, 10L);
        org.junit.Assert.assertNotNull(serializableNode30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertEquals("'" + serializable40 + "' != '" + 10L + "'", serializable40, 10L);
        org.junit.Assert.assertNotNull(serializableNode41);
        org.junit.Assert.assertNotNull(serializableNode42);
        org.junit.Assert.assertEquals("'" + serializable51 + "' != '" + 10L + "'", serializable51, 10L);
        org.junit.Assert.assertNotNull(serializableNode52);
        org.junit.Assert.assertEquals("'" + serializable53 + "' != '" + 10L + "'", serializable53, 10L);
        org.junit.Assert.assertNotNull(serializableNode56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNotNull(serializableNode58);
        org.junit.Assert.assertNotNull(serializableNode59);
        org.junit.Assert.assertEquals("'" + serializable62 + "' != '" + 10L + "'", serializable62, 10L);
        org.junit.Assert.assertNotNull(serializableNode63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertEquals("'" + serializable65 + "' != '" + 10L + "'", serializable65, 10L);
        org.junit.Assert.assertNotNull(serializableNode68);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(serializableNode73);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test0875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0875");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode1.parent = serializableNode5;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int9 = serializableNode8.rank;
        int int10 = serializableNode8.rank;
        java.io.Serializable serializable11 = serializableNode8.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode8.parent;
        java.io.Serializable serializable13 = serializableNode12.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = serializableNode12.parent;
        java.io.Serializable serializable15 = serializableNode12.data;
        java.io.Serializable serializable16 = serializableNode12.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int19 = serializableNode18.rank;
        int int20 = serializableNode18.rank;
        java.io.Serializable serializable21 = serializableNode18.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = serializableNode18.parent;
        java.lang.Class<?> wildcardClass23 = serializableNode22.getClass();
        serializableNode12.data = wildcardClass23;
        serializableNode1.data = wildcardClass23;
        serializableNode1.rank = 0;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = serializableNode1.parent;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode14);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertEquals("'" + serializable21 + "' != '" + 10L + "'", serializable21, 10L);
        org.junit.Assert.assertNotNull(serializableNode22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(serializableNode28);
    }

    @Test
    public void test0876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0876");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable7 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode6.parent;
        serializableNode1.parent = serializableNode6;
        int int10 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode1.parent;
        java.io.Serializable serializable13 = serializableNode12.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int16 = serializableNode15.rank;
        int int17 = serializableNode15.rank;
        java.io.Serializable serializable18 = serializableNode15.data;
        serializableNode15.rank = (byte) 1;
        serializableNode15.data = 10.0d;
        serializableNode15.rank = (byte) 100;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = serializableNode15.parent;
        int int26 = serializableNode15.rank;
        serializableNode12.parent = serializableNode15;
        serializableNode12.rank = (byte) 0;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(serializableNode11);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertEquals("'" + serializable18 + "' != '" + 10L + "'", serializable18, 10L);
        org.junit.Assert.assertNotNull(serializableNode25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 100 + "'", int26 == 100);
    }

    @Test
    public void test0877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0877");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode1.parent = serializableNode5;
        serializableNode1.data = '#';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int11 = serializableNode10.rank;
        int int12 = serializableNode10.rank;
        serializableNode10.data = (short) 100;
        serializableNode1.parent = serializableNode10;
        java.io.Serializable serializable16 = serializableNode10.data;
        int int17 = serializableNode10.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode10.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int21 = serializableNode20.rank;
        int int22 = serializableNode20.rank;
        serializableNode20.rank = (short) -1;
        serializableNode20.rank = (short) -1;
        java.io.Serializable serializable27 = serializableNode20.data;
        int int28 = serializableNode20.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 'a');
        serializableNode20.parent = serializableNode30;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = serializableNode30.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int35 = serializableNode34.rank;
        int int36 = serializableNode34.rank;
        java.io.Serializable serializable37 = serializableNode34.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode38 = serializableNode34.parent;
        java.io.Serializable serializable39 = serializableNode38.data;
        int int40 = serializableNode38.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = serializableNode38.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode42 = serializableNode41.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode44 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int45 = serializableNode44.rank;
        int int46 = serializableNode44.rank;
        java.io.Serializable serializable47 = serializableNode44.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode48 = serializableNode44.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode50 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable51 = serializableNode50.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode52 = serializableNode50.parent;
        serializableNode48.parent = serializableNode52;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode55 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int56 = serializableNode55.rank;
        int int57 = serializableNode55.rank;
        java.io.Serializable serializable58 = serializableNode55.data;
        serializableNode48.parent = serializableNode55;
        int int60 = serializableNode48.rank;
        java.io.Serializable serializable61 = serializableNode48.data;
        serializableNode42.parent = serializableNode48;
        serializableNode30.parent = serializableNode42;
        java.lang.Class<?> wildcardClass64 = serializableNode30.getClass();
        serializableNode10.data = wildcardClass64;
        serializableNode10.rank = (short) 100;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + (short) 100 + "'", serializable16, (short) 100);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertEquals("'" + serializable27 + "' != '" + 10L + "'", serializable27, 10L);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(serializableNode32);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertEquals("'" + serializable37 + "' != '" + 10L + "'", serializable37, 10L);
        org.junit.Assert.assertNotNull(serializableNode38);
        org.junit.Assert.assertEquals("'" + serializable39 + "' != '" + 10L + "'", serializable39, 10L);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(serializableNode41);
        org.junit.Assert.assertNotNull(serializableNode42);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertEquals("'" + serializable47 + "' != '" + 10L + "'", serializable47, 10L);
        org.junit.Assert.assertNotNull(serializableNode48);
        org.junit.Assert.assertEquals("'" + serializable51 + "' != '" + 10L + "'", serializable51, 10L);
        org.junit.Assert.assertNotNull(serializableNode52);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertEquals("'" + serializable58 + "' != '" + 10L + "'", serializable58, 10L);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertEquals("'" + serializable61 + "' != '" + 10L + "'", serializable61, 10L);
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test0878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0878");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable7 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode6.parent;
        serializableNode1.parent = serializableNode6;
        serializableNode1.data = true;
        serializableNode1.rank = 0;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        java.io.Serializable serializable16 = serializableNode15.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int19 = serializableNode18.rank;
        int int20 = serializableNode18.rank;
        java.io.Serializable serializable21 = serializableNode18.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = serializableNode18.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable25 = serializableNode24.data;
        int int26 = serializableNode24.rank;
        serializableNode24.rank = 'a';
        java.lang.Class<?> wildcardClass29 = serializableNode24.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass29);
        serializableNode18.data = wildcardClass29;
        com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>> serializableNodeNode32 = new com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>>(serializableNode18);
        serializableNode15.parent = serializableNode18;
        java.io.Serializable serializable34 = serializableNode18.data;
        java.lang.Class<?> wildcardClass35 = serializableNode18.getClass();
        serializableNode1.data = wildcardClass35;
        java.lang.Class<?> wildcardClass37 = serializableNode1.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10.0f + "'", serializable16, 10.0f);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertEquals("'" + serializable21 + "' != '" + 10L + "'", serializable21, 10L);
        org.junit.Assert.assertNotNull(serializableNode22);
        org.junit.Assert.assertEquals("'" + serializable25 + "' != '" + 10L + "'", serializable25, 10L);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(serializable34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test0879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0879");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) "");
        serializableNode1.rank = (byte) 100;
        serializableNode1.data = 'a';
        java.lang.Class<?> wildcardClass6 = serializableNode1.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass6);
        int int8 = serializableNode7.rank;
        serializableNode7.rank = 1;
        int int11 = serializableNode7.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode7.parent;
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(serializableNode12);
    }

    @Test
    public void test0880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0880");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable7 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode6.parent;
        serializableNode1.parent = serializableNode6;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode6.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int13 = serializableNode12.rank;
        int int14 = serializableNode12.rank;
        java.io.Serializable serializable15 = serializableNode12.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode12.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode12.parent;
        java.io.Serializable serializable18 = serializableNode17.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int21 = serializableNode20.rank;
        int int22 = serializableNode20.rank;
        java.io.Serializable serializable23 = serializableNode20.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode20.parent;
        java.io.Serializable serializable25 = serializableNode24.data;
        int int26 = serializableNode24.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = serializableNode24.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = serializableNode27.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = serializableNode28.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = serializableNode28.parent;
        serializableNode17.parent = serializableNode30;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int34 = serializableNode33.rank;
        int int35 = serializableNode33.rank;
        java.io.Serializable serializable36 = serializableNode33.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = serializableNode33.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode39 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable40 = serializableNode39.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = serializableNode39.parent;
        serializableNode37.parent = serializableNode41;
        int int43 = serializableNode41.rank;
        serializableNode41.data = (-1);
        int int46 = serializableNode41.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode48 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int49 = serializableNode48.rank;
        int int50 = serializableNode48.rank;
        java.io.Serializable serializable51 = serializableNode48.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode52 = serializableNode48.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode53 = serializableNode48.parent;
        serializableNode48.rank = (byte) 10;
        serializableNode48.data = 10L;
        serializableNode41.parent = serializableNode48;
        serializableNode30.parent = serializableNode48;
        serializableNode10.parent = serializableNode30;
        serializableNode30.rank = 0;
        java.lang.Class<?> wildcardClass63 = serializableNode30.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertEquals("'" + serializable18 + "' != '" + 10L + "'", serializable18, 10L);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertEquals("'" + serializable25 + "' != '" + 10L + "'", serializable25, 10L);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(serializableNode27);
        org.junit.Assert.assertNotNull(serializableNode28);
        org.junit.Assert.assertNotNull(serializableNode29);
        org.junit.Assert.assertNotNull(serializableNode30);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertEquals("'" + serializable36 + "' != '" + 10L + "'", serializable36, 10L);
        org.junit.Assert.assertNotNull(serializableNode37);
        org.junit.Assert.assertEquals("'" + serializable40 + "' != '" + 10L + "'", serializable40, 10L);
        org.junit.Assert.assertNotNull(serializableNode41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertEquals("'" + serializable51 + "' != '" + 10L + "'", serializable51, 10L);
        org.junit.Assert.assertNotNull(serializableNode52);
        org.junit.Assert.assertNotNull(serializableNode53);
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test0881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0881");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        java.lang.Class<?> wildcardClass4 = serializableNode1.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass4);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode5.parent;
        int int7 = serializableNode5.rank;
        serializableNode5.rank = 0;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
    }

    @Test
    public void test0882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0882");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode7.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode7.parent;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(serializableNode9);
    }

    @Test
    public void test0883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0883");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        java.lang.Class<?> wildcardClass4 = serializableNode1.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass4);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable9 = serializableNode8.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode8.parent;
        java.io.Serializable serializable11 = serializableNode10.data;
        serializableNode10.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = serializableNode10.parent;
        int int15 = serializableNode14.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode14.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode16.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable20 = serializableNode19.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode19.parent;
        int int22 = serializableNode19.rank;
        java.io.Serializable serializable23 = serializableNode19.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = serializableNode25.parent;
        serializableNode25.rank = (byte) 100;
        java.lang.Class<?> wildcardClass29 = serializableNode25.getClass();
        serializableNode19.data = wildcardClass29;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = serializableNode19.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        java.lang.Class<?> wildcardClass34 = serializableNode33.getClass();
        serializableNode31.data = wildcardClass34;
        serializableNode31.rank = (short) 100;
        serializableNode16.parent = serializableNode31;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode39 = serializableNode31.parent;
        java.lang.Class<?> wildcardClass40 = serializableNode31.getClass();
        serializableNode5.data = wildcardClass40;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode43 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable44 = serializableNode43.data;
        int int45 = serializableNode43.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode47 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode43.parent = serializableNode47;
        serializableNode43.data = '#';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode52 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int53 = serializableNode52.rank;
        int int54 = serializableNode52.rank;
        serializableNode52.data = (short) 100;
        serializableNode43.parent = serializableNode52;
        serializableNode5.parent = serializableNode52;
        int int59 = serializableNode52.rank;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertNotNull(serializableNode14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertEquals("'" + serializable20 + "' != '" + 10L + "'", serializable20, 10L);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertNotNull(serializableNode26);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(serializableNode31);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(serializableNode39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertEquals("'" + serializable44 + "' != '" + 10L + "'", serializable44, 10L);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
    }

    @Test
    public void test0884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0884");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        java.io.Serializable serializable4 = serializableNode3.data;
        serializableNode3.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode3.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode7.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (byte) 10);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int13 = serializableNode12.rank;
        int int14 = serializableNode12.rank;
        java.io.Serializable serializable15 = serializableNode12.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode12.parent;
        java.io.Serializable serializable17 = serializableNode16.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode16.parent;
        java.io.Serializable serializable19 = serializableNode16.data;
        java.io.Serializable serializable20 = serializableNode16.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int23 = serializableNode22.rank;
        int int24 = serializableNode22.rank;
        java.io.Serializable serializable25 = serializableNode22.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = serializableNode22.parent;
        java.lang.Class<?> wildcardClass27 = serializableNode26.getClass();
        serializableNode16.data = wildcardClass27;
        java.lang.Class<?> wildcardClass29 = serializableNode16.getClass();
        serializableNode10.data = wildcardClass29;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int33 = serializableNode32.rank;
        int int34 = serializableNode32.rank;
        java.io.Serializable serializable35 = serializableNode32.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode36 = serializableNode32.parent;
        java.io.Serializable serializable37 = serializableNode36.data;
        int int38 = serializableNode36.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode39 = serializableNode36.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode40 = serializableNode39.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = serializableNode40.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode42 = serializableNode40.parent;
        serializableNode10.parent = serializableNode42;
        serializableNode8.parent = serializableNode42;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertEquals("'" + serializable17 + "' != '" + 10L + "'", serializable17, 10L);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertEquals("'" + serializable19 + "' != '" + 10L + "'", serializable19, 10L);
        org.junit.Assert.assertEquals("'" + serializable20 + "' != '" + 10L + "'", serializable20, 10L);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertEquals("'" + serializable25 + "' != '" + 10L + "'", serializable25, 10L);
        org.junit.Assert.assertNotNull(serializableNode26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertEquals("'" + serializable35 + "' != '" + 10L + "'", serializable35, 10L);
        org.junit.Assert.assertNotNull(serializableNode36);
        org.junit.Assert.assertEquals("'" + serializable37 + "' != '" + 10L + "'", serializable37, 10L);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(serializableNode39);
        org.junit.Assert.assertNotNull(serializableNode40);
        org.junit.Assert.assertNotNull(serializableNode41);
        org.junit.Assert.assertNotNull(serializableNode42);
    }

    @Test
    public void test0885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0885");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        int int4 = serializableNode1.rank;
        java.io.Serializable serializable5 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode7.parent;
        serializableNode7.rank = (byte) 100;
        java.lang.Class<?> wildcardClass11 = serializableNode7.getClass();
        serializableNode1.data = wildcardClass11;
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.GenericDeclaration> genericDeclarationNode13 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.GenericDeclaration>((java.lang.reflect.GenericDeclaration) wildcardClass11);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass11);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode16.parent;
        serializableNode17.rank = (byte) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int22 = serializableNode21.rank;
        int int23 = serializableNode21.rank;
        java.io.Serializable serializable24 = serializableNode21.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable27 = serializableNode26.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = serializableNode26.parent;
        serializableNode21.parent = serializableNode26;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = serializableNode26.parent;
        serializableNode17.parent = serializableNode30;
        serializableNode14.parent = serializableNode17;
        serializableNode17.rank = (byte) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode35 = serializableNode17.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.Object> objNode36 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.Object>((java.lang.Object) serializableNode35);
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + serializable5 + "' != '" + 10L + "'", serializable5, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertEquals("'" + serializable24 + "' != '" + 10L + "'", serializable24, 10L);
        org.junit.Assert.assertEquals("'" + serializable27 + "' != '" + 10L + "'", serializable27, 10L);
        org.junit.Assert.assertNotNull(serializableNode28);
        org.junit.Assert.assertNotNull(serializableNode30);
        org.junit.Assert.assertNotNull(serializableNode35);
    }

    @Test
    public void test0886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0886");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        java.io.Serializable serializable4 = serializableNode3.data;
        serializableNode3.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode3.parent;
        int int8 = serializableNode3.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode3.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int12 = serializableNode11.rank;
        int int13 = serializableNode11.rank;
        java.io.Serializable serializable14 = serializableNode11.data;
        serializableNode11.data = (byte) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode11.parent;
        java.lang.Class<?> wildcardClass18 = serializableNode11.getClass();
        serializableNode3.data = wildcardClass18;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int22 = serializableNode21.rank;
        int int23 = serializableNode21.rank;
        java.io.Serializable serializable24 = serializableNode21.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = serializableNode21.parent;
        java.io.Serializable serializable26 = serializableNode25.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = serializableNode25.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = serializableNode25.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable31 = serializableNode30.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = serializableNode30.parent;
        java.io.Serializable serializable33 = serializableNode32.data;
        serializableNode32.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode36 = serializableNode32.parent;
        serializableNode28.parent = serializableNode36;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode39 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int40 = serializableNode39.rank;
        int int41 = serializableNode39.rank;
        java.io.Serializable serializable42 = serializableNode39.data;
        serializableNode39.rank = (byte) 1;
        int int45 = serializableNode39.rank;
        serializableNode39.rank = '#';
        serializableNode28.parent = serializableNode39;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode49 = serializableNode28.parent;
        java.lang.Class<?> wildcardClass50 = serializableNode28.getClass();
        serializableNode3.data = wildcardClass50;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertEquals("'" + serializable24 + "' != '" + 10L + "'", serializable24, 10L);
        org.junit.Assert.assertNotNull(serializableNode25);
        org.junit.Assert.assertEquals("'" + serializable26 + "' != '" + 10L + "'", serializable26, 10L);
        org.junit.Assert.assertNotNull(serializableNode27);
        org.junit.Assert.assertNotNull(serializableNode28);
        org.junit.Assert.assertEquals("'" + serializable31 + "' != '" + 10L + "'", serializable31, 10L);
        org.junit.Assert.assertNotNull(serializableNode32);
        org.junit.Assert.assertEquals("'" + serializable33 + "' != '" + 10L + "'", serializable33, 10L);
        org.junit.Assert.assertNotNull(serializableNode36);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertEquals("'" + serializable42 + "' != '" + 10L + "'", serializable42, 10L);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertNotNull(serializableNode49);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test0887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0887");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable7 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode6.parent;
        serializableNode1.parent = serializableNode6;
        int int10 = serializableNode1.rank;
        java.lang.Class<?> wildcardClass11 = serializableNode1.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass11);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass11);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int16 = serializableNode15.rank;
        int int17 = serializableNode15.rank;
        java.io.Serializable serializable18 = serializableNode15.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode15.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = serializableNode15.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable23 = serializableNode22.data;
        int int24 = serializableNode22.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode22.parent = serializableNode26;
        serializableNode20.parent = serializableNode22;
        int int29 = serializableNode20.rank;
        serializableNode20.data = ' ';
        serializableNode13.parent = serializableNode20;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = serializableNode20.parent;
        java.io.Serializable serializable34 = serializableNode33.data;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertEquals("'" + serializable18 + "' != '" + 10L + "'", serializable18, 10L);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertNotNull(serializableNode20);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(serializableNode33);
        org.junit.Assert.assertEquals("'" + serializable34 + "' != '" + 10L + "'", serializable34, 10L);
    }

    @Test
    public void test0888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0888");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int10 = serializableNode9.rank;
        int int11 = serializableNode9.rank;
        java.io.Serializable serializable12 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode9.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable16 = serializableNode15.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode15.parent;
        serializableNode13.parent = serializableNode17;
        int int19 = serializableNode17.rank;
        serializableNode7.parent = serializableNode17;
        com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>> serializableNodeNode21 = new com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>>(serializableNode7);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = serializableNode7.parent;
        int int23 = serializableNode7.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(serializableNode22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
    }

    @Test
    public void test0889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0889");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        int int4 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable7 = serializableNode6.data;
        int int8 = serializableNode6.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode6.parent = serializableNode10;
        serializableNode10.data = 0.0d;
        serializableNode1.parent = serializableNode10;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode1.parent;
        serializableNode1.rank = (short) 0;
        java.lang.Class<?> wildcardClass18 = serializableNode1.getClass();
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test0890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0890");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        int int7 = serializableNode5.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode8.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode9.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable13 = serializableNode12.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = serializableNode12.parent;
        int int15 = serializableNode12.rank;
        java.io.Serializable serializable16 = serializableNode12.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode18.parent;
        serializableNode18.rank = (byte) 100;
        java.lang.Class<?> wildcardClass22 = serializableNode18.getClass();
        serializableNode12.data = wildcardClass22;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode12.parent;
        java.io.Serializable serializable25 = serializableNode12.data;
        serializableNode10.data = serializable25;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable29 = serializableNode28.data;
        int int30 = serializableNode28.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode28.parent = serializableNode32;
        serializableNode28.data = '#';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int38 = serializableNode37.rank;
        int int39 = serializableNode37.rank;
        serializableNode37.data = (short) 100;
        serializableNode28.parent = serializableNode37;
        java.io.Serializable serializable43 = serializableNode37.data;
        int int44 = serializableNode37.rank;
        serializableNode37.rank = 10;
        java.io.Serializable serializable47 = serializableNode37.data;
        java.lang.Class<?> wildcardClass48 = serializable47.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode49 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>(serializable47);
        serializableNode10.parent = serializableNode49;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode51 = serializableNode10.parent;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertNotNull(serializable25);
        org.junit.Assert.assertEquals("'" + serializable29 + "' != '" + 10L + "'", serializable29, 10L);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertEquals("'" + serializable43 + "' != '" + (short) 100 + "'", serializable43, (short) 100);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertEquals("'" + serializable47 + "' != '" + (short) 100 + "'", serializable47, (short) 100);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(serializableNode51);
    }

    @Test
    public void test0891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0891");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        int int7 = serializableNode5.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode8.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int12 = serializableNode11.rank;
        int int13 = serializableNode11.rank;
        java.io.Serializable serializable14 = serializableNode11.data;
        serializableNode8.parent = serializableNode11;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int18 = serializableNode17.rank;
        int int19 = serializableNode17.rank;
        java.io.Serializable serializable20 = serializableNode17.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable23 = serializableNode22.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode22.parent;
        serializableNode17.parent = serializableNode22;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = serializableNode22.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int29 = serializableNode28.rank;
        int int30 = serializableNode28.rank;
        java.io.Serializable serializable31 = serializableNode28.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = serializableNode28.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = serializableNode28.parent;
        serializableNode28.rank = (byte) 10;
        int int36 = serializableNode28.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode38 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int39 = serializableNode38.rank;
        int int40 = serializableNode38.rank;
        java.io.Serializable serializable41 = serializableNode38.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode42 = serializableNode38.parent;
        java.lang.Class<?> wildcardClass43 = serializableNode38.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.AnnotatedElement> annotatedElementNode44 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.AnnotatedElement>((java.lang.reflect.AnnotatedElement) wildcardClass43);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode45 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass43);
        serializableNode28.data = wildcardClass43;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode48 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable49 = serializableNode48.data;
        int int50 = serializableNode48.rank;
        serializableNode48.rank = 'a';
        java.lang.Class<?> wildcardClass53 = serializableNode48.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.GenericDeclaration> genericDeclarationNode54 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.GenericDeclaration>((java.lang.reflect.GenericDeclaration) wildcardClass53);
        serializableNode28.data = wildcardClass53;
        serializableNode22.data = wildcardClass53;
        serializableNode11.data = wildcardClass53;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertEquals("'" + serializable20 + "' != '" + 10L + "'", serializable20, 10L);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertNotNull(serializableNode26);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertEquals("'" + serializable31 + "' != '" + 10L + "'", serializable31, 10L);
        org.junit.Assert.assertNotNull(serializableNode32);
        org.junit.Assert.assertNotNull(serializableNode33);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 10 + "'", int36 == 10);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertEquals("'" + serializable41 + "' != '" + 10L + "'", serializable41, 10L);
        org.junit.Assert.assertNotNull(serializableNode42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertEquals("'" + serializable49 + "' != '" + 10L + "'", serializable49, 10L);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test0892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0892");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        int int4 = serializableNode1.rank;
        java.io.Serializable serializable5 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode7.parent;
        serializableNode7.rank = (byte) 100;
        java.lang.Class<?> wildcardClass11 = serializableNode7.getClass();
        serializableNode1.data = wildcardClass11;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        java.lang.Class<?> wildcardClass16 = serializableNode15.getClass();
        serializableNode13.data = wildcardClass16;
        int int18 = serializableNode13.rank;
        int int19 = serializableNode13.rank;
        java.lang.Class<?> wildcardClass20 = serializableNode13.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass20);
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + serializable5 + "' != '" + 10L + "'", serializable5, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test0893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0893");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable9 = serializableNode8.data;
        int int10 = serializableNode8.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode8.parent = serializableNode12;
        serializableNode12.rank = 0;
        serializableNode12.data = 100;
        serializableNode6.parent = serializableNode12;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int21 = serializableNode20.rank;
        int int22 = serializableNode20.rank;
        serializableNode20.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>> serializableNodeNode25 = new com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>>(serializableNode20);
        serializableNode12.parent = serializableNode20;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int29 = serializableNode28.rank;
        int int30 = serializableNode28.rank;
        java.io.Serializable serializable31 = serializableNode28.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = serializableNode28.parent;
        java.io.Serializable serializable33 = serializableNode32.data;
        int int34 = serializableNode32.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode35 = serializableNode32.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int38 = serializableNode37.rank;
        int int39 = serializableNode37.rank;
        serializableNode37.rank = (short) -1;
        serializableNode37.rank = (short) -1;
        java.io.Serializable serializable44 = serializableNode37.data;
        int int45 = serializableNode37.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode46 = serializableNode37.parent;
        serializableNode32.parent = serializableNode37;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode48 = serializableNode32.parent;
        java.lang.Class<?> wildcardClass49 = serializableNode48.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode50 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass49);
        serializableNode12.parent = serializableNode50;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode53 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int54 = serializableNode53.rank;
        int int55 = serializableNode53.rank;
        java.io.Serializable serializable56 = serializableNode53.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode58 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable59 = serializableNode58.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode60 = serializableNode58.parent;
        serializableNode53.parent = serializableNode58;
        serializableNode53.data = true;
        serializableNode53.rank = 0;
        int int66 = serializableNode53.rank;
        serializableNode50.parent = serializableNode53;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode69 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int70 = serializableNode69.rank;
        int int71 = serializableNode69.rank;
        java.io.Serializable serializable72 = serializableNode69.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode73 = serializableNode69.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode74 = serializableNode69.parent;
        java.lang.Class<?> wildcardClass75 = serializableNode69.getClass();
        serializableNode53.data = wildcardClass75;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertEquals("'" + serializable31 + "' != '" + 10L + "'", serializable31, 10L);
        org.junit.Assert.assertNotNull(serializableNode32);
        org.junit.Assert.assertEquals("'" + serializable33 + "' != '" + 10L + "'", serializable33, 10L);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(serializableNode35);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertEquals("'" + serializable44 + "' != '" + 10L + "'", serializable44, 10L);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(serializableNode46);
        org.junit.Assert.assertNotNull(serializableNode48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertEquals("'" + serializable56 + "' != '" + 10L + "'", serializable56, 10L);
        org.junit.Assert.assertEquals("'" + serializable59 + "' != '" + 10L + "'", serializable59, 10L);
        org.junit.Assert.assertNotNull(serializableNode60);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertEquals("'" + serializable72 + "' != '" + 10L + "'", serializable72, 10L);
        org.junit.Assert.assertNotNull(serializableNode73);
        org.junit.Assert.assertNotNull(serializableNode74);
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test0894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0894");
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.constant.ConstantDesc> constantDescNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.constant.ConstantDesc>((java.lang.constant.ConstantDesc) (-1L));
    }

    @Test
    public void test0895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0895");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        java.io.Serializable serializable4 = serializableNode3.data;
        serializableNode3.rank = (short) -1;
        java.lang.Class<?> wildcardClass7 = serializableNode3.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass7);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass7);
        serializableNode9.rank = (short) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int14 = serializableNode13.rank;
        int int15 = serializableNode13.rank;
        java.io.Serializable serializable16 = serializableNode13.data;
        serializableNode13.rank = (byte) 1;
        serializableNode13.data = 10.0d;
        serializableNode13.rank = (byte) 100;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode13.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode13.parent;
        serializableNode9.parent = serializableNode13;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable28 = serializableNode27.data;
        int int29 = serializableNode27.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode27.parent = serializableNode31;
        serializableNode27.data = '#';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode36 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int37 = serializableNode36.rank;
        int int38 = serializableNode36.rank;
        serializableNode36.data = (short) 100;
        serializableNode27.parent = serializableNode36;
        java.io.Serializable serializable42 = serializableNode36.data;
        int int43 = serializableNode36.rank;
        serializableNode36.rank = 10;
        java.io.Serializable serializable46 = serializableNode36.data;
        serializableNode13.parent = serializableNode36;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode49 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int50 = serializableNode49.rank;
        int int51 = serializableNode49.rank;
        java.io.Serializable serializable52 = serializableNode49.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode53 = serializableNode49.parent;
        java.io.Serializable serializable54 = serializableNode53.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode55 = serializableNode53.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode56 = serializableNode53.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode58 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable59 = serializableNode58.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode60 = serializableNode58.parent;
        java.io.Serializable serializable61 = serializableNode60.data;
        serializableNode60.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode64 = serializableNode60.parent;
        serializableNode56.parent = serializableNode64;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode67 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable68 = serializableNode67.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode69 = serializableNode67.parent;
        int int70 = serializableNode67.rank;
        java.io.Serializable serializable71 = serializableNode67.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode73 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode74 = serializableNode73.parent;
        serializableNode73.rank = (byte) 100;
        java.lang.Class<?> wildcardClass77 = serializableNode73.getClass();
        serializableNode67.data = wildcardClass77;
        serializableNode64.parent = serializableNode67;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode81 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) "");
        java.lang.Class<?> wildcardClass82 = serializableNode81.getClass();
        serializableNode67.data = wildcardClass82;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode84 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass82);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode85 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass82);
        java.lang.Class<?> wildcardClass86 = serializableNode85.getClass();
        serializableNode13.data = wildcardClass86;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertEquals("'" + serializable28 + "' != '" + 10L + "'", serializable28, 10L);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertEquals("'" + serializable42 + "' != '" + (short) 100 + "'", serializable42, (short) 100);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertEquals("'" + serializable46 + "' != '" + (short) 100 + "'", serializable46, (short) 100);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertEquals("'" + serializable52 + "' != '" + 10L + "'", serializable52, 10L);
        org.junit.Assert.assertNotNull(serializableNode53);
        org.junit.Assert.assertEquals("'" + serializable54 + "' != '" + 10L + "'", serializable54, 10L);
        org.junit.Assert.assertNotNull(serializableNode55);
        org.junit.Assert.assertNotNull(serializableNode56);
        org.junit.Assert.assertEquals("'" + serializable59 + "' != '" + 10L + "'", serializable59, 10L);
        org.junit.Assert.assertNotNull(serializableNode60);
        org.junit.Assert.assertEquals("'" + serializable61 + "' != '" + 10L + "'", serializable61, 10L);
        org.junit.Assert.assertNotNull(serializableNode64);
        org.junit.Assert.assertEquals("'" + serializable68 + "' != '" + 10L + "'", serializable68, 10L);
        org.junit.Assert.assertNotNull(serializableNode69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertEquals("'" + serializable71 + "' != '" + 10L + "'", serializable71, 10L);
        org.junit.Assert.assertNotNull(serializableNode74);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test0896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0896");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (byte) 10);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int4 = serializableNode3.rank;
        int int5 = serializableNode3.rank;
        java.io.Serializable serializable6 = serializableNode3.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode3.parent;
        java.io.Serializable serializable8 = serializableNode7.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode7.parent;
        java.io.Serializable serializable10 = serializableNode7.data;
        java.io.Serializable serializable11 = serializableNode7.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int14 = serializableNode13.rank;
        int int15 = serializableNode13.rank;
        java.io.Serializable serializable16 = serializableNode13.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode13.parent;
        java.lang.Class<?> wildcardClass18 = serializableNode17.getClass();
        serializableNode7.data = wildcardClass18;
        java.lang.Class<?> wildcardClass20 = serializableNode7.getClass();
        serializableNode1.data = wildcardClass20;
        serializableNode1.rank = 32;
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertEquals("'" + serializable10 + "' != '" + 10L + "'", serializable10, 10L);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test0897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0897");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode1.parent = serializableNode5;
        serializableNode1.data = '#';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int11 = serializableNode10.rank;
        int int12 = serializableNode10.rank;
        serializableNode10.data = (short) 100;
        serializableNode1.parent = serializableNode10;
        java.io.Serializable serializable16 = serializableNode10.data;
        int int17 = serializableNode10.rank;
        serializableNode10.rank = 10;
        java.io.Serializable serializable20 = serializableNode10.data;
        serializableNode10.rank = 'a';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable25 = serializableNode24.data;
        int int26 = serializableNode24.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode24.parent = serializableNode28;
        serializableNode10.parent = serializableNode28;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = serializableNode10.parent;
        serializableNode31.rank = 97;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + (short) 100 + "'", serializable16, (short) 100);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertEquals("'" + serializable20 + "' != '" + (short) 100 + "'", serializable20, (short) 100);
        org.junit.Assert.assertEquals("'" + serializable25 + "' != '" + 10L + "'", serializable25, 10L);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(serializableNode31);
    }

    @Test
    public void test0898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0898");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 0);
    }

    @Test
    public void test0899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0899");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode2 = serializableNode1.parent;
        java.io.Serializable serializable3 = serializableNode1.data;
        java.io.Serializable serializable4 = serializableNode1.data;
        serializableNode1.rank = (short) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode1.parent;
        int int8 = serializableNode7.rank;
        org.junit.Assert.assertNotNull(serializableNode2);
        org.junit.Assert.assertEquals("'" + serializable3 + "' != '" + 10L + "'", serializable3, 10L);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
    }

    @Test
    public void test0900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0900");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        int int4 = serializableNode1.rank;
        java.io.Serializable serializable5 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode7.parent;
        serializableNode7.rank = (byte) 100;
        java.lang.Class<?> wildcardClass11 = serializableNode7.getClass();
        serializableNode1.data = wildcardClass11;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        java.lang.Class<?> wildcardClass16 = serializableNode15.getClass();
        serializableNode13.data = wildcardClass16;
        int int18 = serializableNode13.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int21 = serializableNode20.rank;
        int int22 = serializableNode20.rank;
        java.io.Serializable serializable23 = serializableNode20.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode20.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = serializableNode20.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable28 = serializableNode27.data;
        int int29 = serializableNode27.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode27.parent = serializableNode31;
        serializableNode25.parent = serializableNode27;
        int int34 = serializableNode25.rank;
        java.lang.Class<?> wildcardClass35 = serializableNode25.getClass();
        serializableNode13.data = wildcardClass35;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode38 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int39 = serializableNode38.rank;
        int int40 = serializableNode38.rank;
        java.io.Serializable serializable41 = serializableNode38.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode42 = serializableNode38.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode43 = serializableNode38.parent;
        serializableNode38.rank = (byte) 10;
        int int46 = serializableNode38.rank;
        java.lang.Class<?> wildcardClass47 = serializableNode38.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode48 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass47);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode49 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass47);
        serializableNode13.parent = serializableNode49;
        java.io.Serializable serializable51 = serializableNode13.data;
        java.io.Serializable serializable52 = serializableNode13.data;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + serializable5 + "' != '" + 10L + "'", serializable5, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertNotNull(serializableNode25);
        org.junit.Assert.assertEquals("'" + serializable28 + "' != '" + 10L + "'", serializable28, 10L);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertEquals("'" + serializable41 + "' != '" + 10L + "'", serializable41, 10L);
        org.junit.Assert.assertNotNull(serializableNode42);
        org.junit.Assert.assertNotNull(serializableNode43);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 10 + "'", int46 == 10);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(serializable51);
        org.junit.Assert.assertNotNull(serializable52);
    }

    @Test
    public void test0901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0901");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode2 = serializableNode1.parent;
        serializableNode2.rank = (byte) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int7 = serializableNode6.rank;
        int int8 = serializableNode6.rank;
        java.io.Serializable serializable9 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode6.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = serializableNode6.parent;
        serializableNode6.rank = (byte) 10;
        int int14 = serializableNode6.rank;
        serializableNode2.parent = serializableNode6;
        int int16 = serializableNode2.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int19 = serializableNode18.rank;
        int int20 = serializableNode18.rank;
        java.io.Serializable serializable21 = serializableNode18.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable24 = serializableNode23.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = serializableNode23.parent;
        serializableNode18.parent = serializableNode23;
        int int27 = serializableNode18.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = serializableNode18.parent;
        int int29 = serializableNode18.rank;
        serializableNode2.parent = serializableNode18;
        java.io.Serializable serializable31 = serializableNode2.data;
        java.io.Serializable serializable32 = serializableNode2.data;
        org.junit.Assert.assertNotNull(serializableNode2);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertNotNull(serializableNode11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 10 + "'", int14 == 10);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertEquals("'" + serializable21 + "' != '" + 10L + "'", serializable21, 10L);
        org.junit.Assert.assertEquals("'" + serializable24 + "' != '" + 10L + "'", serializable24, 10L);
        org.junit.Assert.assertNotNull(serializableNode25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(serializableNode28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertEquals("'" + serializable31 + "' != '" + 10L + "'", serializable31, 10L);
        org.junit.Assert.assertEquals("'" + serializable32 + "' != '" + 10L + "'", serializable32, 10L);
    }

    @Test
    public void test0902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0902");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode2 = serializableNode1.parent;
        serializableNode2.rank = (byte) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int7 = serializableNode6.rank;
        int int8 = serializableNode6.rank;
        java.io.Serializable serializable9 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable12 = serializableNode11.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode11.parent;
        serializableNode6.parent = serializableNode11;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode11.parent;
        serializableNode2.parent = serializableNode15;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode2.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode17.parent;
        int int19 = serializableNode18.rank;
        org.junit.Assert.assertNotNull(serializableNode2);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
    }

    @Test
    public void test0903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0903");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode2 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode4 = serializableNode1.parent;
        serializableNode4.data = 0.0f;
        serializableNode4.rank = 100;
        org.junit.Assert.assertNotNull(serializableNode2);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertNotNull(serializableNode4);
    }

    @Test
    public void test0904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0904");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode1.parent = serializableNode5;
        serializableNode1.data = '#';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int11 = serializableNode10.rank;
        int int12 = serializableNode10.rank;
        serializableNode10.data = (short) 100;
        serializableNode1.parent = serializableNode10;
        java.io.Serializable serializable16 = serializableNode10.data;
        int int17 = serializableNode10.rank;
        serializableNode10.rank = 10;
        java.io.Serializable serializable20 = serializableNode10.data;
        serializableNode10.rank = 'a';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode10.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode10.parent;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + (short) 100 + "'", serializable16, (short) 100);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertEquals("'" + serializable20 + "' != '" + (short) 100 + "'", serializable20, (short) 100);
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertNotNull(serializableNode24);
    }

    @Test
    public void test0905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0905");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        java.io.Serializable serializable4 = serializableNode3.data;
        serializableNode3.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode3.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode7.parent;
        java.io.Serializable serializable9 = serializableNode7.data;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
    }

    @Test
    public void test0906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0906");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        java.io.Serializable serializable4 = serializableNode3.data;
        serializableNode3.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode3.parent;
        int int8 = serializableNode7.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode7.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode9.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = serializableNode9.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable14 = serializableNode13.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode13.parent;
        java.io.Serializable serializable16 = serializableNode15.data;
        serializableNode15.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode15.parent;
        int int20 = serializableNode19.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode19.parent;
        java.lang.Class<?> wildcardClass22 = serializableNode19.getClass();
        serializableNode9.data = wildcardClass22;
        serializableNode9.rank = '4';
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertNotNull(serializableNode11);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test0907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0907");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode1.parent = serializableNode5;
        serializableNode1.data = '#';
        serializableNode1.rank = (byte) -1;
        java.io.Serializable serializable11 = serializableNode1.data;
        java.io.Serializable serializable12 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable15 = serializableNode14.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode14.parent;
        java.io.Serializable serializable17 = serializableNode16.data;
        serializableNode16.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = serializableNode16.parent;
        int int21 = serializableNode20.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = serializableNode20.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode22.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode22.parent;
        serializableNode24.rank = (short) 10;
        int int27 = serializableNode24.rank;
        serializableNode1.parent = serializableNode24;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + '#' + "'", serializable11, '#');
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + '#' + "'", serializable12, '#');
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertEquals("'" + serializable17 + "' != '" + 10L + "'", serializable17, 10L);
        org.junit.Assert.assertNotNull(serializableNode20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(serializableNode22);
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 10 + "'", int27 == 10);
    }

    @Test
    public void test0908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0908");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode4 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int5 = serializableNode4.rank;
        int int6 = serializableNode4.rank;
        java.io.Serializable serializable7 = serializableNode4.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode4.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable11 = serializableNode10.data;
        int int12 = serializableNode10.rank;
        serializableNode10.rank = 'a';
        java.lang.Class<?> wildcardClass15 = serializableNode10.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass15);
        serializableNode4.data = wildcardClass15;
        com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>> serializableNodeNode18 = new com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>>(serializableNode4);
        serializableNode1.parent = serializableNode4;
        java.io.Serializable serializable20 = serializableNode4.data;
        java.lang.Class<?> wildcardClass21 = serializable20.getClass();
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10.0f + "'", serializable2, 10.0f);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(serializable20);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test0909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0909");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable11 = serializableNode10.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode10.parent;
        java.io.Serializable serializable13 = serializableNode12.data;
        serializableNode12.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode12.parent;
        serializableNode8.parent = serializableNode16;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = null;
        serializableNode16.parent = serializableNode18;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode16);
    }

    @Test
    public void test0910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0910");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>> serializableNodeNode6 = new com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>>(serializableNode1);
        java.io.Serializable serializable7 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int10 = serializableNode9.rank;
        int int11 = serializableNode9.rank;
        java.io.Serializable serializable12 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode9.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = serializableNode9.parent;
        java.io.Serializable serializable15 = serializableNode14.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int18 = serializableNode17.rank;
        int int19 = serializableNode17.rank;
        java.io.Serializable serializable20 = serializableNode17.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode17.parent;
        java.io.Serializable serializable22 = serializableNode21.data;
        int int23 = serializableNode21.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode21.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = serializableNode24.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = serializableNode25.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = serializableNode25.parent;
        serializableNode14.parent = serializableNode27;
        serializableNode14.data = 10.0d;
        serializableNode1.parent = serializableNode14;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = serializableNode33.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode35 = serializableNode33.parent;
        java.io.Serializable serializable36 = serializableNode35.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode38 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int39 = serializableNode38.rank;
        int int40 = serializableNode38.rank;
        java.io.Serializable serializable41 = serializableNode38.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode42 = serializableNode38.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode44 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable45 = serializableNode44.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode46 = serializableNode44.parent;
        serializableNode42.parent = serializableNode46;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode49 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int50 = serializableNode49.rank;
        int int51 = serializableNode49.rank;
        java.io.Serializable serializable52 = serializableNode49.data;
        serializableNode49.rank = (byte) 1;
        java.lang.Class<?> wildcardClass55 = serializableNode49.getClass();
        serializableNode42.data = wildcardClass55;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode57 = serializableNode42.parent;
        serializableNode42.rank = 100;
        java.lang.Class<?> wildcardClass60 = serializableNode42.getClass();
        serializableNode35.data = wildcardClass60;
        serializableNode1.data = wildcardClass60;
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.constant.Constable> constableNode63 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.constant.Constable>((java.lang.constant.Constable) wildcardClass60);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertNotNull(serializableNode14);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertEquals("'" + serializable20 + "' != '" + 10L + "'", serializable20, 10L);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertEquals("'" + serializable22 + "' != '" + 10L + "'", serializable22, 10L);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertNotNull(serializableNode25);
        org.junit.Assert.assertNotNull(serializableNode26);
        org.junit.Assert.assertNotNull(serializableNode27);
        org.junit.Assert.assertNotNull(serializableNode34);
        org.junit.Assert.assertNotNull(serializableNode35);
        org.junit.Assert.assertEquals("'" + serializable36 + "' != '" + 10L + "'", serializable36, 10L);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertEquals("'" + serializable41 + "' != '" + 10L + "'", serializable41, 10L);
        org.junit.Assert.assertNotNull(serializableNode42);
        org.junit.Assert.assertEquals("'" + serializable45 + "' != '" + 10L + "'", serializable45, 10L);
        org.junit.Assert.assertNotNull(serializableNode46);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertEquals("'" + serializable52 + "' != '" + 10L + "'", serializable52, 10L);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(serializableNode57);
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test0911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0911");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = (short) -1;
        serializableNode1.rank = (short) -1;
        int int8 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int11 = serializableNode10.rank;
        int int12 = serializableNode10.rank;
        java.io.Serializable serializable13 = serializableNode10.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = serializableNode10.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable17 = serializableNode16.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode16.parent;
        serializableNode14.parent = serializableNode18;
        int int20 = serializableNode14.rank;
        serializableNode14.rank = 'a';
        java.lang.Class<?> wildcardClass23 = serializableNode14.getClass();
        serializableNode1.data = wildcardClass23;
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.Type> typeNode25 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.Type>((java.lang.reflect.Type) wildcardClass23);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode14);
        org.junit.Assert.assertEquals("'" + serializable17 + "' != '" + 10L + "'", serializable17, 10L);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test0912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0912");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int6 = serializableNode5.rank;
        int int7 = serializableNode5.rank;
        java.io.Serializable serializable8 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable11 = serializableNode10.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode10.parent;
        serializableNode5.parent = serializableNode10;
        serializableNode5.data = true;
        serializableNode1.parent = serializableNode5;
        serializableNode1.rank = '4';
        serializableNode1.rank = 0;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode1.parent;
        serializableNode1.rank = 35;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int26 = serializableNode25.rank;
        int int27 = serializableNode25.rank;
        java.io.Serializable serializable28 = serializableNode25.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = serializableNode25.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable32 = serializableNode31.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = serializableNode31.parent;
        serializableNode29.parent = serializableNode33;
        int int35 = serializableNode33.rank;
        serializableNode33.data = (-1);
        int int38 = serializableNode33.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode40 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int41 = serializableNode40.rank;
        int int42 = serializableNode40.rank;
        java.io.Serializable serializable43 = serializableNode40.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode44 = serializableNode40.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode45 = serializableNode40.parent;
        serializableNode40.rank = (byte) 10;
        serializableNode40.data = 10L;
        serializableNode33.parent = serializableNode40;
        serializableNode40.rank = (short) 0;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode53 = serializableNode40.parent;
        serializableNode1.parent = serializableNode53;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertEquals("'" + serializable28 + "' != '" + 10L + "'", serializable28, 10L);
        org.junit.Assert.assertNotNull(serializableNode29);
        org.junit.Assert.assertEquals("'" + serializable32 + "' != '" + 10L + "'", serializable32, 10L);
        org.junit.Assert.assertNotNull(serializableNode33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertEquals("'" + serializable43 + "' != '" + 10L + "'", serializable43, 10L);
        org.junit.Assert.assertNotNull(serializableNode44);
        org.junit.Assert.assertNotNull(serializableNode45);
        org.junit.Assert.assertNotNull(serializableNode53);
    }

    @Test
    public void test0913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0913");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        serializableNode1.rank = (byte) 1;
        serializableNode1.data = 10.0d;
        serializableNode1.rank = (byte) 100;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = serializableNode1.parent;
        int int12 = serializableNode1.rank;
        serializableNode1.rank = (byte) 0;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
    }

    @Test
    public void test0914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0914");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode4 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int5 = serializableNode4.rank;
        int int6 = serializableNode4.rank;
        java.io.Serializable serializable7 = serializableNode4.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode4.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable11 = serializableNode10.data;
        int int12 = serializableNode10.rank;
        serializableNode10.rank = 'a';
        java.lang.Class<?> wildcardClass15 = serializableNode10.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass15);
        serializableNode4.data = wildcardClass15;
        com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>> serializableNodeNode18 = new com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>>(serializableNode4);
        serializableNode1.parent = serializableNode4;
        java.io.Serializable serializable20 = serializableNode4.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable23 = serializableNode22.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode22.parent;
        int int25 = serializableNode22.rank;
        java.io.Serializable serializable26 = serializableNode22.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = serializableNode28.parent;
        serializableNode28.rank = (byte) 100;
        java.lang.Class<?> wildcardClass32 = serializableNode28.getClass();
        serializableNode22.data = wildcardClass32;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = serializableNode22.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode36 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        java.lang.Class<?> wildcardClass37 = serializableNode36.getClass();
        serializableNode34.data = wildcardClass37;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode40 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable41 = serializableNode40.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode42 = serializableNode40.parent;
        int int43 = serializableNode40.rank;
        java.io.Serializable serializable44 = serializableNode40.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode46 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode47 = serializableNode46.parent;
        serializableNode46.rank = (byte) 100;
        java.lang.Class<?> wildcardClass50 = serializableNode46.getClass();
        serializableNode40.data = wildcardClass50;
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.GenericDeclaration> genericDeclarationNode52 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.GenericDeclaration>((java.lang.reflect.GenericDeclaration) wildcardClass50);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode53 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass50);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode55 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode56 = serializableNode55.parent;
        serializableNode56.rank = (byte) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode60 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int61 = serializableNode60.rank;
        int int62 = serializableNode60.rank;
        java.io.Serializable serializable63 = serializableNode60.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode65 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable66 = serializableNode65.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode67 = serializableNode65.parent;
        serializableNode60.parent = serializableNode65;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode69 = serializableNode65.parent;
        serializableNode56.parent = serializableNode69;
        serializableNode53.parent = serializableNode56;
        serializableNode56.rank = (byte) -1;
        serializableNode34.parent = serializableNode56;
        java.lang.Class<?> wildcardClass75 = serializableNode56.getClass();
        serializableNode4.data = wildcardClass75;
        java.io.Serializable serializable77 = serializableNode4.data;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10.0f + "'", serializable2, 10.0f);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(serializable20);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertEquals("'" + serializable26 + "' != '" + 10L + "'", serializable26, 10L);
        org.junit.Assert.assertNotNull(serializableNode29);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(serializableNode34);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertEquals("'" + serializable41 + "' != '" + 10L + "'", serializable41, 10L);
        org.junit.Assert.assertNotNull(serializableNode42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertEquals("'" + serializable44 + "' != '" + 10L + "'", serializable44, 10L);
        org.junit.Assert.assertNotNull(serializableNode47);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(serializableNode56);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertEquals("'" + serializable63 + "' != '" + 10L + "'", serializable63, 10L);
        org.junit.Assert.assertEquals("'" + serializable66 + "' != '" + 10L + "'", serializable66, 10L);
        org.junit.Assert.assertNotNull(serializableNode67);
        org.junit.Assert.assertNotNull(serializableNode69);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(serializable77);
    }

    @Test
    public void test0915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0915");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        java.io.Serializable serializable4 = serializableNode3.data;
        serializableNode3.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode3.parent;
        int int8 = serializableNode7.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode7.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode9.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable13 = serializableNode12.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = serializableNode12.parent;
        int int15 = serializableNode12.rank;
        java.io.Serializable serializable16 = serializableNode12.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode18.parent;
        serializableNode18.rank = (byte) 100;
        java.lang.Class<?> wildcardClass22 = serializableNode18.getClass();
        serializableNode12.data = wildcardClass22;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode12.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        java.lang.Class<?> wildcardClass27 = serializableNode26.getClass();
        serializableNode24.data = wildcardClass27;
        serializableNode24.rank = (short) 100;
        serializableNode9.parent = serializableNode24;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable34 = serializableNode33.data;
        int int35 = serializableNode33.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode33.parent = serializableNode37;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode40 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int41 = serializableNode40.rank;
        int int42 = serializableNode40.rank;
        java.io.Serializable serializable43 = serializableNode40.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode44 = serializableNode40.parent;
        java.io.Serializable serializable45 = serializableNode44.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode46 = serializableNode44.parent;
        java.io.Serializable serializable47 = serializableNode44.data;
        java.io.Serializable serializable48 = serializableNode44.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode50 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int51 = serializableNode50.rank;
        int int52 = serializableNode50.rank;
        java.io.Serializable serializable53 = serializableNode50.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode54 = serializableNode50.parent;
        java.lang.Class<?> wildcardClass55 = serializableNode54.getClass();
        serializableNode44.data = wildcardClass55;
        serializableNode33.data = wildcardClass55;
        serializableNode33.rank = 0;
        serializableNode33.data = "";
        java.lang.Class<?> wildcardClass62 = serializableNode33.getClass();
        serializableNode9.data = wildcardClass62;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode65 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int66 = serializableNode65.rank;
        int int67 = serializableNode65.rank;
        java.io.Serializable serializable68 = serializableNode65.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode69 = serializableNode65.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode71 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable72 = serializableNode71.data;
        int int73 = serializableNode71.rank;
        serializableNode71.rank = 'a';
        java.lang.Class<?> wildcardClass76 = serializableNode71.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode77 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass76);
        serializableNode65.data = wildcardClass76;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode79 = serializableNode65.parent;
        serializableNode79.data = (short) 1;
        int int82 = serializableNode79.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode84 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        serializableNode84.rank = 0;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode88 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable89 = serializableNode88.data;
        int int90 = serializableNode88.rank;
        serializableNode84.parent = serializableNode88;
        serializableNode79.parent = serializableNode88;
        int int93 = serializableNode88.rank;
        java.io.Serializable serializable94 = serializableNode88.data;
        serializableNode9.parent = serializableNode88;
        serializableNode9.rank = (short) 1;
        int int98 = serializableNode9.rank;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertEquals("'" + serializable34 + "' != '" + 10L + "'", serializable34, 10L);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertEquals("'" + serializable43 + "' != '" + 10L + "'", serializable43, 10L);
        org.junit.Assert.assertNotNull(serializableNode44);
        org.junit.Assert.assertEquals("'" + serializable45 + "' != '" + 10L + "'", serializable45, 10L);
        org.junit.Assert.assertNotNull(serializableNode46);
        org.junit.Assert.assertEquals("'" + serializable47 + "' != '" + 10L + "'", serializable47, 10L);
        org.junit.Assert.assertEquals("'" + serializable48 + "' != '" + 10L + "'", serializable48, 10L);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertEquals("'" + serializable53 + "' != '" + 10L + "'", serializable53, 10L);
        org.junit.Assert.assertNotNull(serializableNode54);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertEquals("'" + serializable68 + "' != '" + 10L + "'", serializable68, 10L);
        org.junit.Assert.assertNotNull(serializableNode69);
        org.junit.Assert.assertEquals("'" + serializable72 + "' != '" + 10L + "'", serializable72, 10L);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(serializableNode79);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0);
        org.junit.Assert.assertEquals("'" + serializable89 + "' != '" + 10L + "'", serializable89, 10L);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 0 + "'", int90 == 0);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 0 + "'", int93 == 0);
        org.junit.Assert.assertEquals("'" + serializable94 + "' != '" + 10L + "'", serializable94, 10L);
        org.junit.Assert.assertTrue("'" + int98 + "' != '" + 1 + "'", int98 == 1);
    }

    @Test
    public void test0916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0916");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        java.io.Serializable serializable4 = serializableNode3.data;
        serializableNode3.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode3.parent;
        int int8 = serializableNode7.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode7.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode9.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = serializableNode9.parent;
        serializableNode11.rank = (short) 10;
        int int14 = serializableNode11.rank;
        java.io.Serializable serializable15 = serializableNode11.data;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertNotNull(serializableNode11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 10 + "'", int14 == 10);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
    }

    @Test
    public void test0917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0917");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int10 = serializableNode9.rank;
        int int11 = serializableNode9.rank;
        java.io.Serializable serializable12 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode9.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable16 = serializableNode15.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode15.parent;
        serializableNode13.parent = serializableNode17;
        int int19 = serializableNode17.rank;
        serializableNode7.parent = serializableNode17;
        int int21 = serializableNode17.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int24 = serializableNode23.rank;
        int int25 = serializableNode23.rank;
        java.io.Serializable serializable26 = serializableNode23.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = serializableNode23.parent;
        serializableNode23.rank = (short) 10;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) "");
        serializableNode31.rank = (byte) 100;
        serializableNode23.parent = serializableNode31;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode36 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int37 = serializableNode36.rank;
        int int38 = serializableNode36.rank;
        java.io.Serializable serializable39 = serializableNode36.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode40 = serializableNode36.parent;
        java.io.Serializable serializable41 = serializableNode40.data;
        int int42 = serializableNode40.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode43 = serializableNode40.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode44 = serializableNode40.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode45 = serializableNode44.parent;
        serializableNode23.parent = serializableNode44;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode48 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int49 = serializableNode48.rank;
        int int50 = serializableNode48.rank;
        java.io.Serializable serializable51 = serializableNode48.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode52 = serializableNode48.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode54 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable55 = serializableNode54.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode56 = serializableNode54.parent;
        serializableNode52.parent = serializableNode56;
        int int58 = serializableNode56.rank;
        serializableNode56.rank = (byte) 0;
        serializableNode56.rank = (byte) 1;
        int int63 = serializableNode56.rank;
        java.io.Serializable serializable64 = serializableNode56.data;
        serializableNode23.parent = serializableNode56;
        java.lang.Class<?> wildcardClass66 = serializableNode23.getClass();
        serializableNode17.data = wildcardClass66;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertEquals("'" + serializable26 + "' != '" + 10L + "'", serializable26, 10L);
        org.junit.Assert.assertNotNull(serializableNode27);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertEquals("'" + serializable39 + "' != '" + 10L + "'", serializable39, 10L);
        org.junit.Assert.assertNotNull(serializableNode40);
        org.junit.Assert.assertEquals("'" + serializable41 + "' != '" + 10L + "'", serializable41, 10L);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(serializableNode43);
        org.junit.Assert.assertNotNull(serializableNode44);
        org.junit.Assert.assertNotNull(serializableNode45);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertEquals("'" + serializable51 + "' != '" + 10L + "'", serializable51, 10L);
        org.junit.Assert.assertNotNull(serializableNode52);
        org.junit.Assert.assertEquals("'" + serializable55 + "' != '" + 10L + "'", serializable55, 10L);
        org.junit.Assert.assertNotNull(serializableNode56);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 1 + "'", int63 == 1);
        org.junit.Assert.assertEquals("'" + serializable64 + "' != '" + 10L + "'", serializable64, 10L);
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test0918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0918");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = (short) -1;
        serializableNode1.rank = (short) -1;
        java.io.Serializable serializable8 = serializableNode1.data;
        int int9 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode1.parent;
        java.io.Serializable serializable11 = serializableNode1.data;
        serializableNode1.rank = 1;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
    }

    @Test
    public void test0919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0919");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        int int4 = serializableNode1.rank;
        java.io.Serializable serializable5 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode7.parent;
        serializableNode7.rank = (byte) 100;
        java.lang.Class<?> wildcardClass11 = serializableNode7.getClass();
        serializableNode1.data = wildcardClass11;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        java.lang.Class<?> wildcardClass16 = serializableNode15.getClass();
        serializableNode13.data = wildcardClass16;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int20 = serializableNode19.rank;
        int int21 = serializableNode19.rank;
        java.io.Serializable serializable22 = serializableNode19.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode19.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable26 = serializableNode25.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = serializableNode25.parent;
        serializableNode23.parent = serializableNode27;
        int int29 = serializableNode27.rank;
        serializableNode27.data = (-1);
        int int32 = serializableNode27.rank;
        serializableNode13.parent = serializableNode27;
        serializableNode27.rank = '#';
        serializableNode27.rank = 'a';
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + serializable5 + "' != '" + 10L + "'", serializable5, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertEquals("'" + serializable22 + "' != '" + 10L + "'", serializable22, 10L);
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertEquals("'" + serializable26 + "' != '" + 10L + "'", serializable26, 10L);
        org.junit.Assert.assertNotNull(serializableNode27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
    }

    @Test
    public void test0920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0920");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode1.parent = serializableNode5;
        java.lang.Class<?> wildcardClass7 = serializableNode5.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass7);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode8.parent;
        int int10 = serializableNode9.rank;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
    }

    @Test
    public void test0921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0921");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable7 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode6.parent;
        serializableNode1.parent = serializableNode6;
        int int10 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int13 = serializableNode12.rank;
        int int14 = serializableNode12.rank;
        java.io.Serializable serializable15 = serializableNode12.data;
        serializableNode12.rank = (byte) 1;
        java.lang.Class<?> wildcardClass18 = serializableNode12.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass18);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass18);
        serializableNode1.parent = serializableNode20;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test0922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0922");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        serializableNode1.rank = (byte) 1;
        serializableNode1.data = 10.0d;
        serializableNode1.rank = (byte) 100;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) "");
        serializableNode14.rank = (byte) 100;
        serializableNode14.data = 'a';
        java.lang.Class<?> wildcardClass19 = serializableNode14.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass19);
        serializableNode12.parent = serializableNode20;
        java.lang.Class<?> wildcardClass22 = serializableNode12.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.GenericDeclaration> genericDeclarationNode23 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.GenericDeclaration>((java.lang.reflect.GenericDeclaration) wildcardClass22);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode11);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test0923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0923");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        java.lang.Class<?> wildcardClass7 = serializableNode1.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass7);
        serializableNode8.rank = 100;
        java.io.Serializable serializable11 = serializableNode8.data;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(serializable11);
    }

    @Test
    public void test0924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0924");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int10 = serializableNode9.rank;
        int int11 = serializableNode9.rank;
        java.io.Serializable serializable12 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode9.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable16 = serializableNode15.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode15.parent;
        serializableNode13.parent = serializableNode17;
        int int19 = serializableNode17.rank;
        serializableNode7.parent = serializableNode17;
        java.io.Serializable serializable21 = serializableNode17.data;
        int int22 = serializableNode17.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertEquals("'" + serializable21 + "' != '" + 10L + "'", serializable21, 10L);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
    }

    @Test
    public void test0925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0925");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        int int4 = serializableNode1.rank;
        java.io.Serializable serializable5 = serializableNode1.data;
        java.io.Serializable serializable6 = serializableNode1.data;
        serializableNode1.rank = 0;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + serializable5 + "' != '" + 10L + "'", serializable5, 10L);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
    }

    @Test
    public void test0926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0926");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable9 = serializableNode8.data;
        int int10 = serializableNode8.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode8.parent = serializableNode12;
        serializableNode12.rank = 0;
        serializableNode12.data = 100;
        serializableNode6.parent = serializableNode12;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int21 = serializableNode20.rank;
        int int22 = serializableNode20.rank;
        serializableNode20.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>> serializableNodeNode25 = new com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>>(serializableNode20);
        serializableNode12.parent = serializableNode20;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int29 = serializableNode28.rank;
        int int30 = serializableNode28.rank;
        java.io.Serializable serializable31 = serializableNode28.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = serializableNode28.parent;
        java.io.Serializable serializable33 = serializableNode32.data;
        int int34 = serializableNode32.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode35 = serializableNode32.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int38 = serializableNode37.rank;
        int int39 = serializableNode37.rank;
        serializableNode37.rank = (short) -1;
        serializableNode37.rank = (short) -1;
        java.io.Serializable serializable44 = serializableNode37.data;
        int int45 = serializableNode37.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode46 = serializableNode37.parent;
        serializableNode32.parent = serializableNode37;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode48 = serializableNode32.parent;
        java.lang.Class<?> wildcardClass49 = serializableNode48.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode50 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass49);
        serializableNode12.parent = serializableNode50;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode53 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int54 = serializableNode53.rank;
        int int55 = serializableNode53.rank;
        java.io.Serializable serializable56 = serializableNode53.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode58 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable59 = serializableNode58.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode60 = serializableNode58.parent;
        serializableNode53.parent = serializableNode58;
        serializableNode53.data = true;
        serializableNode53.rank = 0;
        int int66 = serializableNode53.rank;
        serializableNode50.parent = serializableNode53;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode68 = serializableNode50.parent;
        serializableNode50.rank = ' ';
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertEquals("'" + serializable31 + "' != '" + 10L + "'", serializable31, 10L);
        org.junit.Assert.assertNotNull(serializableNode32);
        org.junit.Assert.assertEquals("'" + serializable33 + "' != '" + 10L + "'", serializable33, 10L);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(serializableNode35);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertEquals("'" + serializable44 + "' != '" + 10L + "'", serializable44, 10L);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(serializableNode46);
        org.junit.Assert.assertNotNull(serializableNode48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertEquals("'" + serializable56 + "' != '" + 10L + "'", serializable56, 10L);
        org.junit.Assert.assertEquals("'" + serializable59 + "' != '" + 10L + "'", serializable59, 10L);
        org.junit.Assert.assertNotNull(serializableNode60);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNotNull(serializableNode68);
    }

    @Test
    public void test0927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0927");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        java.io.Serializable serializable4 = serializableNode3.data;
        serializableNode3.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode3.parent;
        int int8 = serializableNode7.rank;
        java.io.Serializable serializable9 = serializableNode7.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode7.parent;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertNotNull(serializableNode10);
    }

    @Test
    public void test0928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0928");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable9 = serializableNode8.data;
        int int10 = serializableNode8.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode8.parent = serializableNode12;
        serializableNode12.rank = 0;
        serializableNode12.data = 100;
        serializableNode6.parent = serializableNode12;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int21 = serializableNode20.rank;
        int int22 = serializableNode20.rank;
        serializableNode20.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>> serializableNodeNode25 = new com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>>(serializableNode20);
        serializableNode12.parent = serializableNode20;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int29 = serializableNode28.rank;
        int int30 = serializableNode28.rank;
        java.io.Serializable serializable31 = serializableNode28.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = serializableNode28.parent;
        java.io.Serializable serializable33 = serializableNode32.data;
        int int34 = serializableNode32.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode35 = serializableNode32.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int38 = serializableNode37.rank;
        int int39 = serializableNode37.rank;
        serializableNode37.rank = (short) -1;
        serializableNode37.rank = (short) -1;
        java.io.Serializable serializable44 = serializableNode37.data;
        int int45 = serializableNode37.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode46 = serializableNode37.parent;
        serializableNode32.parent = serializableNode37;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode48 = serializableNode32.parent;
        java.lang.Class<?> wildcardClass49 = serializableNode48.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode50 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass49);
        serializableNode12.parent = serializableNode50;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode52 = serializableNode50.parent;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertEquals("'" + serializable31 + "' != '" + 10L + "'", serializable31, 10L);
        org.junit.Assert.assertNotNull(serializableNode32);
        org.junit.Assert.assertEquals("'" + serializable33 + "' != '" + 10L + "'", serializable33, 10L);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(serializableNode35);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertEquals("'" + serializable44 + "' != '" + 10L + "'", serializable44, 10L);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(serializableNode46);
        org.junit.Assert.assertNotNull(serializableNode48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(serializableNode52);
    }

    @Test
    public void test0929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0929");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable7 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode6.parent;
        serializableNode1.parent = serializableNode6;
        int int10 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable14 = serializableNode13.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode13.parent;
        java.lang.Class<?> wildcardClass16 = serializableNode13.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass16);
        java.io.Serializable serializable18 = serializableNode17.data;
        serializableNode11.parent = serializableNode17;
        serializableNode11.rank = (byte) 100;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(serializableNode11);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(serializable18);
    }

    @Test
    public void test0930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0930");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode6.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode7.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = serializableNode10.parent;
        serializableNode11.rank = (byte) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int16 = serializableNode15.rank;
        int int17 = serializableNode15.rank;
        java.io.Serializable serializable18 = serializableNode15.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable21 = serializableNode20.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = serializableNode20.parent;
        serializableNode15.parent = serializableNode20;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode20.parent;
        serializableNode11.parent = serializableNode24;
        serializableNode8.parent = serializableNode11;
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.CharSequence> charSequenceNode28 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.CharSequence>((java.lang.CharSequence) "");
        java.lang.Class<?> wildcardClass29 = charSequenceNode28.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass29);
        serializableNode11.parent = serializableNode30;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = serializableNode11.parent;
        java.lang.Class<?> wildcardClass33 = serializableNode32.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(serializableNode11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertEquals("'" + serializable18 + "' != '" + 10L + "'", serializable18, 10L);
        org.junit.Assert.assertEquals("'" + serializable21 + "' != '" + 10L + "'", serializable21, 10L);
        org.junit.Assert.assertNotNull(serializableNode22);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(serializableNode32);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test0931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0931");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode2 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode4 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 100L);
        serializableNode4.parent = serializableNode6;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int10 = serializableNode9.rank;
        int int11 = serializableNode9.rank;
        java.io.Serializable serializable12 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode9.parent;
        java.io.Serializable serializable14 = serializableNode13.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode13.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode13.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable19 = serializableNode18.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = serializableNode18.parent;
        java.io.Serializable serializable21 = serializableNode20.data;
        serializableNode20.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode20.parent;
        serializableNode16.parent = serializableNode24;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable28 = serializableNode27.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = serializableNode27.parent;
        int int30 = serializableNode27.rank;
        java.io.Serializable serializable31 = serializableNode27.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = serializableNode33.parent;
        serializableNode33.rank = (byte) 100;
        java.lang.Class<?> wildcardClass37 = serializableNode33.getClass();
        serializableNode27.data = wildcardClass37;
        serializableNode24.parent = serializableNode27;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable42 = serializableNode41.data;
        int int43 = serializableNode41.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode45 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int46 = serializableNode45.rank;
        int int47 = serializableNode45.rank;
        java.io.Serializable serializable48 = serializableNode45.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode50 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable51 = serializableNode50.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode52 = serializableNode50.parent;
        serializableNode45.parent = serializableNode50;
        serializableNode45.data = true;
        serializableNode41.parent = serializableNode45;
        serializableNode27.parent = serializableNode45;
        serializableNode4.parent = serializableNode27;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode59 = serializableNode27.parent;
        org.junit.Assert.assertNotNull(serializableNode2);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertNotNull(serializableNode4);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertEquals("'" + serializable19 + "' != '" + 10L + "'", serializable19, 10L);
        org.junit.Assert.assertNotNull(serializableNode20);
        org.junit.Assert.assertEquals("'" + serializable21 + "' != '" + 10L + "'", serializable21, 10L);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertEquals("'" + serializable28 + "' != '" + 10L + "'", serializable28, 10L);
        org.junit.Assert.assertNotNull(serializableNode29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertEquals("'" + serializable31 + "' != '" + 10L + "'", serializable31, 10L);
        org.junit.Assert.assertNotNull(serializableNode34);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertEquals("'" + serializable42 + "' != '" + 10L + "'", serializable42, 10L);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertEquals("'" + serializable48 + "' != '" + 10L + "'", serializable48, 10L);
        org.junit.Assert.assertEquals("'" + serializable51 + "' != '" + 10L + "'", serializable51, 10L);
        org.junit.Assert.assertNotNull(serializableNode52);
        org.junit.Assert.assertNotNull(serializableNode59);
    }

    @Test
    public void test0932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0932");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        java.lang.Class<?> wildcardClass4 = serializableNode1.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass4);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode5.parent;
        int int7 = serializableNode5.rank;
        int int8 = serializableNode5.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int12 = serializableNode11.rank;
        int int13 = serializableNode11.rank;
        java.io.Serializable serializable14 = serializableNode11.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode11.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable18 = serializableNode17.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode17.parent;
        serializableNode15.parent = serializableNode19;
        int int21 = serializableNode19.rank;
        serializableNode19.data = (-1);
        int int24 = serializableNode19.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int27 = serializableNode26.rank;
        int int28 = serializableNode26.rank;
        java.io.Serializable serializable29 = serializableNode26.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = serializableNode26.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = serializableNode26.parent;
        serializableNode26.rank = (byte) 10;
        serializableNode26.data = 10L;
        serializableNode19.parent = serializableNode26;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode38 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int39 = serializableNode38.rank;
        int int40 = serializableNode38.rank;
        java.io.Serializable serializable41 = serializableNode38.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode43 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable44 = serializableNode43.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode45 = serializableNode43.parent;
        serializableNode38.parent = serializableNode43;
        serializableNode38.rank = (short) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode50 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable51 = serializableNode50.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode52 = serializableNode50.parent;
        java.io.Serializable serializable53 = serializableNode52.data;
        serializableNode52.rank = (short) -1;
        int int56 = serializableNode52.rank;
        serializableNode38.parent = serializableNode52;
        serializableNode26.parent = serializableNode38;
        serializableNode9.parent = serializableNode26;
        int int60 = serializableNode26.rank;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertEquals("'" + serializable18 + "' != '" + 10L + "'", serializable18, 10L);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertEquals("'" + serializable29 + "' != '" + 10L + "'", serializable29, 10L);
        org.junit.Assert.assertNotNull(serializableNode30);
        org.junit.Assert.assertNotNull(serializableNode31);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertEquals("'" + serializable41 + "' != '" + 10L + "'", serializable41, 10L);
        org.junit.Assert.assertEquals("'" + serializable44 + "' != '" + 10L + "'", serializable44, 10L);
        org.junit.Assert.assertNotNull(serializableNode45);
        org.junit.Assert.assertEquals("'" + serializable51 + "' != '" + 10L + "'", serializable51, 10L);
        org.junit.Assert.assertNotNull(serializableNode52);
        org.junit.Assert.assertEquals("'" + serializable53 + "' != '" + 10L + "'", serializable53, 10L);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 10 + "'", int60 == 10);
    }

    @Test
    public void test0933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0933");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        java.io.Serializable serializable8 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int11 = serializableNode10.rank;
        int int12 = serializableNode10.rank;
        java.io.Serializable serializable13 = serializableNode10.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = serializableNode10.parent;
        java.io.Serializable serializable15 = serializableNode14.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode14.parent;
        java.io.Serializable serializable17 = serializableNode14.data;
        java.io.Serializable serializable18 = serializableNode14.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int21 = serializableNode20.rank;
        int int22 = serializableNode20.rank;
        java.io.Serializable serializable23 = serializableNode20.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode20.parent;
        java.lang.Class<?> wildcardClass25 = serializableNode24.getClass();
        serializableNode14.data = wildcardClass25;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = serializableNode14.parent;
        serializableNode5.parent = serializableNode14;
        java.lang.Class<?> wildcardClass29 = serializableNode14.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass29);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass29);
        java.io.Serializable serializable32 = serializableNode31.data;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode14);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertEquals("'" + serializable17 + "' != '" + 10L + "'", serializable17, 10L);
        org.junit.Assert.assertEquals("'" + serializable18 + "' != '" + 10L + "'", serializable18, 10L);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(serializableNode27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(serializable32);
    }

    @Test
    public void test0934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0934");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        serializableNode1.rank = 0;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable6 = serializableNode5.data;
        int int7 = serializableNode5.rank;
        serializableNode1.parent = serializableNode5;
        java.io.Serializable serializable9 = serializableNode1.data;
        java.io.Serializable serializable10 = serializableNode1.data;
        int int11 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode1.parent;
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10.0f + "'", serializable9, 10.0f);
        org.junit.Assert.assertEquals("'" + serializable10 + "' != '" + 10.0f + "'", serializable10, 10.0f);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(serializableNode12);
    }

    @Test
    public void test0935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0935");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        int int7 = serializableNode5.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode8.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode9.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = serializableNode9.parent;
        java.io.Serializable serializable12 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int15 = serializableNode14.rank;
        int int16 = serializableNode14.rank;
        java.io.Serializable serializable17 = serializableNode14.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode14.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode14.parent;
        serializableNode9.parent = serializableNode14;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertNotNull(serializableNode11);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertEquals("'" + serializable17 + "' != '" + 10L + "'", serializable17, 10L);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertNotNull(serializableNode19);
    }

    @Test
    public void test0936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0936");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        int int4 = serializableNode1.rank;
        java.io.Serializable serializable5 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode7.parent;
        serializableNode7.rank = (byte) 100;
        java.lang.Class<?> wildcardClass11 = serializableNode7.getClass();
        serializableNode1.data = wildcardClass11;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        java.lang.Class<?> wildcardClass16 = serializableNode15.getClass();
        serializableNode13.data = wildcardClass16;
        int int18 = serializableNode13.rank;
        serializableNode13.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode13.parent;
        java.io.Serializable serializable22 = serializableNode13.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int25 = serializableNode24.rank;
        int int26 = serializableNode24.rank;
        java.io.Serializable serializable27 = serializableNode24.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = serializableNode24.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = serializableNode24.parent;
        java.lang.Class<?> wildcardClass30 = serializableNode24.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass30);
        int int32 = serializableNode31.rank;
        serializableNode13.parent = serializableNode31;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + serializable5 + "' != '" + 10L + "'", serializable5, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertNotNull(serializable22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertEquals("'" + serializable27 + "' != '" + 10L + "'", serializable27, 10L);
        org.junit.Assert.assertNotNull(serializableNode28);
        org.junit.Assert.assertNotNull(serializableNode29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
    }

    @Test
    public void test0937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0937");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode1.parent = serializableNode5;
        serializableNode1.data = '#';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int11 = serializableNode10.rank;
        int int12 = serializableNode10.rank;
        serializableNode10.data = (short) 100;
        serializableNode1.parent = serializableNode10;
        java.io.Serializable serializable16 = serializableNode10.data;
        serializableNode10.rank = (short) 1;
        serializableNode10.data = 100.0d;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable23 = serializableNode22.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode22.parent;
        int int25 = serializableNode22.rank;
        java.io.Serializable serializable26 = serializableNode22.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = serializableNode28.parent;
        serializableNode28.rank = (byte) 100;
        java.lang.Class<?> wildcardClass32 = serializableNode28.getClass();
        serializableNode22.data = wildcardClass32;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = serializableNode22.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode36 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        java.lang.Class<?> wildcardClass37 = serializableNode36.getClass();
        serializableNode34.data = wildcardClass37;
        int int39 = serializableNode34.rank;
        int int40 = serializableNode34.rank;
        serializableNode10.parent = serializableNode34;
        int int42 = serializableNode34.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode44 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable45 = serializableNode44.data;
        int int46 = serializableNode44.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode48 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode44.parent = serializableNode48;
        serializableNode44.data = '#';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode53 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int54 = serializableNode53.rank;
        int int55 = serializableNode53.rank;
        serializableNode53.data = (short) 100;
        serializableNode44.parent = serializableNode53;
        java.io.Serializable serializable59 = serializableNode53.data;
        int int60 = serializableNode53.rank;
        serializableNode53.rank = 10;
        java.io.Serializable serializable63 = serializableNode53.data;
        serializableNode53.rank = 'a';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode67 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable68 = serializableNode67.data;
        int int69 = serializableNode67.rank;
        serializableNode67.rank = 'a';
        java.lang.Class<?> wildcardClass72 = serializableNode67.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode73 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass72);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode74 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass72);
        serializableNode53.data = wildcardClass72;
        serializableNode34.data = wildcardClass72;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + (short) 100 + "'", serializable16, (short) 100);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertEquals("'" + serializable26 + "' != '" + 10L + "'", serializable26, 10L);
        org.junit.Assert.assertNotNull(serializableNode29);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(serializableNode34);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertEquals("'" + serializable45 + "' != '" + 10L + "'", serializable45, 10L);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertEquals("'" + serializable59 + "' != '" + (short) 100 + "'", serializable59, (short) 100);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertEquals("'" + serializable63 + "' != '" + (short) 100 + "'", serializable63, (short) 100);
        org.junit.Assert.assertEquals("'" + serializable68 + "' != '" + 10L + "'", serializable68, 10L);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test0938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0938");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable7 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode6.parent;
        serializableNode1.parent = serializableNode6;
        int int10 = serializableNode1.rank;
        java.lang.Class<?> wildcardClass11 = serializableNode1.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass11);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass11);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int16 = serializableNode15.rank;
        int int17 = serializableNode15.rank;
        java.io.Serializable serializable18 = serializableNode15.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode15.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = serializableNode15.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable23 = serializableNode22.data;
        int int24 = serializableNode22.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode22.parent = serializableNode26;
        serializableNode20.parent = serializableNode22;
        int int29 = serializableNode20.rank;
        serializableNode20.data = ' ';
        serializableNode13.parent = serializableNode20;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int35 = serializableNode34.rank;
        int int36 = serializableNode34.rank;
        java.io.Serializable serializable37 = serializableNode34.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode38 = serializableNode34.parent;
        java.io.Serializable serializable39 = serializableNode38.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode40 = serializableNode38.parent;
        java.io.Serializable serializable41 = serializableNode38.data;
        java.io.Serializable serializable42 = serializableNode38.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode44 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int45 = serializableNode44.rank;
        int int46 = serializableNode44.rank;
        java.io.Serializable serializable47 = serializableNode44.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode48 = serializableNode44.parent;
        java.lang.Class<?> wildcardClass49 = serializableNode48.getClass();
        serializableNode38.data = wildcardClass49;
        java.io.Serializable serializable51 = serializableNode38.data;
        serializableNode20.data = serializable51;
        java.io.Serializable serializable53 = serializableNode20.data;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertEquals("'" + serializable18 + "' != '" + 10L + "'", serializable18, 10L);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertNotNull(serializableNode20);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertEquals("'" + serializable37 + "' != '" + 10L + "'", serializable37, 10L);
        org.junit.Assert.assertNotNull(serializableNode38);
        org.junit.Assert.assertEquals("'" + serializable39 + "' != '" + 10L + "'", serializable39, 10L);
        org.junit.Assert.assertNotNull(serializableNode40);
        org.junit.Assert.assertEquals("'" + serializable41 + "' != '" + 10L + "'", serializable41, 10L);
        org.junit.Assert.assertEquals("'" + serializable42 + "' != '" + 10L + "'", serializable42, 10L);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertEquals("'" + serializable47 + "' != '" + 10L + "'", serializable47, 10L);
        org.junit.Assert.assertNotNull(serializableNode48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(serializable51);
        org.junit.Assert.assertNotNull(serializable53);
    }

    @Test
    public void test0939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0939");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = (short) -1;
        serializableNode1.rank = (short) -1;
        java.io.Serializable serializable8 = serializableNode1.data;
        int int9 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 'a');
        serializableNode1.parent = serializableNode11;
        int int13 = serializableNode1.rank;
        java.io.Serializable serializable14 = serializableNode1.data;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
    }

    @Test
    public void test0940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0940");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        java.io.Serializable serializable8 = serializableNode5.data;
        java.io.Serializable serializable9 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int12 = serializableNode11.rank;
        int int13 = serializableNode11.rank;
        java.io.Serializable serializable14 = serializableNode11.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode11.parent;
        java.lang.Class<?> wildcardClass16 = serializableNode15.getClass();
        serializableNode5.data = wildcardClass16;
        java.io.Serializable serializable18 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = serializableNode5.parent;
        java.io.Serializable serializable21 = serializableNode20.data;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(serializable18);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertNotNull(serializableNode20);
        org.junit.Assert.assertNotNull(serializable21);
    }

    @Test
    public void test0941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0941");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) "");
        int int2 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode4 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 52);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int7 = serializableNode6.rank;
        int int8 = serializableNode6.rank;
        java.io.Serializable serializable9 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode6.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = serializableNode6.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable14 = serializableNode13.data;
        int int15 = serializableNode13.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode13.parent = serializableNode17;
        serializableNode11.parent = serializableNode13;
        serializableNode4.parent = serializableNode13;
        serializableNode1.parent = serializableNode13;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) "");
        serializableNode23.rank = (byte) 100;
        serializableNode23.data = 'a';
        java.lang.Class<?> wildcardClass28 = serializableNode23.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass28);
        int int30 = serializableNode29.rank;
        java.io.Serializable serializable31 = serializableNode29.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = null;
        serializableNode29.parent = serializableNode32;
        serializableNode1.parent = serializableNode29;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertNotNull(serializableNode11);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(serializable31);
    }

    @Test
    public void test0942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0942");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable11 = serializableNode10.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode10.parent;
        java.io.Serializable serializable13 = serializableNode12.data;
        serializableNode12.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode12.parent;
        serializableNode8.parent = serializableNode16;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode8.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable21 = serializableNode20.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = serializableNode20.parent;
        int int23 = serializableNode20.rank;
        java.io.Serializable serializable24 = serializableNode20.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = serializableNode26.parent;
        serializableNode26.rank = (byte) 100;
        java.lang.Class<?> wildcardClass30 = serializableNode26.getClass();
        serializableNode20.data = wildcardClass30;
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.GenericDeclaration> genericDeclarationNode32 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.GenericDeclaration>((java.lang.reflect.GenericDeclaration) wildcardClass30);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass30);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode35 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode36 = serializableNode35.parent;
        serializableNode36.rank = (byte) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode40 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int41 = serializableNode40.rank;
        int int42 = serializableNode40.rank;
        java.io.Serializable serializable43 = serializableNode40.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode45 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable46 = serializableNode45.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode47 = serializableNode45.parent;
        serializableNode40.parent = serializableNode45;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode49 = serializableNode45.parent;
        serializableNode36.parent = serializableNode49;
        serializableNode33.parent = serializableNode36;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode53 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int54 = serializableNode53.rank;
        int int55 = serializableNode53.rank;
        serializableNode53.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>> serializableNodeNode58 = new com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>>(serializableNode53);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode60 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int61 = serializableNode60.rank;
        int int62 = serializableNode60.rank;
        java.io.Serializable serializable63 = serializableNode60.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode64 = serializableNode60.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode66 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable67 = serializableNode66.data;
        int int68 = serializableNode66.rank;
        serializableNode66.rank = 'a';
        java.lang.Class<?> wildcardClass71 = serializableNode66.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode72 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass71);
        serializableNode60.data = wildcardClass71;
        serializableNode53.data = wildcardClass71;
        serializableNode36.data = wildcardClass71;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode76 = serializableNode36.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode78 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (-1.0d));
        int int79 = serializableNode78.rank;
        java.lang.Class<?> wildcardClass80 = serializableNode78.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode81 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass80);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode82 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass80);
        serializableNode76.data = wildcardClass80;
        serializableNode18.parent = serializableNode76;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertEquals("'" + serializable21 + "' != '" + 10L + "'", serializable21, 10L);
        org.junit.Assert.assertNotNull(serializableNode22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertEquals("'" + serializable24 + "' != '" + 10L + "'", serializable24, 10L);
        org.junit.Assert.assertNotNull(serializableNode27);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(serializableNode36);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertEquals("'" + serializable43 + "' != '" + 10L + "'", serializable43, 10L);
        org.junit.Assert.assertEquals("'" + serializable46 + "' != '" + 10L + "'", serializable46, 10L);
        org.junit.Assert.assertNotNull(serializableNode47);
        org.junit.Assert.assertNotNull(serializableNode49);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertEquals("'" + serializable63 + "' != '" + 10L + "'", serializable63, 10L);
        org.junit.Assert.assertNotNull(serializableNode64);
        org.junit.Assert.assertEquals("'" + serializable67 + "' != '" + 10L + "'", serializable67, 10L);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(serializableNode76);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test0943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0943");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable8 = serializableNode7.data;
        int int9 = serializableNode7.rank;
        serializableNode7.rank = 'a';
        java.lang.Class<?> wildcardClass12 = serializableNode7.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass12);
        serializableNode1.data = wildcardClass12;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode1.parent;
        serializableNode15.data = (short) 1;
        int int18 = serializableNode15.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable21 = serializableNode20.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = serializableNode20.parent;
        serializableNode22.rank = (short) 0;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int27 = serializableNode26.rank;
        int int28 = serializableNode26.rank;
        java.io.Serializable serializable29 = serializableNode26.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = serializableNode26.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = serializableNode26.parent;
        java.io.Serializable serializable32 = serializableNode31.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int35 = serializableNode34.rank;
        int int36 = serializableNode34.rank;
        java.io.Serializable serializable37 = serializableNode34.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode38 = serializableNode34.parent;
        java.io.Serializable serializable39 = serializableNode38.data;
        int int40 = serializableNode38.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = serializableNode38.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode42 = serializableNode41.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode43 = serializableNode42.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode44 = serializableNode42.parent;
        serializableNode31.parent = serializableNode44;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode47 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int48 = serializableNode47.rank;
        int int49 = serializableNode47.rank;
        java.io.Serializable serializable50 = serializableNode47.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode51 = serializableNode47.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode53 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable54 = serializableNode53.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode55 = serializableNode53.parent;
        serializableNode51.parent = serializableNode55;
        int int57 = serializableNode55.rank;
        serializableNode55.data = (-1);
        int int60 = serializableNode55.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode62 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int63 = serializableNode62.rank;
        int int64 = serializableNode62.rank;
        java.io.Serializable serializable65 = serializableNode62.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode66 = serializableNode62.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode67 = serializableNode62.parent;
        serializableNode62.rank = (byte) 10;
        serializableNode62.data = 10L;
        serializableNode55.parent = serializableNode62;
        serializableNode44.parent = serializableNode62;
        serializableNode22.parent = serializableNode44;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode75 = serializableNode44.parent;
        serializableNode15.parent = serializableNode44;
        serializableNode44.rank = 97;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode80 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 0.0d);
        int int81 = serializableNode80.rank;
        serializableNode44.parent = serializableNode80;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertEquals("'" + serializable21 + "' != '" + 10L + "'", serializable21, 10L);
        org.junit.Assert.assertNotNull(serializableNode22);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertEquals("'" + serializable29 + "' != '" + 10L + "'", serializable29, 10L);
        org.junit.Assert.assertNotNull(serializableNode30);
        org.junit.Assert.assertNotNull(serializableNode31);
        org.junit.Assert.assertEquals("'" + serializable32 + "' != '" + 10L + "'", serializable32, 10L);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertEquals("'" + serializable37 + "' != '" + 10L + "'", serializable37, 10L);
        org.junit.Assert.assertNotNull(serializableNode38);
        org.junit.Assert.assertEquals("'" + serializable39 + "' != '" + 10L + "'", serializable39, 10L);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(serializableNode41);
        org.junit.Assert.assertNotNull(serializableNode42);
        org.junit.Assert.assertNotNull(serializableNode43);
        org.junit.Assert.assertNotNull(serializableNode44);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertEquals("'" + serializable50 + "' != '" + 10L + "'", serializable50, 10L);
        org.junit.Assert.assertNotNull(serializableNode51);
        org.junit.Assert.assertEquals("'" + serializable54 + "' != '" + 10L + "'", serializable54, 10L);
        org.junit.Assert.assertNotNull(serializableNode55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertEquals("'" + serializable65 + "' != '" + 10L + "'", serializable65, 10L);
        org.junit.Assert.assertNotNull(serializableNode66);
        org.junit.Assert.assertNotNull(serializableNode67);
        org.junit.Assert.assertNotNull(serializableNode75);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
    }

    @Test
    public void test0944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0944");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        java.io.Serializable serializable4 = serializableNode3.data;
        serializableNode3.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode3.parent;
        int int8 = serializableNode7.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode7.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode9.parent;
        int int11 = serializableNode10.rank;
        serializableNode10.rank = (byte) -1;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
    }

    @Test
    public void test0945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0945");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable8 = serializableNode7.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode7.parent;
        serializableNode5.parent = serializableNode9;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int13 = serializableNode12.rank;
        int int14 = serializableNode12.rank;
        java.io.Serializable serializable15 = serializableNode12.data;
        serializableNode5.parent = serializableNode12;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable19 = serializableNode18.data;
        int int20 = serializableNode18.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode18.parent = serializableNode22;
        java.lang.Class<?> wildcardClass24 = serializableNode22.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass24);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = serializableNode25.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = serializableNode26.parent;
        serializableNode5.parent = serializableNode26;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertEquals("'" + serializable19 + "' != '" + 10L + "'", serializable19, 10L);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(serializableNode26);
        org.junit.Assert.assertNotNull(serializableNode27);
    }

    @Test
    public void test0946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0946");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        java.io.Serializable serializable8 = serializableNode5.data;
        java.io.Serializable serializable9 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int12 = serializableNode11.rank;
        int int13 = serializableNode11.rank;
        java.io.Serializable serializable14 = serializableNode11.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode11.parent;
        java.lang.Class<?> wildcardClass16 = serializableNode15.getClass();
        serializableNode5.data = wildcardClass16;
        java.io.Serializable serializable18 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>(serializable18);
        serializableNode19.data = 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int24 = serializableNode23.rank;
        int int25 = serializableNode23.rank;
        java.io.Serializable serializable26 = serializableNode23.data;
        serializableNode23.rank = (byte) 1;
        int int29 = serializableNode23.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = serializableNode23.parent;
        serializableNode23.rank = (byte) 0;
        serializableNode23.rank = (byte) 10;
        int int35 = serializableNode23.rank;
        serializableNode19.parent = serializableNode23;
        int int37 = serializableNode23.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(serializable18);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertEquals("'" + serializable26 + "' != '" + 10L + "'", serializable26, 10L);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertNotNull(serializableNode30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 10 + "'", int35 == 10);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 10 + "'", int37 == 10);
    }

    @Test
    public void test0947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0947");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        int int4 = serializableNode1.rank;
        java.io.Serializable serializable5 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode7.parent;
        serializableNode7.rank = (byte) 100;
        java.lang.Class<?> wildcardClass11 = serializableNode7.getClass();
        serializableNode1.data = wildcardClass11;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode1.parent;
        java.io.Serializable serializable14 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode1.parent;
        java.io.Serializable serializable18 = serializableNode1.data;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + serializable5 + "' != '" + 10L + "'", serializable5, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertNotNull(serializable14);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertNotNull(serializable18);
    }

    @Test
    public void test0948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0948");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        java.io.Serializable serializable8 = serializableNode5.data;
        java.io.Serializable serializable9 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int12 = serializableNode11.rank;
        int int13 = serializableNode11.rank;
        java.io.Serializable serializable14 = serializableNode11.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode11.parent;
        java.lang.Class<?> wildcardClass16 = serializableNode15.getClass();
        serializableNode5.data = wildcardClass16;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable21 = serializableNode20.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = serializableNode20.parent;
        java.io.Serializable serializable23 = serializableNode22.data;
        serializableNode22.rank = (short) -1;
        java.lang.Class<?> wildcardClass26 = serializableNode22.getClass();
        serializableNode18.data = wildcardClass26;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable30 = serializableNode29.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = serializableNode29.parent;
        int int32 = serializableNode29.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable35 = serializableNode34.data;
        int int36 = serializableNode34.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode38 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode34.parent = serializableNode38;
        serializableNode38.data = 0.0d;
        serializableNode29.parent = serializableNode38;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode43 = serializableNode29.parent;
        serializableNode18.parent = serializableNode43;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode45 = serializableNode43.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode47 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int48 = serializableNode47.rank;
        int int49 = serializableNode47.rank;
        java.io.Serializable serializable50 = serializableNode47.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode51 = serializableNode47.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode52 = serializableNode47.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode54 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable55 = serializableNode54.data;
        int int56 = serializableNode54.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode58 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode54.parent = serializableNode58;
        serializableNode52.parent = serializableNode54;
        int int61 = serializableNode52.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode63 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int64 = serializableNode63.rank;
        int int65 = serializableNode63.rank;
        java.io.Serializable serializable66 = serializableNode63.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode67 = serializableNode63.parent;
        java.io.Serializable serializable68 = serializableNode63.data;
        serializableNode52.parent = serializableNode63;
        java.io.Serializable serializable70 = serializableNode52.data;
        serializableNode43.parent = serializableNode52;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode72 = serializableNode43.parent;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertEquals("'" + serializable21 + "' != '" + 10L + "'", serializable21, 10L);
        org.junit.Assert.assertNotNull(serializableNode22);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertEquals("'" + serializable30 + "' != '" + 10L + "'", serializable30, 10L);
        org.junit.Assert.assertNotNull(serializableNode31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertEquals("'" + serializable35 + "' != '" + 10L + "'", serializable35, 10L);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(serializableNode43);
        org.junit.Assert.assertNotNull(serializableNode45);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertEquals("'" + serializable50 + "' != '" + 10L + "'", serializable50, 10L);
        org.junit.Assert.assertNotNull(serializableNode51);
        org.junit.Assert.assertNotNull(serializableNode52);
        org.junit.Assert.assertEquals("'" + serializable55 + "' != '" + 10L + "'", serializable55, 10L);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertEquals("'" + serializable66 + "' != '" + 10L + "'", serializable66, 10L);
        org.junit.Assert.assertNotNull(serializableNode67);
        org.junit.Assert.assertEquals("'" + serializable68 + "' != '" + 10L + "'", serializable68, 10L);
        org.junit.Assert.assertEquals("'" + serializable70 + "' != '" + 10L + "'", serializable70, 10L);
        org.junit.Assert.assertNotNull(serializableNode72);
    }

    @Test
    public void test0949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0949");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        java.io.Serializable serializable8 = serializableNode5.data;
        java.io.Serializable serializable9 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int12 = serializableNode11.rank;
        int int13 = serializableNode11.rank;
        java.io.Serializable serializable14 = serializableNode11.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode11.parent;
        java.lang.Class<?> wildcardClass16 = serializableNode15.getClass();
        serializableNode5.data = wildcardClass16;
        java.io.Serializable serializable18 = serializableNode5.data;
        java.io.Serializable serializable19 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable22 = serializableNode21.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode21.parent;
        int int24 = serializableNode21.rank;
        java.io.Serializable serializable25 = serializableNode21.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = serializableNode27.parent;
        serializableNode27.rank = (byte) 100;
        java.lang.Class<?> wildcardClass31 = serializableNode27.getClass();
        serializableNode21.data = wildcardClass31;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = serializableNode21.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode35 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        java.lang.Class<?> wildcardClass36 = serializableNode35.getClass();
        serializableNode33.data = wildcardClass36;
        int int38 = serializableNode33.rank;
        serializableNode33.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = serializableNode33.parent;
        serializableNode5.parent = serializableNode41;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(serializable18);
        org.junit.Assert.assertNotNull(serializable19);
        org.junit.Assert.assertEquals("'" + serializable22 + "' != '" + 10L + "'", serializable22, 10L);
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertEquals("'" + serializable25 + "' != '" + 10L + "'", serializable25, 10L);
        org.junit.Assert.assertNotNull(serializableNode28);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(serializableNode33);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(serializableNode41);
    }

    @Test
    public void test0950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0950");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode1.parent = serializableNode5;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int9 = serializableNode8.rank;
        int int10 = serializableNode8.rank;
        java.io.Serializable serializable11 = serializableNode8.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode8.parent;
        java.io.Serializable serializable13 = serializableNode12.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = serializableNode12.parent;
        java.io.Serializable serializable15 = serializableNode12.data;
        java.io.Serializable serializable16 = serializableNode12.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int19 = serializableNode18.rank;
        int int20 = serializableNode18.rank;
        java.io.Serializable serializable21 = serializableNode18.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = serializableNode18.parent;
        java.lang.Class<?> wildcardClass23 = serializableNode22.getClass();
        serializableNode12.data = wildcardClass23;
        serializableNode1.data = wildcardClass23;
        serializableNode1.rank = 0;
        serializableNode1.data = "";
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int32 = serializableNode31.rank;
        int int33 = serializableNode31.rank;
        java.io.Serializable serializable34 = serializableNode31.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode35 = serializableNode31.parent;
        java.io.Serializable serializable36 = serializableNode35.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = serializableNode35.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode38 = serializableNode35.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode40 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable41 = serializableNode40.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode42 = serializableNode40.parent;
        java.io.Serializable serializable43 = serializableNode42.data;
        serializableNode42.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode46 = serializableNode42.parent;
        serializableNode38.parent = serializableNode46;
        serializableNode1.parent = serializableNode38;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode50 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int51 = serializableNode50.rank;
        int int52 = serializableNode50.rank;
        java.io.Serializable serializable53 = serializableNode50.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode54 = serializableNode50.parent;
        java.io.Serializable serializable55 = serializableNode54.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode56 = serializableNode54.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode57 = serializableNode54.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode59 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable60 = serializableNode59.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode61 = serializableNode59.parent;
        java.io.Serializable serializable62 = serializableNode61.data;
        serializableNode61.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode65 = serializableNode61.parent;
        serializableNode57.parent = serializableNode65;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode68 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable69 = serializableNode68.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode70 = serializableNode68.parent;
        int int71 = serializableNode68.rank;
        java.io.Serializable serializable72 = serializableNode68.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode74 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode75 = serializableNode74.parent;
        serializableNode74.rank = (byte) 100;
        java.lang.Class<?> wildcardClass78 = serializableNode74.getClass();
        serializableNode68.data = wildcardClass78;
        serializableNode65.parent = serializableNode68;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode82 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) "");
        java.lang.Class<?> wildcardClass83 = serializableNode82.getClass();
        serializableNode68.data = wildcardClass83;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode85 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass83);
        serializableNode38.data = wildcardClass83;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode88 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int89 = serializableNode88.rank;
        int int90 = serializableNode88.rank;
        java.io.Serializable serializable91 = serializableNode88.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode93 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable94 = serializableNode93.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode95 = serializableNode93.parent;
        serializableNode88.parent = serializableNode93;
        java.lang.Class<?> wildcardClass97 = serializableNode88.getClass();
        serializableNode38.data = wildcardClass97;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode99 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass97);
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode14);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertEquals("'" + serializable21 + "' != '" + 10L + "'", serializable21, 10L);
        org.junit.Assert.assertNotNull(serializableNode22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertEquals("'" + serializable34 + "' != '" + 10L + "'", serializable34, 10L);
        org.junit.Assert.assertNotNull(serializableNode35);
        org.junit.Assert.assertEquals("'" + serializable36 + "' != '" + 10L + "'", serializable36, 10L);
        org.junit.Assert.assertNotNull(serializableNode37);
        org.junit.Assert.assertNotNull(serializableNode38);
        org.junit.Assert.assertEquals("'" + serializable41 + "' != '" + 10L + "'", serializable41, 10L);
        org.junit.Assert.assertNotNull(serializableNode42);
        org.junit.Assert.assertEquals("'" + serializable43 + "' != '" + 10L + "'", serializable43, 10L);
        org.junit.Assert.assertNotNull(serializableNode46);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertEquals("'" + serializable53 + "' != '" + 10L + "'", serializable53, 10L);
        org.junit.Assert.assertNotNull(serializableNode54);
        org.junit.Assert.assertEquals("'" + serializable55 + "' != '" + 10L + "'", serializable55, 10L);
        org.junit.Assert.assertNotNull(serializableNode56);
        org.junit.Assert.assertNotNull(serializableNode57);
        org.junit.Assert.assertEquals("'" + serializable60 + "' != '" + 10L + "'", serializable60, 10L);
        org.junit.Assert.assertNotNull(serializableNode61);
        org.junit.Assert.assertEquals("'" + serializable62 + "' != '" + 10L + "'", serializable62, 10L);
        org.junit.Assert.assertNotNull(serializableNode65);
        org.junit.Assert.assertEquals("'" + serializable69 + "' != '" + 10L + "'", serializable69, 10L);
        org.junit.Assert.assertNotNull(serializableNode70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertEquals("'" + serializable72 + "' != '" + 10L + "'", serializable72, 10L);
        org.junit.Assert.assertNotNull(serializableNode75);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 0 + "'", int89 == 0);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 0 + "'", int90 == 0);
        org.junit.Assert.assertEquals("'" + serializable91 + "' != '" + 10L + "'", serializable91, 10L);
        org.junit.Assert.assertEquals("'" + serializable94 + "' != '" + 10L + "'", serializable94, 10L);
        org.junit.Assert.assertNotNull(serializableNode95);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test0951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0951");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable8 = serializableNode7.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode7.parent;
        serializableNode5.parent = serializableNode9;
        int int11 = serializableNode5.rank;
        serializableNode5.rank = 'a';
        serializableNode5.rank = (byte) 1;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
    }

    @Test
    public void test0952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0952");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        serializableNode1.rank = (byte) 1;
        int int7 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int11 = serializableNode10.rank;
        java.io.Serializable serializable12 = serializableNode10.data;
        java.lang.Class<?> wildcardClass13 = serializable12.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass13);
        serializableNode1.parent = serializableNode14;
        int int16 = serializableNode14.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode18.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = serializableNode18.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable23 = serializableNode22.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode22.parent;
        int int25 = serializableNode22.rank;
        java.io.Serializable serializable26 = serializableNode22.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = serializableNode28.parent;
        serializableNode28.rank = (byte) 100;
        java.lang.Class<?> wildcardClass32 = serializableNode28.getClass();
        serializableNode22.data = wildcardClass32;
        serializableNode18.data = wildcardClass32;
        serializableNode18.rank = '#';
        serializableNode14.parent = serializableNode18;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode39 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable40 = serializableNode39.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = serializableNode39.parent;
        int int42 = serializableNode39.rank;
        java.io.Serializable serializable43 = serializableNode39.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode45 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode46 = serializableNode45.parent;
        serializableNode45.rank = (byte) 100;
        java.lang.Class<?> wildcardClass49 = serializableNode45.getClass();
        serializableNode39.data = wildcardClass49;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode51 = serializableNode39.parent;
        java.io.Serializable serializable52 = serializableNode39.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode53 = serializableNode39.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode54 = serializableNode39.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode55 = serializableNode39.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode57 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int58 = serializableNode57.rank;
        int int59 = serializableNode57.rank;
        java.io.Serializable serializable60 = serializableNode57.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode62 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable63 = serializableNode62.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode64 = serializableNode62.parent;
        serializableNode57.parent = serializableNode62;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode67 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int68 = serializableNode67.rank;
        int int69 = serializableNode67.rank;
        java.io.Serializable serializable70 = serializableNode67.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode71 = serializableNode67.parent;
        java.io.Serializable serializable72 = serializableNode71.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode73 = serializableNode71.parent;
        java.io.Serializable serializable74 = serializableNode71.data;
        java.io.Serializable serializable75 = serializableNode71.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode77 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int78 = serializableNode77.rank;
        int int79 = serializableNode77.rank;
        java.io.Serializable serializable80 = serializableNode77.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode81 = serializableNode77.parent;
        java.lang.Class<?> wildcardClass82 = serializableNode81.getClass();
        serializableNode71.data = wildcardClass82;
        java.io.Serializable serializable84 = serializableNode71.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode85 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>(serializable84);
        serializableNode57.data = serializable84;
        serializableNode55.data = serializable84;
        serializableNode18.parent = serializableNode55;
        serializableNode18.rank = (byte) 100;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertNotNull(serializableNode20);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertEquals("'" + serializable26 + "' != '" + 10L + "'", serializable26, 10L);
        org.junit.Assert.assertNotNull(serializableNode29);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertEquals("'" + serializable40 + "' != '" + 10L + "'", serializable40, 10L);
        org.junit.Assert.assertNotNull(serializableNode41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertEquals("'" + serializable43 + "' != '" + 10L + "'", serializable43, 10L);
        org.junit.Assert.assertNotNull(serializableNode46);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(serializableNode51);
        org.junit.Assert.assertNotNull(serializable52);
        org.junit.Assert.assertNotNull(serializableNode53);
        org.junit.Assert.assertNotNull(serializableNode54);
        org.junit.Assert.assertNotNull(serializableNode55);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertEquals("'" + serializable60 + "' != '" + 10L + "'", serializable60, 10L);
        org.junit.Assert.assertEquals("'" + serializable63 + "' != '" + 10L + "'", serializable63, 10L);
        org.junit.Assert.assertNotNull(serializableNode64);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertEquals("'" + serializable70 + "' != '" + 10L + "'", serializable70, 10L);
        org.junit.Assert.assertNotNull(serializableNode71);
        org.junit.Assert.assertEquals("'" + serializable72 + "' != '" + 10L + "'", serializable72, 10L);
        org.junit.Assert.assertNotNull(serializableNode73);
        org.junit.Assert.assertEquals("'" + serializable74 + "' != '" + 10L + "'", serializable74, 10L);
        org.junit.Assert.assertEquals("'" + serializable75 + "' != '" + 10L + "'", serializable75, 10L);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertEquals("'" + serializable80 + "' != '" + 10L + "'", serializable80, 10L);
        org.junit.Assert.assertNotNull(serializableNode81);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(serializable84);
    }

    @Test
    public void test0953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0953");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        int int7 = serializableNode5.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode5.parent;
        java.lang.Class<?> wildcardClass9 = serializableNode8.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass9);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = serializableNode10.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable14 = serializableNode13.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode13.parent;
        java.io.Serializable serializable16 = serializableNode15.data;
        serializableNode15.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode15.parent;
        int int20 = serializableNode19.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode19.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = serializableNode21.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode21.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable26 = serializableNode25.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = serializableNode25.parent;
        java.io.Serializable serializable28 = serializableNode27.data;
        serializableNode27.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = serializableNode27.parent;
        int int32 = serializableNode31.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = serializableNode31.parent;
        java.lang.Class<?> wildcardClass34 = serializableNode31.getClass();
        serializableNode21.data = wildcardClass34;
        serializableNode10.parent = serializableNode21;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(serializableNode11);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertNotNull(serializableNode22);
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertEquals("'" + serializable26 + "' != '" + 10L + "'", serializable26, 10L);
        org.junit.Assert.assertNotNull(serializableNode27);
        org.junit.Assert.assertEquals("'" + serializable28 + "' != '" + 10L + "'", serializable28, 10L);
        org.junit.Assert.assertNotNull(serializableNode31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(serializableNode33);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test0954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0954");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = 'a';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int8 = serializableNode7.rank;
        int int9 = serializableNode7.rank;
        java.io.Serializable serializable10 = serializableNode7.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = serializableNode7.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode7.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable15 = serializableNode14.data;
        int int16 = serializableNode14.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode14.parent = serializableNode18;
        serializableNode12.parent = serializableNode14;
        int int21 = serializableNode12.rank;
        serializableNode1.parent = serializableNode12;
        serializableNode1.data = (short) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int27 = serializableNode26.rank;
        int int28 = serializableNode26.rank;
        java.io.Serializable serializable29 = serializableNode26.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = serializableNode26.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable33 = serializableNode32.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = serializableNode32.parent;
        serializableNode30.parent = serializableNode34;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int38 = serializableNode37.rank;
        int int39 = serializableNode37.rank;
        java.io.Serializable serializable40 = serializableNode37.data;
        serializableNode37.rank = (byte) 1;
        java.lang.Class<?> wildcardClass43 = serializableNode37.getClass();
        serializableNode30.data = wildcardClass43;
        java.lang.Class<?> wildcardClass45 = serializableNode30.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode46 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass45);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode47 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass45);
        java.io.Serializable serializable48 = serializableNode47.data;
        serializableNode1.data = serializable48;
        int int50 = serializableNode1.rank;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertEquals("'" + serializable10 + "' != '" + 10L + "'", serializable10, 10L);
        org.junit.Assert.assertNotNull(serializableNode11);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertEquals("'" + serializable29 + "' != '" + 10L + "'", serializable29, 10L);
        org.junit.Assert.assertNotNull(serializableNode30);
        org.junit.Assert.assertEquals("'" + serializable33 + "' != '" + 10L + "'", serializable33, 10L);
        org.junit.Assert.assertNotNull(serializableNode34);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertEquals("'" + serializable40 + "' != '" + 10L + "'", serializable40, 10L);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(serializable48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 97 + "'", int50 == 97);
    }

    @Test
    public void test0955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0955");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable11 = serializableNode10.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode10.parent;
        java.io.Serializable serializable13 = serializableNode12.data;
        serializableNode12.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode12.parent;
        serializableNode8.parent = serializableNode16;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode16.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode18.parent;
        java.lang.Class<?> wildcardClass20 = serializableNode18.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test0956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0956");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable8 = serializableNode7.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode7.parent;
        serializableNode5.parent = serializableNode9;
        int int11 = serializableNode9.rank;
        serializableNode9.rank = (byte) 0;
        serializableNode9.rank = (byte) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int18 = serializableNode17.rank;
        int int19 = serializableNode17.rank;
        java.io.Serializable serializable20 = serializableNode17.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode17.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = serializableNode17.parent;
        java.io.Serializable serializable23 = serializableNode22.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int26 = serializableNode25.rank;
        int int27 = serializableNode25.rank;
        java.io.Serializable serializable28 = serializableNode25.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = serializableNode25.parent;
        java.io.Serializable serializable30 = serializableNode29.data;
        int int31 = serializableNode29.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = serializableNode29.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = serializableNode32.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = serializableNode33.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode35 = serializableNode33.parent;
        serializableNode22.parent = serializableNode35;
        serializableNode35.rank = (byte) 100;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode39 = serializableNode35.parent;
        serializableNode9.parent = serializableNode39;
        java.lang.Class<?> wildcardClass41 = serializableNode9.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertEquals("'" + serializable20 + "' != '" + 10L + "'", serializable20, 10L);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertNotNull(serializableNode22);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertEquals("'" + serializable28 + "' != '" + 10L + "'", serializable28, 10L);
        org.junit.Assert.assertNotNull(serializableNode29);
        org.junit.Assert.assertEquals("'" + serializable30 + "' != '" + 10L + "'", serializable30, 10L);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(serializableNode32);
        org.junit.Assert.assertNotNull(serializableNode33);
        org.junit.Assert.assertNotNull(serializableNode34);
        org.junit.Assert.assertNotNull(serializableNode35);
        org.junit.Assert.assertNotNull(serializableNode39);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test0957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0957");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode1.parent = serializableNode5;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int9 = serializableNode8.rank;
        int int10 = serializableNode8.rank;
        java.io.Serializable serializable11 = serializableNode8.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode8.parent;
        java.io.Serializable serializable13 = serializableNode12.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = serializableNode12.parent;
        java.io.Serializable serializable15 = serializableNode12.data;
        java.io.Serializable serializable16 = serializableNode12.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int19 = serializableNode18.rank;
        int int20 = serializableNode18.rank;
        java.io.Serializable serializable21 = serializableNode18.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = serializableNode18.parent;
        java.lang.Class<?> wildcardClass23 = serializableNode22.getClass();
        serializableNode12.data = wildcardClass23;
        serializableNode1.data = wildcardClass23;
        serializableNode1.rank = 0;
        int int28 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int31 = serializableNode30.rank;
        int int32 = serializableNode30.rank;
        java.io.Serializable serializable33 = serializableNode30.data;
        serializableNode30.rank = (byte) 1;
        int int36 = serializableNode30.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = serializableNode30.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode39 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int40 = serializableNode39.rank;
        java.io.Serializable serializable41 = serializableNode39.data;
        java.lang.Class<?> wildcardClass42 = serializable41.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode43 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass42);
        serializableNode30.parent = serializableNode43;
        int int45 = serializableNode43.rank;
        serializableNode1.parent = serializableNode43;
        java.lang.Class<?> wildcardClass47 = serializableNode1.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode48 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass47);
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode14);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertEquals("'" + serializable21 + "' != '" + 10L + "'", serializable21, 10L);
        org.junit.Assert.assertNotNull(serializableNode22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertEquals("'" + serializable33 + "' != '" + 10L + "'", serializable33, 10L);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(serializableNode37);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertEquals("'" + serializable41 + "' != '" + 10L + "'", serializable41, 10L);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test0958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0958");
        java.io.Serializable serializable0 = null;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>(serializable0);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable4 = serializableNode3.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode3.parent;
        int int6 = serializableNode3.rank;
        java.io.Serializable serializable7 = serializableNode3.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode9.parent;
        serializableNode9.rank = (byte) 100;
        java.lang.Class<?> wildcardClass13 = serializableNode9.getClass();
        serializableNode3.data = wildcardClass13;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode3.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int18 = serializableNode17.rank;
        int int19 = serializableNode17.rank;
        java.io.Serializable serializable20 = serializableNode17.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode17.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable24 = serializableNode23.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = serializableNode23.parent;
        serializableNode21.parent = serializableNode25;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int29 = serializableNode28.rank;
        int int30 = serializableNode28.rank;
        java.io.Serializable serializable31 = serializableNode28.data;
        serializableNode21.parent = serializableNode28;
        serializableNode3.parent = serializableNode21;
        serializableNode1.parent = serializableNode3;
        serializableNode3.rank = 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode38 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int39 = serializableNode38.rank;
        int int40 = serializableNode38.rank;
        java.io.Serializable serializable41 = serializableNode38.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode42 = serializableNode38.parent;
        java.io.Serializable serializable43 = serializableNode42.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode44 = serializableNode42.parent;
        java.io.Serializable serializable45 = serializableNode42.data;
        java.io.Serializable serializable46 = serializableNode42.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode48 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int49 = serializableNode48.rank;
        int int50 = serializableNode48.rank;
        java.io.Serializable serializable51 = serializableNode48.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode52 = serializableNode48.parent;
        java.lang.Class<?> wildcardClass53 = serializableNode52.getClass();
        serializableNode42.data = wildcardClass53;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode55 = serializableNode42.parent;
        serializableNode55.rank = 'a';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode58 = serializableNode55.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode59 = serializableNode55.parent;
        serializableNode3.parent = serializableNode55;
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertEquals("'" + serializable20 + "' != '" + 10L + "'", serializable20, 10L);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertEquals("'" + serializable24 + "' != '" + 10L + "'", serializable24, 10L);
        org.junit.Assert.assertNotNull(serializableNode25);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertEquals("'" + serializable31 + "' != '" + 10L + "'", serializable31, 10L);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertEquals("'" + serializable41 + "' != '" + 10L + "'", serializable41, 10L);
        org.junit.Assert.assertNotNull(serializableNode42);
        org.junit.Assert.assertEquals("'" + serializable43 + "' != '" + 10L + "'", serializable43, 10L);
        org.junit.Assert.assertNotNull(serializableNode44);
        org.junit.Assert.assertEquals("'" + serializable45 + "' != '" + 10L + "'", serializable45, 10L);
        org.junit.Assert.assertEquals("'" + serializable46 + "' != '" + 10L + "'", serializable46, 10L);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertEquals("'" + serializable51 + "' != '" + 10L + "'", serializable51, 10L);
        org.junit.Assert.assertNotNull(serializableNode52);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(serializableNode55);
        org.junit.Assert.assertNotNull(serializableNode58);
        org.junit.Assert.assertNotNull(serializableNode59);
    }

    @Test
    public void test0959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0959");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        int int7 = serializableNode5.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode5.parent;
        int int9 = serializableNode5.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable12 = serializableNode11.data;
        int int13 = serializableNode11.rank;
        serializableNode11.rank = 'a';
        java.lang.Class<?> wildcardClass16 = serializableNode11.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass16);
        serializableNode5.data = wildcardClass16;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0960");
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.constant.ConstantDesc> constantDescNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.constant.ConstantDesc>((java.lang.constant.ConstantDesc) 97);
    }

    @Test
    public void test0961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0961");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable8 = serializableNode7.data;
        int int9 = serializableNode7.rank;
        serializableNode7.rank = 'a';
        java.lang.Class<?> wildcardClass12 = serializableNode7.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass12);
        serializableNode1.data = wildcardClass12;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int18 = serializableNode17.rank;
        int int19 = serializableNode17.rank;
        java.io.Serializable serializable20 = serializableNode17.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode17.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable24 = serializableNode23.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = serializableNode23.parent;
        serializableNode21.parent = serializableNode25;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int29 = serializableNode28.rank;
        int int30 = serializableNode28.rank;
        java.io.Serializable serializable31 = serializableNode28.data;
        serializableNode21.parent = serializableNode28;
        int int33 = serializableNode21.rank;
        serializableNode21.rank = 100;
        serializableNode15.parent = serializableNode21;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode38 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int39 = serializableNode38.rank;
        int int40 = serializableNode38.rank;
        java.io.Serializable serializable41 = serializableNode38.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode42 = serializableNode38.parent;
        java.io.Serializable serializable43 = serializableNode42.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode44 = serializableNode42.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode46 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int47 = serializableNode46.rank;
        int int48 = serializableNode46.rank;
        java.io.Serializable serializable49 = serializableNode46.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode50 = serializableNode46.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode52 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable53 = serializableNode52.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode54 = serializableNode52.parent;
        serializableNode50.parent = serializableNode54;
        int int56 = serializableNode54.rank;
        serializableNode44.parent = serializableNode54;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode59 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (short) -1);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode60 = serializableNode59.parent;
        serializableNode44.parent = serializableNode59;
        serializableNode59.rank = (short) -1;
        serializableNode21.parent = serializableNode59;
        serializableNode59.rank = '4';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode68 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int69 = serializableNode68.rank;
        int int70 = serializableNode68.rank;
        java.io.Serializable serializable71 = serializableNode68.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode72 = serializableNode68.parent;
        java.io.Serializable serializable73 = serializableNode72.data;
        int int74 = serializableNode72.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode75 = serializableNode72.parent;
        java.io.Serializable serializable76 = serializableNode75.data;
        serializableNode59.parent = serializableNode75;
        serializableNode59.data = (byte) -1;
        java.lang.Class<?> wildcardClass80 = serializableNode59.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertEquals("'" + serializable20 + "' != '" + 10L + "'", serializable20, 10L);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertEquals("'" + serializable24 + "' != '" + 10L + "'", serializable24, 10L);
        org.junit.Assert.assertNotNull(serializableNode25);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertEquals("'" + serializable31 + "' != '" + 10L + "'", serializable31, 10L);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertEquals("'" + serializable41 + "' != '" + 10L + "'", serializable41, 10L);
        org.junit.Assert.assertNotNull(serializableNode42);
        org.junit.Assert.assertEquals("'" + serializable43 + "' != '" + 10L + "'", serializable43, 10L);
        org.junit.Assert.assertNotNull(serializableNode44);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertEquals("'" + serializable49 + "' != '" + 10L + "'", serializable49, 10L);
        org.junit.Assert.assertNotNull(serializableNode50);
        org.junit.Assert.assertEquals("'" + serializable53 + "' != '" + 10L + "'", serializable53, 10L);
        org.junit.Assert.assertNotNull(serializableNode54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(serializableNode60);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertEquals("'" + serializable71 + "' != '" + 10L + "'", serializable71, 10L);
        org.junit.Assert.assertNotNull(serializableNode72);
        org.junit.Assert.assertEquals("'" + serializable73 + "' != '" + 10L + "'", serializable73, 10L);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertNotNull(serializableNode75);
        org.junit.Assert.assertEquals("'" + serializable76 + "' != '" + 10L + "'", serializable76, 10L);
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test0962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0962");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 100L);
        java.io.Serializable serializable2 = serializableNode1.data;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 100L + "'", serializable2, 100L);
    }

    @Test
    public void test0963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0963");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable8 = serializableNode7.data;
        int int9 = serializableNode7.rank;
        serializableNode7.rank = 'a';
        java.lang.Class<?> wildcardClass12 = serializableNode7.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass12);
        serializableNode1.data = wildcardClass12;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int18 = serializableNode17.rank;
        int int19 = serializableNode17.rank;
        java.io.Serializable serializable20 = serializableNode17.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode17.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable24 = serializableNode23.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = serializableNode23.parent;
        serializableNode21.parent = serializableNode25;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int29 = serializableNode28.rank;
        int int30 = serializableNode28.rank;
        java.io.Serializable serializable31 = serializableNode28.data;
        serializableNode21.parent = serializableNode28;
        int int33 = serializableNode21.rank;
        serializableNode21.rank = 100;
        serializableNode15.parent = serializableNode21;
        java.lang.Class<?> wildcardClass37 = serializableNode15.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode38 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass37);
        java.lang.Class<?> wildcardClass39 = serializableNode38.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertEquals("'" + serializable20 + "' != '" + 10L + "'", serializable20, 10L);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertEquals("'" + serializable24 + "' != '" + 10L + "'", serializable24, 10L);
        org.junit.Assert.assertNotNull(serializableNode25);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertEquals("'" + serializable31 + "' != '" + 10L + "'", serializable31, 10L);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test0964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0964");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int6 = serializableNode5.rank;
        int int7 = serializableNode5.rank;
        java.io.Serializable serializable8 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable11 = serializableNode10.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode10.parent;
        serializableNode5.parent = serializableNode10;
        serializableNode5.data = true;
        serializableNode1.parent = serializableNode5;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode17.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode18.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int22 = serializableNode21.rank;
        int int23 = serializableNode21.rank;
        java.io.Serializable serializable24 = serializableNode21.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = serializableNode21.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = serializableNode21.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable29 = serializableNode28.data;
        int int30 = serializableNode28.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode28.parent = serializableNode32;
        serializableNode32.rank = 0;
        serializableNode32.data = 100;
        serializableNode26.parent = serializableNode32;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode40 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int41 = serializableNode40.rank;
        int int42 = serializableNode40.rank;
        java.io.Serializable serializable43 = serializableNode40.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode44 = serializableNode40.parent;
        serializableNode32.parent = serializableNode40;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode47 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode48 = serializableNode47.parent;
        serializableNode48.rank = (byte) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode52 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int53 = serializableNode52.rank;
        int int54 = serializableNode52.rank;
        java.io.Serializable serializable55 = serializableNode52.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode57 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable58 = serializableNode57.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode59 = serializableNode57.parent;
        serializableNode52.parent = serializableNode57;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode61 = serializableNode57.parent;
        serializableNode48.parent = serializableNode61;
        serializableNode32.parent = serializableNode48;
        serializableNode19.parent = serializableNode32;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode66 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode67 = serializableNode66.parent;
        serializableNode67.rank = 0;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode70 = serializableNode67.parent;
        serializableNode32.parent = serializableNode70;
        java.io.Serializable serializable72 = serializableNode70.data;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertEquals("'" + serializable24 + "' != '" + 10L + "'", serializable24, 10L);
        org.junit.Assert.assertNotNull(serializableNode25);
        org.junit.Assert.assertNotNull(serializableNode26);
        org.junit.Assert.assertEquals("'" + serializable29 + "' != '" + 10L + "'", serializable29, 10L);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertEquals("'" + serializable43 + "' != '" + 10L + "'", serializable43, 10L);
        org.junit.Assert.assertNotNull(serializableNode44);
        org.junit.Assert.assertNotNull(serializableNode48);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertEquals("'" + serializable55 + "' != '" + 10L + "'", serializable55, 10L);
        org.junit.Assert.assertEquals("'" + serializable58 + "' != '" + 10L + "'", serializable58, 10L);
        org.junit.Assert.assertNotNull(serializableNode59);
        org.junit.Assert.assertNotNull(serializableNode61);
        org.junit.Assert.assertNotNull(serializableNode67);
        org.junit.Assert.assertNotNull(serializableNode70);
        org.junit.Assert.assertEquals("'" + serializable72 + "' != '" + 10.0f + "'", serializable72, 10.0f);
    }

    @Test
    public void test0965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0965");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 'a');
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode2 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode4 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable5 = serializableNode4.data;
        int int6 = serializableNode4.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode4.parent = serializableNode8;
        serializableNode4.data = '#';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int14 = serializableNode13.rank;
        int int15 = serializableNode13.rank;
        serializableNode13.data = (short) 100;
        serializableNode4.parent = serializableNode13;
        java.io.Serializable serializable19 = serializableNode13.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (short) -1);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = serializableNode21.parent;
        serializableNode13.parent = serializableNode22;
        java.lang.Class<?> wildcardClass24 = serializableNode22.getClass();
        serializableNode2.data = wildcardClass24;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass24);
        org.junit.Assert.assertNotNull(serializableNode2);
        org.junit.Assert.assertEquals("'" + serializable5 + "' != '" + 10L + "'", serializable5, 10L);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertEquals("'" + serializable19 + "' != '" + (short) 100 + "'", serializable19, (short) 100);
        org.junit.Assert.assertNotNull(serializableNode22);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test0966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0966");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        int int4 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable7 = serializableNode6.data;
        int int8 = serializableNode6.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode6.parent = serializableNode10;
        serializableNode10.data = 0.0d;
        serializableNode1.parent = serializableNode10;
        java.io.Serializable serializable15 = serializableNode1.data;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
    }

    @Test
    public void test0967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0967");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable7 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode6.parent;
        serializableNode1.parent = serializableNode6;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode6.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = serializableNode6.parent;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertNotNull(serializableNode11);
    }

    @Test
    public void test0968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0968");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode2 = serializableNode1.parent;
        java.lang.Class<?> wildcardClass3 = serializableNode1.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode4 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass3);
        org.junit.Assert.assertNotNull(serializableNode2);
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test0969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0969");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode1.parent = serializableNode5;
        serializableNode1.data = '#';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int11 = serializableNode10.rank;
        int int12 = serializableNode10.rank;
        serializableNode10.data = (short) 100;
        serializableNode1.parent = serializableNode10;
        java.io.Serializable serializable16 = serializableNode10.data;
        int int17 = serializableNode10.rank;
        serializableNode10.rank = 10;
        java.io.Serializable serializable20 = serializableNode10.data;
        serializableNode10.rank = 'a';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable25 = serializableNode24.data;
        int int26 = serializableNode24.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode24.parent = serializableNode28;
        serializableNode10.parent = serializableNode28;
        java.io.Serializable serializable31 = serializableNode10.data;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + (short) 100 + "'", serializable16, (short) 100);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertEquals("'" + serializable20 + "' != '" + (short) 100 + "'", serializable20, (short) 100);
        org.junit.Assert.assertEquals("'" + serializable25 + "' != '" + 10L + "'", serializable25, 10L);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertEquals("'" + serializable31 + "' != '" + (short) 100 + "'", serializable31, (short) 100);
    }

    @Test
    public void test0970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0970");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        int int4 = serializableNode1.rank;
        java.io.Serializable serializable5 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = null;
        serializableNode1.parent = serializableNode6;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable10 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = serializableNode9.parent;
        java.io.Serializable serializable12 = serializableNode11.data;
        serializableNode11.rank = (short) -1;
        java.lang.Class<?> wildcardClass15 = serializableNode11.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass15);
        int int17 = serializableNode16.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode16.parent;
        serializableNode1.parent = serializableNode18;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable22 = serializableNode21.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode21.parent;
        java.lang.Class<?> wildcardClass24 = serializableNode21.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass24);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = serializableNode25.parent;
        int int27 = serializableNode25.rank;
        int int28 = serializableNode25.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = serializableNode25.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = serializableNode25.parent;
        serializableNode18.parent = serializableNode30;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + serializable5 + "' != '" + 10L + "'", serializable5, 10L);
        org.junit.Assert.assertEquals("'" + serializable10 + "' != '" + 10L + "'", serializable10, 10L);
        org.junit.Assert.assertNotNull(serializableNode11);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertEquals("'" + serializable22 + "' != '" + 10L + "'", serializable22, 10L);
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(serializableNode26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(serializableNode29);
        org.junit.Assert.assertNotNull(serializableNode30);
    }

    @Test
    public void test0971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0971");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable7 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode6.parent;
        serializableNode1.parent = serializableNode6;
        serializableNode1.rank = (short) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable14 = serializableNode13.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode13.parent;
        java.io.Serializable serializable16 = serializableNode15.data;
        serializableNode15.rank = (short) -1;
        int int19 = serializableNode15.rank;
        serializableNode1.parent = serializableNode15;
        serializableNode1.rank = (byte) 0;
        java.lang.Class<?> wildcardClass23 = serializableNode1.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass23);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass23);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test0972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0972");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        java.io.Serializable serializable8 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int11 = serializableNode10.rank;
        int int12 = serializableNode10.rank;
        java.io.Serializable serializable13 = serializableNode10.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = serializableNode10.parent;
        java.io.Serializable serializable15 = serializableNode14.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode14.parent;
        java.io.Serializable serializable17 = serializableNode14.data;
        java.io.Serializable serializable18 = serializableNode14.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int21 = serializableNode20.rank;
        int int22 = serializableNode20.rank;
        java.io.Serializable serializable23 = serializableNode20.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode20.parent;
        java.lang.Class<?> wildcardClass25 = serializableNode24.getClass();
        serializableNode14.data = wildcardClass25;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = serializableNode14.parent;
        serializableNode5.parent = serializableNode14;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int31 = serializableNode30.rank;
        int int32 = serializableNode30.rank;
        java.io.Serializable serializable33 = serializableNode30.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = serializableNode30.parent;
        java.io.Serializable serializable35 = serializableNode34.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode36 = serializableNode34.parent;
        java.io.Serializable serializable37 = serializableNode34.data;
        java.io.Serializable serializable38 = serializableNode34.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode40 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int41 = serializableNode40.rank;
        int int42 = serializableNode40.rank;
        java.io.Serializable serializable43 = serializableNode40.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode44 = serializableNode40.parent;
        java.lang.Class<?> wildcardClass45 = serializableNode44.getClass();
        serializableNode34.data = wildcardClass45;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode47 = serializableNode34.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode49 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable50 = serializableNode49.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode51 = serializableNode49.parent;
        java.io.Serializable serializable52 = serializableNode51.data;
        serializableNode51.rank = (short) -1;
        java.lang.Class<?> wildcardClass55 = serializableNode51.getClass();
        serializableNode47.data = wildcardClass55;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode57 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass55);
        serializableNode5.parent = serializableNode57;
        serializableNode5.rank = 100;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode14);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertEquals("'" + serializable17 + "' != '" + 10L + "'", serializable17, 10L);
        org.junit.Assert.assertEquals("'" + serializable18 + "' != '" + 10L + "'", serializable18, 10L);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(serializableNode27);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertEquals("'" + serializable33 + "' != '" + 10L + "'", serializable33, 10L);
        org.junit.Assert.assertNotNull(serializableNode34);
        org.junit.Assert.assertEquals("'" + serializable35 + "' != '" + 10L + "'", serializable35, 10L);
        org.junit.Assert.assertNotNull(serializableNode36);
        org.junit.Assert.assertEquals("'" + serializable37 + "' != '" + 10L + "'", serializable37, 10L);
        org.junit.Assert.assertEquals("'" + serializable38 + "' != '" + 10L + "'", serializable38, 10L);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertEquals("'" + serializable43 + "' != '" + 10L + "'", serializable43, 10L);
        org.junit.Assert.assertNotNull(serializableNode44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(serializableNode47);
        org.junit.Assert.assertEquals("'" + serializable50 + "' != '" + 10L + "'", serializable50, 10L);
        org.junit.Assert.assertNotNull(serializableNode51);
        org.junit.Assert.assertEquals("'" + serializable52 + "' != '" + 10L + "'", serializable52, 10L);
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test0973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0973");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        serializableNode1.rank = (byte) 1;
        serializableNode1.data = 10.0d;
        serializableNode1.rank = (byte) 100;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = serializableNode1.parent;
        serializableNode11.rank = (byte) 0;
        java.lang.Class<?> wildcardClass14 = serializableNode11.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode11);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0974");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int10 = serializableNode9.rank;
        int int11 = serializableNode9.rank;
        java.io.Serializable serializable12 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode9.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable16 = serializableNode15.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode15.parent;
        serializableNode13.parent = serializableNode17;
        int int19 = serializableNode17.rank;
        serializableNode7.parent = serializableNode17;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (short) -1);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode22.parent;
        serializableNode7.parent = serializableNode22;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable27 = serializableNode26.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = serializableNode26.parent;
        int int29 = serializableNode26.rank;
        serializableNode7.parent = serializableNode26;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = serializableNode26.parent;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertEquals("'" + serializable27 + "' != '" + 10L + "'", serializable27, 10L);
        org.junit.Assert.assertNotNull(serializableNode28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(serializableNode31);
    }

    @Test
    public void test0975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0975");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable11 = serializableNode10.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode10.parent;
        java.io.Serializable serializable13 = serializableNode12.data;
        serializableNode12.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode12.parent;
        serializableNode8.parent = serializableNode16;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode8.parent;
        serializableNode8.rank = (byte) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode8.parent;
        serializableNode21.rank = (short) 10;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) "");
        serializableNode25.rank = (byte) 100;
        serializableNode25.data = 'a';
        java.lang.Class<?> wildcardClass30 = serializableNode25.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass30);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = serializableNode31.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int35 = serializableNode34.rank;
        int int36 = serializableNode34.rank;
        java.io.Serializable serializable37 = serializableNode34.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode38 = serializableNode34.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode40 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable41 = serializableNode40.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode42 = serializableNode40.parent;
        serializableNode38.parent = serializableNode42;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode45 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int46 = serializableNode45.rank;
        int int47 = serializableNode45.rank;
        java.io.Serializable serializable48 = serializableNode45.data;
        serializableNode45.rank = (byte) 1;
        java.lang.Class<?> wildcardClass51 = serializableNode45.getClass();
        serializableNode38.data = wildcardClass51;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode53 = serializableNode38.parent;
        serializableNode38.rank = 100;
        serializableNode32.parent = serializableNode38;
        int int57 = serializableNode32.rank;
        serializableNode21.parent = serializableNode32;
        java.io.Serializable serializable59 = serializableNode32.data;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(serializableNode32);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertEquals("'" + serializable37 + "' != '" + 10L + "'", serializable37, 10L);
        org.junit.Assert.assertNotNull(serializableNode38);
        org.junit.Assert.assertEquals("'" + serializable41 + "' != '" + 10L + "'", serializable41, 10L);
        org.junit.Assert.assertNotNull(serializableNode42);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertEquals("'" + serializable48 + "' != '" + 10L + "'", serializable48, 10L);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(serializableNode53);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(serializable59);
    }

    @Test
    public void test0976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0976");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable9 = serializableNode8.data;
        int int10 = serializableNode8.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode8.parent = serializableNode12;
        serializableNode6.parent = serializableNode8;
        int int15 = serializableNode6.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable18 = serializableNode17.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode17.parent;
        int int20 = serializableNode17.rank;
        java.io.Serializable serializable21 = serializableNode17.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode23.parent;
        serializableNode23.rank = (byte) 100;
        java.lang.Class<?> wildcardClass27 = serializableNode23.getClass();
        serializableNode17.data = wildcardClass27;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = serializableNode17.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        java.lang.Class<?> wildcardClass32 = serializableNode31.getClass();
        serializableNode29.data = wildcardClass32;
        int int34 = serializableNode29.rank;
        java.lang.Class<?> wildcardClass35 = serializableNode29.getClass();
        serializableNode6.data = wildcardClass35;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertEquals("'" + serializable18 + "' != '" + 10L + "'", serializable18, 10L);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertEquals("'" + serializable21 + "' != '" + 10L + "'", serializable21, 10L);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(serializableNode29);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test0977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0977");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int6 = serializableNode5.rank;
        int int7 = serializableNode5.rank;
        java.io.Serializable serializable8 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable11 = serializableNode10.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode10.parent;
        serializableNode5.parent = serializableNode10;
        serializableNode5.data = true;
        serializableNode1.parent = serializableNode5;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode17.parent;
        serializableNode18.rank = ' ';
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertNotNull(serializableNode18);
    }

    @Test
    public void test0978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0978");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        java.io.Serializable serializable8 = serializableNode5.data;
        java.io.Serializable serializable9 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int12 = serializableNode11.rank;
        int int13 = serializableNode11.rank;
        java.io.Serializable serializable14 = serializableNode11.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode11.parent;
        java.lang.Class<?> wildcardClass16 = serializableNode15.getClass();
        serializableNode5.data = wildcardClass16;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable21 = serializableNode20.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = serializableNode20.parent;
        java.io.Serializable serializable23 = serializableNode22.data;
        serializableNode22.rank = (short) -1;
        java.lang.Class<?> wildcardClass26 = serializableNode22.getClass();
        serializableNode18.data = wildcardClass26;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass26);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int31 = serializableNode30.rank;
        int int32 = serializableNode30.rank;
        java.io.Serializable serializable33 = serializableNode30.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode35 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable36 = serializableNode35.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = serializableNode35.parent;
        serializableNode30.parent = serializableNode35;
        int int39 = serializableNode30.rank;
        java.lang.Class<?> wildcardClass40 = serializableNode30.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass40);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode42 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass40);
        serializableNode28.parent = serializableNode42;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode44 = serializableNode28.parent;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertEquals("'" + serializable21 + "' != '" + 10L + "'", serializable21, 10L);
        org.junit.Assert.assertNotNull(serializableNode22);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertEquals("'" + serializable33 + "' != '" + 10L + "'", serializable33, 10L);
        org.junit.Assert.assertEquals("'" + serializable36 + "' != '" + 10L + "'", serializable36, 10L);
        org.junit.Assert.assertNotNull(serializableNode37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(serializableNode44);
    }

    @Test
    public void test0979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0979");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable8 = serializableNode7.data;
        int int9 = serializableNode7.rank;
        serializableNode7.rank = 'a';
        java.lang.Class<?> wildcardClass12 = serializableNode7.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass12);
        serializableNode1.data = wildcardClass12;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int18 = serializableNode17.rank;
        int int19 = serializableNode17.rank;
        java.io.Serializable serializable20 = serializableNode17.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode17.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable24 = serializableNode23.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = serializableNode23.parent;
        serializableNode21.parent = serializableNode25;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int29 = serializableNode28.rank;
        int int30 = serializableNode28.rank;
        java.io.Serializable serializable31 = serializableNode28.data;
        serializableNode21.parent = serializableNode28;
        int int33 = serializableNode21.rank;
        serializableNode21.rank = 100;
        serializableNode15.parent = serializableNode21;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode38 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int39 = serializableNode38.rank;
        int int40 = serializableNode38.rank;
        java.io.Serializable serializable41 = serializableNode38.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode42 = serializableNode38.parent;
        java.io.Serializable serializable43 = serializableNode42.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode44 = serializableNode42.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode46 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int47 = serializableNode46.rank;
        int int48 = serializableNode46.rank;
        java.io.Serializable serializable49 = serializableNode46.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode50 = serializableNode46.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode52 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable53 = serializableNode52.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode54 = serializableNode52.parent;
        serializableNode50.parent = serializableNode54;
        int int56 = serializableNode54.rank;
        serializableNode44.parent = serializableNode54;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode59 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (short) -1);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode60 = serializableNode59.parent;
        serializableNode44.parent = serializableNode59;
        serializableNode59.rank = (short) -1;
        serializableNode21.parent = serializableNode59;
        serializableNode59.rank = '4';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode68 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int69 = serializableNode68.rank;
        int int70 = serializableNode68.rank;
        java.io.Serializable serializable71 = serializableNode68.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode72 = serializableNode68.parent;
        java.io.Serializable serializable73 = serializableNode72.data;
        int int74 = serializableNode72.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode75 = serializableNode72.parent;
        java.io.Serializable serializable76 = serializableNode75.data;
        serializableNode59.parent = serializableNode75;
        serializableNode59.data = (byte) -1;
        java.io.Serializable serializable80 = serializableNode59.data;
        int int81 = serializableNode59.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertEquals("'" + serializable20 + "' != '" + 10L + "'", serializable20, 10L);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertEquals("'" + serializable24 + "' != '" + 10L + "'", serializable24, 10L);
        org.junit.Assert.assertNotNull(serializableNode25);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertEquals("'" + serializable31 + "' != '" + 10L + "'", serializable31, 10L);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertEquals("'" + serializable41 + "' != '" + 10L + "'", serializable41, 10L);
        org.junit.Assert.assertNotNull(serializableNode42);
        org.junit.Assert.assertEquals("'" + serializable43 + "' != '" + 10L + "'", serializable43, 10L);
        org.junit.Assert.assertNotNull(serializableNode44);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertEquals("'" + serializable49 + "' != '" + 10L + "'", serializable49, 10L);
        org.junit.Assert.assertNotNull(serializableNode50);
        org.junit.Assert.assertEquals("'" + serializable53 + "' != '" + 10L + "'", serializable53, 10L);
        org.junit.Assert.assertNotNull(serializableNode54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(serializableNode60);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertEquals("'" + serializable71 + "' != '" + 10L + "'", serializable71, 10L);
        org.junit.Assert.assertNotNull(serializableNode72);
        org.junit.Assert.assertEquals("'" + serializable73 + "' != '" + 10L + "'", serializable73, 10L);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertNotNull(serializableNode75);
        org.junit.Assert.assertEquals("'" + serializable76 + "' != '" + 10L + "'", serializable76, 10L);
        org.junit.Assert.assertEquals("'" + serializable80 + "' != '" + (byte) -1 + "'", serializable80, (byte) -1);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 52 + "'", int81 == 52);
    }

    @Test
    public void test0980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0980");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        int int4 = serializableNode1.rank;
        java.io.Serializable serializable5 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode7.parent;
        serializableNode7.rank = (byte) 100;
        java.lang.Class<?> wildcardClass11 = serializableNode7.getClass();
        serializableNode1.data = wildcardClass11;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        java.lang.Class<?> wildcardClass16 = serializableNode15.getClass();
        serializableNode13.data = wildcardClass16;
        int int18 = serializableNode13.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int21 = serializableNode20.rank;
        int int22 = serializableNode20.rank;
        java.io.Serializable serializable23 = serializableNode20.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode20.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = serializableNode20.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable28 = serializableNode27.data;
        int int29 = serializableNode27.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode27.parent = serializableNode31;
        serializableNode25.parent = serializableNode27;
        int int34 = serializableNode25.rank;
        java.lang.Class<?> wildcardClass35 = serializableNode25.getClass();
        serializableNode13.data = wildcardClass35;
        serializableNode13.rank = (byte) 1;
        java.lang.Class<?> wildcardClass39 = serializableNode13.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode40 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass39);
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + serializable5 + "' != '" + 10L + "'", serializable5, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertNotNull(serializableNode25);
        org.junit.Assert.assertEquals("'" + serializable28 + "' != '" + 10L + "'", serializable28, 10L);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test0981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0981");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int10 = serializableNode9.rank;
        int int11 = serializableNode9.rank;
        java.io.Serializable serializable12 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode9.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable16 = serializableNode15.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode15.parent;
        serializableNode13.parent = serializableNode17;
        int int19 = serializableNode17.rank;
        serializableNode7.parent = serializableNode17;
        int int21 = serializableNode17.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = serializableNode17.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int25 = serializableNode24.rank;
        int int26 = serializableNode24.rank;
        java.io.Serializable serializable27 = serializableNode24.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = serializableNode24.parent;
        serializableNode24.rank = (short) 10;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = serializableNode24.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int34 = serializableNode33.rank;
        int int35 = serializableNode33.rank;
        java.io.Serializable serializable36 = serializableNode33.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = serializableNode33.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode39 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable40 = serializableNode39.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = serializableNode39.parent;
        serializableNode37.parent = serializableNode41;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode44 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int45 = serializableNode44.rank;
        int int46 = serializableNode44.rank;
        java.io.Serializable serializable47 = serializableNode44.data;
        serializableNode37.parent = serializableNode44;
        int int49 = serializableNode37.rank;
        java.io.Serializable serializable50 = serializableNode37.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode52 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int53 = serializableNode52.rank;
        int int54 = serializableNode52.rank;
        java.io.Serializable serializable55 = serializableNode52.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode56 = serializableNode52.parent;
        java.io.Serializable serializable57 = serializableNode56.data;
        int int58 = serializableNode56.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode59 = serializableNode56.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode60 = serializableNode56.parent;
        serializableNode37.parent = serializableNode56;
        serializableNode31.parent = serializableNode37;
        java.lang.Class<?> wildcardClass63 = serializableNode37.getClass();
        serializableNode22.data = wildcardClass63;
        serializableNode22.rank = 0;
        java.lang.Class<?> wildcardClass67 = serializableNode22.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode68 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass67);
        java.lang.Class<?> wildcardClass69 = serializableNode68.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(serializableNode22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertEquals("'" + serializable27 + "' != '" + 10L + "'", serializable27, 10L);
        org.junit.Assert.assertNotNull(serializableNode28);
        org.junit.Assert.assertNotNull(serializableNode31);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertEquals("'" + serializable36 + "' != '" + 10L + "'", serializable36, 10L);
        org.junit.Assert.assertNotNull(serializableNode37);
        org.junit.Assert.assertEquals("'" + serializable40 + "' != '" + 10L + "'", serializable40, 10L);
        org.junit.Assert.assertNotNull(serializableNode41);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertEquals("'" + serializable47 + "' != '" + 10L + "'", serializable47, 10L);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertEquals("'" + serializable50 + "' != '" + 10L + "'", serializable50, 10L);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertEquals("'" + serializable55 + "' != '" + 10L + "'", serializable55, 10L);
        org.junit.Assert.assertNotNull(serializableNode56);
        org.junit.Assert.assertEquals("'" + serializable57 + "' != '" + 10L + "'", serializable57, 10L);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(serializableNode59);
        org.junit.Assert.assertNotNull(serializableNode60);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test0982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0982");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        java.io.Serializable serializable7 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int10 = serializableNode9.rank;
        int int11 = serializableNode9.rank;
        java.io.Serializable serializable12 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode9.parent;
        java.io.Serializable serializable14 = serializableNode13.data;
        int int15 = serializableNode13.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode13.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode16.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode17.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode17.parent;
        serializableNode6.parent = serializableNode19;
        java.io.Serializable serializable21 = serializableNode6.data;
        java.io.Serializable serializable22 = serializableNode6.data;
        serializableNode6.rank = (byte) 10;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertEquals("'" + serializable21 + "' != '" + 10L + "'", serializable21, 10L);
        org.junit.Assert.assertEquals("'" + serializable22 + "' != '" + 10L + "'", serializable22, 10L);
    }

    @Test
    public void test0983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0983");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        java.io.Serializable serializable7 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int10 = serializableNode9.rank;
        int int11 = serializableNode9.rank;
        java.io.Serializable serializable12 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode9.parent;
        java.io.Serializable serializable14 = serializableNode13.data;
        int int15 = serializableNode13.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode13.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode16.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode17.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode17.parent;
        serializableNode6.parent = serializableNode19;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int23 = serializableNode22.rank;
        int int24 = serializableNode22.rank;
        java.io.Serializable serializable25 = serializableNode22.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = serializableNode22.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable29 = serializableNode28.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = serializableNode28.parent;
        serializableNode26.parent = serializableNode30;
        int int32 = serializableNode30.rank;
        serializableNode30.data = (-1);
        int int35 = serializableNode30.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int38 = serializableNode37.rank;
        int int39 = serializableNode37.rank;
        java.io.Serializable serializable40 = serializableNode37.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = serializableNode37.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode42 = serializableNode37.parent;
        serializableNode37.rank = (byte) 10;
        serializableNode37.data = 10L;
        serializableNode30.parent = serializableNode37;
        serializableNode19.parent = serializableNode37;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode49 = serializableNode19.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode51 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int52 = serializableNode51.rank;
        int int53 = serializableNode51.rank;
        java.io.Serializable serializable54 = serializableNode51.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode55 = serializableNode51.parent;
        java.io.Serializable serializable56 = serializableNode55.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode57 = serializableNode55.parent;
        java.io.Serializable serializable58 = serializableNode55.data;
        java.io.Serializable serializable59 = serializableNode55.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode61 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int62 = serializableNode61.rank;
        int int63 = serializableNode61.rank;
        java.io.Serializable serializable64 = serializableNode61.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode65 = serializableNode61.parent;
        java.lang.Class<?> wildcardClass66 = serializableNode65.getClass();
        serializableNode55.data = wildcardClass66;
        serializableNode19.parent = serializableNode55;
        int int69 = serializableNode19.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode70 = serializableNode19.parent;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertEquals("'" + serializable25 + "' != '" + 10L + "'", serializable25, 10L);
        org.junit.Assert.assertNotNull(serializableNode26);
        org.junit.Assert.assertEquals("'" + serializable29 + "' != '" + 10L + "'", serializable29, 10L);
        org.junit.Assert.assertNotNull(serializableNode30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertEquals("'" + serializable40 + "' != '" + 10L + "'", serializable40, 10L);
        org.junit.Assert.assertNotNull(serializableNode41);
        org.junit.Assert.assertNotNull(serializableNode42);
        org.junit.Assert.assertNotNull(serializableNode49);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertEquals("'" + serializable54 + "' != '" + 10L + "'", serializable54, 10L);
        org.junit.Assert.assertNotNull(serializableNode55);
        org.junit.Assert.assertEquals("'" + serializable56 + "' != '" + 10L + "'", serializable56, 10L);
        org.junit.Assert.assertNotNull(serializableNode57);
        org.junit.Assert.assertEquals("'" + serializable58 + "' != '" + 10L + "'", serializable58, 10L);
        org.junit.Assert.assertEquals("'" + serializable59 + "' != '" + 10L + "'", serializable59, 10L);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertEquals("'" + serializable64 + "' != '" + 10L + "'", serializable64, 10L);
        org.junit.Assert.assertNotNull(serializableNode65);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertNotNull(serializableNode70);
    }

    @Test
    public void test0984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0984");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = 'a';
        int int6 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode1.parent;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 97 + "'", int6 == 97);
        org.junit.Assert.assertNotNull(serializableNode7);
    }

    @Test
    public void test0985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0985");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        int int7 = serializableNode5.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode8.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode9.parent;
        int int11 = serializableNode10.rank;
        java.lang.Class<?> wildcardClass12 = serializableNode10.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass12);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0986");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        serializableNode1.rank = (short) 10;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) "");
        serializableNode9.rank = (byte) 100;
        serializableNode1.parent = serializableNode9;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int15 = serializableNode14.rank;
        int int16 = serializableNode14.rank;
        java.io.Serializable serializable17 = serializableNode14.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode14.parent;
        java.io.Serializable serializable19 = serializableNode18.data;
        int int20 = serializableNode18.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode18.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = serializableNode18.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode22.parent;
        serializableNode1.parent = serializableNode22;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int27 = serializableNode26.rank;
        int int28 = serializableNode26.rank;
        java.io.Serializable serializable29 = serializableNode26.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = serializableNode26.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable33 = serializableNode32.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = serializableNode32.parent;
        serializableNode30.parent = serializableNode34;
        int int36 = serializableNode34.rank;
        serializableNode34.rank = (byte) 0;
        serializableNode34.rank = (byte) 1;
        int int41 = serializableNode34.rank;
        java.io.Serializable serializable42 = serializableNode34.data;
        serializableNode1.parent = serializableNode34;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode45 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable46 = serializableNode45.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode47 = serializableNode45.parent;
        java.io.Serializable serializable48 = serializableNode47.data;
        serializableNode47.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode51 = serializableNode47.parent;
        int int52 = serializableNode47.rank;
        serializableNode47.rank = (byte) -1;
        serializableNode1.parent = serializableNode47;
        java.io.Serializable serializable56 = serializableNode47.data;
        java.io.Serializable serializable57 = serializableNode47.data;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertEquals("'" + serializable17 + "' != '" + 10L + "'", serializable17, 10L);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertEquals("'" + serializable19 + "' != '" + 10L + "'", serializable19, 10L);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertNotNull(serializableNode22);
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertEquals("'" + serializable29 + "' != '" + 10L + "'", serializable29, 10L);
        org.junit.Assert.assertNotNull(serializableNode30);
        org.junit.Assert.assertEquals("'" + serializable33 + "' != '" + 10L + "'", serializable33, 10L);
        org.junit.Assert.assertNotNull(serializableNode34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertEquals("'" + serializable42 + "' != '" + 10L + "'", serializable42, 10L);
        org.junit.Assert.assertEquals("'" + serializable46 + "' != '" + 10L + "'", serializable46, 10L);
        org.junit.Assert.assertNotNull(serializableNode47);
        org.junit.Assert.assertEquals("'" + serializable48 + "' != '" + 10L + "'", serializable48, 10L);
        org.junit.Assert.assertNotNull(serializableNode51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertEquals("'" + serializable56 + "' != '" + 10L + "'", serializable56, 10L);
        org.junit.Assert.assertEquals("'" + serializable57 + "' != '" + 10L + "'", serializable57, 10L);
    }

    @Test
    public void test0987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0987");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode8.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode8.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable13 = serializableNode12.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = serializableNode12.parent;
        int int15 = serializableNode12.rank;
        java.io.Serializable serializable16 = serializableNode12.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode18.parent;
        serializableNode18.rank = (byte) 100;
        java.lang.Class<?> wildcardClass22 = serializableNode18.getClass();
        serializableNode12.data = wildcardClass22;
        serializableNode8.data = wildcardClass22;
        serializableNode1.data = wildcardClass22;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass22);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass22);
        java.io.Serializable serializable28 = serializableNode27.data;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(serializable28);
    }

    @Test
    public void test0988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0988");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode1.parent = serializableNode5;
        serializableNode1.data = '#';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int11 = serializableNode10.rank;
        int int12 = serializableNode10.rank;
        serializableNode10.data = (short) 100;
        serializableNode1.parent = serializableNode10;
        java.io.Serializable serializable16 = serializableNode10.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (short) -1);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode18.parent;
        serializableNode10.parent = serializableNode19;
        int int21 = serializableNode10.rank;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + (short) 100 + "'", serializable16, (short) 100);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
    }

    @Test
    public void test0989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0989");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        int int4 = serializableNode1.rank;
        java.io.Serializable serializable5 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode7.parent;
        serializableNode7.rank = (byte) 100;
        java.lang.Class<?> wildcardClass11 = serializableNode7.getClass();
        serializableNode1.data = wildcardClass11;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode1.parent;
        java.io.Serializable serializable14 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (-1.0d));
        int int18 = serializableNode17.rank;
        java.lang.Class<?> wildcardClass19 = serializableNode17.getClass();
        serializableNode1.data = wildcardClass19;
        java.io.Serializable serializable21 = serializableNode1.data;
        serializableNode1.rank = 'a';
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + serializable5 + "' != '" + 10L + "'", serializable5, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertNotNull(serializable14);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(serializable21);
    }

    @Test
    public void test0990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0990");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        java.io.Serializable serializable8 = serializableNode5.data;
        java.io.Serializable serializable9 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int12 = serializableNode11.rank;
        int int13 = serializableNode11.rank;
        java.io.Serializable serializable14 = serializableNode11.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode11.parent;
        java.lang.Class<?> wildcardClass16 = serializableNode15.getClass();
        serializableNode5.data = wildcardClass16;
        java.io.Serializable serializable18 = serializableNode5.data;
        int int19 = serializableNode5.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(serializable18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
    }

    @Test
    public void test0991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0991");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int6 = serializableNode5.rank;
        int int7 = serializableNode5.rank;
        java.io.Serializable serializable8 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable11 = serializableNode10.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode10.parent;
        serializableNode5.parent = serializableNode10;
        serializableNode5.data = true;
        serializableNode1.parent = serializableNode5;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode1.parent;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertNotNull(serializableNode19);
    }

    @Test
    public void test0992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0992");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode4 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int5 = serializableNode4.rank;
        int int6 = serializableNode4.rank;
        java.io.Serializable serializable7 = serializableNode4.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode4.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable11 = serializableNode10.data;
        int int12 = serializableNode10.rank;
        serializableNode10.rank = 'a';
        java.lang.Class<?> wildcardClass15 = serializableNode10.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass15);
        serializableNode4.data = wildcardClass15;
        com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>> serializableNodeNode18 = new com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>>(serializableNode4);
        serializableNode1.parent = serializableNode4;
        java.io.Serializable serializable20 = serializableNode4.data;
        int int21 = serializableNode4.rank;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10.0f + "'", serializable2, 10.0f);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(serializable20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
    }

    @Test
    public void test0993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0993");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) "");
        int int2 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode4 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (-1.0d));
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int7 = serializableNode6.rank;
        int int8 = serializableNode6.rank;
        java.io.Serializable serializable9 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable12 = serializableNode11.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode11.parent;
        serializableNode6.parent = serializableNode11;
        int int15 = serializableNode6.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int18 = serializableNode17.rank;
        int int19 = serializableNode17.rank;
        java.io.Serializable serializable20 = serializableNode17.data;
        serializableNode17.rank = (byte) 1;
        serializableNode17.data = 10.0d;
        java.lang.Class<?> wildcardClass25 = serializableNode17.getClass();
        serializableNode6.data = wildcardClass25;
        java.io.Serializable serializable27 = serializableNode6.data;
        serializableNode4.data = serializable27;
        serializableNode1.data = serializable27;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertEquals("'" + serializable20 + "' != '" + 10L + "'", serializable20, 10L);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(serializable27);
    }

    @Test
    public void test0994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0994");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int10 = serializableNode9.rank;
        int int11 = serializableNode9.rank;
        java.io.Serializable serializable12 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode9.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable16 = serializableNode15.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode15.parent;
        serializableNode13.parent = serializableNode17;
        int int19 = serializableNode17.rank;
        serializableNode7.parent = serializableNode17;
        int int21 = serializableNode17.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = serializableNode17.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int25 = serializableNode24.rank;
        int int26 = serializableNode24.rank;
        java.io.Serializable serializable27 = serializableNode24.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = serializableNode24.parent;
        serializableNode24.rank = (short) 10;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = serializableNode24.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int34 = serializableNode33.rank;
        int int35 = serializableNode33.rank;
        java.io.Serializable serializable36 = serializableNode33.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = serializableNode33.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode39 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable40 = serializableNode39.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = serializableNode39.parent;
        serializableNode37.parent = serializableNode41;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode44 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int45 = serializableNode44.rank;
        int int46 = serializableNode44.rank;
        java.io.Serializable serializable47 = serializableNode44.data;
        serializableNode37.parent = serializableNode44;
        int int49 = serializableNode37.rank;
        java.io.Serializable serializable50 = serializableNode37.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode52 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int53 = serializableNode52.rank;
        int int54 = serializableNode52.rank;
        java.io.Serializable serializable55 = serializableNode52.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode56 = serializableNode52.parent;
        java.io.Serializable serializable57 = serializableNode56.data;
        int int58 = serializableNode56.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode59 = serializableNode56.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode60 = serializableNode56.parent;
        serializableNode37.parent = serializableNode56;
        serializableNode31.parent = serializableNode37;
        java.lang.Class<?> wildcardClass63 = serializableNode37.getClass();
        serializableNode22.data = wildcardClass63;
        serializableNode22.rank = 0;
        java.lang.Class<?> wildcardClass67 = serializableNode22.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode68 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass67);
        int int69 = serializableNode68.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(serializableNode22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertEquals("'" + serializable27 + "' != '" + 10L + "'", serializable27, 10L);
        org.junit.Assert.assertNotNull(serializableNode28);
        org.junit.Assert.assertNotNull(serializableNode31);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertEquals("'" + serializable36 + "' != '" + 10L + "'", serializable36, 10L);
        org.junit.Assert.assertNotNull(serializableNode37);
        org.junit.Assert.assertEquals("'" + serializable40 + "' != '" + 10L + "'", serializable40, 10L);
        org.junit.Assert.assertNotNull(serializableNode41);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertEquals("'" + serializable47 + "' != '" + 10L + "'", serializable47, 10L);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertEquals("'" + serializable50 + "' != '" + 10L + "'", serializable50, 10L);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertEquals("'" + serializable55 + "' != '" + 10L + "'", serializable55, 10L);
        org.junit.Assert.assertNotNull(serializableNode56);
        org.junit.Assert.assertEquals("'" + serializable57 + "' != '" + 10L + "'", serializable57, 10L);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(serializableNode59);
        org.junit.Assert.assertNotNull(serializableNode60);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
    }

    @Test
    public void test0995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0995");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int6 = serializableNode5.rank;
        int int7 = serializableNode5.rank;
        java.io.Serializable serializable8 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable11 = serializableNode10.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode10.parent;
        serializableNode5.parent = serializableNode10;
        serializableNode5.data = true;
        serializableNode1.parent = serializableNode5;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = null;
        serializableNode5.parent = serializableNode17;
        int int19 = serializableNode5.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int22 = serializableNode21.rank;
        int int23 = serializableNode21.rank;
        java.io.Serializable serializable24 = serializableNode21.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = serializableNode21.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable28 = serializableNode27.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = serializableNode27.parent;
        serializableNode25.parent = serializableNode29;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int33 = serializableNode32.rank;
        int int34 = serializableNode32.rank;
        java.io.Serializable serializable35 = serializableNode32.data;
        serializableNode32.rank = (byte) 1;
        java.lang.Class<?> wildcardClass38 = serializableNode32.getClass();
        serializableNode25.data = wildcardClass38;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode40 = serializableNode25.parent;
        serializableNode25.rank = 100;
        java.lang.Class<?> wildcardClass43 = serializableNode25.getClass();
        serializableNode5.data = wildcardClass43;
        serializableNode5.data = 100.0f;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertEquals("'" + serializable24 + "' != '" + 10L + "'", serializable24, 10L);
        org.junit.Assert.assertNotNull(serializableNode25);
        org.junit.Assert.assertEquals("'" + serializable28 + "' != '" + 10L + "'", serializable28, 10L);
        org.junit.Assert.assertNotNull(serializableNode29);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertEquals("'" + serializable35 + "' != '" + 10L + "'", serializable35, 10L);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(serializableNode40);
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test0996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0996");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        java.io.Serializable serializable7 = serializableNode6.data;
        int int8 = serializableNode6.rank;
        java.io.Serializable serializable9 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable12 = serializableNode11.data;
        int int13 = serializableNode11.rank;
        serializableNode11.rank = 'a';
        java.lang.Class<?> wildcardClass16 = serializableNode11.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass16);
        serializableNode6.parent = serializableNode17;
        java.io.Serializable serializable19 = serializableNode6.data;
        int int20 = serializableNode6.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertEquals("'" + serializable19 + "' != '" + 10L + "'", serializable19, 10L);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
    }

    @Test
    public void test0997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0997");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode6.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode6.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode8.parent;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(serializableNode9);
    }

    @Test
    public void test0998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0998");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        serializableNode1.rank = (byte) 10;
        serializableNode1.data = 10L;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable13 = serializableNode12.data;
        int int14 = serializableNode12.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode12.parent = serializableNode16;
        serializableNode12.data = '#';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int22 = serializableNode21.rank;
        int int23 = serializableNode21.rank;
        serializableNode21.data = (short) 100;
        serializableNode12.parent = serializableNode21;
        java.io.Serializable serializable27 = serializableNode21.data;
        int int28 = serializableNode21.rank;
        serializableNode21.rank = 10;
        java.io.Serializable serializable31 = serializableNode21.data;
        java.lang.Class<?> wildcardClass32 = serializable31.getClass();
        serializableNode1.data = serializable31;
        serializableNode1.rank = (short) 100;
        java.io.Serializable serializable36 = serializableNode1.data;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertEquals("'" + serializable27 + "' != '" + (short) 100 + "'", serializable27, (short) 100);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertEquals("'" + serializable31 + "' != '" + (short) 100 + "'", serializable31, (short) 100);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertEquals("'" + serializable36 + "' != '" + (short) 100 + "'", serializable36, (short) 100);
    }

    @Test
    public void test0999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0999");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = (short) -1;
        java.io.Serializable serializable6 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable9 = serializableNode8.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode8.parent;
        java.io.Serializable serializable11 = serializableNode10.data;
        serializableNode10.rank = (short) -1;
        java.lang.Class<?> wildcardClass14 = serializableNode10.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass14);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass14);
        serializableNode1.parent = serializableNode16;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode18.parent;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertNotNull(serializableNode19);
    }

    @Test
    public void test1000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test1000");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        java.io.Serializable serializable7 = serializableNode6.data;
        int int8 = serializableNode6.rank;
        java.io.Serializable serializable9 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int12 = serializableNode11.rank;
        int int13 = serializableNode11.rank;
        serializableNode11.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>> serializableNodeNode16 = new com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>>(serializableNode11);
        java.io.Serializable serializable17 = serializableNode11.data;
        java.lang.Class<?> wildcardClass18 = serializableNode11.getClass();
        serializableNode6.data = wildcardClass18;
        java.lang.Class<?> wildcardClass20 = serializableNode6.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass20);
        serializableNode21.rank = 0;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int26 = serializableNode25.rank;
        int int27 = serializableNode25.rank;
        java.io.Serializable serializable28 = serializableNode25.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable31 = serializableNode30.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = serializableNode30.parent;
        serializableNode25.parent = serializableNode30;
        int int34 = serializableNode25.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode36 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int37 = serializableNode36.rank;
        int int38 = serializableNode36.rank;
        java.io.Serializable serializable39 = serializableNode36.data;
        serializableNode36.rank = (byte) 1;
        serializableNode36.data = 10.0d;
        java.lang.Class<?> wildcardClass44 = serializableNode36.getClass();
        serializableNode25.data = wildcardClass44;
        serializableNode21.data = wildcardClass44;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + serializable17 + "' != '" + 10L + "'", serializable17, 10L);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertEquals("'" + serializable28 + "' != '" + 10L + "'", serializable28, 10L);
        org.junit.Assert.assertEquals("'" + serializable31 + "' != '" + 10L + "'", serializable31, 10L);
        org.junit.Assert.assertNotNull(serializableNode32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertEquals("'" + serializable39 + "' != '" + 10L + "'", serializable39, 10L);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }
}

