package datastructures.bloomfilter;

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest3 {

    public static boolean debug = false;

    @Test
    public void test1501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1501");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor> typeDescriptorBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor>(1, (int) (short) 100);
        java.lang.Class<?> wildcardClass6 = typeDescriptorBloomFilter5.getClass();
        boolean boolean7 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test1502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1502");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(1, 100);
    }

    @Test
    public void test1503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1503");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', 1);
        java.lang.Class<?> wildcardClass3 = constableBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test1504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1504");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.CharSequence> charSequenceBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.CharSequence>((int) (byte) 1, (int) (byte) 10);
        java.lang.Class<?> wildcardClass3 = charSequenceBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test1505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1505");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter2.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter2.insert((java.lang.constant.Constable) (short) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Object> objBloomFilter11 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Object>((int) 'a', (int) '4');
        java.lang.Class<?> wildcardClass12 = objBloomFilter11.getClass();
        boolean boolean13 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test1506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1506");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable3 = null;
        constableBloomFilter2.insert(constable3);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter7 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable8 = null;
        boolean boolean9 = constableBloomFilter7.contains(constable8);
        constableBloomFilter7.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean13 = constableBloomFilter7.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter19 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass20 = wildcardClassOfFieldBloomFilter19.getClass();
        constableBloomFilter16.insert((java.lang.constant.Constable) wildcardClass20);
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        constableBloomFilter16.insert((java.lang.constant.Constable) wildcardClass23);
        boolean boolean26 = constableBloomFilter16.contains((java.lang.constant.Constable) '#');
        constableBloomFilter16.insert((java.lang.constant.Constable) '#');
        java.lang.Class<?> wildcardClass29 = constableBloomFilter16.getClass();
        boolean boolean30 = constableBloomFilter7.contains((java.lang.constant.Constable) wildcardClass29);
        boolean boolean31 = constableBloomFilter2.contains((java.lang.constant.Constable) boolean30);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter34 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass35 = wildcardClassOfFieldBloomFilter34.getClass();
        boolean boolean36 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass35);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.Type> typeBloomFilter39 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.Type>((int) (byte) 100, 10);
        java.lang.Class<?> wildcardClass40 = typeBloomFilter39.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass40);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter44 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter47 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>(0, (int) ' ');
        java.lang.Class<?> wildcardClass48 = constableBloomFilterBloomFilter47.getClass();
        boolean boolean49 = constableBloomFilter44.contains((java.lang.constant.Constable) wildcardClass48);
        java.lang.Class<?> wildcardClass50 = constableBloomFilter44.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass50);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter54 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(0, (int) (short) 100);
        java.lang.constant.Constable constable55 = null;
        constableBloomFilter54.insert(constable55);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter59 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter59.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean63 = constableBloomFilter59.contains((java.lang.constant.Constable) 100L);
        boolean boolean65 = constableBloomFilter59.contains((java.lang.constant.Constable) (byte) 0);
        boolean boolean67 = constableBloomFilter59.contains((java.lang.constant.Constable) "");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter70 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter70.insert((java.lang.constant.Constable) 10);
        boolean boolean74 = constableBloomFilter70.contains((java.lang.constant.Constable) true);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter77 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter77.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter82 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter85 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass86 = wildcardClassOfFieldBloomFilter85.getClass();
        constableBloomFilter82.insert((java.lang.constant.Constable) wildcardClass86);
        constableBloomFilter77.insert((java.lang.constant.Constable) wildcardClass86);
        boolean boolean89 = constableBloomFilter70.contains((java.lang.constant.Constable) wildcardClass86);
        constableBloomFilter59.insert((java.lang.constant.Constable) wildcardClass86);
        constableBloomFilter54.insert((java.lang.constant.Constable) wildcardClass86);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass86);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Object> objBloomFilter95 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Object>(0, (int) (byte) 0);
        java.lang.Class<?> wildcardClass96 = objBloomFilter95.getClass();
        boolean boolean97 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass96);
        java.lang.Class<?> wildcardClass98 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + true + "'", boolean97 == true);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test1507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1507");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.AnnotatedElement> annotatedElementBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.AnnotatedElement>((int) ' ', 0);
    }

    @Test
    public void test1508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1508");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) 'a', 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        java.lang.Class<?> wildcardClass6 = constableBloomFilter5.getClass();
        boolean boolean7 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass6);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter10 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter13 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) 'a');
        boolean boolean15 = constableBloomFilter13.contains((java.lang.constant.Constable) (byte) 100);
        java.lang.Class<?> wildcardClass16 = constableBloomFilter13.getClass();
        constableBloomFilter10.insert((java.lang.constant.Constable) wildcardClass16);
        boolean boolean18 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test1509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1509");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>((int) (short) 1, (int) '#');
    }

    @Test
    public void test1510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1510");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass6 = wildcardClassOfFieldBloomFilter5.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass6);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter10 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) 'a');
        boolean boolean12 = constableBloomFilter10.contains((java.lang.constant.Constable) ' ');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter15 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter18 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable19 = null;
        boolean boolean20 = constableBloomFilter18.contains(constable19);
        constableBloomFilter18.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean24 = constableBloomFilter18.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass25 = constableBloomFilter18.getClass();
        boolean boolean26 = constableBloomFilter15.contains((java.lang.constant.Constable) wildcardClass25);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter29 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable30 = null;
        boolean boolean31 = constableBloomFilter29.contains(constable30);
        constableBloomFilter29.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean35 = constableBloomFilter29.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass36 = constableBloomFilter29.getClass();
        constableBloomFilter15.insert((java.lang.constant.Constable) wildcardClass36);
        boolean boolean38 = constableBloomFilter10.contains((java.lang.constant.Constable) wildcardClass36);
        constableBloomFilter2.insert((java.lang.constant.Constable) boolean38);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter42 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter45 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable46 = null;
        boolean boolean47 = constableBloomFilter45.contains(constable46);
        constableBloomFilter45.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean51 = constableBloomFilter45.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass52 = constableBloomFilter45.getClass();
        boolean boolean53 = constableBloomFilter42.contains((java.lang.constant.Constable) wildcardClass52);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter56 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable57 = null;
        boolean boolean58 = constableBloomFilter56.contains(constable57);
        constableBloomFilter56.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean62 = constableBloomFilter56.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass63 = constableBloomFilter56.getClass();
        constableBloomFilter42.insert((java.lang.constant.Constable) wildcardClass63);
        boolean boolean66 = constableBloomFilter42.contains((java.lang.constant.Constable) 1L);
        java.lang.Class<?> wildcardClass67 = constableBloomFilter42.getClass();
        boolean boolean68 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass67);
        java.lang.Class<?> wildcardClass69 = constableBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test1511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1511");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 10, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter8 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter8.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter8.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter8.insert((java.lang.constant.Constable) (-1L));
        boolean boolean16 = constableBloomFilter8.contains((java.lang.constant.Constable) 0L);
        java.lang.Class<?> wildcardClass17 = constableBloomFilter8.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass17);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter21 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean23 = constableBloomFilter21.contains((java.lang.constant.Constable) 0L);
        java.lang.Class<?> wildcardClass24 = constableBloomFilter21.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass24);
        boolean boolean26 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass24);
        java.lang.constant.Constable constable27 = null;
        boolean boolean28 = constableBloomFilter2.contains(constable27);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter31 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter31.insert((java.lang.constant.Constable) 10);
        boolean boolean35 = constableBloomFilter31.contains((java.lang.constant.Constable) true);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter38 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter38.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter43 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter46 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass47 = wildcardClassOfFieldBloomFilter46.getClass();
        constableBloomFilter43.insert((java.lang.constant.Constable) wildcardClass47);
        constableBloomFilter38.insert((java.lang.constant.Constable) wildcardClass47);
        boolean boolean50 = constableBloomFilter31.contains((java.lang.constant.Constable) wildcardClass47);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter53 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter53.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter53.insert((java.lang.constant.Constable) 1.0f);
        boolean boolean59 = constableBloomFilter53.contains((java.lang.constant.Constable) (short) 100);
        boolean boolean61 = constableBloomFilter53.contains((java.lang.constant.Constable) 0L);
        boolean boolean63 = constableBloomFilter53.contains((java.lang.constant.Constable) (short) 100);
        java.lang.Class<?> wildcardClass64 = constableBloomFilter53.getClass();
        boolean boolean65 = constableBloomFilter31.contains((java.lang.constant.Constable) wildcardClass64);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter68 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean70 = constableBloomFilter68.contains((java.lang.constant.Constable) 0L);
        boolean boolean72 = constableBloomFilter68.contains((java.lang.constant.Constable) 0L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter75 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter75.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter75.insert((java.lang.constant.Constable) 1.0f);
        boolean boolean81 = constableBloomFilter75.contains((java.lang.constant.Constable) (short) 100);
        java.lang.Class<?> wildcardClass82 = constableBloomFilter75.getClass();
        boolean boolean83 = constableBloomFilter68.contains((java.lang.constant.Constable) wildcardClass82);
        boolean boolean84 = constableBloomFilter31.contains((java.lang.constant.Constable) wildcardClass82);
        boolean boolean85 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass82);
        java.lang.Class<?> wildcardClass86 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test1512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1512");
        // The following exception was thrown during execution in test generation
        try {
            com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Class<?>> wildcardClassBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Class<?>>((int) (byte) -1, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1513");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(1, (int) (byte) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.CharSequence> charSequenceBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.CharSequence>((int) (byte) 0, (int) ' ');
        java.lang.Class<?> wildcardClass6 = charSequenceBloomFilter5.getClass();
        boolean boolean7 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass6);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter10 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable11 = null;
        boolean boolean12 = constableBloomFilter10.contains(constable11);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter15 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable16 = null;
        boolean boolean17 = constableBloomFilter15.contains(constable16);
        boolean boolean19 = constableBloomFilter15.contains((java.lang.constant.Constable) 1L);
        java.lang.Class<?> wildcardClass20 = constableBloomFilter15.getClass();
        constableBloomFilter10.insert((java.lang.constant.Constable) wildcardClass20);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter24 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable25 = null;
        boolean boolean26 = constableBloomFilter24.contains(constable25);
        constableBloomFilter24.insert((java.lang.constant.Constable) 100.0f);
        boolean boolean30 = constableBloomFilter24.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass31 = constableBloomFilter24.getClass();
        constableBloomFilter10.insert((java.lang.constant.Constable) wildcardClass31);
        boolean boolean33 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass31);
        java.lang.Class<?> wildcardClass34 = constableBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test1514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1514");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(0, (int) '#');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter8 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable9 = null;
        boolean boolean10 = constableBloomFilter8.contains(constable9);
        constableBloomFilter8.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter15 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable16 = null;
        boolean boolean17 = constableBloomFilter15.contains(constable16);
        java.lang.Class<?> wildcardClass18 = constableBloomFilter15.getClass();
        constableBloomFilter8.insert((java.lang.constant.Constable) wildcardClass18);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter22 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable23 = null;
        boolean boolean24 = constableBloomFilter22.contains(constable23);
        constableBloomFilter22.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter29 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable30 = null;
        boolean boolean31 = constableBloomFilter29.contains(constable30);
        java.lang.Class<?> wildcardClass32 = constableBloomFilter29.getClass();
        constableBloomFilter22.insert((java.lang.constant.Constable) wildcardClass32);
        boolean boolean34 = constableBloomFilter8.contains((java.lang.constant.Constable) wildcardClass32);
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass32);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter38 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 10, (int) (short) 10);
        java.lang.Class<?> wildcardClass39 = constableBloomFilter38.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass39);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass39);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc> constantDescBloomFilter44 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc>((int) ' ', (int) '4');
        java.lang.Class<?> wildcardClass45 = constantDescBloomFilter44.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test1515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1515");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Comparable<java.lang.String>> strComparableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Comparable<java.lang.String>>((int) (byte) 0, (int) (byte) 0);
    }

    @Test
    public void test1516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1516");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter2.insert((java.lang.constant.Constable) 1.0f);
        boolean boolean8 = constableBloomFilter2.contains((java.lang.constant.Constable) (short) 100);
        boolean boolean10 = constableBloomFilter2.contains((java.lang.constant.Constable) 0L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter13 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) '#');
        java.lang.constant.Constable constable14 = null;
        constableBloomFilter13.insert(constable14);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter18 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) '#');
        constableBloomFilter18.insert((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.GenericDeclaration> genericDeclarationBloomFilter23 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.GenericDeclaration>(1, (int) 'a');
        java.lang.Class<?> wildcardClass24 = genericDeclarationBloomFilter23.getClass();
        constableBloomFilter18.insert((java.lang.constant.Constable) wildcardClass24);
        boolean boolean26 = constableBloomFilter13.contains((java.lang.constant.Constable) wildcardClass24);
        java.lang.Class<?> wildcardClass27 = constableBloomFilter13.getClass();
        boolean boolean28 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass27);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter31 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, 0);
        java.lang.Class<?> wildcardClass32 = constableBloomFilter31.getClass();
        boolean boolean33 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass32);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter36 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter39 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable40 = null;
        boolean boolean41 = constableBloomFilter39.contains(constable40);
        constableBloomFilter39.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean45 = constableBloomFilter39.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass46 = constableBloomFilter39.getClass();
        boolean boolean47 = constableBloomFilter36.contains((java.lang.constant.Constable) wildcardClass46);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter50 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable51 = null;
        boolean boolean52 = constableBloomFilter50.contains(constable51);
        constableBloomFilter50.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean56 = constableBloomFilter50.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass57 = constableBloomFilter50.getClass();
        constableBloomFilter36.insert((java.lang.constant.Constable) wildcardClass57);
        boolean boolean60 = constableBloomFilter36.contains((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter63 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter63.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter63.insert((java.lang.constant.Constable) 1.0f);
        java.lang.constant.Constable constable68 = null;
        constableBloomFilter63.insert(constable68);
        boolean boolean71 = constableBloomFilter63.contains((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter74 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>((int) (short) 10, (int) (byte) 1);
        java.lang.Class<?> wildcardClass75 = constableBloomFilterBloomFilter74.getClass();
        boolean boolean76 = constableBloomFilter63.contains((java.lang.constant.Constable) wildcardClass75);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter79 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', 0);
        java.lang.Class<?> wildcardClass80 = constableBloomFilter79.getClass();
        boolean boolean81 = constableBloomFilter63.contains((java.lang.constant.Constable) wildcardClass80);
        boolean boolean82 = constableBloomFilter36.contains((java.lang.constant.Constable) wildcardClass80);
        constableBloomFilter2.insert((java.lang.constant.Constable) boolean82);
        java.lang.Class<?> wildcardClass84 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test1517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1517");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 10, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter5.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter5.insert((java.lang.constant.Constable) 1.0f);
        boolean boolean11 = constableBloomFilter5.contains((java.lang.constant.Constable) (short) 100);
        boolean boolean13 = constableBloomFilter5.contains((java.lang.constant.Constable) 0L);
        boolean boolean15 = constableBloomFilter5.contains((java.lang.constant.Constable) (short) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter18 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter21 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter21.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter26 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter29 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass30 = wildcardClassOfFieldBloomFilter29.getClass();
        constableBloomFilter26.insert((java.lang.constant.Constable) wildcardClass30);
        constableBloomFilter21.insert((java.lang.constant.Constable) wildcardClass30);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter35 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', 0);
        java.lang.Class<?> wildcardClass36 = constableBloomFilter35.getClass();
        constableBloomFilter21.insert((java.lang.constant.Constable) wildcardClass36);
        constableBloomFilter18.insert((java.lang.constant.Constable) wildcardClass36);
        java.lang.Class<?> wildcardClass39 = constableBloomFilter18.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass39);
        boolean boolean41 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test1518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1518");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable3 = null;
        boolean boolean4 = constableBloomFilter2.contains(constable3);
        constableBloomFilter2.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean8 = constableBloomFilter2.contains((java.lang.constant.Constable) 'a');
        constableBloomFilter2.insert((java.lang.constant.Constable) (short) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter13 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter13.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean17 = constableBloomFilter13.contains((java.lang.constant.Constable) 100L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter20 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter20.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter25 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter28 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass29 = wildcardClassOfFieldBloomFilter28.getClass();
        constableBloomFilter25.insert((java.lang.constant.Constable) wildcardClass29);
        constableBloomFilter20.insert((java.lang.constant.Constable) wildcardClass29);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter34 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', 0);
        java.lang.Class<?> wildcardClass35 = constableBloomFilter34.getClass();
        constableBloomFilter20.insert((java.lang.constant.Constable) wildcardClass35);
        constableBloomFilter13.insert((java.lang.constant.Constable) wildcardClass35);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass35);
        boolean boolean40 = constableBloomFilter2.contains((java.lang.constant.Constable) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter43 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable44 = null;
        boolean boolean45 = constableBloomFilter43.contains(constable44);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter48 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable49 = null;
        boolean boolean50 = constableBloomFilter48.contains(constable49);
        boolean boolean52 = constableBloomFilter48.contains((java.lang.constant.Constable) 1L);
        java.lang.Class<?> wildcardClass53 = constableBloomFilter48.getClass();
        constableBloomFilter43.insert((java.lang.constant.Constable) wildcardClass53);
        java.lang.Class<?> wildcardClass55 = constableBloomFilter43.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass55);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter59 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 1, (int) (short) 10);
        java.lang.Class<?> wildcardClass60 = constableBloomFilter59.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test1519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1519");
        // The following exception was thrown during execution in test generation
        try {
            com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Comparable<java.lang.String>> strComparableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Comparable<java.lang.String>>((int) (short) 100, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: nbits < 0: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1520");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 10, (int) ' ');
        java.lang.Class<?> wildcardClass3 = constableBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test1521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1521");
        // The following exception was thrown during execution in test generation
        try {
            com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 100, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: nbits < 0: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1522");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 1, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable6 = null;
        boolean boolean7 = constableBloomFilter5.contains(constable6);
        boolean boolean9 = constableBloomFilter5.contains((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter12 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter12.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter12.insert((java.lang.constant.Constable) 1.0f);
        boolean boolean18 = constableBloomFilter12.contains((java.lang.constant.Constable) (short) 100);
        constableBloomFilter12.insert((java.lang.constant.Constable) '#');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter23 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter23.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean27 = constableBloomFilter23.contains((java.lang.constant.Constable) 100L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter30 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter30.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter35 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter38 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass39 = wildcardClassOfFieldBloomFilter38.getClass();
        constableBloomFilter35.insert((java.lang.constant.Constable) wildcardClass39);
        constableBloomFilter30.insert((java.lang.constant.Constable) wildcardClass39);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter44 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', 0);
        java.lang.Class<?> wildcardClass45 = constableBloomFilter44.getClass();
        constableBloomFilter30.insert((java.lang.constant.Constable) wildcardClass45);
        constableBloomFilter23.insert((java.lang.constant.Constable) wildcardClass45);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter50 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter50.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter50.insert((java.lang.constant.Constable) ' ');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter57 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter57.insert((java.lang.constant.Constable) 0.0d);
        java.lang.Class<?> wildcardClass60 = constableBloomFilter57.getClass();
        boolean boolean61 = constableBloomFilter50.contains((java.lang.constant.Constable) wildcardClass60);
        java.lang.constant.Constable constable62 = null;
        boolean boolean63 = constableBloomFilter50.contains(constable62);
        java.lang.Class<?> wildcardClass64 = constableBloomFilter50.getClass();
        constableBloomFilter23.insert((java.lang.constant.Constable) wildcardClass64);
        constableBloomFilter12.insert((java.lang.constant.Constable) wildcardClass64);
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass64);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.String> strBloomFilter70 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.String>((int) (short) 0, (int) (short) 10);
        java.lang.Class<?> wildcardClass71 = strBloomFilter70.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass71);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass71);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test1523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1523");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass6 = wildcardClassOfFieldBloomFilter5.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass6);
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass9);
        boolean boolean12 = constableBloomFilter2.contains((java.lang.constant.Constable) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter15 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable16 = null;
        boolean boolean17 = constableBloomFilter15.contains(constable16);
        constableBloomFilter15.insert((java.lang.constant.Constable) (byte) 0);
        java.lang.Class<?> wildcardClass20 = constableBloomFilter15.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass20);
        boolean boolean23 = constableBloomFilter2.contains((java.lang.constant.Constable) ' ');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter26 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter29 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass30 = wildcardClassOfFieldBloomFilter29.getClass();
        constableBloomFilter26.insert((java.lang.constant.Constable) wildcardClass30);
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        constableBloomFilter26.insert((java.lang.constant.Constable) wildcardClass33);
        boolean boolean36 = constableBloomFilter26.contains((java.lang.constant.Constable) '#');
        constableBloomFilter26.insert((java.lang.constant.Constable) (-1L));
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter41 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter41.insert((java.lang.constant.Constable) 10);
        boolean boolean45 = constableBloomFilter41.contains((java.lang.constant.Constable) true);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter48 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter48.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter53 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter56 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass57 = wildcardClassOfFieldBloomFilter56.getClass();
        constableBloomFilter53.insert((java.lang.constant.Constable) wildcardClass57);
        constableBloomFilter48.insert((java.lang.constant.Constable) wildcardClass57);
        boolean boolean60 = constableBloomFilter41.contains((java.lang.constant.Constable) wildcardClass57);
        constableBloomFilter26.insert((java.lang.constant.Constable) wildcardClass57);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter64 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter64.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean68 = constableBloomFilter64.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter64.insert((java.lang.constant.Constable) (short) 0);
        boolean boolean72 = constableBloomFilter64.contains((java.lang.constant.Constable) 0);
        java.lang.Class<?> wildcardClass73 = constableBloomFilter64.getClass();
        constableBloomFilter26.insert((java.lang.constant.Constable) wildcardClass73);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter77 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(0, (int) (short) 0);
        java.lang.Class<?> wildcardClass78 = constableBloomFilter77.getClass();
        constableBloomFilter26.insert((java.lang.constant.Constable) wildcardClass78);
        java.lang.Class<?> wildcardClass80 = constableBloomFilter26.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass80);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test1524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1524");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.Type> typeBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.Type>(100, (int) '4');
    }

    @Test
    public void test1525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1525");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter2.insert((java.lang.constant.Constable) 1.0f);
        java.lang.constant.Constable constable7 = null;
        constableBloomFilter2.insert(constable7);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter11 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable12 = null;
        boolean boolean13 = constableBloomFilter11.contains(constable12);
        constableBloomFilter11.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean17 = constableBloomFilter11.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter20 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter23 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass24 = wildcardClassOfFieldBloomFilter23.getClass();
        constableBloomFilter20.insert((java.lang.constant.Constable) wildcardClass24);
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        constableBloomFilter20.insert((java.lang.constant.Constable) wildcardClass27);
        boolean boolean30 = constableBloomFilter20.contains((java.lang.constant.Constable) '#');
        constableBloomFilter20.insert((java.lang.constant.Constable) '#');
        java.lang.Class<?> wildcardClass33 = constableBloomFilter20.getClass();
        boolean boolean34 = constableBloomFilter11.contains((java.lang.constant.Constable) wildcardClass33);
        constableBloomFilter2.insert((java.lang.constant.Constable) boolean34);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter38 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter38.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter38.insert((java.lang.constant.Constable) 1.0f);
        boolean boolean44 = constableBloomFilter38.contains((java.lang.constant.Constable) (short) 100);
        boolean boolean46 = constableBloomFilter38.contains((java.lang.constant.Constable) 0L);
        boolean boolean48 = constableBloomFilter38.contains((java.lang.constant.Constable) (short) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter51 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable52 = null;
        boolean boolean53 = constableBloomFilter51.contains(constable52);
        constableBloomFilter51.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter58 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable59 = null;
        boolean boolean60 = constableBloomFilter58.contains(constable59);
        java.lang.Class<?> wildcardClass61 = constableBloomFilter58.getClass();
        constableBloomFilter51.insert((java.lang.constant.Constable) wildcardClass61);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter65 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable66 = null;
        boolean boolean67 = constableBloomFilter65.contains(constable66);
        constableBloomFilter65.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter72 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable73 = null;
        boolean boolean74 = constableBloomFilter72.contains(constable73);
        java.lang.Class<?> wildcardClass75 = constableBloomFilter72.getClass();
        constableBloomFilter65.insert((java.lang.constant.Constable) wildcardClass75);
        boolean boolean77 = constableBloomFilter51.contains((java.lang.constant.Constable) wildcardClass75);
        boolean boolean78 = constableBloomFilter38.contains((java.lang.constant.Constable) wildcardClass75);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter81 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        boolean boolean83 = constableBloomFilter81.contains((java.lang.constant.Constable) ' ');
        boolean boolean85 = constableBloomFilter81.contains((java.lang.constant.Constable) (short) 1);
        boolean boolean87 = constableBloomFilter81.contains((java.lang.constant.Constable) (-1));
        java.lang.Class<?> wildcardClass88 = constableBloomFilter81.getClass();
        constableBloomFilter38.insert((java.lang.constant.Constable) wildcardClass88);
        java.lang.Class<?> wildcardClass90 = constableBloomFilter38.getClass();
        boolean boolean91 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass90);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
    }

    @Test
    public void test1526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1526");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 100, (int) (short) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, (int) (short) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter8 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter8.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter8.insert((java.lang.constant.Constable) ' ');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter15 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter15.insert((java.lang.constant.Constable) 0.0d);
        java.lang.Class<?> wildcardClass18 = constableBloomFilter15.getClass();
        boolean boolean19 = constableBloomFilter8.contains((java.lang.constant.Constable) wildcardClass18);
        java.lang.constant.Constable constable20 = null;
        boolean boolean21 = constableBloomFilter8.contains(constable20);
        java.lang.Class<?> wildcardClass22 = constableBloomFilter8.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass22);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter26 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 1, (int) (byte) 100);
        java.lang.Class<?> wildcardClass27 = constableBloomFilter26.getClass();
        boolean boolean28 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass27);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter31 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 100, 10);
        java.lang.Class<?> wildcardClass32 = constableBloomFilter31.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass32);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter36 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(0, (int) (short) 1);
        java.lang.Class<?> wildcardClass37 = wildcardClassOfFieldBloomFilter36.getClass();
        boolean boolean38 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass37);
        java.lang.Class<?> wildcardClass39 = constableBloomFilter5.getClass();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean40 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass39);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: null");
        } catch (java.lang.ArithmeticException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test1527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1527");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', (int) (short) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter8 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass9 = wildcardClassOfFieldBloomFilter8.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass9);
        java.lang.Object obj11 = new java.lang.Object();
        java.lang.Class<?> wildcardClass12 = obj11.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass12);
        boolean boolean15 = constableBloomFilter5.contains((java.lang.constant.Constable) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter18 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter18.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean22 = constableBloomFilter18.contains((java.lang.constant.Constable) 100L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter25 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter25.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter30 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter33 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass34 = wildcardClassOfFieldBloomFilter33.getClass();
        constableBloomFilter30.insert((java.lang.constant.Constable) wildcardClass34);
        constableBloomFilter25.insert((java.lang.constant.Constable) wildcardClass34);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter39 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', 0);
        java.lang.Class<?> wildcardClass40 = constableBloomFilter39.getClass();
        constableBloomFilter25.insert((java.lang.constant.Constable) wildcardClass40);
        constableBloomFilter18.insert((java.lang.constant.Constable) wildcardClass40);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter45 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable46 = null;
        boolean boolean47 = constableBloomFilter45.contains(constable46);
        constableBloomFilter45.insert((java.lang.constant.Constable) (byte) 0);
        java.lang.Class<?> wildcardClass50 = constableBloomFilter45.getClass();
        boolean boolean51 = constableBloomFilter18.contains((java.lang.constant.Constable) wildcardClass50);
        boolean boolean52 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass50);
        boolean boolean53 = constableBloomFilter2.contains((java.lang.constant.Constable) boolean52);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor> typeDescriptorBloomFilter56 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor>(1, (int) (short) 100);
        java.lang.Class<?> wildcardClass57 = typeDescriptorBloomFilter56.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass57);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter61 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter61.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter61.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter61.insert((java.lang.constant.Constable) (-1L));
        boolean boolean69 = constableBloomFilter61.contains((java.lang.constant.Constable) 0L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter72 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean74 = constableBloomFilter72.contains((java.lang.constant.Constable) 0L);
        boolean boolean76 = constableBloomFilter72.contains((java.lang.constant.Constable) 0L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter79 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter79.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean83 = constableBloomFilter79.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter79.insert((java.lang.constant.Constable) (short) 0);
        boolean boolean87 = constableBloomFilter79.contains((java.lang.constant.Constable) 0);
        java.lang.Class<?> wildcardClass88 = constableBloomFilter79.getClass();
        constableBloomFilter72.insert((java.lang.constant.Constable) wildcardClass88);
        boolean boolean90 = constableBloomFilter61.contains((java.lang.constant.Constable) wildcardClass88);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.CharSequence> charSequenceBloomFilter93 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.CharSequence>((int) (byte) 0, (int) ' ');
        java.lang.Class<?> wildcardClass94 = charSequenceBloomFilter93.getClass();
        boolean boolean95 = constableBloomFilter61.contains((java.lang.constant.Constable) wildcardClass94);
        java.lang.Class<?> wildcardClass96 = constableBloomFilter61.getClass();
        boolean boolean97 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass96);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(wildcardClass94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + true + "'", boolean97 == true);
    }

    @Test
    public void test1528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1528");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.Type> typeBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.Type>((int) (byte) 0, 10);
    }

    @Test
    public void test1529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1529");
        // The following exception was thrown during execution in test generation
        try {
            com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>((int) (byte) 1, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: nbits < 0: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1530");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>((int) (byte) 100, (int) ' ');
        java.lang.Class<?> wildcardClass3 = constableBloomFilterBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test1531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1531");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(1, (int) ' ');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.AnnotatedElement> annotatedElementBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.AnnotatedElement>((int) (short) 0, 1);
        java.lang.Class<?> wildcardClass6 = annotatedElementBloomFilter5.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass6);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter10 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(1, 1);
        constableBloomFilter10.insert((java.lang.constant.Constable) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter15 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '#', (int) (short) 100);
        java.lang.Class<?> wildcardClass16 = constableBloomFilter15.getClass();
        boolean boolean17 = constableBloomFilter10.contains((java.lang.constant.Constable) wildcardClass16);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter20 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter23 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass24 = wildcardClassOfFieldBloomFilter23.getClass();
        constableBloomFilter20.insert((java.lang.constant.Constable) wildcardClass24);
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        constableBloomFilter20.insert((java.lang.constant.Constable) wildcardClass27);
        boolean boolean30 = constableBloomFilter20.contains((java.lang.constant.Constable) '#');
        constableBloomFilter20.insert((java.lang.constant.Constable) (-1L));
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter35 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter35.insert((java.lang.constant.Constable) 10);
        boolean boolean39 = constableBloomFilter35.contains((java.lang.constant.Constable) true);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter42 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter42.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter47 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter50 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass51 = wildcardClassOfFieldBloomFilter50.getClass();
        constableBloomFilter47.insert((java.lang.constant.Constable) wildcardClass51);
        constableBloomFilter42.insert((java.lang.constant.Constable) wildcardClass51);
        boolean boolean54 = constableBloomFilter35.contains((java.lang.constant.Constable) wildcardClass51);
        constableBloomFilter20.insert((java.lang.constant.Constable) wildcardClass51);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter58 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter58.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean62 = constableBloomFilter58.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter58.insert((java.lang.constant.Constable) (short) 0);
        boolean boolean66 = constableBloomFilter58.contains((java.lang.constant.Constable) 0);
        java.lang.Class<?> wildcardClass67 = constableBloomFilter58.getClass();
        constableBloomFilter20.insert((java.lang.constant.Constable) wildcardClass67);
        boolean boolean69 = constableBloomFilter10.contains((java.lang.constant.Constable) wildcardClass67);
        java.lang.Object obj70 = new java.lang.Object();
        java.lang.Class<?> wildcardClass71 = obj70.getClass();
        constableBloomFilter10.insert((java.lang.constant.Constable) wildcardClass71);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test1532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1532");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter2.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter2.insert((java.lang.constant.Constable) (-1L));
        constableBloomFilter2.insert((java.lang.constant.Constable) 'a');
        boolean boolean12 = constableBloomFilter2.contains((java.lang.constant.Constable) 10.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter15 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable16 = null;
        boolean boolean17 = constableBloomFilter15.contains(constable16);
        constableBloomFilter15.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter22 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable23 = null;
        boolean boolean24 = constableBloomFilter22.contains(constable23);
        java.lang.Class<?> wildcardClass25 = constableBloomFilter22.getClass();
        constableBloomFilter15.insert((java.lang.constant.Constable) wildcardClass25);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter29 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable30 = null;
        boolean boolean31 = constableBloomFilter29.contains(constable30);
        constableBloomFilter29.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter36 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable37 = null;
        boolean boolean38 = constableBloomFilter36.contains(constable37);
        java.lang.Class<?> wildcardClass39 = constableBloomFilter36.getClass();
        constableBloomFilter29.insert((java.lang.constant.Constable) wildcardClass39);
        boolean boolean41 = constableBloomFilter15.contains((java.lang.constant.Constable) wildcardClass39);
        java.lang.Class<?> wildcardClass42 = constableBloomFilter15.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass42);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter46 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter49 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '#', (int) (short) 100);
        java.lang.Class<?> wildcardClass50 = constableBloomFilter49.getClass();
        boolean boolean51 = constableBloomFilter46.contains((java.lang.constant.Constable) wildcardClass50);
        java.lang.Class<?> wildcardClass52 = constableBloomFilter46.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test1533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1533");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.String> strBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.String>((int) '4', (int) (byte) 10);
    }

    @Test
    public void test1534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1534");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, 10);
        constableBloomFilter2.insert((java.lang.constant.Constable) (short) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter7 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable8 = null;
        boolean boolean9 = constableBloomFilter7.contains(constable8);
        constableBloomFilter7.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean13 = constableBloomFilter7.contains((java.lang.constant.Constable) 'a');
        boolean boolean15 = constableBloomFilter7.contains((java.lang.constant.Constable) 100.0f);
        constableBloomFilter7.insert((java.lang.constant.Constable) (short) 1);
        boolean boolean19 = constableBloomFilter7.contains((java.lang.constant.Constable) '4');
        java.lang.Class<?> wildcardClass20 = constableBloomFilter7.getClass();
        boolean boolean21 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass20);
        java.lang.Class<?> wildcardClass22 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test1535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1535");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '#', (int) (short) 100);
        java.lang.Class<?> wildcardClass6 = constableBloomFilter5.getClass();
        boolean boolean7 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass6);
        boolean boolean9 = constableBloomFilter2.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter12 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean14 = constableBloomFilter12.contains((java.lang.constant.Constable) true);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter17 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter20 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>(0, (int) ' ');
        java.lang.Class<?> wildcardClass21 = constableBloomFilterBloomFilter20.getClass();
        boolean boolean22 = constableBloomFilter17.contains((java.lang.constant.Constable) wildcardClass21);
        boolean boolean23 = constableBloomFilter12.contains((java.lang.constant.Constable) wildcardClass21);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter26 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter26.insert((java.lang.constant.Constable) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter31 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter34 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable35 = null;
        boolean boolean36 = constableBloomFilter34.contains(constable35);
        constableBloomFilter34.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean40 = constableBloomFilter34.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass41 = constableBloomFilter34.getClass();
        boolean boolean42 = constableBloomFilter31.contains((java.lang.constant.Constable) wildcardClass41);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter45 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable46 = null;
        boolean boolean47 = constableBloomFilter45.contains(constable46);
        constableBloomFilter45.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean51 = constableBloomFilter45.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass52 = constableBloomFilter45.getClass();
        constableBloomFilter31.insert((java.lang.constant.Constable) wildcardClass52);
        boolean boolean55 = constableBloomFilter31.contains((java.lang.constant.Constable) 1L);
        java.lang.Class<?> wildcardClass56 = constableBloomFilter31.getClass();
        constableBloomFilter26.insert((java.lang.constant.Constable) wildcardClass56);
        boolean boolean58 = constableBloomFilter12.contains((java.lang.constant.Constable) wildcardClass56);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass56);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter62 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable63 = null;
        boolean boolean64 = constableBloomFilter62.contains(constable63);
        constableBloomFilter62.insert((java.lang.constant.Constable) 100.0f);
        boolean boolean68 = constableBloomFilter62.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter71 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter74 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable75 = null;
        boolean boolean76 = constableBloomFilter74.contains(constable75);
        constableBloomFilter74.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean80 = constableBloomFilter74.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass81 = constableBloomFilter74.getClass();
        boolean boolean82 = constableBloomFilter71.contains((java.lang.constant.Constable) wildcardClass81);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter85 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable86 = null;
        boolean boolean87 = constableBloomFilter85.contains(constable86);
        constableBloomFilter85.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean91 = constableBloomFilter85.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass92 = constableBloomFilter85.getClass();
        constableBloomFilter71.insert((java.lang.constant.Constable) wildcardClass92);
        boolean boolean94 = constableBloomFilter62.contains((java.lang.constant.Constable) wildcardClass92);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass92);
        java.lang.Class<?> wildcardClass96 = constableBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertNotNull(wildcardClass92);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1536");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean4 = constableBloomFilter2.contains((java.lang.constant.Constable) 0L);
        boolean boolean6 = constableBloomFilter2.contains((java.lang.constant.Constable) 0L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter9 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter9.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter9.insert((java.lang.constant.Constable) 1.0f);
        boolean boolean15 = constableBloomFilter9.contains((java.lang.constant.Constable) (short) 100);
        java.lang.Class<?> wildcardClass16 = constableBloomFilter9.getClass();
        boolean boolean17 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass16);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter20 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter20.insert((java.lang.constant.Constable) 10);
        boolean boolean24 = constableBloomFilter20.contains((java.lang.constant.Constable) true);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter27 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter27.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter32 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter35 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass36 = wildcardClassOfFieldBloomFilter35.getClass();
        constableBloomFilter32.insert((java.lang.constant.Constable) wildcardClass36);
        constableBloomFilter27.insert((java.lang.constant.Constable) wildcardClass36);
        boolean boolean39 = constableBloomFilter20.contains((java.lang.constant.Constable) wildcardClass36);
        constableBloomFilter2.insert((java.lang.constant.Constable) boolean39);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter43 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter43.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter43.insert((java.lang.constant.Constable) 1.0f);
        constableBloomFilter43.insert((java.lang.constant.Constable) (-1L));
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter52 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter52.insert((java.lang.constant.Constable) 10);
        boolean boolean56 = constableBloomFilter52.contains((java.lang.constant.Constable) true);
        java.lang.constant.Constable constable57 = null;
        boolean boolean58 = constableBloomFilter52.contains(constable57);
        java.lang.Class<?> wildcardClass59 = constableBloomFilter52.getClass();
        boolean boolean60 = constableBloomFilter43.contains((java.lang.constant.Constable) wildcardClass59);
        constableBloomFilter2.insert((java.lang.constant.Constable) boolean60);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
    }

    @Test
    public void test1537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1537");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>(0, (int) ' ');
        java.lang.Class<?> wildcardClass6 = constableBloomFilterBloomFilter5.getClass();
        boolean boolean7 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass6);
        boolean boolean9 = constableBloomFilter2.contains((java.lang.constant.Constable) (-1.0f));
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter12 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) '#');
        constableBloomFilter12.insert((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.GenericDeclaration> genericDeclarationBloomFilter17 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.GenericDeclaration>(1, (int) 'a');
        java.lang.Class<?> wildcardClass18 = genericDeclarationBloomFilter17.getClass();
        constableBloomFilter12.insert((java.lang.constant.Constable) wildcardClass18);
        java.lang.Class<?> wildcardClass20 = constableBloomFilter12.getClass();
        boolean boolean21 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass20);
        java.lang.Class<?> wildcardClass22 = constableBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test1538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1538");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) ' ', 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable6 = null;
        boolean boolean7 = constableBloomFilter5.contains(constable6);
        constableBloomFilter5.insert((java.lang.constant.Constable) 100.0f);
        boolean boolean11 = constableBloomFilter5.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter14 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter17 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable18 = null;
        boolean boolean19 = constableBloomFilter17.contains(constable18);
        constableBloomFilter17.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean23 = constableBloomFilter17.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass24 = constableBloomFilter17.getClass();
        boolean boolean25 = constableBloomFilter14.contains((java.lang.constant.Constable) wildcardClass24);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter28 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable29 = null;
        boolean boolean30 = constableBloomFilter28.contains(constable29);
        constableBloomFilter28.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean34 = constableBloomFilter28.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass35 = constableBloomFilter28.getClass();
        constableBloomFilter14.insert((java.lang.constant.Constable) wildcardClass35);
        boolean boolean37 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass35);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter40 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter40.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter40.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter40.insert((java.lang.constant.Constable) (-1L));
        java.lang.Class<?> wildcardClass47 = constableBloomFilter40.getClass();
        boolean boolean48 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass47);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass47);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter52 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter55 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass56 = wildcardClassOfFieldBloomFilter55.getClass();
        constableBloomFilter52.insert((java.lang.constant.Constable) wildcardClass56);
        java.lang.Object obj58 = new java.lang.Object();
        java.lang.Class<?> wildcardClass59 = obj58.getClass();
        constableBloomFilter52.insert((java.lang.constant.Constable) wildcardClass59);
        boolean boolean62 = constableBloomFilter52.contains((java.lang.constant.Constable) '#');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter65 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable66 = null;
        boolean boolean67 = constableBloomFilter65.contains(constable66);
        constableBloomFilter65.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean71 = constableBloomFilter65.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass72 = constableBloomFilter65.getClass();
        constableBloomFilter52.insert((java.lang.constant.Constable) wildcardClass72);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass72);
        java.lang.constant.Constable constable75 = null;
        constableBloomFilter2.insert(constable75);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test1539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1539");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) 'a');
        boolean boolean4 = constableBloomFilter2.contains((java.lang.constant.Constable) (byte) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter7 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable8 = null;
        boolean boolean9 = constableBloomFilter7.contains(constable8);
        java.lang.Class<?> wildcardClass10 = constableBloomFilter7.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter14 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '#', (int) (short) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter17 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter20 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass21 = wildcardClassOfFieldBloomFilter20.getClass();
        constableBloomFilter17.insert((java.lang.constant.Constable) wildcardClass21);
        boolean boolean23 = constableBloomFilter14.contains((java.lang.constant.Constable) wildcardClass21);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter26 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter29 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass30 = wildcardClassOfFieldBloomFilter29.getClass();
        constableBloomFilter26.insert((java.lang.constant.Constable) wildcardClass30);
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        constableBloomFilter26.insert((java.lang.constant.Constable) wildcardClass33);
        boolean boolean36 = constableBloomFilter26.contains((java.lang.constant.Constable) 1);
        java.lang.Class<?> wildcardClass37 = constableBloomFilter26.getClass();
        constableBloomFilter14.insert((java.lang.constant.Constable) wildcardClass37);
        java.lang.Class<?> wildcardClass39 = constableBloomFilter14.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass39);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter43 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 100, (int) ' ');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter46 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter46.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter46.insert((java.lang.constant.Constable) 1.0f);
        boolean boolean52 = constableBloomFilter46.contains((java.lang.constant.Constable) (short) 100);
        boolean boolean54 = constableBloomFilter46.contains((java.lang.constant.Constable) 0L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter57 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) '#');
        java.lang.constant.Constable constable58 = null;
        constableBloomFilter57.insert(constable58);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter62 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) '#');
        constableBloomFilter62.insert((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.GenericDeclaration> genericDeclarationBloomFilter67 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.GenericDeclaration>(1, (int) 'a');
        java.lang.Class<?> wildcardClass68 = genericDeclarationBloomFilter67.getClass();
        constableBloomFilter62.insert((java.lang.constant.Constable) wildcardClass68);
        boolean boolean70 = constableBloomFilter57.contains((java.lang.constant.Constable) wildcardClass68);
        java.lang.Class<?> wildcardClass71 = constableBloomFilter57.getClass();
        boolean boolean72 = constableBloomFilter46.contains((java.lang.constant.Constable) wildcardClass71);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter75 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, 0);
        java.lang.Class<?> wildcardClass76 = constableBloomFilter75.getClass();
        boolean boolean77 = constableBloomFilter46.contains((java.lang.constant.Constable) wildcardClass76);
        constableBloomFilter43.insert((java.lang.constant.Constable) boolean77);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter81 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        boolean boolean83 = constableBloomFilter81.contains((java.lang.constant.Constable) ' ');
        boolean boolean85 = constableBloomFilter81.contains((java.lang.constant.Constable) (short) 1);
        boolean boolean87 = constableBloomFilter81.contains((java.lang.constant.Constable) (-1));
        java.lang.Class<?> wildcardClass88 = constableBloomFilter81.getClass();
        constableBloomFilter43.insert((java.lang.constant.Constable) wildcardClass88);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass88);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test1540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1540");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable6 = null;
        boolean boolean7 = constableBloomFilter5.contains(constable6);
        constableBloomFilter5.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean11 = constableBloomFilter5.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass12 = constableBloomFilter5.getClass();
        boolean boolean13 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass12);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable17 = null;
        boolean boolean18 = constableBloomFilter16.contains(constable17);
        constableBloomFilter16.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean22 = constableBloomFilter16.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass23 = constableBloomFilter16.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass23);
        boolean boolean26 = constableBloomFilter2.contains((java.lang.constant.Constable) 1L);
        boolean boolean28 = constableBloomFilter2.contains((java.lang.constant.Constable) (byte) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter31 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter31.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean35 = constableBloomFilter31.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter31.insert((java.lang.constant.Constable) (short) 0);
        boolean boolean39 = constableBloomFilter31.contains((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc> constantDescBloomFilter42 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc>((int) (byte) 100, 100);
        java.lang.Class<?> wildcardClass43 = constantDescBloomFilter42.getClass();
        constableBloomFilter31.insert((java.lang.constant.Constable) wildcardClass43);
        boolean boolean46 = constableBloomFilter31.contains((java.lang.constant.Constable) 10.0d);
        java.lang.Class<?> wildcardClass47 = constableBloomFilter31.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass47);
        java.lang.constant.Constable constable49 = null;
        boolean boolean50 = constableBloomFilter2.contains(constable49);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter53 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter53.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean57 = constableBloomFilter53.contains((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc> constantDescBloomFilter60 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc>((int) (byte) 100, 100);
        java.lang.Class<?> wildcardClass61 = constantDescBloomFilter60.getClass();
        constableBloomFilter53.insert((java.lang.constant.Constable) wildcardClass61);
        java.lang.Class<?> wildcardClass63 = constableBloomFilter53.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass63);
        java.lang.Class<?> wildcardClass65 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test1541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1541");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass6 = wildcardClassOfFieldBloomFilter5.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass6);
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass9);
        boolean boolean12 = constableBloomFilter2.contains((java.lang.constant.Constable) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter15 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable16 = null;
        boolean boolean17 = constableBloomFilter15.contains(constable16);
        constableBloomFilter15.insert((java.lang.constant.Constable) 100.0f);
        boolean boolean21 = constableBloomFilter15.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter24 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter27 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable28 = null;
        boolean boolean29 = constableBloomFilter27.contains(constable28);
        constableBloomFilter27.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean33 = constableBloomFilter27.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass34 = constableBloomFilter27.getClass();
        boolean boolean35 = constableBloomFilter24.contains((java.lang.constant.Constable) wildcardClass34);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter38 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable39 = null;
        boolean boolean40 = constableBloomFilter38.contains(constable39);
        constableBloomFilter38.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean44 = constableBloomFilter38.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass45 = constableBloomFilter38.getClass();
        constableBloomFilter24.insert((java.lang.constant.Constable) wildcardClass45);
        boolean boolean47 = constableBloomFilter15.contains((java.lang.constant.Constable) wildcardClass45);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter50 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter50.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter50.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter50.insert((java.lang.constant.Constable) (-1L));
        java.lang.Class<?> wildcardClass57 = constableBloomFilter50.getClass();
        boolean boolean58 = constableBloomFilter15.contains((java.lang.constant.Constable) wildcardClass57);
        boolean boolean59 = constableBloomFilter2.contains((java.lang.constant.Constable) boolean58);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter62 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter65 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass66 = wildcardClassOfFieldBloomFilter65.getClass();
        constableBloomFilter62.insert((java.lang.constant.Constable) wildcardClass66);
        java.lang.Object obj68 = new java.lang.Object();
        java.lang.Class<?> wildcardClass69 = obj68.getClass();
        constableBloomFilter62.insert((java.lang.constant.Constable) wildcardClass69);
        boolean boolean72 = constableBloomFilter62.contains((java.lang.constant.Constable) '#');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter75 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable76 = null;
        boolean boolean77 = constableBloomFilter75.contains(constable76);
        constableBloomFilter75.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean81 = constableBloomFilter75.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass82 = constableBloomFilter75.getClass();
        constableBloomFilter62.insert((java.lang.constant.Constable) wildcardClass82);
        constableBloomFilter62.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter88 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) 'a');
        boolean boolean90 = constableBloomFilter88.contains((java.lang.constant.Constable) ' ');
        java.lang.Class<?> wildcardClass91 = constableBloomFilter88.getClass();
        constableBloomFilter62.insert((java.lang.constant.Constable) wildcardClass91);
        java.lang.Class<?> wildcardClass93 = constableBloomFilter62.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass93);
        java.lang.Class<?> wildcardClass95 = constableBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(wildcardClass91);
        org.junit.Assert.assertNotNull(wildcardClass93);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test1542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1542");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) 'a', (int) '4');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable6 = null;
        constableBloomFilter5.insert(constable6);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter10 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable11 = null;
        boolean boolean12 = constableBloomFilter10.contains(constable11);
        constableBloomFilter10.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean16 = constableBloomFilter10.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter19 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter22 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass23 = wildcardClassOfFieldBloomFilter22.getClass();
        constableBloomFilter19.insert((java.lang.constant.Constable) wildcardClass23);
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        constableBloomFilter19.insert((java.lang.constant.Constable) wildcardClass26);
        boolean boolean29 = constableBloomFilter19.contains((java.lang.constant.Constable) '#');
        constableBloomFilter19.insert((java.lang.constant.Constable) '#');
        java.lang.Class<?> wildcardClass32 = constableBloomFilter19.getClass();
        boolean boolean33 = constableBloomFilter10.contains((java.lang.constant.Constable) wildcardClass32);
        boolean boolean34 = constableBloomFilter5.contains((java.lang.constant.Constable) boolean33);
        java.lang.Class<?> wildcardClass35 = constableBloomFilter5.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass35);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.io.Serializable> serializableBloomFilter39 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.io.Serializable>((int) (byte) 100, (int) ' ');
        java.lang.Class<?> wildcardClass40 = serializableBloomFilter39.getClass();
        boolean boolean41 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass40);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter44 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter47 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>(0, (int) ' ');
        java.lang.Class<?> wildcardClass48 = constableBloomFilterBloomFilter47.getClass();
        boolean boolean49 = constableBloomFilter44.contains((java.lang.constant.Constable) wildcardClass48);
        boolean boolean51 = constableBloomFilter44.contains((java.lang.constant.Constable) (-1.0f));
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter54 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        java.lang.Class<?> wildcardClass55 = constableBloomFilter54.getClass();
        constableBloomFilter44.insert((java.lang.constant.Constable) wildcardClass55);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter59 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean61 = constableBloomFilter59.contains((java.lang.constant.Constable) 0L);
        boolean boolean63 = constableBloomFilter59.contains((java.lang.constant.Constable) (byte) 0);
        boolean boolean65 = constableBloomFilter59.contains((java.lang.constant.Constable) '4');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor> typeDescriptorBloomFilter68 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor>(0, 100);
        java.lang.Class<?> wildcardClass69 = typeDescriptorBloomFilter68.getClass();
        boolean boolean70 = constableBloomFilter59.contains((java.lang.constant.Constable) wildcardClass69);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter73 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable74 = null;
        boolean boolean75 = constableBloomFilter73.contains(constable74);
        constableBloomFilter73.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean79 = constableBloomFilter73.contains((java.lang.constant.Constable) 'a');
        constableBloomFilter73.insert((java.lang.constant.Constable) (short) 100);
        constableBloomFilter73.insert((java.lang.constant.Constable) (-1));
        java.lang.Class<?> wildcardClass84 = constableBloomFilter73.getClass();
        constableBloomFilter59.insert((java.lang.constant.Constable) wildcardClass84);
        boolean boolean86 = constableBloomFilter44.contains((java.lang.constant.Constable) wildcardClass84);
        java.lang.Class<?> wildcardClass87 = constableBloomFilter44.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass87);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test1543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1543");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) '#');
        constableBloomFilter2.insert((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.GenericDeclaration> genericDeclarationBloomFilter7 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.GenericDeclaration>(1, (int) 'a');
        java.lang.Class<?> wildcardClass8 = genericDeclarationBloomFilter7.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass8);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter12 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter12.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean16 = constableBloomFilter12.contains((java.lang.constant.Constable) 100L);
        boolean boolean18 = constableBloomFilter12.contains((java.lang.constant.Constable) (byte) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter21 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter24 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable25 = null;
        boolean boolean26 = constableBloomFilter24.contains(constable25);
        constableBloomFilter24.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean30 = constableBloomFilter24.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass31 = constableBloomFilter24.getClass();
        boolean boolean32 = constableBloomFilter21.contains((java.lang.constant.Constable) wildcardClass31);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter35 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable36 = null;
        boolean boolean37 = constableBloomFilter35.contains(constable36);
        constableBloomFilter35.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean41 = constableBloomFilter35.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass42 = constableBloomFilter35.getClass();
        constableBloomFilter21.insert((java.lang.constant.Constable) wildcardClass42);
        boolean boolean44 = constableBloomFilter12.contains((java.lang.constant.Constable) wildcardClass42);
        boolean boolean45 = constableBloomFilter2.contains((java.lang.constant.Constable) boolean44);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter48 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', 0);
        java.lang.Class<?> wildcardClass49 = constableBloomFilter48.getClass();
        boolean boolean50 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass49);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter53 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 1, (int) (short) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter56 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>((int) ' ', 100);
        java.lang.Class<?> wildcardClass57 = wildcardClassOfFieldBloomFilter56.getClass();
        boolean boolean58 = constableBloomFilter53.contains((java.lang.constant.Constable) wildcardClass57);
        boolean boolean59 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass57);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Class<?>> wildcardClassBloomFilter62 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Class<?>>(10, 0);
        java.lang.Class<?> wildcardClass63 = wildcardClassBloomFilter62.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass63);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter67 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean69 = constableBloomFilter67.contains((java.lang.constant.Constable) 0);
        java.lang.Class<?> wildcardClass70 = constableBloomFilter67.getClass();
        boolean boolean71 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
    }

    @Test
    public void test1544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1544");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Class<?>> wildcardClassBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Class<?>>((int) '#', (int) (short) 100);
    }

    @Test
    public void test1545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1545");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        java.lang.constant.Constable constable3 = null;
        boolean boolean4 = constableBloomFilter2.contains(constable3);
        java.lang.constant.Constable constable5 = null;
        constableBloomFilter2.insert(constable5);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
    }

    @Test
    public void test1546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1546");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) ' ', (int) ' ');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter5.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean9 = constableBloomFilter5.contains((java.lang.constant.Constable) 100L);
        boolean boolean11 = constableBloomFilter5.contains((java.lang.constant.Constable) (byte) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter14 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter17 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable18 = null;
        boolean boolean19 = constableBloomFilter17.contains(constable18);
        constableBloomFilter17.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean23 = constableBloomFilter17.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass24 = constableBloomFilter17.getClass();
        boolean boolean25 = constableBloomFilter14.contains((java.lang.constant.Constable) wildcardClass24);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter28 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable29 = null;
        boolean boolean30 = constableBloomFilter28.contains(constable29);
        constableBloomFilter28.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean34 = constableBloomFilter28.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass35 = constableBloomFilter28.getClass();
        constableBloomFilter14.insert((java.lang.constant.Constable) wildcardClass35);
        boolean boolean38 = constableBloomFilter14.contains((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter41 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass42 = wildcardClassOfFieldBloomFilter41.getClass();
        constableBloomFilter14.insert((java.lang.constant.Constable) wildcardClass42);
        boolean boolean44 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass42);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter47 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter50 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable51 = null;
        boolean boolean52 = constableBloomFilter50.contains(constable51);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter55 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable56 = null;
        boolean boolean57 = constableBloomFilter55.contains(constable56);
        boolean boolean59 = constableBloomFilter55.contains((java.lang.constant.Constable) 1L);
        java.lang.Class<?> wildcardClass60 = constableBloomFilter55.getClass();
        constableBloomFilter50.insert((java.lang.constant.Constable) wildcardClass60);
        java.lang.Class<?> wildcardClass62 = constableBloomFilter50.getClass();
        constableBloomFilter47.insert((java.lang.constant.Constable) wildcardClass62);
        boolean boolean64 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass62);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter67 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable68 = null;
        boolean boolean69 = constableBloomFilter67.contains(constable68);
        constableBloomFilter67.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter74 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable75 = null;
        boolean boolean76 = constableBloomFilter74.contains(constable75);
        java.lang.Class<?> wildcardClass77 = constableBloomFilter74.getClass();
        constableBloomFilter67.insert((java.lang.constant.Constable) wildcardClass77);
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass77);
        boolean boolean80 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass77);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    }

    @Test
    public void test1547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1547");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 10, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter8 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable9 = null;
        boolean boolean10 = constableBloomFilter8.contains(constable9);
        constableBloomFilter8.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean14 = constableBloomFilter8.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass15 = constableBloomFilter8.getClass();
        boolean boolean16 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass15);
        constableBloomFilter5.insert((java.lang.constant.Constable) (short) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter21 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean23 = constableBloomFilter21.contains((java.lang.constant.Constable) 0L);
        boolean boolean25 = constableBloomFilter21.contains((java.lang.constant.Constable) (byte) 0);
        boolean boolean27 = constableBloomFilter21.contains((java.lang.constant.Constable) '4');
        java.lang.Class<?> wildcardClass28 = constableBloomFilter21.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass28);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass28);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter33 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 1, (int) (byte) 100);
        java.lang.Class<?> wildcardClass34 = constableBloomFilter33.getClass();
        boolean boolean35 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
    }

    @Test
    public void test1548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1548");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 100, (int) ' ');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter8 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass9 = wildcardClassOfFieldBloomFilter8.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass9);
        java.lang.Object obj11 = new java.lang.Object();
        java.lang.Class<?> wildcardClass12 = obj11.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass12);
        boolean boolean15 = constableBloomFilter5.contains((java.lang.constant.Constable) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter18 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable19 = null;
        boolean boolean20 = constableBloomFilter18.contains(constable19);
        constableBloomFilter18.insert((java.lang.constant.Constable) 100.0f);
        java.lang.Class<?> wildcardClass23 = constableBloomFilter18.getClass();
        boolean boolean24 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass23);
        java.lang.Class<?> wildcardClass25 = constableBloomFilter5.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test1549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1549");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, (int) (short) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        boolean boolean7 = constableBloomFilter5.contains((java.lang.constant.Constable) ' ');
        boolean boolean9 = constableBloomFilter5.contains((java.lang.constant.Constable) (short) 1);
        java.lang.Class<?> wildcardClass10 = constableBloomFilter5.getClass();
        boolean boolean11 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter14 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 1);
        java.lang.constant.Constable constable15 = null;
        constableBloomFilter14.insert(constable15);
        java.lang.Class<?> wildcardClass17 = constableBloomFilter14.getClass();
        boolean boolean18 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass17);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter21 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, (int) ' ');
        java.lang.Class<?> wildcardClass22 = constableBloomFilter21.getClass();
        boolean boolean23 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass22);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter26 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter29 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>(0, 1);
        java.lang.Class<?> wildcardClass30 = constableBloomFilterBloomFilter29.getClass();
        constableBloomFilter26.insert((java.lang.constant.Constable) wildcardClass30);
        boolean boolean32 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass30);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc> constantDescBloomFilter35 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc>((int) (byte) 1, (int) (byte) 100);
        java.lang.Class<?> wildcardClass36 = constantDescBloomFilter35.getClass();
        boolean boolean37 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass36);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter40 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(0, (int) (short) 100);
        java.lang.constant.Constable constable41 = null;
        constableBloomFilter40.insert(constable41);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter45 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter45.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean49 = constableBloomFilter45.contains((java.lang.constant.Constable) 100L);
        boolean boolean51 = constableBloomFilter45.contains((java.lang.constant.Constable) (byte) 0);
        boolean boolean53 = constableBloomFilter45.contains((java.lang.constant.Constable) "");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter56 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter56.insert((java.lang.constant.Constable) 10);
        boolean boolean60 = constableBloomFilter56.contains((java.lang.constant.Constable) true);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter63 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter63.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter68 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter71 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass72 = wildcardClassOfFieldBloomFilter71.getClass();
        constableBloomFilter68.insert((java.lang.constant.Constable) wildcardClass72);
        constableBloomFilter63.insert((java.lang.constant.Constable) wildcardClass72);
        boolean boolean75 = constableBloomFilter56.contains((java.lang.constant.Constable) wildcardClass72);
        constableBloomFilter45.insert((java.lang.constant.Constable) wildcardClass72);
        constableBloomFilter40.insert((java.lang.constant.Constable) wildcardClass72);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass72);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter81 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 100, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter84 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(1, (int) (short) 100);
        java.lang.Class<?> wildcardClass85 = constableBloomFilter84.getClass();
        constableBloomFilter81.insert((java.lang.constant.Constable) wildcardClass85);
        boolean boolean87 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass85);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
    }

    @Test
    public void test1550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1550");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 10, 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter8 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable9 = null;
        boolean boolean10 = constableBloomFilter8.contains(constable9);
        constableBloomFilter8.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean14 = constableBloomFilter8.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass15 = constableBloomFilter8.getClass();
        boolean boolean16 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass15);
        constableBloomFilter5.insert((java.lang.constant.Constable) (short) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter21 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean23 = constableBloomFilter21.contains((java.lang.constant.Constable) 0L);
        boolean boolean25 = constableBloomFilter21.contains((java.lang.constant.Constable) (byte) 0);
        boolean boolean27 = constableBloomFilter21.contains((java.lang.constant.Constable) '4');
        java.lang.Class<?> wildcardClass28 = constableBloomFilter21.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass28);
        boolean boolean31 = constableBloomFilter5.contains((java.lang.constant.Constable) (-1.0f));
        java.lang.Class<?> wildcardClass32 = constableBloomFilter5.getClass();
        boolean boolean33 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass32);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter36 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>(0, (int) (short) 1);
        java.lang.Class<?> wildcardClass37 = constableBloomFilterBloomFilter36.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass37);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter41 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 100, (int) '#');
        java.lang.Class<?> wildcardClass42 = constableBloomFilter41.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test1551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1551");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable6 = null;
        boolean boolean7 = constableBloomFilter5.contains(constable6);
        constableBloomFilter5.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean11 = constableBloomFilter5.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass12 = constableBloomFilter5.getClass();
        boolean boolean13 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass12);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable17 = null;
        boolean boolean18 = constableBloomFilter16.contains(constable17);
        constableBloomFilter16.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean22 = constableBloomFilter16.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass23 = constableBloomFilter16.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass23);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter27 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable28 = null;
        boolean boolean29 = constableBloomFilter27.contains(constable28);
        constableBloomFilter27.insert((java.lang.constant.Constable) 100);
        java.lang.Class<?> wildcardClass32 = constableBloomFilter27.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass32);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter36 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter39 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>(0, 1);
        java.lang.Class<?> wildcardClass40 = constableBloomFilterBloomFilter39.getClass();
        constableBloomFilter36.insert((java.lang.constant.Constable) wildcardClass40);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter44 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean46 = constableBloomFilter44.contains((java.lang.constant.Constable) 0L);
        boolean boolean48 = constableBloomFilter44.contains((java.lang.constant.Constable) 0L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter51 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter51.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter51.insert((java.lang.constant.Constable) 1.0f);
        boolean boolean57 = constableBloomFilter51.contains((java.lang.constant.Constable) (short) 100);
        java.lang.Class<?> wildcardClass58 = constableBloomFilter51.getClass();
        boolean boolean59 = constableBloomFilter44.contains((java.lang.constant.Constable) wildcardClass58);
        constableBloomFilter36.insert((java.lang.constant.Constable) wildcardClass58);
        boolean boolean61 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass58);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
    }

    @Test
    public void test1552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1552");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass6 = wildcardClassOfFieldBloomFilter5.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass6);
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass9);
        boolean boolean12 = constableBloomFilter2.contains((java.lang.constant.Constable) '#');
        constableBloomFilter2.insert((java.lang.constant.Constable) (-1L));
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter17 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter17.insert((java.lang.constant.Constable) 10);
        boolean boolean21 = constableBloomFilter17.contains((java.lang.constant.Constable) true);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter24 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter24.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter29 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter32 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass33 = wildcardClassOfFieldBloomFilter32.getClass();
        constableBloomFilter29.insert((java.lang.constant.Constable) wildcardClass33);
        constableBloomFilter24.insert((java.lang.constant.Constable) wildcardClass33);
        boolean boolean36 = constableBloomFilter17.contains((java.lang.constant.Constable) wildcardClass33);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass33);
        boolean boolean39 = constableBloomFilter2.contains((java.lang.constant.Constable) (byte) 10);
        java.lang.constant.Constable constable40 = null;
        boolean boolean41 = constableBloomFilter2.contains(constable40);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter44 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', (int) (short) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter47 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) 'a', 0);
        java.lang.Class<?> wildcardClass48 = constableBloomFilter47.getClass();
        constableBloomFilter44.insert((java.lang.constant.Constable) wildcardClass48);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter52 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) 'a');
        boolean boolean54 = constableBloomFilter52.contains((java.lang.constant.Constable) (byte) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter57 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable58 = null;
        boolean boolean59 = constableBloomFilter57.contains(constable58);
        java.lang.Class<?> wildcardClass60 = constableBloomFilter57.getClass();
        constableBloomFilter52.insert((java.lang.constant.Constable) wildcardClass60);
        java.lang.Class<?> wildcardClass62 = constableBloomFilter52.getClass();
        constableBloomFilter44.insert((java.lang.constant.Constable) wildcardClass62);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass62);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter67 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable68 = null;
        constableBloomFilter67.insert(constable68);
        constableBloomFilter67.insert((java.lang.constant.Constable) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter74 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter77 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass78 = wildcardClassOfFieldBloomFilter77.getClass();
        constableBloomFilter74.insert((java.lang.constant.Constable) wildcardClass78);
        java.lang.Object obj80 = new java.lang.Object();
        java.lang.Class<?> wildcardClass81 = obj80.getClass();
        constableBloomFilter74.insert((java.lang.constant.Constable) wildcardClass81);
        boolean boolean84 = constableBloomFilter74.contains((java.lang.constant.Constable) '#');
        constableBloomFilter74.insert((java.lang.constant.Constable) '#');
        java.lang.Class<?> wildcardClass87 = constableBloomFilter74.getClass();
        boolean boolean88 = constableBloomFilter67.contains((java.lang.constant.Constable) wildcardClass87);
        constableBloomFilter67.insert((java.lang.constant.Constable) 10.0f);
        java.lang.Class<?> wildcardClass91 = constableBloomFilter67.getClass();
        boolean boolean92 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass91);
        java.lang.constant.Constable constable93 = null;
        boolean boolean94 = constableBloomFilter2.contains(constable93);
        java.lang.Class<?> wildcardClass95 = constableBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(wildcardClass91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test1553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1553");
        // The following exception was thrown during execution in test generation
        try {
            com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 100, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: nbits < 0: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1554");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 100, (int) (short) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter5.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter5.insert((java.lang.constant.Constable) 1.0f);
        boolean boolean11 = constableBloomFilter5.contains((java.lang.constant.Constable) (short) 100);
        boolean boolean13 = constableBloomFilter5.contains((java.lang.constant.Constable) 0.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter16.insert((java.lang.constant.Constable) 10);
        boolean boolean20 = constableBloomFilter16.contains((java.lang.constant.Constable) true);
        boolean boolean22 = constableBloomFilter16.contains((java.lang.constant.Constable) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter25 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable26 = null;
        boolean boolean27 = constableBloomFilter25.contains(constable26);
        constableBloomFilter25.insert((java.lang.constant.Constable) 100.0f);
        boolean boolean31 = constableBloomFilter25.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter34 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter37 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable38 = null;
        boolean boolean39 = constableBloomFilter37.contains(constable38);
        constableBloomFilter37.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean43 = constableBloomFilter37.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass44 = constableBloomFilter37.getClass();
        boolean boolean45 = constableBloomFilter34.contains((java.lang.constant.Constable) wildcardClass44);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter48 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable49 = null;
        boolean boolean50 = constableBloomFilter48.contains(constable49);
        constableBloomFilter48.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean54 = constableBloomFilter48.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass55 = constableBloomFilter48.getClass();
        constableBloomFilter34.insert((java.lang.constant.Constable) wildcardClass55);
        boolean boolean57 = constableBloomFilter25.contains((java.lang.constant.Constable) wildcardClass55);
        boolean boolean58 = constableBloomFilter16.contains((java.lang.constant.Constable) boolean57);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter61 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) 'a');
        boolean boolean63 = constableBloomFilter61.contains((java.lang.constant.Constable) (byte) 100);
        java.lang.Class<?> wildcardClass64 = constableBloomFilter61.getClass();
        constableBloomFilter16.insert((java.lang.constant.Constable) wildcardClass64);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter68 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter68.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean72 = constableBloomFilter68.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter68.insert((java.lang.constant.Constable) (short) 0);
        boolean boolean76 = constableBloomFilter68.contains((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc> constantDescBloomFilter79 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc>((int) (byte) 100, 100);
        java.lang.Class<?> wildcardClass80 = constantDescBloomFilter79.getClass();
        constableBloomFilter68.insert((java.lang.constant.Constable) wildcardClass80);
        boolean boolean82 = constableBloomFilter16.contains((java.lang.constant.Constable) wildcardClass80);
        boolean boolean83 = constableBloomFilter5.contains((java.lang.constant.Constable) boolean82);
        java.lang.Class<?> wildcardClass84 = constableBloomFilter5.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass84);
        java.lang.constant.Constable constable86 = null;
        boolean boolean87 = constableBloomFilter2.contains(constable86);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
    }

    @Test
    public void test1555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1555");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable3 = null;
        boolean boolean4 = constableBloomFilter2.contains(constable3);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter7 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter10 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable11 = null;
        boolean boolean12 = constableBloomFilter10.contains(constable11);
        constableBloomFilter10.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean16 = constableBloomFilter10.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass17 = constableBloomFilter10.getClass();
        boolean boolean18 = constableBloomFilter7.contains((java.lang.constant.Constable) wildcardClass17);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter21 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable22 = null;
        boolean boolean23 = constableBloomFilter21.contains(constable22);
        constableBloomFilter21.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean27 = constableBloomFilter21.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass28 = constableBloomFilter21.getClass();
        constableBloomFilter7.insert((java.lang.constant.Constable) wildcardClass28);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test1556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1556");
        // The following exception was thrown during execution in test generation
        try {
            com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>((-1), 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1557");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean6 = constableBloomFilter2.contains((java.lang.constant.Constable) 100L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter9 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter9.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter14 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter17 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass18 = wildcardClassOfFieldBloomFilter17.getClass();
        constableBloomFilter14.insert((java.lang.constant.Constable) wildcardClass18);
        constableBloomFilter9.insert((java.lang.constant.Constable) wildcardClass18);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter23 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', 0);
        java.lang.Class<?> wildcardClass24 = constableBloomFilter23.getClass();
        constableBloomFilter9.insert((java.lang.constant.Constable) wildcardClass24);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass24);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter29 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable30 = null;
        boolean boolean31 = constableBloomFilter29.contains(constable30);
        constableBloomFilter29.insert((java.lang.constant.Constable) (byte) 0);
        java.lang.Class<?> wildcardClass34 = constableBloomFilter29.getClass();
        boolean boolean35 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass34);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter38 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 10, (int) (byte) 1);
        java.lang.Class<?> wildcardClass39 = constableBloomFilter38.getClass();
        boolean boolean40 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
    }

    @Test
    public void test1558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1558");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) 'a');
        boolean boolean4 = constableBloomFilter2.contains((java.lang.constant.Constable) ' ');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter7 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter7.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter7.insert((java.lang.constant.Constable) ' ');
        boolean boolean13 = constableBloomFilter7.contains((java.lang.constant.Constable) 0L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter19 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass20 = wildcardClassOfFieldBloomFilter19.getClass();
        constableBloomFilter16.insert((java.lang.constant.Constable) wildcardClass20);
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        constableBloomFilter16.insert((java.lang.constant.Constable) wildcardClass23);
        boolean boolean26 = constableBloomFilter16.contains((java.lang.constant.Constable) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter29 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable30 = null;
        boolean boolean31 = constableBloomFilter29.contains(constable30);
        constableBloomFilter29.insert((java.lang.constant.Constable) (byte) 0);
        java.lang.Class<?> wildcardClass34 = constableBloomFilter29.getClass();
        constableBloomFilter16.insert((java.lang.constant.Constable) wildcardClass34);
        constableBloomFilter7.insert((java.lang.constant.Constable) wildcardClass34);
        boolean boolean37 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass34);
        boolean boolean39 = constableBloomFilter2.contains((java.lang.constant.Constable) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter42 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        java.lang.Class<?> wildcardClass43 = constableBloomFilter42.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass43);
        java.lang.constant.Constable constable45 = null;
        constableBloomFilter2.insert(constable45);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter49 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(0, (int) (byte) 100);
        java.lang.constant.Constable constable50 = null;
        boolean boolean51 = constableBloomFilter49.contains(constable50);
        java.lang.Class<?> wildcardClass52 = constableBloomFilter49.getClass();
        boolean boolean53 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
    }

    @Test
    public void test1559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1559");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter2.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter2.insert((java.lang.constant.Constable) (-1L));
        constableBloomFilter2.insert((java.lang.constant.Constable) 'a');
        constableBloomFilter2.insert((java.lang.constant.Constable) (-1.0f));
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter15 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter15.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean19 = constableBloomFilter15.contains((java.lang.constant.Constable) 100L);
        boolean boolean21 = constableBloomFilter15.contains((java.lang.constant.Constable) (byte) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter24 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter27 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable28 = null;
        boolean boolean29 = constableBloomFilter27.contains(constable28);
        constableBloomFilter27.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean33 = constableBloomFilter27.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass34 = constableBloomFilter27.getClass();
        boolean boolean35 = constableBloomFilter24.contains((java.lang.constant.Constable) wildcardClass34);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter38 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable39 = null;
        boolean boolean40 = constableBloomFilter38.contains(constable39);
        constableBloomFilter38.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean44 = constableBloomFilter38.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass45 = constableBloomFilter38.getClass();
        constableBloomFilter24.insert((java.lang.constant.Constable) wildcardClass45);
        boolean boolean47 = constableBloomFilter15.contains((java.lang.constant.Constable) wildcardClass45);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter50 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter50.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean54 = constableBloomFilter50.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter50.insert((java.lang.constant.Constable) (short) 0);
        boolean boolean58 = constableBloomFilter50.contains((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc> constantDescBloomFilter61 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc>((int) (byte) 100, 100);
        java.lang.Class<?> wildcardClass62 = constantDescBloomFilter61.getClass();
        constableBloomFilter50.insert((java.lang.constant.Constable) wildcardClass62);
        constableBloomFilter15.insert((java.lang.constant.Constable) wildcardClass62);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter67 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter67.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean71 = constableBloomFilter67.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter67.insert((java.lang.constant.Constable) (short) 0);
        boolean boolean75 = constableBloomFilter67.contains((java.lang.constant.Constable) 0);
        java.lang.Class<?> wildcardClass76 = constableBloomFilter67.getClass();
        boolean boolean77 = constableBloomFilter15.contains((java.lang.constant.Constable) wildcardClass76);
        constableBloomFilter2.insert((java.lang.constant.Constable) boolean77);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.GenericDeclaration> genericDeclarationBloomFilter81 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.GenericDeclaration>((int) (byte) 1, 0);
        java.lang.Class<?> wildcardClass82 = genericDeclarationBloomFilter81.getClass();
        boolean boolean83 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass82);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
    }

    @Test
    public void test1560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1560");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, (int) (byte) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean7 = constableBloomFilter5.contains((java.lang.constant.Constable) 0L);
        boolean boolean9 = constableBloomFilter5.contains((java.lang.constant.Constable) (byte) 0);
        boolean boolean11 = constableBloomFilter5.contains((java.lang.constant.Constable) '4');
        java.lang.Class<?> wildcardClass12 = constableBloomFilter5.getClass();
        boolean boolean13 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test1561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1561");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor> typeDescriptorBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor>(100, (int) (short) 0);
        java.lang.Class<?> wildcardClass3 = typeDescriptorBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test1562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1562");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, (int) (short) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter5.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean9 = constableBloomFilter5.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter5.insert((java.lang.constant.Constable) (short) 0);
        constableBloomFilter5.insert((java.lang.constant.Constable) "");
        java.lang.Class<?> wildcardClass14 = constableBloomFilter5.getClass();
        boolean boolean15 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test1563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1563");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter2.insert((java.lang.constant.Constable) 10);
        boolean boolean6 = constableBloomFilter2.contains((java.lang.constant.Constable) true);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter9 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter9.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter14 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter17 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass18 = wildcardClassOfFieldBloomFilter17.getClass();
        constableBloomFilter14.insert((java.lang.constant.Constable) wildcardClass18);
        constableBloomFilter9.insert((java.lang.constant.Constable) wildcardClass18);
        boolean boolean21 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass18);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter24 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter24.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter24.insert((java.lang.constant.Constable) 1.0f);
        boolean boolean30 = constableBloomFilter24.contains((java.lang.constant.Constable) (short) 100);
        boolean boolean32 = constableBloomFilter24.contains((java.lang.constant.Constable) 0L);
        boolean boolean34 = constableBloomFilter24.contains((java.lang.constant.Constable) (short) 100);
        java.lang.Class<?> wildcardClass35 = constableBloomFilter24.getClass();
        boolean boolean36 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass35);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter39 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable40 = null;
        constableBloomFilter39.insert(constable40);
        constableBloomFilter39.insert((java.lang.constant.Constable) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter46 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter49 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass50 = wildcardClassOfFieldBloomFilter49.getClass();
        constableBloomFilter46.insert((java.lang.constant.Constable) wildcardClass50);
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        constableBloomFilter46.insert((java.lang.constant.Constable) wildcardClass53);
        boolean boolean56 = constableBloomFilter46.contains((java.lang.constant.Constable) '#');
        constableBloomFilter46.insert((java.lang.constant.Constable) '#');
        java.lang.Class<?> wildcardClass59 = constableBloomFilter46.getClass();
        boolean boolean60 = constableBloomFilter39.contains((java.lang.constant.Constable) wildcardClass59);
        constableBloomFilter39.insert((java.lang.constant.Constable) 10.0f);
        java.lang.Class<?> wildcardClass63 = constableBloomFilter39.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass63);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter67 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter70 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable71 = null;
        boolean boolean72 = constableBloomFilter70.contains(constable71);
        constableBloomFilter70.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean76 = constableBloomFilter70.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass77 = constableBloomFilter70.getClass();
        boolean boolean78 = constableBloomFilter67.contains((java.lang.constant.Constable) wildcardClass77);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter81 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable82 = null;
        boolean boolean83 = constableBloomFilter81.contains(constable82);
        constableBloomFilter81.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean87 = constableBloomFilter81.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass88 = constableBloomFilter81.getClass();
        constableBloomFilter67.insert((java.lang.constant.Constable) wildcardClass88);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter92 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) '#');
        java.lang.constant.Constable constable93 = null;
        constableBloomFilter92.insert(constable93);
        java.lang.Class<?> wildcardClass95 = constableBloomFilter92.getClass();
        constableBloomFilter67.insert((java.lang.constant.Constable) wildcardClass95);
        java.lang.Class<?> wildcardClass97 = constableBloomFilter67.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass97);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertNotNull(wildcardClass95);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test1564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1564");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable6 = null;
        boolean boolean7 = constableBloomFilter5.contains(constable6);
        constableBloomFilter5.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean11 = constableBloomFilter5.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass12 = constableBloomFilter5.getClass();
        boolean boolean13 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass12);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable17 = null;
        boolean boolean18 = constableBloomFilter16.contains(constable17);
        constableBloomFilter16.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean22 = constableBloomFilter16.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass23 = constableBloomFilter16.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass23);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter27 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean29 = constableBloomFilter27.contains((java.lang.constant.Constable) 0L);
        boolean boolean31 = constableBloomFilter27.contains((java.lang.constant.Constable) 0L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter34 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter34.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean38 = constableBloomFilter34.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter34.insert((java.lang.constant.Constable) (short) 0);
        boolean boolean42 = constableBloomFilter34.contains((java.lang.constant.Constable) 0);
        java.lang.Class<?> wildcardClass43 = constableBloomFilter34.getClass();
        constableBloomFilter27.insert((java.lang.constant.Constable) wildcardClass43);
        java.lang.Class<?> wildcardClass45 = constableBloomFilter27.getClass();
        boolean boolean46 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass45);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter49 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', (int) (short) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter52 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) 'a', 0);
        java.lang.Class<?> wildcardClass53 = constableBloomFilter52.getClass();
        constableBloomFilter49.insert((java.lang.constant.Constable) wildcardClass53);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.io.Serializable> serializableBloomFilter57 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.io.Serializable>(0, (int) (byte) 10);
        java.lang.Class<?> wildcardClass58 = serializableBloomFilter57.getClass();
        constableBloomFilter49.insert((java.lang.constant.Constable) wildcardClass58);
        java.lang.Class<?> wildcardClass60 = constableBloomFilter49.getClass();
        boolean boolean61 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
    }

    @Test
    public void test1565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1565");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.io.Serializable> serializableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.io.Serializable>((int) (short) 1, 10);
    }

    @Test
    public void test1566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1566");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter2.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter2.insert((java.lang.constant.Constable) (-1L));
        boolean boolean10 = constableBloomFilter2.contains((java.lang.constant.Constable) 0L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter13 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter13.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter13.insert((java.lang.constant.Constable) ' ');
        boolean boolean19 = constableBloomFilter13.contains((java.lang.constant.Constable) 0L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter22 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter25 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass26 = wildcardClassOfFieldBloomFilter25.getClass();
        constableBloomFilter22.insert((java.lang.constant.Constable) wildcardClass26);
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        constableBloomFilter22.insert((java.lang.constant.Constable) wildcardClass29);
        boolean boolean32 = constableBloomFilter22.contains((java.lang.constant.Constable) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter35 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable36 = null;
        boolean boolean37 = constableBloomFilter35.contains(constable36);
        constableBloomFilter35.insert((java.lang.constant.Constable) (byte) 0);
        java.lang.Class<?> wildcardClass40 = constableBloomFilter35.getClass();
        constableBloomFilter22.insert((java.lang.constant.Constable) wildcardClass40);
        constableBloomFilter13.insert((java.lang.constant.Constable) wildcardClass40);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass40);
        java.lang.constant.Constable constable44 = null;
        boolean boolean45 = constableBloomFilter2.contains(constable44);
        java.lang.Class<?> wildcardClass46 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test1567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1567");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter2.insert((java.lang.constant.Constable) 1.0f);
        boolean boolean8 = constableBloomFilter2.contains((java.lang.constant.Constable) (short) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter11 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter11.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter11.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter11.insert((java.lang.constant.Constable) (-1L));
        boolean boolean19 = constableBloomFilter11.contains((java.lang.constant.Constable) 0L);
        java.lang.Class<?> wildcardClass20 = constableBloomFilter11.getClass();
        boolean boolean21 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass20);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter24 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) (byte) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter27 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter27.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter27.insert((java.lang.constant.Constable) 1.0f);
        java.lang.constant.Constable constable32 = null;
        constableBloomFilter27.insert(constable32);
        boolean boolean35 = constableBloomFilter27.contains((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter38 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(100, (int) (short) 0);
        java.lang.Class<?> wildcardClass39 = wildcardClassOfFieldBloomFilter38.getClass();
        boolean boolean40 = constableBloomFilter27.contains((java.lang.constant.Constable) wildcardClass39);
        constableBloomFilter24.insert((java.lang.constant.Constable) wildcardClass39);
        java.lang.Class<?> wildcardClass42 = constableBloomFilter24.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test1568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1568");
        // The following exception was thrown during execution in test generation
        try {
            com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.CharSequence> charSequenceBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.CharSequence>((int) (byte) -1, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1569");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.GenericDeclaration> genericDeclarationBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.GenericDeclaration>((int) (byte) 1, (int) 'a');
    }

    @Test
    public void test1570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1570");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter5.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter5.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter5.insert((java.lang.constant.Constable) (-1L));
        constableBloomFilter5.insert((java.lang.constant.Constable) 'a');
        constableBloomFilter5.insert((java.lang.constant.Constable) (-1.0f));
        java.lang.Class<?> wildcardClass16 = constableBloomFilter5.getClass();
        boolean boolean17 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass16);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter20 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter23 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '#', (int) (short) 100);
        java.lang.Class<?> wildcardClass24 = constableBloomFilter23.getClass();
        boolean boolean25 = constableBloomFilter20.contains((java.lang.constant.Constable) wildcardClass24);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter28 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable29 = null;
        boolean boolean30 = constableBloomFilter28.contains(constable29);
        constableBloomFilter28.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter35 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable36 = null;
        boolean boolean37 = constableBloomFilter35.contains(constable36);
        java.lang.Class<?> wildcardClass38 = constableBloomFilter35.getClass();
        constableBloomFilter28.insert((java.lang.constant.Constable) wildcardClass38);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter42 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable43 = null;
        boolean boolean44 = constableBloomFilter42.contains(constable43);
        constableBloomFilter42.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter49 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable50 = null;
        boolean boolean51 = constableBloomFilter49.contains(constable50);
        java.lang.Class<?> wildcardClass52 = constableBloomFilter49.getClass();
        constableBloomFilter42.insert((java.lang.constant.Constable) wildcardClass52);
        boolean boolean54 = constableBloomFilter28.contains((java.lang.constant.Constable) wildcardClass52);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter57 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable58 = null;
        boolean boolean59 = constableBloomFilter57.contains(constable58);
        boolean boolean61 = constableBloomFilter57.contains((java.lang.constant.Constable) 1L);
        java.lang.Class<?> wildcardClass62 = constableBloomFilter57.getClass();
        boolean boolean63 = constableBloomFilter28.contains((java.lang.constant.Constable) wildcardClass62);
        java.lang.Class<?> wildcardClass64 = constableBloomFilter28.getClass();
        boolean boolean65 = constableBloomFilter20.contains((java.lang.constant.Constable) wildcardClass64);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.GenericDeclaration> genericDeclarationBloomFilter68 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.GenericDeclaration>(10, (int) 'a');
        java.lang.Class<?> wildcardClass69 = genericDeclarationBloomFilter68.getClass();
        boolean boolean70 = constableBloomFilter20.contains((java.lang.constant.Constable) wildcardClass69);
        boolean boolean71 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass69);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter74 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(0, (int) (byte) 10);
        java.lang.Class<?> wildcardClass75 = constableBloomFilter74.getClass();
        boolean boolean76 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
    }

    @Test
    public void test1571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1571");
        // The following exception was thrown during execution in test generation
        try {
            com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.io.Serializable> serializableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.io.Serializable>((int) (short) 1, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: nbits < 0: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1572");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.io.Serializable> serializableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.io.Serializable>(0, (int) 'a');
    }

    @Test
    public void test1573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1573");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter2.insert((java.lang.constant.Constable) 1.0f);
        boolean boolean8 = constableBloomFilter2.contains((java.lang.constant.Constable) (short) 100);
        java.lang.constant.Constable constable9 = null;
        boolean boolean10 = constableBloomFilter2.contains(constable9);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter13 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean15 = constableBloomFilter13.contains((java.lang.constant.Constable) 0L);
        boolean boolean17 = constableBloomFilter13.contains((java.lang.constant.Constable) (byte) 0);
        boolean boolean19 = constableBloomFilter13.contains((java.lang.constant.Constable) '4');
        boolean boolean21 = constableBloomFilter13.contains((java.lang.constant.Constable) 1.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter24 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter24.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter24.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter24.insert((java.lang.constant.Constable) (-1L));
        boolean boolean32 = constableBloomFilter24.contains((java.lang.constant.Constable) 0L);
        constableBloomFilter24.insert((java.lang.constant.Constable) 0.0d);
        java.lang.Class<?> wildcardClass35 = constableBloomFilter24.getClass();
        boolean boolean36 = constableBloomFilter13.contains((java.lang.constant.Constable) wildcardClass35);
        boolean boolean38 = constableBloomFilter13.contains((java.lang.constant.Constable) 0.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter41 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter44 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable45 = null;
        boolean boolean46 = constableBloomFilter44.contains(constable45);
        constableBloomFilter44.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean50 = constableBloomFilter44.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass51 = constableBloomFilter44.getClass();
        boolean boolean52 = constableBloomFilter41.contains((java.lang.constant.Constable) wildcardClass51);
        java.lang.Class<?> wildcardClass53 = constableBloomFilter41.getClass();
        boolean boolean54 = constableBloomFilter13.contains((java.lang.constant.Constable) wildcardClass53);
        boolean boolean55 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass53);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter58 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter58.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean62 = constableBloomFilter58.contains((java.lang.constant.Constable) 100L);
        boolean boolean64 = constableBloomFilter58.contains((java.lang.constant.Constable) (byte) 0);
        boolean boolean66 = constableBloomFilter58.contains((java.lang.constant.Constable) "");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter69 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter69.insert((java.lang.constant.Constable) 10);
        boolean boolean73 = constableBloomFilter69.contains((java.lang.constant.Constable) true);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter76 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter76.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter81 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter84 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass85 = wildcardClassOfFieldBloomFilter84.getClass();
        constableBloomFilter81.insert((java.lang.constant.Constable) wildcardClass85);
        constableBloomFilter76.insert((java.lang.constant.Constable) wildcardClass85);
        boolean boolean88 = constableBloomFilter69.contains((java.lang.constant.Constable) wildcardClass85);
        constableBloomFilter58.insert((java.lang.constant.Constable) wildcardClass85);
        boolean boolean90 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass85);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
    }

    @Test
    public void test1574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1574");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable3 = null;
        boolean boolean4 = constableBloomFilter2.contains(constable3);
        constableBloomFilter2.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean8 = constableBloomFilter2.contains((java.lang.constant.Constable) 'a');
        constableBloomFilter2.insert((java.lang.constant.Constable) (short) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter13 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter13.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean17 = constableBloomFilter13.contains((java.lang.constant.Constable) 100L);
        boolean boolean19 = constableBloomFilter13.contains((java.lang.constant.Constable) (byte) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter22 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter25 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable26 = null;
        boolean boolean27 = constableBloomFilter25.contains(constable26);
        constableBloomFilter25.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean31 = constableBloomFilter25.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass32 = constableBloomFilter25.getClass();
        boolean boolean33 = constableBloomFilter22.contains((java.lang.constant.Constable) wildcardClass32);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter36 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable37 = null;
        boolean boolean38 = constableBloomFilter36.contains(constable37);
        constableBloomFilter36.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean42 = constableBloomFilter36.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass43 = constableBloomFilter36.getClass();
        constableBloomFilter22.insert((java.lang.constant.Constable) wildcardClass43);
        boolean boolean45 = constableBloomFilter13.contains((java.lang.constant.Constable) wildcardClass43);
        boolean boolean46 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass43);
        java.lang.Class<?> wildcardClass47 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test1575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1575");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable3 = null;
        boolean boolean4 = constableBloomFilter2.contains(constable3);
        constableBloomFilter2.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter9 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable10 = null;
        boolean boolean11 = constableBloomFilter9.contains(constable10);
        java.lang.Class<?> wildcardClass12 = constableBloomFilter9.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass12);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable17 = null;
        boolean boolean18 = constableBloomFilter16.contains(constable17);
        constableBloomFilter16.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter23 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable24 = null;
        boolean boolean25 = constableBloomFilter23.contains(constable24);
        java.lang.Class<?> wildcardClass26 = constableBloomFilter23.getClass();
        constableBloomFilter16.insert((java.lang.constant.Constable) wildcardClass26);
        boolean boolean28 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass26);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter31 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable32 = null;
        boolean boolean33 = constableBloomFilter31.contains(constable32);
        boolean boolean35 = constableBloomFilter31.contains((java.lang.constant.Constable) 1L);
        java.lang.Class<?> wildcardClass36 = constableBloomFilter31.getClass();
        boolean boolean37 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass36);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter40 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter40.insert((java.lang.constant.Constable) 10);
        boolean boolean44 = constableBloomFilter40.contains((java.lang.constant.Constable) true);
        java.lang.Class<?> wildcardClass45 = constableBloomFilter40.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test1576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1576");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable3 = null;
        boolean boolean4 = constableBloomFilter2.contains(constable3);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter7 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        java.lang.Class<?> wildcardClass8 = constableBloomFilter7.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass8);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter12 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 100, (int) (byte) 100);
        boolean boolean14 = constableBloomFilter12.contains((java.lang.constant.Constable) (byte) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter17 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable18 = null;
        boolean boolean19 = constableBloomFilter17.contains(constable18);
        constableBloomFilter17.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean23 = constableBloomFilter17.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter26 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter29 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass30 = wildcardClassOfFieldBloomFilter29.getClass();
        constableBloomFilter26.insert((java.lang.constant.Constable) wildcardClass30);
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        constableBloomFilter26.insert((java.lang.constant.Constable) wildcardClass33);
        boolean boolean36 = constableBloomFilter26.contains((java.lang.constant.Constable) '#');
        constableBloomFilter26.insert((java.lang.constant.Constable) '#');
        java.lang.Class<?> wildcardClass39 = constableBloomFilter26.getClass();
        boolean boolean40 = constableBloomFilter17.contains((java.lang.constant.Constable) wildcardClass39);
        constableBloomFilter12.insert((java.lang.constant.Constable) wildcardClass39);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass39);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter45 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 10, (int) (short) 10);
        java.lang.Class<?> wildcardClass46 = constableBloomFilter45.getClass();
        boolean boolean47 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass46);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter50 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter53 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable54 = null;
        boolean boolean55 = constableBloomFilter53.contains(constable54);
        constableBloomFilter53.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean59 = constableBloomFilter53.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass60 = constableBloomFilter53.getClass();
        boolean boolean61 = constableBloomFilter50.contains((java.lang.constant.Constable) wildcardClass60);
        java.lang.Class<?> wildcardClass62 = constableBloomFilter50.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass62);
        java.lang.Class<?> wildcardClass64 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test1577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1577");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable3 = null;
        boolean boolean4 = constableBloomFilter2.contains(constable3);
        constableBloomFilter2.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean8 = constableBloomFilter2.contains((java.lang.constant.Constable) 'a');
        java.lang.constant.Constable constable9 = null;
        constableBloomFilter2.insert(constable9);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test1578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1578");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean6 = constableBloomFilter2.contains((java.lang.constant.Constable) 100L);
        boolean boolean8 = constableBloomFilter2.contains((java.lang.constant.Constable) (byte) 0);
        boolean boolean10 = constableBloomFilter2.contains((java.lang.constant.Constable) "");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter13 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable14 = null;
        boolean boolean15 = constableBloomFilter13.contains(constable14);
        constableBloomFilter13.insert((java.lang.constant.Constable) (byte) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter20 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter23 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass24 = wildcardClassOfFieldBloomFilter23.getClass();
        constableBloomFilter20.insert((java.lang.constant.Constable) wildcardClass24);
        constableBloomFilter20.insert((java.lang.constant.Constable) (byte) -1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter30 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter30.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter30.insert((java.lang.constant.Constable) 1.0f);
        java.lang.constant.Constable constable35 = null;
        constableBloomFilter30.insert(constable35);
        boolean boolean38 = constableBloomFilter30.contains((java.lang.constant.Constable) 0);
        constableBloomFilter30.insert((java.lang.constant.Constable) (-1L));
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter43 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>((int) (short) 0, (int) (short) 100);
        java.lang.Class<?> wildcardClass44 = wildcardClassOfFieldBloomFilter43.getClass();
        boolean boolean45 = constableBloomFilter30.contains((java.lang.constant.Constable) wildcardClass44);
        boolean boolean46 = constableBloomFilter20.contains((java.lang.constant.Constable) wildcardClass44);
        boolean boolean48 = constableBloomFilter20.contains((java.lang.constant.Constable) (short) 0);
        java.lang.Class<?> wildcardClass49 = constableBloomFilter20.getClass();
        boolean boolean50 = constableBloomFilter13.contains((java.lang.constant.Constable) wildcardClass49);
        boolean boolean51 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass49);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter54 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter57 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable58 = null;
        boolean boolean59 = constableBloomFilter57.contains(constable58);
        constableBloomFilter57.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean63 = constableBloomFilter57.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass64 = constableBloomFilter57.getClass();
        boolean boolean65 = constableBloomFilter54.contains((java.lang.constant.Constable) wildcardClass64);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter68 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable69 = null;
        boolean boolean70 = constableBloomFilter68.contains(constable69);
        constableBloomFilter68.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean74 = constableBloomFilter68.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass75 = constableBloomFilter68.getClass();
        constableBloomFilter54.insert((java.lang.constant.Constable) wildcardClass75);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter79 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) '#');
        java.lang.constant.Constable constable80 = null;
        constableBloomFilter79.insert(constable80);
        java.lang.Class<?> wildcardClass82 = constableBloomFilter79.getClass();
        constableBloomFilter54.insert((java.lang.constant.Constable) wildcardClass82);
        boolean boolean84 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass82);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter87 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 10, 10);
        java.lang.Class<?> wildcardClass88 = constableBloomFilter87.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass88);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test1579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1579");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass6 = wildcardClassOfFieldBloomFilter5.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass6);
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass9);
        boolean boolean12 = constableBloomFilter2.contains((java.lang.constant.Constable) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter15 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable16 = null;
        boolean boolean17 = constableBloomFilter15.contains(constable16);
        constableBloomFilter15.insert((java.lang.constant.Constable) 100.0f);
        boolean boolean21 = constableBloomFilter15.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter24 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter27 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable28 = null;
        boolean boolean29 = constableBloomFilter27.contains(constable28);
        constableBloomFilter27.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean33 = constableBloomFilter27.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass34 = constableBloomFilter27.getClass();
        boolean boolean35 = constableBloomFilter24.contains((java.lang.constant.Constable) wildcardClass34);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter38 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable39 = null;
        boolean boolean40 = constableBloomFilter38.contains(constable39);
        constableBloomFilter38.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean44 = constableBloomFilter38.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass45 = constableBloomFilter38.getClass();
        constableBloomFilter24.insert((java.lang.constant.Constable) wildcardClass45);
        boolean boolean47 = constableBloomFilter15.contains((java.lang.constant.Constable) wildcardClass45);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter50 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter50.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter50.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter50.insert((java.lang.constant.Constable) (-1L));
        java.lang.Class<?> wildcardClass57 = constableBloomFilter50.getClass();
        boolean boolean58 = constableBloomFilter15.contains((java.lang.constant.Constable) wildcardClass57);
        boolean boolean59 = constableBloomFilter2.contains((java.lang.constant.Constable) boolean58);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter62 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) (byte) 10);
        java.lang.Class<?> wildcardClass63 = constableBloomFilter62.getClass();
        boolean boolean64 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass63);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
    }

    @Test
    public void test1580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1580");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Object> objBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Object>((int) (short) 100, (int) (short) 10);
    }

    @Test
    public void test1581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1581");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '#', (int) (short) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter8 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass9 = wildcardClassOfFieldBloomFilter8.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass9);
        boolean boolean11 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass9);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter14 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable15 = null;
        boolean boolean16 = constableBloomFilter14.contains(constable15);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter19 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        java.lang.Class<?> wildcardClass20 = constableBloomFilter19.getClass();
        constableBloomFilter14.insert((java.lang.constant.Constable) wildcardClass20);
        boolean boolean22 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass20);
        java.lang.Class<?> wildcardClass23 = constableBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test1582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1582");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '#', (int) (short) 100);
        java.lang.Class<?> wildcardClass6 = constableBloomFilter5.getClass();
        boolean boolean7 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass6);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter10 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (short) 100);
        java.lang.Class<?> wildcardClass11 = constableBloomFilter10.getClass();
        boolean boolean12 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass11);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter15 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter15.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean19 = constableBloomFilter15.contains((java.lang.constant.Constable) 100L);
        boolean boolean21 = constableBloomFilter15.contains((java.lang.constant.Constable) (byte) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter24 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter27 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable28 = null;
        boolean boolean29 = constableBloomFilter27.contains(constable28);
        constableBloomFilter27.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean33 = constableBloomFilter27.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass34 = constableBloomFilter27.getClass();
        boolean boolean35 = constableBloomFilter24.contains((java.lang.constant.Constable) wildcardClass34);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter38 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable39 = null;
        boolean boolean40 = constableBloomFilter38.contains(constable39);
        constableBloomFilter38.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean44 = constableBloomFilter38.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass45 = constableBloomFilter38.getClass();
        constableBloomFilter24.insert((java.lang.constant.Constable) wildcardClass45);
        boolean boolean47 = constableBloomFilter15.contains((java.lang.constant.Constable) wildcardClass45);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter50 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable51 = null;
        boolean boolean52 = constableBloomFilter50.contains(constable51);
        constableBloomFilter50.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean56 = constableBloomFilter50.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter59 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter62 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass63 = wildcardClassOfFieldBloomFilter62.getClass();
        constableBloomFilter59.insert((java.lang.constant.Constable) wildcardClass63);
        java.lang.Object obj65 = new java.lang.Object();
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        constableBloomFilter59.insert((java.lang.constant.Constable) wildcardClass66);
        boolean boolean69 = constableBloomFilter59.contains((java.lang.constant.Constable) '#');
        constableBloomFilter59.insert((java.lang.constant.Constable) '#');
        java.lang.Class<?> wildcardClass72 = constableBloomFilter59.getClass();
        boolean boolean73 = constableBloomFilter50.contains((java.lang.constant.Constable) wildcardClass72);
        constableBloomFilter15.insert((java.lang.constant.Constable) boolean73);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter77 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter77.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter77.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter77.insert((java.lang.constant.Constable) (-1L));
        java.lang.Class<?> wildcardClass84 = constableBloomFilter77.getClass();
        constableBloomFilter15.insert((java.lang.constant.Constable) wildcardClass84);
        boolean boolean87 = constableBloomFilter15.contains((java.lang.constant.Constable) 10L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter90 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '#', (int) (short) 100);
        java.lang.Class<?> wildcardClass91 = constableBloomFilter90.getClass();
        boolean boolean92 = constableBloomFilter15.contains((java.lang.constant.Constable) wildcardClass91);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass91);
        java.lang.Class<?> wildcardClass94 = constableBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(wildcardClass91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test1583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1583");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 10, (int) (byte) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 10, 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter8 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        java.lang.Class<?> wildcardClass9 = constableBloomFilter8.getClass();
        boolean boolean10 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass9);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter13 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>((int) ' ', 100);
        java.lang.Class<?> wildcardClass14 = wildcardClassOfFieldBloomFilter13.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass14);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.io.Serializable> serializableBloomFilter18 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.io.Serializable>((int) (byte) 0, (int) (short) 10);
        java.lang.Class<?> wildcardClass19 = serializableBloomFilter18.getClass();
        boolean boolean20 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass19);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter23 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter23.insert((java.lang.constant.Constable) 10);
        boolean boolean27 = constableBloomFilter23.contains((java.lang.constant.Constable) true);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter30 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter30.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter35 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter38 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass39 = wildcardClassOfFieldBloomFilter38.getClass();
        constableBloomFilter35.insert((java.lang.constant.Constable) wildcardClass39);
        constableBloomFilter30.insert((java.lang.constant.Constable) wildcardClass39);
        boolean boolean42 = constableBloomFilter23.contains((java.lang.constant.Constable) wildcardClass39);
        boolean boolean43 = constableBloomFilter5.contains((java.lang.constant.Constable) boolean42);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter46 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter46.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter46.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter46.insert((java.lang.constant.Constable) (-1L));
        constableBloomFilter46.insert((java.lang.constant.Constable) 'a');
        constableBloomFilter46.insert((java.lang.constant.Constable) (-1.0f));
        java.lang.Class<?> wildcardClass57 = constableBloomFilter46.getClass();
        boolean boolean58 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass57);
        constableBloomFilter2.insert((java.lang.constant.Constable) boolean58);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
    }

    @Test
    public void test1584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1584");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(1, (int) (byte) 100);
        java.lang.Class<?> wildcardClass3 = constableBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test1585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1585");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter5.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter5.insert((java.lang.constant.Constable) 1.0f);
        java.lang.constant.Constable constable10 = null;
        constableBloomFilter5.insert(constable10);
        boolean boolean13 = constableBloomFilter5.contains((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>((int) (short) 10, (int) (byte) 1);
        java.lang.Class<?> wildcardClass17 = constableBloomFilterBloomFilter16.getClass();
        boolean boolean18 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass17);
        boolean boolean19 = constableBloomFilter2.contains((java.lang.constant.Constable) boolean18);
        java.lang.constant.Constable constable20 = null;
        boolean boolean21 = constableBloomFilter2.contains(constable20);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter24 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter27 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass28 = wildcardClassOfFieldBloomFilter27.getClass();
        constableBloomFilter24.insert((java.lang.constant.Constable) wildcardClass28);
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        constableBloomFilter24.insert((java.lang.constant.Constable) wildcardClass31);
        boolean boolean34 = constableBloomFilter24.contains((java.lang.constant.Constable) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter37 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable38 = null;
        boolean boolean39 = constableBloomFilter37.contains(constable38);
        constableBloomFilter37.insert((java.lang.constant.Constable) (byte) 0);
        java.lang.Class<?> wildcardClass42 = constableBloomFilter37.getClass();
        constableBloomFilter24.insert((java.lang.constant.Constable) wildcardClass42);
        java.lang.Class<?> wildcardClass44 = constableBloomFilter24.getClass();
        boolean boolean45 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass44);
        java.lang.Class<?> wildcardClass46 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test1586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1586");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean6 = constableBloomFilter2.contains((java.lang.constant.Constable) 100L);
        boolean boolean8 = constableBloomFilter2.contains((java.lang.constant.Constable) (byte) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter11 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter14 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable15 = null;
        boolean boolean16 = constableBloomFilter14.contains(constable15);
        constableBloomFilter14.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean20 = constableBloomFilter14.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass21 = constableBloomFilter14.getClass();
        boolean boolean22 = constableBloomFilter11.contains((java.lang.constant.Constable) wildcardClass21);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter25 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable26 = null;
        boolean boolean27 = constableBloomFilter25.contains(constable26);
        constableBloomFilter25.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean31 = constableBloomFilter25.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass32 = constableBloomFilter25.getClass();
        constableBloomFilter11.insert((java.lang.constant.Constable) wildcardClass32);
        boolean boolean34 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass32);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter37 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter37.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean41 = constableBloomFilter37.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter37.insert((java.lang.constant.Constable) (short) 0);
        boolean boolean45 = constableBloomFilter37.contains((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc> constantDescBloomFilter48 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc>((int) (byte) 100, 100);
        java.lang.Class<?> wildcardClass49 = constantDescBloomFilter48.getClass();
        constableBloomFilter37.insert((java.lang.constant.Constable) wildcardClass49);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass49);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter54 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>((int) (byte) 1, 10);
        java.lang.Class<?> wildcardClass55 = wildcardClassOfFieldBloomFilter54.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass55);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter59 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter59.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter59.insert((java.lang.constant.Constable) 1.0f);
        constableBloomFilter59.insert((java.lang.constant.Constable) (-1L));
        java.lang.Class<?> wildcardClass66 = constableBloomFilter59.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass66);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test1587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1587");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', (int) (short) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable6 = null;
        boolean boolean7 = constableBloomFilter5.contains(constable6);
        boolean boolean9 = constableBloomFilter5.contains((java.lang.constant.Constable) (byte) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter12 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter12.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter17 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable18 = null;
        constableBloomFilter17.insert(constable18);
        java.lang.Class<?> wildcardClass20 = constableBloomFilter17.getClass();
        boolean boolean21 = constableBloomFilter12.contains((java.lang.constant.Constable) wildcardClass20);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter24 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean26 = constableBloomFilter24.contains((java.lang.constant.Constable) true);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter29 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter32 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>(0, (int) ' ');
        java.lang.Class<?> wildcardClass33 = constableBloomFilterBloomFilter32.getClass();
        boolean boolean34 = constableBloomFilter29.contains((java.lang.constant.Constable) wildcardClass33);
        boolean boolean35 = constableBloomFilter24.contains((java.lang.constant.Constable) wildcardClass33);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter38 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter38.insert((java.lang.constant.Constable) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter43 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter46 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable47 = null;
        boolean boolean48 = constableBloomFilter46.contains(constable47);
        constableBloomFilter46.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean52 = constableBloomFilter46.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass53 = constableBloomFilter46.getClass();
        boolean boolean54 = constableBloomFilter43.contains((java.lang.constant.Constable) wildcardClass53);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter57 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable58 = null;
        boolean boolean59 = constableBloomFilter57.contains(constable58);
        constableBloomFilter57.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean63 = constableBloomFilter57.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass64 = constableBloomFilter57.getClass();
        constableBloomFilter43.insert((java.lang.constant.Constable) wildcardClass64);
        boolean boolean67 = constableBloomFilter43.contains((java.lang.constant.Constable) 1L);
        java.lang.Class<?> wildcardClass68 = constableBloomFilter43.getClass();
        constableBloomFilter38.insert((java.lang.constant.Constable) wildcardClass68);
        boolean boolean70 = constableBloomFilter24.contains((java.lang.constant.Constable) wildcardClass68);
        constableBloomFilter12.insert((java.lang.constant.Constable) boolean70);
        java.lang.Class<?> wildcardClass72 = constableBloomFilter12.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass72);
        boolean boolean74 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass72);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter77 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>(0, 1);
        java.lang.Class<?> wildcardClass78 = constableBloomFilterBloomFilter77.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass78);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test1588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1588");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable3 = null;
        boolean boolean4 = constableBloomFilter2.contains(constable3);
        constableBloomFilter2.insert((java.lang.constant.Constable) (byte) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter9 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter12 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass13 = wildcardClassOfFieldBloomFilter12.getClass();
        constableBloomFilter9.insert((java.lang.constant.Constable) wildcardClass13);
        constableBloomFilter9.insert((java.lang.constant.Constable) (byte) -1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter19 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter19.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter19.insert((java.lang.constant.Constable) 1.0f);
        java.lang.constant.Constable constable24 = null;
        constableBloomFilter19.insert(constable24);
        boolean boolean27 = constableBloomFilter19.contains((java.lang.constant.Constable) 0);
        constableBloomFilter19.insert((java.lang.constant.Constable) (-1L));
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter32 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>((int) (short) 0, (int) (short) 100);
        java.lang.Class<?> wildcardClass33 = wildcardClassOfFieldBloomFilter32.getClass();
        boolean boolean34 = constableBloomFilter19.contains((java.lang.constant.Constable) wildcardClass33);
        boolean boolean35 = constableBloomFilter9.contains((java.lang.constant.Constable) wildcardClass33);
        boolean boolean37 = constableBloomFilter9.contains((java.lang.constant.Constable) (short) 0);
        java.lang.Class<?> wildcardClass38 = constableBloomFilter9.getClass();
        boolean boolean39 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass38);
        java.lang.constant.Constable constable40 = null;
        boolean boolean41 = constableBloomFilter2.contains(constable40);
        java.lang.Class<?> wildcardClass42 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test1589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1589");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter5.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter10 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter13 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass14 = wildcardClassOfFieldBloomFilter13.getClass();
        constableBloomFilter10.insert((java.lang.constant.Constable) wildcardClass14);
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass14);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter19 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', 0);
        java.lang.Class<?> wildcardClass20 = constableBloomFilter19.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass20);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass20);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter25 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable26 = null;
        boolean boolean27 = constableBloomFilter25.contains(constable26);
        constableBloomFilter25.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter32 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable33 = null;
        boolean boolean34 = constableBloomFilter32.contains(constable33);
        java.lang.Class<?> wildcardClass35 = constableBloomFilter32.getClass();
        constableBloomFilter25.insert((java.lang.constant.Constable) wildcardClass35);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter39 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable40 = null;
        boolean boolean41 = constableBloomFilter39.contains(constable40);
        constableBloomFilter39.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter46 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable47 = null;
        boolean boolean48 = constableBloomFilter46.contains(constable47);
        java.lang.Class<?> wildcardClass49 = constableBloomFilter46.getClass();
        constableBloomFilter39.insert((java.lang.constant.Constable) wildcardClass49);
        boolean boolean51 = constableBloomFilter25.contains((java.lang.constant.Constable) wildcardClass49);
        constableBloomFilter2.insert((java.lang.constant.Constable) boolean51);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter55 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter55.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter55.insert((java.lang.constant.Constable) 1.0f);
        boolean boolean61 = constableBloomFilter55.contains((java.lang.constant.Constable) (short) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter64 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter64.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter64.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter64.insert((java.lang.constant.Constable) (-1L));
        boolean boolean72 = constableBloomFilter64.contains((java.lang.constant.Constable) 0L);
        java.lang.Class<?> wildcardClass73 = constableBloomFilter64.getClass();
        boolean boolean74 = constableBloomFilter55.contains((java.lang.constant.Constable) wildcardClass73);
        constableBloomFilter2.insert((java.lang.constant.Constable) boolean74);
        java.lang.Class<?> wildcardClass76 = constableBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test1590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1590");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.io.Serializable> serializableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.io.Serializable>((int) (short) 10, 10);
    }

    @Test
    public void test1591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1591");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.Type> typeBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.Type>((int) (byte) 0, (int) (short) 1);
    }

    @Test
    public void test1592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1592");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable6 = null;
        boolean boolean7 = constableBloomFilter5.contains(constable6);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter10 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter13 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable14 = null;
        boolean boolean15 = constableBloomFilter13.contains(constable14);
        constableBloomFilter13.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean19 = constableBloomFilter13.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass20 = constableBloomFilter13.getClass();
        boolean boolean21 = constableBloomFilter10.contains((java.lang.constant.Constable) wildcardClass20);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter24 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable25 = null;
        boolean boolean26 = constableBloomFilter24.contains(constable25);
        constableBloomFilter24.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean30 = constableBloomFilter24.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass31 = constableBloomFilter24.getClass();
        constableBloomFilter10.insert((java.lang.constant.Constable) wildcardClass31);
        boolean boolean34 = constableBloomFilter10.contains((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter37 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass38 = wildcardClassOfFieldBloomFilter37.getClass();
        constableBloomFilter10.insert((java.lang.constant.Constable) wildcardClass38);
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass38);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter43 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter46 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable47 = null;
        boolean boolean48 = constableBloomFilter46.contains(constable47);
        constableBloomFilter46.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean52 = constableBloomFilter46.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass53 = constableBloomFilter46.getClass();
        boolean boolean54 = constableBloomFilter43.contains((java.lang.constant.Constable) wildcardClass53);
        java.lang.Class<?> wildcardClass55 = constableBloomFilter43.getClass();
        boolean boolean56 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass55);
        boolean boolean57 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass55);
        java.lang.constant.Constable constable58 = null;
        constableBloomFilter2.insert(constable58);
        java.lang.constant.Constable constable60 = null;
        boolean boolean61 = constableBloomFilter2.contains(constable60);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter64 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable65 = null;
        constableBloomFilter64.insert(constable65);
        constableBloomFilter64.insert((java.lang.constant.Constable) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter71 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        boolean boolean73 = constableBloomFilter71.contains((java.lang.constant.Constable) ' ');
        java.lang.Class<?> wildcardClass74 = constableBloomFilter71.getClass();
        constableBloomFilter64.insert((java.lang.constant.Constable) wildcardClass74);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter78 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter78.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean82 = constableBloomFilter78.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter78.insert((java.lang.constant.Constable) (short) 0);
        boolean boolean86 = constableBloomFilter78.contains((java.lang.constant.Constable) 0);
        java.lang.Class<?> wildcardClass87 = constableBloomFilter78.getClass();
        boolean boolean88 = constableBloomFilter64.contains((java.lang.constant.Constable) wildcardClass87);
        boolean boolean89 = constableBloomFilter2.contains((java.lang.constant.Constable) boolean88);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Object> objBloomFilter92 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Object>(100, (int) '#');
        java.lang.Class<?> wildcardClass93 = objBloomFilter92.getClass();
        boolean boolean94 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass93);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
    }

    @Test
    public void test1593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1593");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', (int) (short) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter8 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass9 = wildcardClassOfFieldBloomFilter8.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass9);
        java.lang.Object obj11 = new java.lang.Object();
        java.lang.Class<?> wildcardClass12 = obj11.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass12);
        boolean boolean15 = constableBloomFilter5.contains((java.lang.constant.Constable) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter18 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter18.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean22 = constableBloomFilter18.contains((java.lang.constant.Constable) 100L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter25 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter25.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter30 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter33 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass34 = wildcardClassOfFieldBloomFilter33.getClass();
        constableBloomFilter30.insert((java.lang.constant.Constable) wildcardClass34);
        constableBloomFilter25.insert((java.lang.constant.Constable) wildcardClass34);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter39 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', 0);
        java.lang.Class<?> wildcardClass40 = constableBloomFilter39.getClass();
        constableBloomFilter25.insert((java.lang.constant.Constable) wildcardClass40);
        constableBloomFilter18.insert((java.lang.constant.Constable) wildcardClass40);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter45 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable46 = null;
        boolean boolean47 = constableBloomFilter45.contains(constable46);
        constableBloomFilter45.insert((java.lang.constant.Constable) (byte) 0);
        java.lang.Class<?> wildcardClass50 = constableBloomFilter45.getClass();
        boolean boolean51 = constableBloomFilter18.contains((java.lang.constant.Constable) wildcardClass50);
        boolean boolean52 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass50);
        boolean boolean53 = constableBloomFilter2.contains((java.lang.constant.Constable) boolean52);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor> typeDescriptorBloomFilter56 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor>(1, (int) (short) 100);
        java.lang.Class<?> wildcardClass57 = typeDescriptorBloomFilter56.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass57);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter61 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter61.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter66 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable67 = null;
        constableBloomFilter66.insert(constable67);
        java.lang.Class<?> wildcardClass69 = constableBloomFilter66.getClass();
        boolean boolean70 = constableBloomFilter61.contains((java.lang.constant.Constable) wildcardClass69);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
    }

    @Test
    public void test1594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1594");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, (int) (short) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>((int) '4', (int) 'a');
        java.lang.Class<?> wildcardClass6 = constableBloomFilterBloomFilter5.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass6);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter10 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter10.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean14 = constableBloomFilter10.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter10.insert((java.lang.constant.Constable) (short) 0);
        boolean boolean18 = constableBloomFilter10.contains((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc> constantDescBloomFilter21 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc>((int) (byte) 100, 100);
        java.lang.Class<?> wildcardClass22 = constantDescBloomFilter21.getClass();
        constableBloomFilter10.insert((java.lang.constant.Constable) wildcardClass22);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter26 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter26.insert((java.lang.constant.Constable) 10);
        constableBloomFilter26.insert((java.lang.constant.Constable) true);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter33 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable34 = null;
        boolean boolean35 = constableBloomFilter33.contains(constable34);
        constableBloomFilter33.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean39 = constableBloomFilter33.contains((java.lang.constant.Constable) 'a');
        boolean boolean41 = constableBloomFilter33.contains((java.lang.constant.Constable) 100.0f);
        java.lang.Class<?> wildcardClass42 = constableBloomFilter33.getClass();
        boolean boolean43 = constableBloomFilter26.contains((java.lang.constant.Constable) wildcardClass42);
        constableBloomFilter10.insert((java.lang.constant.Constable) wildcardClass42);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter47 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable48 = null;
        boolean boolean49 = constableBloomFilter47.contains(constable48);
        constableBloomFilter47.insert((java.lang.constant.Constable) 100.0f);
        boolean boolean53 = constableBloomFilter47.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter56 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter59 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>(0, (int) ' ');
        java.lang.Class<?> wildcardClass60 = constableBloomFilterBloomFilter59.getClass();
        boolean boolean61 = constableBloomFilter56.contains((java.lang.constant.Constable) wildcardClass60);
        constableBloomFilter47.insert((java.lang.constant.Constable) wildcardClass60);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter65 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', 0);
        java.lang.Class<?> wildcardClass66 = constableBloomFilter65.getClass();
        constableBloomFilter47.insert((java.lang.constant.Constable) wildcardClass66);
        boolean boolean68 = constableBloomFilter10.contains((java.lang.constant.Constable) wildcardClass66);
        boolean boolean69 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass66);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter72 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean74 = constableBloomFilter72.contains((java.lang.constant.Constable) true);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter77 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter80 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>(0, (int) ' ');
        java.lang.Class<?> wildcardClass81 = constableBloomFilterBloomFilter80.getClass();
        boolean boolean82 = constableBloomFilter77.contains((java.lang.constant.Constable) wildcardClass81);
        boolean boolean83 = constableBloomFilter72.contains((java.lang.constant.Constable) wildcardClass81);
        java.lang.Class<?> wildcardClass84 = constableBloomFilter72.getClass();
        boolean boolean85 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass84);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
    }

    @Test
    public void test1595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1595");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.AnnotatedElement> annotatedElementBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.AnnotatedElement>((int) (byte) 10, (int) (byte) 0);
        java.lang.Class<?> wildcardClass3 = annotatedElementBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test1596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1596");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 10, (int) (byte) 100);
        java.lang.Class<?> wildcardClass3 = constableBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test1597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1597");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, (int) (short) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable6 = null;
        boolean boolean7 = constableBloomFilter5.contains(constable6);
        constableBloomFilter5.insert((java.lang.constant.Constable) 100.0f);
        boolean boolean11 = constableBloomFilter5.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter14 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter17 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable18 = null;
        boolean boolean19 = constableBloomFilter17.contains(constable18);
        constableBloomFilter17.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean23 = constableBloomFilter17.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass24 = constableBloomFilter17.getClass();
        boolean boolean25 = constableBloomFilter14.contains((java.lang.constant.Constable) wildcardClass24);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter28 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable29 = null;
        boolean boolean30 = constableBloomFilter28.contains(constable29);
        constableBloomFilter28.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean34 = constableBloomFilter28.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass35 = constableBloomFilter28.getClass();
        constableBloomFilter14.insert((java.lang.constant.Constable) wildcardClass35);
        boolean boolean37 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass35);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter40 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter40.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter40.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter40.insert((java.lang.constant.Constable) (-1L));
        java.lang.Class<?> wildcardClass47 = constableBloomFilter40.getClass();
        boolean boolean48 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass47);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter51 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter51.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean55 = constableBloomFilter51.contains((java.lang.constant.Constable) 100L);
        boolean boolean57 = constableBloomFilter51.contains((java.lang.constant.Constable) (byte) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter60 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter63 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable64 = null;
        boolean boolean65 = constableBloomFilter63.contains(constable64);
        constableBloomFilter63.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean69 = constableBloomFilter63.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass70 = constableBloomFilter63.getClass();
        boolean boolean71 = constableBloomFilter60.contains((java.lang.constant.Constable) wildcardClass70);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter74 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable75 = null;
        boolean boolean76 = constableBloomFilter74.contains(constable75);
        constableBloomFilter74.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean80 = constableBloomFilter74.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass81 = constableBloomFilter74.getClass();
        constableBloomFilter60.insert((java.lang.constant.Constable) wildcardClass81);
        boolean boolean83 = constableBloomFilter51.contains((java.lang.constant.Constable) wildcardClass81);
        boolean boolean84 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass81);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass81);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
    }

    @Test
    public void test1598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1598");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter2.insert((java.lang.constant.Constable) 1.0f);
        boolean boolean8 = constableBloomFilter2.contains((java.lang.constant.Constable) (short) 100);
        boolean boolean10 = constableBloomFilter2.contains((java.lang.constant.Constable) 0L);
        boolean boolean12 = constableBloomFilter2.contains((java.lang.constant.Constable) (short) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter15 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable16 = null;
        boolean boolean17 = constableBloomFilter15.contains(constable16);
        constableBloomFilter15.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter22 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable23 = null;
        boolean boolean24 = constableBloomFilter22.contains(constable23);
        java.lang.Class<?> wildcardClass25 = constableBloomFilter22.getClass();
        constableBloomFilter15.insert((java.lang.constant.Constable) wildcardClass25);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter29 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable30 = null;
        boolean boolean31 = constableBloomFilter29.contains(constable30);
        constableBloomFilter29.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter36 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable37 = null;
        boolean boolean38 = constableBloomFilter36.contains(constable37);
        java.lang.Class<?> wildcardClass39 = constableBloomFilter36.getClass();
        constableBloomFilter29.insert((java.lang.constant.Constable) wildcardClass39);
        boolean boolean41 = constableBloomFilter15.contains((java.lang.constant.Constable) wildcardClass39);
        boolean boolean42 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass39);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter45 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        boolean boolean47 = constableBloomFilter45.contains((java.lang.constant.Constable) ' ');
        boolean boolean49 = constableBloomFilter45.contains((java.lang.constant.Constable) (short) 1);
        boolean boolean51 = constableBloomFilter45.contains((java.lang.constant.Constable) (-1));
        java.lang.Class<?> wildcardClass52 = constableBloomFilter45.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass52);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter56 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor> typeDescriptorBloomFilter59 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor>((int) (byte) 1, 100);
        java.lang.Class<?> wildcardClass60 = typeDescriptorBloomFilter59.getClass();
        boolean boolean61 = constableBloomFilter56.contains((java.lang.constant.Constable) wildcardClass60);
        boolean boolean62 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
    }

    @Test
    public void test1599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1599");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>((int) (byte) 1, (int) (short) 10);
    }

    @Test
    public void test1600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1600");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter2.insert((java.lang.constant.Constable) ' ');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter9 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter9.insert((java.lang.constant.Constable) 0.0d);
        java.lang.Class<?> wildcardClass12 = constableBloomFilter9.getClass();
        boolean boolean13 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass12);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter16.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean20 = constableBloomFilter16.contains((java.lang.constant.Constable) 100L);
        boolean boolean22 = constableBloomFilter16.contains((java.lang.constant.Constable) (byte) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter25 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter28 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable29 = null;
        boolean boolean30 = constableBloomFilter28.contains(constable29);
        constableBloomFilter28.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean34 = constableBloomFilter28.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass35 = constableBloomFilter28.getClass();
        boolean boolean36 = constableBloomFilter25.contains((java.lang.constant.Constable) wildcardClass35);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter39 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable40 = null;
        boolean boolean41 = constableBloomFilter39.contains(constable40);
        constableBloomFilter39.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean45 = constableBloomFilter39.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass46 = constableBloomFilter39.getClass();
        constableBloomFilter25.insert((java.lang.constant.Constable) wildcardClass46);
        boolean boolean48 = constableBloomFilter16.contains((java.lang.constant.Constable) wildcardClass46);
        java.lang.Class<?> wildcardClass49 = constableBloomFilter16.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass49);
        boolean boolean52 = constableBloomFilter2.contains((java.lang.constant.Constable) "");
        java.lang.Class<?> wildcardClass53 = constableBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test1601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1601");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) 'a', 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable6 = null;
        boolean boolean7 = constableBloomFilter5.contains(constable6);
        boolean boolean9 = constableBloomFilter5.contains((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter12 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, (int) (short) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter15 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        boolean boolean17 = constableBloomFilter15.contains((java.lang.constant.Constable) ' ');
        boolean boolean19 = constableBloomFilter15.contains((java.lang.constant.Constable) (short) 1);
        java.lang.Class<?> wildcardClass20 = constableBloomFilter15.getClass();
        boolean boolean21 = constableBloomFilter12.contains((java.lang.constant.Constable) wildcardClass20);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter24 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable25 = null;
        boolean boolean26 = constableBloomFilter24.contains(constable25);
        constableBloomFilter24.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean30 = constableBloomFilter24.contains((java.lang.constant.Constable) 'a');
        boolean boolean32 = constableBloomFilter24.contains((java.lang.constant.Constable) 100.0f);
        java.lang.Class<?> wildcardClass33 = constableBloomFilter24.getClass();
        boolean boolean34 = constableBloomFilter12.contains((java.lang.constant.Constable) wildcardClass33);
        boolean boolean35 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass33);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter38 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter38.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter38.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter38.insert((java.lang.constant.Constable) (short) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter47 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter50 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable51 = null;
        boolean boolean52 = constableBloomFilter50.contains(constable51);
        constableBloomFilter50.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean56 = constableBloomFilter50.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass57 = constableBloomFilter50.getClass();
        boolean boolean58 = constableBloomFilter47.contains((java.lang.constant.Constable) wildcardClass57);
        boolean boolean59 = constableBloomFilter38.contains((java.lang.constant.Constable) wildcardClass57);
        boolean boolean60 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass57);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter63 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter66 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass67 = wildcardClassOfFieldBloomFilter66.getClass();
        constableBloomFilter63.insert((java.lang.constant.Constable) wildcardClass67);
        java.lang.Object obj69 = new java.lang.Object();
        java.lang.Class<?> wildcardClass70 = obj69.getClass();
        constableBloomFilter63.insert((java.lang.constant.Constable) wildcardClass70);
        boolean boolean73 = constableBloomFilter63.contains((java.lang.constant.Constable) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter76 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable77 = null;
        boolean boolean78 = constableBloomFilter76.contains(constable77);
        constableBloomFilter76.insert((java.lang.constant.Constable) (byte) 0);
        java.lang.Class<?> wildcardClass81 = constableBloomFilter76.getClass();
        constableBloomFilter63.insert((java.lang.constant.Constable) wildcardClass81);
        java.lang.Class<?> wildcardClass83 = constableBloomFilter63.getClass();
        boolean boolean84 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass83);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass83);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
    }

    @Test
    public void test1602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1602");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable3 = null;
        boolean boolean4 = constableBloomFilter2.contains(constable3);
        boolean boolean6 = constableBloomFilter2.contains((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter9 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, (int) (short) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter12 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        boolean boolean14 = constableBloomFilter12.contains((java.lang.constant.Constable) ' ');
        boolean boolean16 = constableBloomFilter12.contains((java.lang.constant.Constable) (short) 1);
        java.lang.Class<?> wildcardClass17 = constableBloomFilter12.getClass();
        boolean boolean18 = constableBloomFilter9.contains((java.lang.constant.Constable) wildcardClass17);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter21 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable22 = null;
        boolean boolean23 = constableBloomFilter21.contains(constable22);
        constableBloomFilter21.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean27 = constableBloomFilter21.contains((java.lang.constant.Constable) 'a');
        boolean boolean29 = constableBloomFilter21.contains((java.lang.constant.Constable) 100.0f);
        java.lang.Class<?> wildcardClass30 = constableBloomFilter21.getClass();
        boolean boolean31 = constableBloomFilter9.contains((java.lang.constant.Constable) wildcardClass30);
        boolean boolean32 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass30);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter35 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) ' ', (int) (byte) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter38 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 10, 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter41 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        java.lang.Class<?> wildcardClass42 = constableBloomFilter41.getClass();
        boolean boolean43 = constableBloomFilter38.contains((java.lang.constant.Constable) wildcardClass42);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter46 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>((int) ' ', 100);
        java.lang.Class<?> wildcardClass47 = wildcardClassOfFieldBloomFilter46.getClass();
        constableBloomFilter38.insert((java.lang.constant.Constable) wildcardClass47);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.io.Serializable> serializableBloomFilter51 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.io.Serializable>((int) (byte) 0, (int) (short) 10);
        java.lang.Class<?> wildcardClass52 = serializableBloomFilter51.getClass();
        boolean boolean53 = constableBloomFilter38.contains((java.lang.constant.Constable) wildcardClass52);
        constableBloomFilter35.insert((java.lang.constant.Constable) wildcardClass52);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter57 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter57.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter57.insert((java.lang.constant.Constable) 1.0f);
        boolean boolean63 = constableBloomFilter57.contains((java.lang.constant.Constable) (short) 100);
        boolean boolean65 = constableBloomFilter57.contains((java.lang.constant.Constable) 0L);
        boolean boolean67 = constableBloomFilter57.contains((java.lang.constant.Constable) (short) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter70 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable71 = null;
        boolean boolean72 = constableBloomFilter70.contains(constable71);
        constableBloomFilter70.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean76 = constableBloomFilter70.contains((java.lang.constant.Constable) 'a');
        boolean boolean78 = constableBloomFilter70.contains((java.lang.constant.Constable) 100.0f);
        java.lang.Class<?> wildcardClass79 = constableBloomFilter70.getClass();
        boolean boolean80 = constableBloomFilter57.contains((java.lang.constant.Constable) wildcardClass79);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter83 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>((int) (short) 0, (int) (short) 100);
        java.lang.Class<?> wildcardClass84 = wildcardClassOfFieldBloomFilter83.getClass();
        constableBloomFilter57.insert((java.lang.constant.Constable) wildcardClass84);
        boolean boolean86 = constableBloomFilter35.contains((java.lang.constant.Constable) wildcardClass84);
        boolean boolean87 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass84);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
    }

    @Test
    public void test1603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1603");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter2.insert((java.lang.constant.Constable) 1.0f);
        java.lang.constant.Constable constable7 = null;
        constableBloomFilter2.insert(constable7);
        boolean boolean10 = constableBloomFilter2.contains((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter13 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass17 = wildcardClassOfFieldBloomFilter16.getClass();
        constableBloomFilter13.insert((java.lang.constant.Constable) wildcardClass17);
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        constableBloomFilter13.insert((java.lang.constant.Constable) wildcardClass20);
        boolean boolean23 = constableBloomFilter13.contains((java.lang.constant.Constable) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter26 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable27 = null;
        boolean boolean28 = constableBloomFilter26.contains(constable27);
        constableBloomFilter26.insert((java.lang.constant.Constable) (byte) 0);
        java.lang.Class<?> wildcardClass31 = constableBloomFilter26.getClass();
        constableBloomFilter13.insert((java.lang.constant.Constable) wildcardClass31);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter35 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter38 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable39 = null;
        boolean boolean40 = constableBloomFilter38.contains(constable39);
        constableBloomFilter38.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean44 = constableBloomFilter38.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass45 = constableBloomFilter38.getClass();
        boolean boolean46 = constableBloomFilter35.contains((java.lang.constant.Constable) wildcardClass45);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter49 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable50 = null;
        boolean boolean51 = constableBloomFilter49.contains(constable50);
        constableBloomFilter49.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean55 = constableBloomFilter49.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass56 = constableBloomFilter49.getClass();
        constableBloomFilter35.insert((java.lang.constant.Constable) wildcardClass56);
        boolean boolean59 = constableBloomFilter35.contains((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter62 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass63 = wildcardClassOfFieldBloomFilter62.getClass();
        constableBloomFilter35.insert((java.lang.constant.Constable) wildcardClass63);
        constableBloomFilter13.insert((java.lang.constant.Constable) wildcardClass63);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass63);
        java.lang.Class<?> wildcardClass67 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test1604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1604");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Class<?>> wildcardClassBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Class<?>>(1, 100);
    }

    @Test
    public void test1605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1605");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable6 = null;
        boolean boolean7 = constableBloomFilter5.contains(constable6);
        constableBloomFilter5.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean11 = constableBloomFilter5.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass12 = constableBloomFilter5.getClass();
        boolean boolean13 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass12);
        constableBloomFilter2.insert((java.lang.constant.Constable) (short) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter18 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean20 = constableBloomFilter18.contains((java.lang.constant.Constable) 0L);
        boolean boolean22 = constableBloomFilter18.contains((java.lang.constant.Constable) (byte) 0);
        boolean boolean24 = constableBloomFilter18.contains((java.lang.constant.Constable) '4');
        java.lang.Class<?> wildcardClass25 = constableBloomFilter18.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass25);
        boolean boolean28 = constableBloomFilter2.contains((java.lang.constant.Constable) (-1.0f));
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter31 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 10, 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc> constantDescBloomFilter34 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc>((int) (byte) 100, 100);
        java.lang.Class<?> wildcardClass35 = constantDescBloomFilter34.getClass();
        constableBloomFilter31.insert((java.lang.constant.Constable) wildcardClass35);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass35);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter40 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter43 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable44 = null;
        boolean boolean45 = constableBloomFilter43.contains(constable44);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter48 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter51 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable52 = null;
        boolean boolean53 = constableBloomFilter51.contains(constable52);
        constableBloomFilter51.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean57 = constableBloomFilter51.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass58 = constableBloomFilter51.getClass();
        boolean boolean59 = constableBloomFilter48.contains((java.lang.constant.Constable) wildcardClass58);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter62 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable63 = null;
        boolean boolean64 = constableBloomFilter62.contains(constable63);
        constableBloomFilter62.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean68 = constableBloomFilter62.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass69 = constableBloomFilter62.getClass();
        constableBloomFilter48.insert((java.lang.constant.Constable) wildcardClass69);
        boolean boolean72 = constableBloomFilter48.contains((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter75 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass76 = wildcardClassOfFieldBloomFilter75.getClass();
        constableBloomFilter48.insert((java.lang.constant.Constable) wildcardClass76);
        constableBloomFilter43.insert((java.lang.constant.Constable) wildcardClass76);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter81 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter84 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable85 = null;
        boolean boolean86 = constableBloomFilter84.contains(constable85);
        constableBloomFilter84.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean90 = constableBloomFilter84.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass91 = constableBloomFilter84.getClass();
        boolean boolean92 = constableBloomFilter81.contains((java.lang.constant.Constable) wildcardClass91);
        java.lang.Class<?> wildcardClass93 = constableBloomFilter81.getClass();
        boolean boolean94 = constableBloomFilter43.contains((java.lang.constant.Constable) wildcardClass93);
        boolean boolean95 = constableBloomFilter40.contains((java.lang.constant.Constable) wildcardClass93);
        boolean boolean96 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass93);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(wildcardClass91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
    }

    @Test
    public void test1606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1606");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable3 = null;
        boolean boolean4 = constableBloomFilter2.contains(constable3);
        boolean boolean6 = constableBloomFilter2.contains((java.lang.constant.Constable) (byte) 1);
        java.lang.constant.Constable constable7 = null;
        constableBloomFilter2.insert(constable7);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter11 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter11.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean15 = constableBloomFilter11.contains((java.lang.constant.Constable) 100L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter18 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter18.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter23 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter26 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass27 = wildcardClassOfFieldBloomFilter26.getClass();
        constableBloomFilter23.insert((java.lang.constant.Constable) wildcardClass27);
        constableBloomFilter18.insert((java.lang.constant.Constable) wildcardClass27);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter32 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', 0);
        java.lang.Class<?> wildcardClass33 = constableBloomFilter32.getClass();
        constableBloomFilter18.insert((java.lang.constant.Constable) wildcardClass33);
        constableBloomFilter11.insert((java.lang.constant.Constable) wildcardClass33);
        boolean boolean36 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass33);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter39 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable40 = null;
        boolean boolean41 = constableBloomFilter39.contains(constable40);
        constableBloomFilter39.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean45 = constableBloomFilter39.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter48 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter51 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass52 = wildcardClassOfFieldBloomFilter51.getClass();
        constableBloomFilter48.insert((java.lang.constant.Constable) wildcardClass52);
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        constableBloomFilter48.insert((java.lang.constant.Constable) wildcardClass55);
        boolean boolean58 = constableBloomFilter48.contains((java.lang.constant.Constable) '#');
        constableBloomFilter48.insert((java.lang.constant.Constable) '#');
        java.lang.Class<?> wildcardClass61 = constableBloomFilter48.getClass();
        boolean boolean62 = constableBloomFilter39.contains((java.lang.constant.Constable) wildcardClass61);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter65 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter68 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable69 = null;
        boolean boolean70 = constableBloomFilter68.contains(constable69);
        constableBloomFilter68.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean74 = constableBloomFilter68.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass75 = constableBloomFilter68.getClass();
        boolean boolean76 = constableBloomFilter65.contains((java.lang.constant.Constable) wildcardClass75);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter79 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable80 = null;
        boolean boolean81 = constableBloomFilter79.contains(constable80);
        constableBloomFilter79.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean85 = constableBloomFilter79.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass86 = constableBloomFilter79.getClass();
        constableBloomFilter65.insert((java.lang.constant.Constable) wildcardClass86);
        boolean boolean89 = constableBloomFilter65.contains((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter92 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass93 = wildcardClassOfFieldBloomFilter92.getClass();
        constableBloomFilter65.insert((java.lang.constant.Constable) wildcardClass93);
        boolean boolean95 = constableBloomFilter39.contains((java.lang.constant.Constable) wildcardClass93);
        constableBloomFilter2.insert((java.lang.constant.Constable) boolean95);
        java.lang.Class<?> wildcardClass97 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test1607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1607");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 10, (int) '4');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter5.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean9 = constableBloomFilter5.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter5.insert((java.lang.constant.Constable) (short) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter14 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable15 = null;
        boolean boolean16 = constableBloomFilter14.contains(constable15);
        constableBloomFilter14.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter21 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable22 = null;
        boolean boolean23 = constableBloomFilter21.contains(constable22);
        java.lang.Class<?> wildcardClass24 = constableBloomFilter21.getClass();
        constableBloomFilter14.insert((java.lang.constant.Constable) wildcardClass24);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter28 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable29 = null;
        boolean boolean30 = constableBloomFilter28.contains(constable29);
        constableBloomFilter28.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter35 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable36 = null;
        boolean boolean37 = constableBloomFilter35.contains(constable36);
        java.lang.Class<?> wildcardClass38 = constableBloomFilter35.getClass();
        constableBloomFilter28.insert((java.lang.constant.Constable) wildcardClass38);
        boolean boolean40 = constableBloomFilter14.contains((java.lang.constant.Constable) wildcardClass38);
        boolean boolean41 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass38);
        constableBloomFilter2.insert((java.lang.constant.Constable) boolean41);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
    }

    @Test
    public void test1608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1608");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, (int) (short) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable6 = null;
        constableBloomFilter5.insert(constable6);
        constableBloomFilter5.insert((java.lang.constant.Constable) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter12 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        boolean boolean14 = constableBloomFilter12.contains((java.lang.constant.Constable) ' ');
        java.lang.Class<?> wildcardClass15 = constableBloomFilter12.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass15);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter19 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter22 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '#', (int) (short) 100);
        java.lang.Class<?> wildcardClass23 = constableBloomFilter22.getClass();
        boolean boolean24 = constableBloomFilter19.contains((java.lang.constant.Constable) wildcardClass23);
        boolean boolean25 = constableBloomFilter5.contains((java.lang.constant.Constable) boolean24);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter28 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean30 = constableBloomFilter28.contains((java.lang.constant.Constable) 0L);
        boolean boolean32 = constableBloomFilter28.contains((java.lang.constant.Constable) (byte) 0);
        boolean boolean34 = constableBloomFilter28.contains((java.lang.constant.Constable) '4');
        boolean boolean36 = constableBloomFilter28.contains((java.lang.constant.Constable) 1.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter39 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter39.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter39.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter39.insert((java.lang.constant.Constable) (-1L));
        boolean boolean47 = constableBloomFilter39.contains((java.lang.constant.Constable) 0L);
        constableBloomFilter39.insert((java.lang.constant.Constable) 0.0d);
        java.lang.Class<?> wildcardClass50 = constableBloomFilter39.getClass();
        boolean boolean51 = constableBloomFilter28.contains((java.lang.constant.Constable) wildcardClass50);
        boolean boolean53 = constableBloomFilter28.contains((java.lang.constant.Constable) 0.0f);
        java.lang.Class<?> wildcardClass54 = constableBloomFilter28.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass54);
        boolean boolean56 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
    }

    @Test
    public void test1609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1609");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter2.insert((java.lang.constant.Constable) 1.0f);
        boolean boolean8 = constableBloomFilter2.contains((java.lang.constant.Constable) (short) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter11 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.Class<?> wildcardClass12 = constableBloomFilter11.getClass();
        boolean boolean13 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass12);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter16.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter16.insert((java.lang.constant.Constable) 1.0f);
        boolean boolean22 = constableBloomFilter16.contains((java.lang.constant.Constable) (short) 100);
        boolean boolean24 = constableBloomFilter16.contains((java.lang.constant.Constable) 0L);
        boolean boolean26 = constableBloomFilter16.contains((java.lang.constant.Constable) (short) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter29 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) ' ', 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter32 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable33 = null;
        boolean boolean34 = constableBloomFilter32.contains(constable33);
        constableBloomFilter32.insert((java.lang.constant.Constable) 100.0f);
        boolean boolean38 = constableBloomFilter32.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter41 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter44 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable45 = null;
        boolean boolean46 = constableBloomFilter44.contains(constable45);
        constableBloomFilter44.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean50 = constableBloomFilter44.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass51 = constableBloomFilter44.getClass();
        boolean boolean52 = constableBloomFilter41.contains((java.lang.constant.Constable) wildcardClass51);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter55 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable56 = null;
        boolean boolean57 = constableBloomFilter55.contains(constable56);
        constableBloomFilter55.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean61 = constableBloomFilter55.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass62 = constableBloomFilter55.getClass();
        constableBloomFilter41.insert((java.lang.constant.Constable) wildcardClass62);
        boolean boolean64 = constableBloomFilter32.contains((java.lang.constant.Constable) wildcardClass62);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter67 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter67.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter67.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter67.insert((java.lang.constant.Constable) (-1L));
        java.lang.Class<?> wildcardClass74 = constableBloomFilter67.getClass();
        boolean boolean75 = constableBloomFilter32.contains((java.lang.constant.Constable) wildcardClass74);
        constableBloomFilter29.insert((java.lang.constant.Constable) wildcardClass74);
        constableBloomFilter16.insert((java.lang.constant.Constable) wildcardClass74);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter80 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', (int) (short) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter83 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) 'a', 0);
        java.lang.Class<?> wildcardClass84 = constableBloomFilter83.getClass();
        constableBloomFilter80.insert((java.lang.constant.Constable) wildcardClass84);
        constableBloomFilter16.insert((java.lang.constant.Constable) wildcardClass84);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass84);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test1610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1610");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean4 = constableBloomFilter2.contains((java.lang.constant.Constable) 0L);
        boolean boolean6 = constableBloomFilter2.contains((java.lang.constant.Constable) (byte) 0);
        boolean boolean8 = constableBloomFilter2.contains((java.lang.constant.Constable) '4');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor> typeDescriptorBloomFilter11 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor>(0, 100);
        java.lang.Class<?> wildcardClass12 = typeDescriptorBloomFilter11.getClass();
        boolean boolean13 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass12);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>(0, 100);
        java.lang.Class<?> wildcardClass17 = constableBloomFilterBloomFilter16.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass17);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter21 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, (int) (short) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter24 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter24.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter24.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter24.insert((java.lang.constant.Constable) (-1L));
        boolean boolean32 = constableBloomFilter24.contains((java.lang.constant.Constable) 0L);
        java.lang.Class<?> wildcardClass33 = constableBloomFilter24.getClass();
        boolean boolean34 = constableBloomFilter21.contains((java.lang.constant.Constable) wildcardClass33);
        boolean boolean35 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
    }

    @Test
    public void test1611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1611");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter7 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable8 = null;
        constableBloomFilter7.insert(constable8);
        java.lang.Class<?> wildcardClass10 = constableBloomFilter7.getClass();
        boolean boolean11 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter14 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean16 = constableBloomFilter14.contains((java.lang.constant.Constable) true);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter19 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter22 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>(0, (int) ' ');
        java.lang.Class<?> wildcardClass23 = constableBloomFilterBloomFilter22.getClass();
        boolean boolean24 = constableBloomFilter19.contains((java.lang.constant.Constable) wildcardClass23);
        boolean boolean25 = constableBloomFilter14.contains((java.lang.constant.Constable) wildcardClass23);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter28 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter28.insert((java.lang.constant.Constable) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter33 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter36 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable37 = null;
        boolean boolean38 = constableBloomFilter36.contains(constable37);
        constableBloomFilter36.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean42 = constableBloomFilter36.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass43 = constableBloomFilter36.getClass();
        boolean boolean44 = constableBloomFilter33.contains((java.lang.constant.Constable) wildcardClass43);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter47 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable48 = null;
        boolean boolean49 = constableBloomFilter47.contains(constable48);
        constableBloomFilter47.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean53 = constableBloomFilter47.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass54 = constableBloomFilter47.getClass();
        constableBloomFilter33.insert((java.lang.constant.Constable) wildcardClass54);
        boolean boolean57 = constableBloomFilter33.contains((java.lang.constant.Constable) 1L);
        java.lang.Class<?> wildcardClass58 = constableBloomFilter33.getClass();
        constableBloomFilter28.insert((java.lang.constant.Constable) wildcardClass58);
        boolean boolean60 = constableBloomFilter14.contains((java.lang.constant.Constable) wildcardClass58);
        constableBloomFilter2.insert((java.lang.constant.Constable) boolean60);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter64 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter64.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter64.insert((java.lang.constant.Constable) 1.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter71 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter74 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass75 = wildcardClassOfFieldBloomFilter74.getClass();
        constableBloomFilter71.insert((java.lang.constant.Constable) wildcardClass75);
        java.lang.Object obj77 = new java.lang.Object();
        java.lang.Class<?> wildcardClass78 = obj77.getClass();
        constableBloomFilter71.insert((java.lang.constant.Constable) wildcardClass78);
        java.lang.Class<?> wildcardClass80 = constableBloomFilter71.getClass();
        constableBloomFilter64.insert((java.lang.constant.Constable) wildcardClass80);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass80);
        java.lang.Class<?> wildcardClass83 = constableBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test1612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1612");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(0, 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean7 = constableBloomFilter5.contains((java.lang.constant.Constable) true);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter10 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter10.insert((java.lang.constant.Constable) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter15 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter18 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable19 = null;
        boolean boolean20 = constableBloomFilter18.contains(constable19);
        constableBloomFilter18.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean24 = constableBloomFilter18.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass25 = constableBloomFilter18.getClass();
        boolean boolean26 = constableBloomFilter15.contains((java.lang.constant.Constable) wildcardClass25);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter29 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable30 = null;
        boolean boolean31 = constableBloomFilter29.contains(constable30);
        constableBloomFilter29.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean35 = constableBloomFilter29.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass36 = constableBloomFilter29.getClass();
        constableBloomFilter15.insert((java.lang.constant.Constable) wildcardClass36);
        boolean boolean39 = constableBloomFilter15.contains((java.lang.constant.Constable) 1L);
        java.lang.Class<?> wildcardClass40 = constableBloomFilter15.getClass();
        constableBloomFilter10.insert((java.lang.constant.Constable) wildcardClass40);
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass40);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter45 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter45.insert((java.lang.constant.Constable) 0.0d);
        java.lang.Class<?> wildcardClass48 = constableBloomFilter45.getClass();
        boolean boolean49 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass48);
        constableBloomFilter2.insert((java.lang.constant.Constable) boolean49);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter53 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter56 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable57 = null;
        boolean boolean58 = constableBloomFilter56.contains(constable57);
        constableBloomFilter56.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean62 = constableBloomFilter56.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass63 = constableBloomFilter56.getClass();
        boolean boolean64 = constableBloomFilter53.contains((java.lang.constant.Constable) wildcardClass63);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter67 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable68 = null;
        boolean boolean69 = constableBloomFilter67.contains(constable68);
        constableBloomFilter67.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean73 = constableBloomFilter67.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass74 = constableBloomFilter67.getClass();
        constableBloomFilter53.insert((java.lang.constant.Constable) wildcardClass74);
        boolean boolean77 = constableBloomFilter53.contains((java.lang.constant.Constable) 1L);
        boolean boolean79 = constableBloomFilter53.contains((java.lang.constant.Constable) (byte) 1);
        java.lang.Class<?> wildcardClass80 = constableBloomFilter53.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass80);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test1613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1613");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor> typeDescriptorBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor>((int) 'a', 0);
    }

    @Test
    public void test1614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1614");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.Type> typeBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.Type>((int) (byte) 10, (int) (byte) 10);
    }

    @Test
    public void test1615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1615");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) 'a');
        boolean boolean4 = constableBloomFilter2.contains((java.lang.constant.Constable) (byte) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter7 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable8 = null;
        boolean boolean9 = constableBloomFilter7.contains(constable8);
        java.lang.Class<?> wildcardClass10 = constableBloomFilter7.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter14 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter17 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass18 = wildcardClassOfFieldBloomFilter17.getClass();
        constableBloomFilter14.insert((java.lang.constant.Constable) wildcardClass18);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter22 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) 'a');
        boolean boolean24 = constableBloomFilter22.contains((java.lang.constant.Constable) ' ');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter27 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter30 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable31 = null;
        boolean boolean32 = constableBloomFilter30.contains(constable31);
        constableBloomFilter30.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean36 = constableBloomFilter30.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass37 = constableBloomFilter30.getClass();
        boolean boolean38 = constableBloomFilter27.contains((java.lang.constant.Constable) wildcardClass37);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter41 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable42 = null;
        boolean boolean43 = constableBloomFilter41.contains(constable42);
        constableBloomFilter41.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean47 = constableBloomFilter41.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass48 = constableBloomFilter41.getClass();
        constableBloomFilter27.insert((java.lang.constant.Constable) wildcardClass48);
        boolean boolean50 = constableBloomFilter22.contains((java.lang.constant.Constable) wildcardClass48);
        constableBloomFilter14.insert((java.lang.constant.Constable) boolean50);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter54 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter57 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable58 = null;
        boolean boolean59 = constableBloomFilter57.contains(constable58);
        constableBloomFilter57.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean63 = constableBloomFilter57.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass64 = constableBloomFilter57.getClass();
        boolean boolean65 = constableBloomFilter54.contains((java.lang.constant.Constable) wildcardClass64);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter68 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable69 = null;
        boolean boolean70 = constableBloomFilter68.contains(constable69);
        constableBloomFilter68.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean74 = constableBloomFilter68.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass75 = constableBloomFilter68.getClass();
        constableBloomFilter54.insert((java.lang.constant.Constable) wildcardClass75);
        boolean boolean78 = constableBloomFilter54.contains((java.lang.constant.Constable) 1L);
        java.lang.Class<?> wildcardClass79 = constableBloomFilter54.getClass();
        boolean boolean80 = constableBloomFilter14.contains((java.lang.constant.Constable) wildcardClass79);
        boolean boolean81 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass79);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter84 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) (short) 10);
        java.lang.Class<?> wildcardClass85 = constableBloomFilter84.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass85);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test1616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1616");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, (int) (byte) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean7 = constableBloomFilter5.contains((java.lang.constant.Constable) true);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter10 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter10.insert((java.lang.constant.Constable) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter15 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter18 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable19 = null;
        boolean boolean20 = constableBloomFilter18.contains(constable19);
        constableBloomFilter18.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean24 = constableBloomFilter18.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass25 = constableBloomFilter18.getClass();
        boolean boolean26 = constableBloomFilter15.contains((java.lang.constant.Constable) wildcardClass25);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter29 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable30 = null;
        boolean boolean31 = constableBloomFilter29.contains(constable30);
        constableBloomFilter29.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean35 = constableBloomFilter29.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass36 = constableBloomFilter29.getClass();
        constableBloomFilter15.insert((java.lang.constant.Constable) wildcardClass36);
        boolean boolean39 = constableBloomFilter15.contains((java.lang.constant.Constable) 1L);
        java.lang.Class<?> wildcardClass40 = constableBloomFilter15.getClass();
        constableBloomFilter10.insert((java.lang.constant.Constable) wildcardClass40);
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass40);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter45 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean47 = constableBloomFilter45.contains((java.lang.constant.Constable) true);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter50 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter53 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>(0, (int) ' ');
        java.lang.Class<?> wildcardClass54 = constableBloomFilterBloomFilter53.getClass();
        boolean boolean55 = constableBloomFilter50.contains((java.lang.constant.Constable) wildcardClass54);
        boolean boolean56 = constableBloomFilter45.contains((java.lang.constant.Constable) wildcardClass54);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter59 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter62 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable63 = null;
        boolean boolean64 = constableBloomFilter62.contains(constable63);
        constableBloomFilter62.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean68 = constableBloomFilter62.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass69 = constableBloomFilter62.getClass();
        boolean boolean70 = constableBloomFilter59.contains((java.lang.constant.Constable) wildcardClass69);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter73 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable74 = null;
        boolean boolean75 = constableBloomFilter73.contains(constable74);
        constableBloomFilter73.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean79 = constableBloomFilter73.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass80 = constableBloomFilter73.getClass();
        constableBloomFilter59.insert((java.lang.constant.Constable) wildcardClass80);
        boolean boolean83 = constableBloomFilter59.contains((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter86 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass87 = wildcardClassOfFieldBloomFilter86.getClass();
        constableBloomFilter59.insert((java.lang.constant.Constable) wildcardClass87);
        constableBloomFilter45.insert((java.lang.constant.Constable) wildcardClass87);
        java.lang.Class<?> wildcardClass90 = constableBloomFilter45.getClass();
        boolean boolean91 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass90);
        java.lang.Class<?> wildcardClass92 = constableBloomFilter5.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass92);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test1617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1617");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable6 = null;
        boolean boolean7 = constableBloomFilter5.contains(constable6);
        constableBloomFilter5.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean11 = constableBloomFilter5.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass12 = constableBloomFilter5.getClass();
        boolean boolean13 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass12);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable17 = null;
        boolean boolean18 = constableBloomFilter16.contains(constable17);
        constableBloomFilter16.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean22 = constableBloomFilter16.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass23 = constableBloomFilter16.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass23);
        boolean boolean26 = constableBloomFilter2.contains((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter29 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass30 = wildcardClassOfFieldBloomFilter29.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass30);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter34 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 100, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter37 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(1, (int) (short) 100);
        java.lang.Class<?> wildcardClass38 = constableBloomFilter37.getClass();
        constableBloomFilter34.insert((java.lang.constant.Constable) wildcardClass38);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test1618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1618");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(10, (int) (short) 10);
        java.lang.Class<?> wildcardClass3 = wildcardClassOfFieldBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test1619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1619");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) 'a', (int) 'a');
    }

    @Test
    public void test1620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1620");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter2.insert((java.lang.constant.Constable) 1.0f);
        boolean boolean8 = constableBloomFilter2.contains((java.lang.constant.Constable) (short) 100);
        boolean boolean10 = constableBloomFilter2.contains((java.lang.constant.Constable) 0L);
        boolean boolean12 = constableBloomFilter2.contains((java.lang.constant.Constable) (short) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter15 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable16 = null;
        boolean boolean17 = constableBloomFilter15.contains(constable16);
        constableBloomFilter15.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter22 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable23 = null;
        boolean boolean24 = constableBloomFilter22.contains(constable23);
        java.lang.Class<?> wildcardClass25 = constableBloomFilter22.getClass();
        constableBloomFilter15.insert((java.lang.constant.Constable) wildcardClass25);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter29 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable30 = null;
        boolean boolean31 = constableBloomFilter29.contains(constable30);
        constableBloomFilter29.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter36 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable37 = null;
        boolean boolean38 = constableBloomFilter36.contains(constable37);
        java.lang.Class<?> wildcardClass39 = constableBloomFilter36.getClass();
        constableBloomFilter29.insert((java.lang.constant.Constable) wildcardClass39);
        boolean boolean41 = constableBloomFilter15.contains((java.lang.constant.Constable) wildcardClass39);
        boolean boolean42 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass39);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter45 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable46 = null;
        boolean boolean47 = constableBloomFilter45.contains(constable46);
        java.lang.Class<?> wildcardClass48 = constableBloomFilter45.getClass();
        boolean boolean49 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass48);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter52 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 100, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter55 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(1, (int) (short) 100);
        java.lang.Class<?> wildcardClass56 = constableBloomFilter55.getClass();
        constableBloomFilter52.insert((java.lang.constant.Constable) wildcardClass56);
        java.lang.Class<?> wildcardClass58 = constableBloomFilter52.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass58);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test1621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1621");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, (int) (short) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter5.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter5.insert((java.lang.constant.Constable) ' ');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter12 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter12.insert((java.lang.constant.Constable) 0.0d);
        java.lang.Class<?> wildcardClass15 = constableBloomFilter12.getClass();
        boolean boolean16 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass15);
        java.lang.constant.Constable constable17 = null;
        boolean boolean18 = constableBloomFilter5.contains(constable17);
        java.lang.Class<?> wildcardClass19 = constableBloomFilter5.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass19);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter23 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 1, (int) (byte) 100);
        java.lang.Class<?> wildcardClass24 = constableBloomFilter23.getClass();
        boolean boolean25 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass24);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter28 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 100, 10);
        java.lang.Class<?> wildcardClass29 = constableBloomFilter28.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass29);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter33 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(0, (int) (short) 1);
        java.lang.Class<?> wildcardClass34 = wildcardClassOfFieldBloomFilter33.getClass();
        boolean boolean35 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass34);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter38 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter38.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter38.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter38.insert((java.lang.constant.Constable) (-1L));
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter47 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 100, 10);
        java.lang.constant.Constable constable48 = null;
        constableBloomFilter47.insert(constable48);
        java.lang.Class<?> wildcardClass50 = constableBloomFilter47.getClass();
        boolean boolean51 = constableBloomFilter38.contains((java.lang.constant.Constable) wildcardClass50);
        constableBloomFilter2.insert((java.lang.constant.Constable) boolean51);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
    }

    @Test
    public void test1622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1622");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.String> strBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.String>((int) ' ', (int) (byte) 0);
    }

    @Test
    public void test1623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1623");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter5.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter5.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter5.insert((java.lang.constant.Constable) (-1L));
        constableBloomFilter5.insert((java.lang.constant.Constable) 'a');
        constableBloomFilter5.insert((java.lang.constant.Constable) (-1.0f));
        java.lang.Class<?> wildcardClass16 = constableBloomFilter5.getClass();
        boolean boolean17 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass16);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter20 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter20.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean24 = constableBloomFilter20.contains((java.lang.constant.Constable) 100L);
        boolean boolean26 = constableBloomFilter20.contains((java.lang.constant.Constable) (byte) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter29 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter32 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable33 = null;
        boolean boolean34 = constableBloomFilter32.contains(constable33);
        constableBloomFilter32.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean38 = constableBloomFilter32.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass39 = constableBloomFilter32.getClass();
        boolean boolean40 = constableBloomFilter29.contains((java.lang.constant.Constable) wildcardClass39);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter43 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable44 = null;
        boolean boolean45 = constableBloomFilter43.contains(constable44);
        constableBloomFilter43.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean49 = constableBloomFilter43.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass50 = constableBloomFilter43.getClass();
        constableBloomFilter29.insert((java.lang.constant.Constable) wildcardClass50);
        boolean boolean52 = constableBloomFilter20.contains((java.lang.constant.Constable) wildcardClass50);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter55 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter55.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean59 = constableBloomFilter55.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter55.insert((java.lang.constant.Constable) (short) 0);
        boolean boolean63 = constableBloomFilter55.contains((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc> constantDescBloomFilter66 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc>((int) (byte) 100, 100);
        java.lang.Class<?> wildcardClass67 = constantDescBloomFilter66.getClass();
        constableBloomFilter55.insert((java.lang.constant.Constable) wildcardClass67);
        constableBloomFilter20.insert((java.lang.constant.Constable) wildcardClass67);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter72 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter72.insert((java.lang.constant.Constable) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter77 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) ' ', 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter80 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        java.lang.Class<?> wildcardClass81 = constableBloomFilter80.getClass();
        constableBloomFilter77.insert((java.lang.constant.Constable) wildcardClass81);
        boolean boolean83 = constableBloomFilter72.contains((java.lang.constant.Constable) wildcardClass81);
        java.lang.Class<?> wildcardClass84 = constableBloomFilter72.getClass();
        constableBloomFilter20.insert((java.lang.constant.Constable) wildcardClass84);
        boolean boolean86 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass84);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
    }

    @Test
    public void test1624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1624");
        // The following exception was thrown during execution in test generation
        try {
            com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc> constantDescBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc>((-1), 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1625");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(0, (int) '#');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable6 = null;
        boolean boolean7 = constableBloomFilter5.contains(constable6);
        constableBloomFilter5.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter12 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable13 = null;
        boolean boolean14 = constableBloomFilter12.contains(constable13);
        java.lang.Class<?> wildcardClass15 = constableBloomFilter12.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass15);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter19 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable20 = null;
        boolean boolean21 = constableBloomFilter19.contains(constable20);
        constableBloomFilter19.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter26 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable27 = null;
        boolean boolean28 = constableBloomFilter26.contains(constable27);
        java.lang.Class<?> wildcardClass29 = constableBloomFilter26.getClass();
        constableBloomFilter19.insert((java.lang.constant.Constable) wildcardClass29);
        boolean boolean31 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass29);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass29);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter35 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 10, (int) (short) 10);
        java.lang.Class<?> wildcardClass36 = constableBloomFilter35.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass36);
        java.lang.Class<?> wildcardClass38 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test1626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1626");
        // The following exception was thrown during execution in test generation
        try {
            com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.Type> typeBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.Type>((int) (short) -1, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1627");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable3 = null;
        boolean boolean4 = constableBloomFilter2.contains(constable3);
        boolean boolean6 = constableBloomFilter2.contains((java.lang.constant.Constable) (byte) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter9 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter9.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter14 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable15 = null;
        constableBloomFilter14.insert(constable15);
        java.lang.Class<?> wildcardClass17 = constableBloomFilter14.getClass();
        boolean boolean18 = constableBloomFilter9.contains((java.lang.constant.Constable) wildcardClass17);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter21 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean23 = constableBloomFilter21.contains((java.lang.constant.Constable) true);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter26 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter29 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>(0, (int) ' ');
        java.lang.Class<?> wildcardClass30 = constableBloomFilterBloomFilter29.getClass();
        boolean boolean31 = constableBloomFilter26.contains((java.lang.constant.Constable) wildcardClass30);
        boolean boolean32 = constableBloomFilter21.contains((java.lang.constant.Constable) wildcardClass30);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter35 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter35.insert((java.lang.constant.Constable) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter40 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter43 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable44 = null;
        boolean boolean45 = constableBloomFilter43.contains(constable44);
        constableBloomFilter43.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean49 = constableBloomFilter43.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass50 = constableBloomFilter43.getClass();
        boolean boolean51 = constableBloomFilter40.contains((java.lang.constant.Constable) wildcardClass50);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter54 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable55 = null;
        boolean boolean56 = constableBloomFilter54.contains(constable55);
        constableBloomFilter54.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean60 = constableBloomFilter54.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass61 = constableBloomFilter54.getClass();
        constableBloomFilter40.insert((java.lang.constant.Constable) wildcardClass61);
        boolean boolean64 = constableBloomFilter40.contains((java.lang.constant.Constable) 1L);
        java.lang.Class<?> wildcardClass65 = constableBloomFilter40.getClass();
        constableBloomFilter35.insert((java.lang.constant.Constable) wildcardClass65);
        boolean boolean67 = constableBloomFilter21.contains((java.lang.constant.Constable) wildcardClass65);
        constableBloomFilter9.insert((java.lang.constant.Constable) boolean67);
        java.lang.Class<?> wildcardClass69 = constableBloomFilter9.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass69);
        java.lang.constant.Constable constable71 = null;
        boolean boolean72 = constableBloomFilter2.contains(constable71);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter75 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter78 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter78.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter78.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter78.insert((java.lang.constant.Constable) (-1L));
        constableBloomFilter78.insert((java.lang.constant.Constable) 'a');
        constableBloomFilter78.insert((java.lang.constant.Constable) (-1.0f));
        java.lang.Class<?> wildcardClass89 = constableBloomFilter78.getClass();
        boolean boolean90 = constableBloomFilter75.contains((java.lang.constant.Constable) wildcardClass89);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass89);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
    }

    @Test
    public void test1628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1628");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter2.insert((java.lang.constant.Constable) 10);
        java.lang.Class<?> wildcardClass5 = constableBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test1629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1629");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass6 = wildcardClassOfFieldBloomFilter5.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass6);
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass9);
        boolean boolean12 = constableBloomFilter2.contains((java.lang.constant.Constable) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter15 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter15.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean19 = constableBloomFilter15.contains((java.lang.constant.Constable) 100L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter22 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter22.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter27 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter30 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass31 = wildcardClassOfFieldBloomFilter30.getClass();
        constableBloomFilter27.insert((java.lang.constant.Constable) wildcardClass31);
        constableBloomFilter22.insert((java.lang.constant.Constable) wildcardClass31);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter36 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', 0);
        java.lang.Class<?> wildcardClass37 = constableBloomFilter36.getClass();
        constableBloomFilter22.insert((java.lang.constant.Constable) wildcardClass37);
        constableBloomFilter15.insert((java.lang.constant.Constable) wildcardClass37);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter42 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable43 = null;
        boolean boolean44 = constableBloomFilter42.contains(constable43);
        constableBloomFilter42.insert((java.lang.constant.Constable) (byte) 0);
        java.lang.Class<?> wildcardClass47 = constableBloomFilter42.getClass();
        boolean boolean48 = constableBloomFilter15.contains((java.lang.constant.Constable) wildcardClass47);
        boolean boolean49 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass47);
        java.lang.constant.Constable constable50 = null;
        constableBloomFilter2.insert(constable50);
        java.lang.Class<?> wildcardClass52 = constableBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test1630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1630");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>((int) (short) 0, 0);
    }

    @Test
    public void test1631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1631");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', (int) (short) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) 'a', 0);
        java.lang.Class<?> wildcardClass6 = constableBloomFilter5.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass6);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter10 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) 'a');
        boolean boolean12 = constableBloomFilter10.contains((java.lang.constant.Constable) (byte) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter15 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable16 = null;
        boolean boolean17 = constableBloomFilter15.contains(constable16);
        java.lang.Class<?> wildcardClass18 = constableBloomFilter15.getClass();
        constableBloomFilter10.insert((java.lang.constant.Constable) wildcardClass18);
        java.lang.Class<?> wildcardClass20 = constableBloomFilter10.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass20);
        java.lang.constant.Constable constable22 = null;
        boolean boolean23 = constableBloomFilter2.contains(constable22);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test1632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1632");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, (int) '4');
    }

    @Test
    public void test1633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1633");
        // The following exception was thrown during execution in test generation
        try {
            com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>((int) (byte) -1, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1634");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(0, (int) '#');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter8 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable9 = null;
        boolean boolean10 = constableBloomFilter8.contains(constable9);
        constableBloomFilter8.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter15 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable16 = null;
        boolean boolean17 = constableBloomFilter15.contains(constable16);
        java.lang.Class<?> wildcardClass18 = constableBloomFilter15.getClass();
        constableBloomFilter8.insert((java.lang.constant.Constable) wildcardClass18);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter22 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable23 = null;
        boolean boolean24 = constableBloomFilter22.contains(constable23);
        constableBloomFilter22.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter29 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable30 = null;
        boolean boolean31 = constableBloomFilter29.contains(constable30);
        java.lang.Class<?> wildcardClass32 = constableBloomFilter29.getClass();
        constableBloomFilter22.insert((java.lang.constant.Constable) wildcardClass32);
        boolean boolean34 = constableBloomFilter8.contains((java.lang.constant.Constable) wildcardClass32);
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass32);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter38 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 10, (int) (short) 10);
        java.lang.Class<?> wildcardClass39 = constableBloomFilter38.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass39);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass39);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter44 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable45 = null;
        boolean boolean46 = constableBloomFilter44.contains(constable45);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter49 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable50 = null;
        boolean boolean51 = constableBloomFilter49.contains(constable50);
        boolean boolean53 = constableBloomFilter49.contains((java.lang.constant.Constable) 1L);
        java.lang.Class<?> wildcardClass54 = constableBloomFilter49.getClass();
        constableBloomFilter44.insert((java.lang.constant.Constable) wildcardClass54);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter58 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable59 = null;
        boolean boolean60 = constableBloomFilter58.contains(constable59);
        constableBloomFilter58.insert((java.lang.constant.Constable) 100.0f);
        boolean boolean64 = constableBloomFilter58.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass65 = constableBloomFilter58.getClass();
        constableBloomFilter44.insert((java.lang.constant.Constable) wildcardClass65);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.GenericDeclaration> genericDeclarationBloomFilter69 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.GenericDeclaration>(1, (int) 'a');
        java.lang.Class<?> wildcardClass70 = genericDeclarationBloomFilter69.getClass();
        constableBloomFilter44.insert((java.lang.constant.Constable) wildcardClass70);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass70);
        java.lang.Class<?> wildcardClass73 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test1635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1635");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) 'a', (int) (short) 0);
    }

    @Test
    public void test1636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1636");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter7 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter10 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass11 = wildcardClassOfFieldBloomFilter10.getClass();
        constableBloomFilter7.insert((java.lang.constant.Constable) wildcardClass11);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass11);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter16.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean20 = constableBloomFilter16.contains((java.lang.constant.Constable) 100L);
        boolean boolean22 = constableBloomFilter16.contains((java.lang.constant.Constable) (byte) 0);
        boolean boolean24 = constableBloomFilter16.contains((java.lang.constant.Constable) "");
        java.lang.Class<?> wildcardClass25 = constableBloomFilter16.getClass();
        boolean boolean26 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass25);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter29 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter32 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass33 = wildcardClassOfFieldBloomFilter32.getClass();
        constableBloomFilter29.insert((java.lang.constant.Constable) wildcardClass33);
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        constableBloomFilter29.insert((java.lang.constant.Constable) wildcardClass36);
        boolean boolean39 = constableBloomFilter29.contains((java.lang.constant.Constable) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter42 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable43 = null;
        boolean boolean44 = constableBloomFilter42.contains(constable43);
        constableBloomFilter42.insert((java.lang.constant.Constable) 100.0f);
        java.lang.Class<?> wildcardClass47 = constableBloomFilter42.getClass();
        boolean boolean48 = constableBloomFilter29.contains((java.lang.constant.Constable) wildcardClass47);
        constableBloomFilter2.insert((java.lang.constant.Constable) boolean48);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
    }

    @Test
    public void test1637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1637");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 100, 10);
        java.lang.constant.Constable constable3 = null;
        constableBloomFilter2.insert(constable3);
        constableBloomFilter2.insert((java.lang.constant.Constable) 1.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter9 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter9.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter9.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter9.insert((java.lang.constant.Constable) (-1L));
        constableBloomFilter9.insert((java.lang.constant.Constable) 'a');
        constableBloomFilter9.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter22 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter25 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '#', (int) (short) 100);
        java.lang.Class<?> wildcardClass26 = constableBloomFilter25.getClass();
        boolean boolean27 = constableBloomFilter22.contains((java.lang.constant.Constable) wildcardClass26);
        java.lang.Class<?> wildcardClass28 = constableBloomFilter22.getClass();
        constableBloomFilter9.insert((java.lang.constant.Constable) wildcardClass28);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test1638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1638");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable3 = null;
        boolean boolean4 = constableBloomFilter2.contains(constable3);
        constableBloomFilter2.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean8 = constableBloomFilter2.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter11 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter14 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass15 = wildcardClassOfFieldBloomFilter14.getClass();
        constableBloomFilter11.insert((java.lang.constant.Constable) wildcardClass15);
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        constableBloomFilter11.insert((java.lang.constant.Constable) wildcardClass18);
        boolean boolean21 = constableBloomFilter11.contains((java.lang.constant.Constable) '#');
        constableBloomFilter11.insert((java.lang.constant.Constable) '#');
        java.lang.Class<?> wildcardClass24 = constableBloomFilter11.getClass();
        boolean boolean25 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass24);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter28 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter31 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable32 = null;
        boolean boolean33 = constableBloomFilter31.contains(constable32);
        constableBloomFilter31.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean37 = constableBloomFilter31.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass38 = constableBloomFilter31.getClass();
        boolean boolean39 = constableBloomFilter28.contains((java.lang.constant.Constable) wildcardClass38);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter42 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable43 = null;
        boolean boolean44 = constableBloomFilter42.contains(constable43);
        constableBloomFilter42.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean48 = constableBloomFilter42.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass49 = constableBloomFilter42.getClass();
        constableBloomFilter28.insert((java.lang.constant.Constable) wildcardClass49);
        boolean boolean52 = constableBloomFilter28.contains((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter55 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass56 = wildcardClassOfFieldBloomFilter55.getClass();
        constableBloomFilter28.insert((java.lang.constant.Constable) wildcardClass56);
        boolean boolean58 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass56);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter61 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter64 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass65 = wildcardClassOfFieldBloomFilter64.getClass();
        constableBloomFilter61.insert((java.lang.constant.Constable) wildcardClass65);
        java.lang.Object obj67 = new java.lang.Object();
        java.lang.Class<?> wildcardClass68 = obj67.getClass();
        constableBloomFilter61.insert((java.lang.constant.Constable) wildcardClass68);
        boolean boolean71 = constableBloomFilter61.contains((java.lang.constant.Constable) '#');
        constableBloomFilter61.insert((java.lang.constant.Constable) '#');
        java.lang.Class<?> wildcardClass74 = constableBloomFilter61.getClass();
        boolean boolean75 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass74);
        java.lang.Class<?> wildcardClass76 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test1639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1639");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 100, (int) (byte) 100);
        boolean boolean4 = constableBloomFilter2.contains((java.lang.constant.Constable) 100L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor> typeDescriptorBloomFilter7 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor>(0, (int) 'a');
        java.lang.Class<?> wildcardClass8 = typeDescriptorBloomFilter7.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass8);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter12 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(0, (int) (short) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter15 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) 'a');
        boolean boolean17 = constableBloomFilter15.contains((java.lang.constant.Constable) (byte) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter20 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable21 = null;
        boolean boolean22 = constableBloomFilter20.contains(constable21);
        java.lang.Class<?> wildcardClass23 = constableBloomFilter20.getClass();
        constableBloomFilter15.insert((java.lang.constant.Constable) wildcardClass23);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter27 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter30 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass31 = wildcardClassOfFieldBloomFilter30.getClass();
        constableBloomFilter27.insert((java.lang.constant.Constable) wildcardClass31);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter35 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) 'a');
        boolean boolean37 = constableBloomFilter35.contains((java.lang.constant.Constable) ' ');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter40 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter43 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable44 = null;
        boolean boolean45 = constableBloomFilter43.contains(constable44);
        constableBloomFilter43.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean49 = constableBloomFilter43.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass50 = constableBloomFilter43.getClass();
        boolean boolean51 = constableBloomFilter40.contains((java.lang.constant.Constable) wildcardClass50);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter54 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable55 = null;
        boolean boolean56 = constableBloomFilter54.contains(constable55);
        constableBloomFilter54.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean60 = constableBloomFilter54.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass61 = constableBloomFilter54.getClass();
        constableBloomFilter40.insert((java.lang.constant.Constable) wildcardClass61);
        boolean boolean63 = constableBloomFilter35.contains((java.lang.constant.Constable) wildcardClass61);
        constableBloomFilter27.insert((java.lang.constant.Constable) boolean63);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter67 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter70 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable71 = null;
        boolean boolean72 = constableBloomFilter70.contains(constable71);
        constableBloomFilter70.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean76 = constableBloomFilter70.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass77 = constableBloomFilter70.getClass();
        boolean boolean78 = constableBloomFilter67.contains((java.lang.constant.Constable) wildcardClass77);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter81 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable82 = null;
        boolean boolean83 = constableBloomFilter81.contains(constable82);
        constableBloomFilter81.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean87 = constableBloomFilter81.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass88 = constableBloomFilter81.getClass();
        constableBloomFilter67.insert((java.lang.constant.Constable) wildcardClass88);
        boolean boolean91 = constableBloomFilter67.contains((java.lang.constant.Constable) 1L);
        java.lang.Class<?> wildcardClass92 = constableBloomFilter67.getClass();
        boolean boolean93 = constableBloomFilter27.contains((java.lang.constant.Constable) wildcardClass92);
        boolean boolean94 = constableBloomFilter15.contains((java.lang.constant.Constable) wildcardClass92);
        boolean boolean95 = constableBloomFilter12.contains((java.lang.constant.Constable) wildcardClass92);
        java.lang.Class<?> wildcardClass96 = constableBloomFilter12.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass96);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertNotNull(wildcardClass92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1640");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) '#');
        constableBloomFilter2.insert((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.GenericDeclaration> genericDeclarationBloomFilter7 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.GenericDeclaration>(1, (int) 'a');
        java.lang.Class<?> wildcardClass8 = genericDeclarationBloomFilter7.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass8);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter12 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter12.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean16 = constableBloomFilter12.contains((java.lang.constant.Constable) 100L);
        boolean boolean18 = constableBloomFilter12.contains((java.lang.constant.Constable) (byte) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter21 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter24 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable25 = null;
        boolean boolean26 = constableBloomFilter24.contains(constable25);
        constableBloomFilter24.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean30 = constableBloomFilter24.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass31 = constableBloomFilter24.getClass();
        boolean boolean32 = constableBloomFilter21.contains((java.lang.constant.Constable) wildcardClass31);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter35 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable36 = null;
        boolean boolean37 = constableBloomFilter35.contains(constable36);
        constableBloomFilter35.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean41 = constableBloomFilter35.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass42 = constableBloomFilter35.getClass();
        constableBloomFilter21.insert((java.lang.constant.Constable) wildcardClass42);
        boolean boolean44 = constableBloomFilter12.contains((java.lang.constant.Constable) wildcardClass42);
        boolean boolean45 = constableBloomFilter2.contains((java.lang.constant.Constable) boolean44);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter48 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', 0);
        java.lang.Class<?> wildcardClass49 = constableBloomFilter48.getClass();
        boolean boolean50 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass49);
        java.lang.Class<?> wildcardClass51 = constableBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test1641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1641");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor> typeDescriptorBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor>((int) '#', (int) (byte) 1);
    }

    @Test
    public void test1642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1642");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) 'a');
        boolean boolean4 = constableBloomFilter2.contains((java.lang.constant.Constable) (byte) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter7 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable8 = null;
        boolean boolean9 = constableBloomFilter7.contains(constable8);
        java.lang.Class<?> wildcardClass10 = constableBloomFilter7.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter14 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter14.insert((java.lang.constant.Constable) 10);
        boolean boolean18 = constableBloomFilter14.contains((java.lang.constant.Constable) true);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter21 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(100, (int) (short) 0);
        java.lang.Class<?> wildcardClass22 = wildcardClassOfFieldBloomFilter21.getClass();
        boolean boolean23 = constableBloomFilter14.contains((java.lang.constant.Constable) wildcardClass22);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter26 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter26.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter26.insert((java.lang.constant.Constable) 1.0f);
        constableBloomFilter26.insert((java.lang.constant.Constable) (-1L));
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter35 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter35.insert((java.lang.constant.Constable) 10);
        boolean boolean39 = constableBloomFilter35.contains((java.lang.constant.Constable) true);
        java.lang.constant.Constable constable40 = null;
        boolean boolean41 = constableBloomFilter35.contains(constable40);
        java.lang.Class<?> wildcardClass42 = constableBloomFilter35.getClass();
        boolean boolean43 = constableBloomFilter26.contains((java.lang.constant.Constable) wildcardClass42);
        constableBloomFilter14.insert((java.lang.constant.Constable) boolean43);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter47 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable48 = null;
        boolean boolean49 = constableBloomFilter47.contains(constable48);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter52 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter55 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable56 = null;
        boolean boolean57 = constableBloomFilter55.contains(constable56);
        constableBloomFilter55.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean61 = constableBloomFilter55.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass62 = constableBloomFilter55.getClass();
        boolean boolean63 = constableBloomFilter52.contains((java.lang.constant.Constable) wildcardClass62);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter66 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable67 = null;
        boolean boolean68 = constableBloomFilter66.contains(constable67);
        constableBloomFilter66.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean72 = constableBloomFilter66.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass73 = constableBloomFilter66.getClass();
        constableBloomFilter52.insert((java.lang.constant.Constable) wildcardClass73);
        boolean boolean76 = constableBloomFilter52.contains((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter79 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass80 = wildcardClassOfFieldBloomFilter79.getClass();
        constableBloomFilter52.insert((java.lang.constant.Constable) wildcardClass80);
        constableBloomFilter47.insert((java.lang.constant.Constable) wildcardClass80);
        constableBloomFilter14.insert((java.lang.constant.Constable) wildcardClass80);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass80);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter87 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, 10);
        java.lang.Class<?> wildcardClass88 = constableBloomFilter87.getClass();
        boolean boolean89 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass88);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter92 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor> typeDescriptorBloomFilter95 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor>((int) (byte) 1, 100);
        java.lang.Class<?> wildcardClass96 = typeDescriptorBloomFilter95.getClass();
        boolean boolean97 = constableBloomFilter92.contains((java.lang.constant.Constable) wildcardClass96);
        constableBloomFilter2.insert((java.lang.constant.Constable) boolean97);
        java.lang.Class<?> wildcardClass99 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1643");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(1, (int) (short) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean7 = constableBloomFilter5.contains((java.lang.constant.Constable) true);
        java.lang.Class<?> wildcardClass8 = constableBloomFilter5.getClass();
        // The following exception was thrown during execution in test generation
        try {
            constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass8);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: null");
        } catch (java.lang.ArithmeticException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test1644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1644");
        // The following exception was thrown during execution in test generation
        try {
            com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.GenericDeclaration> genericDeclarationBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.GenericDeclaration>((-1), 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1645");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean6 = constableBloomFilter2.contains((java.lang.constant.Constable) 100L);
        boolean boolean8 = constableBloomFilter2.contains((java.lang.constant.Constable) (byte) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter11 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter14 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable15 = null;
        boolean boolean16 = constableBloomFilter14.contains(constable15);
        constableBloomFilter14.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean20 = constableBloomFilter14.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass21 = constableBloomFilter14.getClass();
        boolean boolean22 = constableBloomFilter11.contains((java.lang.constant.Constable) wildcardClass21);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter25 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable26 = null;
        boolean boolean27 = constableBloomFilter25.contains(constable26);
        constableBloomFilter25.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean31 = constableBloomFilter25.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass32 = constableBloomFilter25.getClass();
        constableBloomFilter11.insert((java.lang.constant.Constable) wildcardClass32);
        boolean boolean35 = constableBloomFilter11.contains((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter38 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass39 = wildcardClassOfFieldBloomFilter38.getClass();
        constableBloomFilter11.insert((java.lang.constant.Constable) wildcardClass39);
        boolean boolean41 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass39);
        constableBloomFilter2.insert((java.lang.constant.Constable) 1.0d);
        java.lang.constant.Constable constable44 = null;
        constableBloomFilter2.insert(constable44);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter48 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter51 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable52 = null;
        boolean boolean53 = constableBloomFilter51.contains(constable52);
        constableBloomFilter51.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean57 = constableBloomFilter51.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass58 = constableBloomFilter51.getClass();
        boolean boolean59 = constableBloomFilter48.contains((java.lang.constant.Constable) wildcardClass58);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter62 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable63 = null;
        boolean boolean64 = constableBloomFilter62.contains(constable63);
        constableBloomFilter62.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean68 = constableBloomFilter62.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass69 = constableBloomFilter62.getClass();
        constableBloomFilter48.insert((java.lang.constant.Constable) wildcardClass69);
        boolean boolean72 = constableBloomFilter48.contains((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter75 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable76 = null;
        boolean boolean77 = constableBloomFilter75.contains(constable76);
        constableBloomFilter75.insert((java.lang.constant.Constable) 100.0f);
        java.lang.Class<?> wildcardClass80 = constableBloomFilter75.getClass();
        constableBloomFilter48.insert((java.lang.constant.Constable) wildcardClass80);
        java.lang.Class<?> wildcardClass82 = constableBloomFilter48.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass82);
        java.lang.Class<?> wildcardClass84 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test1646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1646");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter2.insert((java.lang.constant.Constable) 10);
        boolean boolean6 = constableBloomFilter2.contains((java.lang.constant.Constable) true);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter9 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter9.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter14 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter17 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass18 = wildcardClassOfFieldBloomFilter17.getClass();
        constableBloomFilter14.insert((java.lang.constant.Constable) wildcardClass18);
        constableBloomFilter9.insert((java.lang.constant.Constable) wildcardClass18);
        boolean boolean21 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass18);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter24 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter24.insert((java.lang.constant.Constable) 10);
        constableBloomFilter24.insert((java.lang.constant.Constable) true);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter31 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable32 = null;
        boolean boolean33 = constableBloomFilter31.contains(constable32);
        constableBloomFilter31.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean37 = constableBloomFilter31.contains((java.lang.constant.Constable) 'a');
        boolean boolean39 = constableBloomFilter31.contains((java.lang.constant.Constable) 100.0f);
        java.lang.Class<?> wildcardClass40 = constableBloomFilter31.getClass();
        boolean boolean41 = constableBloomFilter24.contains((java.lang.constant.Constable) wildcardClass40);
        java.lang.Class<?> wildcardClass42 = constableBloomFilter24.getClass();
        boolean boolean43 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass42);
        java.lang.Class<?> wildcardClass44 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test1647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1647");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.Type> typeBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.Type>(10, (int) (short) 10);
    }

    @Test
    public void test1648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1648");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter7 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter10 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass11 = wildcardClassOfFieldBloomFilter10.getClass();
        constableBloomFilter7.insert((java.lang.constant.Constable) wildcardClass11);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass11);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter16.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean20 = constableBloomFilter16.contains((java.lang.constant.Constable) 100L);
        boolean boolean22 = constableBloomFilter16.contains((java.lang.constant.Constable) (byte) 0);
        boolean boolean24 = constableBloomFilter16.contains((java.lang.constant.Constable) "");
        java.lang.Class<?> wildcardClass25 = constableBloomFilter16.getClass();
        boolean boolean26 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass25);
        java.lang.Class<?> wildcardClass27 = constableBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test1649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1649");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable6 = null;
        boolean boolean7 = constableBloomFilter5.contains(constable6);
        constableBloomFilter5.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean11 = constableBloomFilter5.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass12 = constableBloomFilter5.getClass();
        boolean boolean13 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass12);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable17 = null;
        boolean boolean18 = constableBloomFilter16.contains(constable17);
        constableBloomFilter16.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean22 = constableBloomFilter16.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass23 = constableBloomFilter16.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass23);
        boolean boolean26 = constableBloomFilter2.contains((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter29 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass30 = wildcardClassOfFieldBloomFilter29.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass30);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter34 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.Class<?> wildcardClass35 = constableBloomFilter34.getClass();
        boolean boolean36 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass35);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter39 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter39.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter39.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter39.insert((java.lang.constant.Constable) (short) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter48 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter51 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable52 = null;
        boolean boolean53 = constableBloomFilter51.contains(constable52);
        constableBloomFilter51.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean57 = constableBloomFilter51.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass58 = constableBloomFilter51.getClass();
        boolean boolean59 = constableBloomFilter48.contains((java.lang.constant.Constable) wildcardClass58);
        boolean boolean60 = constableBloomFilter39.contains((java.lang.constant.Constable) wildcardClass58);
        constableBloomFilter2.insert((java.lang.constant.Constable) boolean60);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
    }

    @Test
    public void test1650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1650");
        // The following exception was thrown during execution in test generation
        try {
            com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc> constantDescBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc>((int) (short) -1, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1651");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable6 = null;
        boolean boolean7 = constableBloomFilter5.contains(constable6);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter10 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable11 = null;
        boolean boolean12 = constableBloomFilter10.contains(constable11);
        boolean boolean14 = constableBloomFilter10.contains((java.lang.constant.Constable) 1L);
        java.lang.Class<?> wildcardClass15 = constableBloomFilter10.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass15);
        java.lang.Class<?> wildcardClass17 = constableBloomFilter5.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass17);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter21 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 10, 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter24 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        java.lang.Class<?> wildcardClass25 = constableBloomFilter24.getClass();
        boolean boolean26 = constableBloomFilter21.contains((java.lang.constant.Constable) wildcardClass25);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass25);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter30 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean32 = constableBloomFilter30.contains((java.lang.constant.Constable) 0L);
        boolean boolean34 = constableBloomFilter30.contains((java.lang.constant.Constable) 0L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter37 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter37.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean41 = constableBloomFilter37.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter37.insert((java.lang.constant.Constable) (short) 0);
        boolean boolean45 = constableBloomFilter37.contains((java.lang.constant.Constable) 0);
        java.lang.Class<?> wildcardClass46 = constableBloomFilter37.getClass();
        constableBloomFilter30.insert((java.lang.constant.Constable) wildcardClass46);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter50 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', (int) (short) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter53 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) 'a', 0);
        java.lang.Class<?> wildcardClass54 = constableBloomFilter53.getClass();
        constableBloomFilter50.insert((java.lang.constant.Constable) wildcardClass54);
        boolean boolean56 = constableBloomFilter30.contains((java.lang.constant.Constable) wildcardClass54);
        boolean boolean57 = constableBloomFilter2.contains((java.lang.constant.Constable) boolean56);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
    }

    @Test
    public void test1652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1652");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>((int) (short) 100, (int) '4');
    }

    @Test
    public void test1653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1653");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass6 = wildcardClassOfFieldBloomFilter5.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass6);
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass9);
        boolean boolean12 = constableBloomFilter2.contains((java.lang.constant.Constable) '#');
        constableBloomFilter2.insert((java.lang.constant.Constable) (-1L));
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter17 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter17.insert((java.lang.constant.Constable) 10);
        boolean boolean21 = constableBloomFilter17.contains((java.lang.constant.Constable) true);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter24 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter24.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter29 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter32 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass33 = wildcardClassOfFieldBloomFilter32.getClass();
        constableBloomFilter29.insert((java.lang.constant.Constable) wildcardClass33);
        constableBloomFilter24.insert((java.lang.constant.Constable) wildcardClass33);
        boolean boolean36 = constableBloomFilter17.contains((java.lang.constant.Constable) wildcardClass33);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass33);
        boolean boolean39 = constableBloomFilter2.contains((java.lang.constant.Constable) (byte) 10);
        java.lang.constant.Constable constable40 = null;
        boolean boolean41 = constableBloomFilter2.contains(constable40);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter44 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', (int) (short) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter47 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) 'a', 0);
        java.lang.Class<?> wildcardClass48 = constableBloomFilter47.getClass();
        constableBloomFilter44.insert((java.lang.constant.Constable) wildcardClass48);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter52 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) 'a');
        boolean boolean54 = constableBloomFilter52.contains((java.lang.constant.Constable) (byte) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter57 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable58 = null;
        boolean boolean59 = constableBloomFilter57.contains(constable58);
        java.lang.Class<?> wildcardClass60 = constableBloomFilter57.getClass();
        constableBloomFilter52.insert((java.lang.constant.Constable) wildcardClass60);
        java.lang.Class<?> wildcardClass62 = constableBloomFilter52.getClass();
        constableBloomFilter44.insert((java.lang.constant.Constable) wildcardClass62);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass62);
        java.lang.constant.Constable constable65 = null;
        boolean boolean66 = constableBloomFilter2.contains(constable65);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter69 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter72 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '#', (int) (short) 100);
        java.lang.Class<?> wildcardClass73 = constableBloomFilter72.getClass();
        boolean boolean74 = constableBloomFilter69.contains((java.lang.constant.Constable) wildcardClass73);
        java.lang.Class<?> wildcardClass75 = constableBloomFilter69.getClass();
        boolean boolean76 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
    }

    @Test
    public void test1654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1654");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable3 = null;
        constableBloomFilter2.insert(constable3);
        constableBloomFilter2.insert((java.lang.constant.Constable) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter9 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        boolean boolean11 = constableBloomFilter9.contains((java.lang.constant.Constable) ' ');
        java.lang.Class<?> wildcardClass12 = constableBloomFilter9.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass12);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter16.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean20 = constableBloomFilter16.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter16.insert((java.lang.constant.Constable) (short) 0);
        boolean boolean24 = constableBloomFilter16.contains((java.lang.constant.Constable) 0);
        java.lang.Class<?> wildcardClass25 = constableBloomFilter16.getClass();
        boolean boolean26 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass25);
        java.lang.constant.Constable constable27 = null;
        constableBloomFilter2.insert(constable27);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.CharSequence> charSequenceBloomFilter31 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.CharSequence>((int) (byte) 0, (int) ' ');
        java.lang.Class<?> wildcardClass32 = charSequenceBloomFilter31.getClass();
        boolean boolean33 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
    }

    @Test
    public void test1655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1655");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Object> objBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Object>(10, (int) '4');
    }

    @Test
    public void test1656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1656");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable6 = null;
        constableBloomFilter5.insert(constable6);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter10 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable11 = null;
        boolean boolean12 = constableBloomFilter10.contains(constable11);
        constableBloomFilter10.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean16 = constableBloomFilter10.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter19 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter22 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass23 = wildcardClassOfFieldBloomFilter22.getClass();
        constableBloomFilter19.insert((java.lang.constant.Constable) wildcardClass23);
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        constableBloomFilter19.insert((java.lang.constant.Constable) wildcardClass26);
        boolean boolean29 = constableBloomFilter19.contains((java.lang.constant.Constable) '#');
        constableBloomFilter19.insert((java.lang.constant.Constable) '#');
        java.lang.Class<?> wildcardClass32 = constableBloomFilter19.getClass();
        boolean boolean33 = constableBloomFilter10.contains((java.lang.constant.Constable) wildcardClass32);
        boolean boolean34 = constableBloomFilter5.contains((java.lang.constant.Constable) boolean33);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter37 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass38 = wildcardClassOfFieldBloomFilter37.getClass();
        boolean boolean39 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass38);
        boolean boolean40 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass38);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor> typeDescriptorBloomFilter43 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor>(1, (int) (short) 10);
        java.lang.Class<?> wildcardClass44 = typeDescriptorBloomFilter43.getClass();
        boolean boolean45 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
    }

    @Test
    public void test1657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1657");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter2.insert((java.lang.constant.Constable) 1.0f);
        constableBloomFilter2.insert((java.lang.constant.Constable) (-1L));
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter11 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean13 = constableBloomFilter11.contains((java.lang.constant.Constable) true);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter19 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>(0, (int) ' ');
        java.lang.Class<?> wildcardClass20 = constableBloomFilterBloomFilter19.getClass();
        boolean boolean21 = constableBloomFilter16.contains((java.lang.constant.Constable) wildcardClass20);
        boolean boolean22 = constableBloomFilter11.contains((java.lang.constant.Constable) wildcardClass20);
        boolean boolean23 = constableBloomFilter2.contains((java.lang.constant.Constable) boolean22);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter26 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 10, 100);
        java.lang.Class<?> wildcardClass27 = constableBloomFilter26.getClass();
        boolean boolean28 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass27);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter31 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable32 = null;
        boolean boolean33 = constableBloomFilter31.contains(constable32);
        boolean boolean35 = constableBloomFilter31.contains((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter38 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter38.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter38.insert((java.lang.constant.Constable) 1.0f);
        boolean boolean44 = constableBloomFilter38.contains((java.lang.constant.Constable) (short) 100);
        constableBloomFilter38.insert((java.lang.constant.Constable) '#');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter49 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter49.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean53 = constableBloomFilter49.contains((java.lang.constant.Constable) 100L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter56 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter56.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter61 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter64 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass65 = wildcardClassOfFieldBloomFilter64.getClass();
        constableBloomFilter61.insert((java.lang.constant.Constable) wildcardClass65);
        constableBloomFilter56.insert((java.lang.constant.Constable) wildcardClass65);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter70 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', 0);
        java.lang.Class<?> wildcardClass71 = constableBloomFilter70.getClass();
        constableBloomFilter56.insert((java.lang.constant.Constable) wildcardClass71);
        constableBloomFilter49.insert((java.lang.constant.Constable) wildcardClass71);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter76 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter76.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter76.insert((java.lang.constant.Constable) ' ');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter83 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter83.insert((java.lang.constant.Constable) 0.0d);
        java.lang.Class<?> wildcardClass86 = constableBloomFilter83.getClass();
        boolean boolean87 = constableBloomFilter76.contains((java.lang.constant.Constable) wildcardClass86);
        java.lang.constant.Constable constable88 = null;
        boolean boolean89 = constableBloomFilter76.contains(constable88);
        java.lang.Class<?> wildcardClass90 = constableBloomFilter76.getClass();
        constableBloomFilter49.insert((java.lang.constant.Constable) wildcardClass90);
        constableBloomFilter38.insert((java.lang.constant.Constable) wildcardClass90);
        constableBloomFilter31.insert((java.lang.constant.Constable) wildcardClass90);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass90);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test1658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1658");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, (int) (short) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter5.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter5.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter5.insert((java.lang.constant.Constable) (-1L));
        boolean boolean13 = constableBloomFilter5.contains((java.lang.constant.Constable) 0L);
        java.lang.Class<?> wildcardClass14 = constableBloomFilter5.getClass();
        boolean boolean15 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass14);
        boolean boolean17 = constableBloomFilter2.contains((java.lang.constant.Constable) 1.0f);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    }

    @Test
    public void test1659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1659");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, 1);
    }

    @Test
    public void test1660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1660");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable3 = null;
        constableBloomFilter2.insert(constable3);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter7 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable8 = null;
        boolean boolean9 = constableBloomFilter7.contains(constable8);
        constableBloomFilter7.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean13 = constableBloomFilter7.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter19 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass20 = wildcardClassOfFieldBloomFilter19.getClass();
        constableBloomFilter16.insert((java.lang.constant.Constable) wildcardClass20);
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        constableBloomFilter16.insert((java.lang.constant.Constable) wildcardClass23);
        boolean boolean26 = constableBloomFilter16.contains((java.lang.constant.Constable) '#');
        constableBloomFilter16.insert((java.lang.constant.Constable) '#');
        java.lang.Class<?> wildcardClass29 = constableBloomFilter16.getClass();
        boolean boolean30 = constableBloomFilter7.contains((java.lang.constant.Constable) wildcardClass29);
        boolean boolean31 = constableBloomFilter2.contains((java.lang.constant.Constable) boolean30);
        constableBloomFilter2.insert((java.lang.constant.Constable) (-1));
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.io.Serializable> serializableBloomFilter36 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.io.Serializable>((int) (short) 0, (int) (byte) 1);
        java.lang.Class<?> wildcardClass37 = serializableBloomFilter36.getClass();
        boolean boolean38 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
    }

    @Test
    public void test1661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1661");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable3 = null;
        constableBloomFilter2.insert(constable3);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter7 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable8 = null;
        boolean boolean9 = constableBloomFilter7.contains(constable8);
        constableBloomFilter7.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean13 = constableBloomFilter7.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter19 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass20 = wildcardClassOfFieldBloomFilter19.getClass();
        constableBloomFilter16.insert((java.lang.constant.Constable) wildcardClass20);
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        constableBloomFilter16.insert((java.lang.constant.Constable) wildcardClass23);
        boolean boolean26 = constableBloomFilter16.contains((java.lang.constant.Constable) '#');
        constableBloomFilter16.insert((java.lang.constant.Constable) '#');
        java.lang.Class<?> wildcardClass29 = constableBloomFilter16.getClass();
        boolean boolean30 = constableBloomFilter7.contains((java.lang.constant.Constable) wildcardClass29);
        boolean boolean31 = constableBloomFilter2.contains((java.lang.constant.Constable) boolean30);
        constableBloomFilter2.insert((java.lang.constant.Constable) (-1));
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc> constantDescBloomFilter36 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc>((int) (byte) 1, (int) (byte) 100);
        java.lang.Class<?> wildcardClass37 = constantDescBloomFilter36.getClass();
        boolean boolean38 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass37);
        java.lang.constant.Constable constable39 = null;
        constableBloomFilter2.insert(constable39);
        java.lang.Class<?> wildcardClass41 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test1662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1662");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter2.insert((java.lang.constant.Constable) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter7 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter7.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean11 = constableBloomFilter7.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter7.insert((java.lang.constant.Constable) (short) 0);
        boolean boolean15 = constableBloomFilter7.contains((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter18 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter21 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable22 = null;
        boolean boolean23 = constableBloomFilter21.contains(constable22);
        constableBloomFilter21.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean27 = constableBloomFilter21.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass28 = constableBloomFilter21.getClass();
        boolean boolean29 = constableBloomFilter18.contains((java.lang.constant.Constable) wildcardClass28);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter32 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable33 = null;
        boolean boolean34 = constableBloomFilter32.contains(constable33);
        constableBloomFilter32.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean38 = constableBloomFilter32.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass39 = constableBloomFilter32.getClass();
        constableBloomFilter18.insert((java.lang.constant.Constable) wildcardClass39);
        boolean boolean41 = constableBloomFilter7.contains((java.lang.constant.Constable) wildcardClass39);
        boolean boolean42 = constableBloomFilter2.contains((java.lang.constant.Constable) boolean41);
        java.lang.constant.Constable constable43 = null;
        constableBloomFilter2.insert(constable43);
        java.lang.constant.Constable constable45 = null;
        boolean boolean46 = constableBloomFilter2.contains(constable45);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter49 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 100, (int) (short) 1);
        java.lang.Class<?> wildcardClass50 = constableBloomFilter49.getClass();
        boolean boolean51 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass50);
        java.lang.Class<?> wildcardClass52 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test1663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1663");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable3 = null;
        boolean boolean4 = constableBloomFilter2.contains(constable3);
        boolean boolean6 = constableBloomFilter2.contains((java.lang.constant.Constable) 1L);
        boolean boolean8 = constableBloomFilter2.contains((java.lang.constant.Constable) 100.0d);
        constableBloomFilter2.insert((java.lang.constant.Constable) (short) -1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter13 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass14 = wildcardClassOfFieldBloomFilter13.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass14);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter18 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter18.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter18.insert((java.lang.constant.Constable) 1.0f);
        constableBloomFilter18.insert((java.lang.constant.Constable) (short) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter27 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter30 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable31 = null;
        boolean boolean32 = constableBloomFilter30.contains(constable31);
        constableBloomFilter30.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean36 = constableBloomFilter30.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass37 = constableBloomFilter30.getClass();
        boolean boolean38 = constableBloomFilter27.contains((java.lang.constant.Constable) wildcardClass37);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter41 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable42 = null;
        boolean boolean43 = constableBloomFilter41.contains(constable42);
        constableBloomFilter41.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean47 = constableBloomFilter41.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass48 = constableBloomFilter41.getClass();
        constableBloomFilter27.insert((java.lang.constant.Constable) wildcardClass48);
        constableBloomFilter27.insert((java.lang.constant.Constable) (short) -1);
        java.lang.Class<?> wildcardClass52 = constableBloomFilter27.getClass();
        constableBloomFilter18.insert((java.lang.constant.Constable) wildcardClass52);
        java.lang.Class<?> wildcardClass54 = constableBloomFilter18.getClass();
        boolean boolean55 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass54);
        java.lang.Class<?> wildcardClass56 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test1664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1664");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Comparable<java.lang.String>> strComparableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Comparable<java.lang.String>>((int) '4', 1);
        java.lang.Class<?> wildcardClass3 = strComparableBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test1665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1665");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable3 = null;
        boolean boolean4 = constableBloomFilter2.contains(constable3);
        constableBloomFilter2.insert((java.lang.constant.Constable) 100.0f);
        boolean boolean8 = constableBloomFilter2.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter11 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter14 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable15 = null;
        boolean boolean16 = constableBloomFilter14.contains(constable15);
        constableBloomFilter14.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean20 = constableBloomFilter14.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass21 = constableBloomFilter14.getClass();
        boolean boolean22 = constableBloomFilter11.contains((java.lang.constant.Constable) wildcardClass21);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter25 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable26 = null;
        boolean boolean27 = constableBloomFilter25.contains(constable26);
        constableBloomFilter25.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean31 = constableBloomFilter25.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass32 = constableBloomFilter25.getClass();
        constableBloomFilter11.insert((java.lang.constant.Constable) wildcardClass32);
        boolean boolean34 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass32);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter37 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter40 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable41 = null;
        boolean boolean42 = constableBloomFilter40.contains(constable41);
        constableBloomFilter40.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean46 = constableBloomFilter40.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass47 = constableBloomFilter40.getClass();
        boolean boolean48 = constableBloomFilter37.contains((java.lang.constant.Constable) wildcardClass47);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter51 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable52 = null;
        boolean boolean53 = constableBloomFilter51.contains(constable52);
        constableBloomFilter51.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean57 = constableBloomFilter51.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass58 = constableBloomFilter51.getClass();
        constableBloomFilter37.insert((java.lang.constant.Constable) wildcardClass58);
        boolean boolean61 = constableBloomFilter37.contains((java.lang.constant.Constable) 1L);
        boolean boolean63 = constableBloomFilter37.contains((java.lang.constant.Constable) (short) -1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter66 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter66.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter66.insert((java.lang.constant.Constable) 1.0f);
        boolean boolean72 = constableBloomFilter66.contains((java.lang.constant.Constable) (short) 100);
        boolean boolean74 = constableBloomFilter66.contains((java.lang.constant.Constable) 0L);
        java.lang.Class<?> wildcardClass75 = constableBloomFilter66.getClass();
        boolean boolean76 = constableBloomFilter37.contains((java.lang.constant.Constable) wildcardClass75);
        boolean boolean77 = constableBloomFilter2.contains((java.lang.constant.Constable) boolean76);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc> constantDescBloomFilter80 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc>((int) (byte) 10, 100);
        java.lang.Class<?> wildcardClass81 = constantDescBloomFilter80.getClass();
        boolean boolean82 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass81);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter85 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter85.insert((java.lang.constant.Constable) 10);
        boolean boolean89 = constableBloomFilter85.contains((java.lang.constant.Constable) true);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter92 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, (int) (short) 100);
        java.lang.Class<?> wildcardClass93 = constableBloomFilter92.getClass();
        boolean boolean94 = constableBloomFilter85.contains((java.lang.constant.Constable) wildcardClass93);
        boolean boolean95 = constableBloomFilter2.contains((java.lang.constant.Constable) boolean94);
        java.lang.Class<?> wildcardClass96 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1666");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter2.insert((java.lang.constant.Constable) ' ');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter9 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter9.insert((java.lang.constant.Constable) 0.0d);
        java.lang.Class<?> wildcardClass12 = constableBloomFilter9.getClass();
        boolean boolean13 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass12);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter16.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter16.insert((java.lang.constant.Constable) ' ');
        boolean boolean22 = constableBloomFilter16.contains((java.lang.constant.Constable) 0L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter25 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) 'a');
        boolean boolean27 = constableBloomFilter25.contains((java.lang.constant.Constable) (byte) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter30 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable31 = null;
        boolean boolean32 = constableBloomFilter30.contains(constable31);
        java.lang.Class<?> wildcardClass33 = constableBloomFilter30.getClass();
        constableBloomFilter25.insert((java.lang.constant.Constable) wildcardClass33);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter37 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '#', (int) (short) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter40 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter43 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass44 = wildcardClassOfFieldBloomFilter43.getClass();
        constableBloomFilter40.insert((java.lang.constant.Constable) wildcardClass44);
        boolean boolean46 = constableBloomFilter37.contains((java.lang.constant.Constable) wildcardClass44);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter49 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter52 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass53 = wildcardClassOfFieldBloomFilter52.getClass();
        constableBloomFilter49.insert((java.lang.constant.Constable) wildcardClass53);
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        constableBloomFilter49.insert((java.lang.constant.Constable) wildcardClass56);
        boolean boolean59 = constableBloomFilter49.contains((java.lang.constant.Constable) 1);
        java.lang.Class<?> wildcardClass60 = constableBloomFilter49.getClass();
        constableBloomFilter37.insert((java.lang.constant.Constable) wildcardClass60);
        java.lang.Class<?> wildcardClass62 = constableBloomFilter37.getClass();
        constableBloomFilter25.insert((java.lang.constant.Constable) wildcardClass62);
        constableBloomFilter16.insert((java.lang.constant.Constable) wildcardClass62);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass62);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter68 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter68.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter68.insert((java.lang.constant.Constable) ' ');
        boolean boolean74 = constableBloomFilter68.contains((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter77 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', (int) (short) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter80 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter83 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable84 = null;
        boolean boolean85 = constableBloomFilter83.contains(constable84);
        constableBloomFilter83.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean89 = constableBloomFilter83.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass90 = constableBloomFilter83.getClass();
        boolean boolean91 = constableBloomFilter80.contains((java.lang.constant.Constable) wildcardClass90);
        java.lang.Class<?> wildcardClass92 = constableBloomFilter80.getClass();
        boolean boolean93 = constableBloomFilter77.contains((java.lang.constant.Constable) wildcardClass92);
        java.lang.Class<?> wildcardClass94 = constableBloomFilter77.getClass();
        constableBloomFilter68.insert((java.lang.constant.Constable) wildcardClass94);
        java.lang.Class<?> wildcardClass96 = constableBloomFilter68.getClass();
        boolean boolean97 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass96);
        java.lang.Class<?> wildcardClass98 = constableBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertNotNull(wildcardClass92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(wildcardClass94);
        org.junit.Assert.assertNotNull(wildcardClass96);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + true + "'", boolean97 == true);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test1667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1667");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable3 = null;
        boolean boolean4 = constableBloomFilter2.contains(constable3);
        constableBloomFilter2.insert((java.lang.constant.Constable) (byte) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc> constantDescBloomFilter9 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc>(0, (int) (byte) 100);
        java.lang.Class<?> wildcardClass10 = constantDescBloomFilter9.getClass();
        boolean boolean11 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter14 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 1, (int) '#');
        java.lang.constant.Constable constable15 = null;
        constableBloomFilter14.insert(constable15);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter19 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter22 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) (byte) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter25 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter25.insert((java.lang.constant.Constable) 10);
        boolean boolean29 = constableBloomFilter25.contains((java.lang.constant.Constable) true);
        boolean boolean31 = constableBloomFilter25.contains((java.lang.constant.Constable) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter34 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable35 = null;
        boolean boolean36 = constableBloomFilter34.contains(constable35);
        constableBloomFilter34.insert((java.lang.constant.Constable) 100.0f);
        boolean boolean40 = constableBloomFilter34.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter43 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter46 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable47 = null;
        boolean boolean48 = constableBloomFilter46.contains(constable47);
        constableBloomFilter46.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean52 = constableBloomFilter46.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass53 = constableBloomFilter46.getClass();
        boolean boolean54 = constableBloomFilter43.contains((java.lang.constant.Constable) wildcardClass53);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter57 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable58 = null;
        boolean boolean59 = constableBloomFilter57.contains(constable58);
        constableBloomFilter57.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean63 = constableBloomFilter57.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass64 = constableBloomFilter57.getClass();
        constableBloomFilter43.insert((java.lang.constant.Constable) wildcardClass64);
        boolean boolean66 = constableBloomFilter34.contains((java.lang.constant.Constable) wildcardClass64);
        boolean boolean67 = constableBloomFilter25.contains((java.lang.constant.Constable) boolean66);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter70 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) 'a');
        boolean boolean72 = constableBloomFilter70.contains((java.lang.constant.Constable) (byte) 100);
        java.lang.Class<?> wildcardClass73 = constableBloomFilter70.getClass();
        constableBloomFilter25.insert((java.lang.constant.Constable) wildcardClass73);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter77 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean79 = constableBloomFilter77.contains((java.lang.constant.Constable) 0L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter82 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable83 = null;
        boolean boolean84 = constableBloomFilter82.contains(constable83);
        constableBloomFilter82.insert((java.lang.constant.Constable) (byte) 0);
        java.lang.Class<?> wildcardClass87 = constableBloomFilter82.getClass();
        boolean boolean88 = constableBloomFilter77.contains((java.lang.constant.Constable) wildcardClass87);
        java.lang.Class<?> wildcardClass89 = constableBloomFilter77.getClass();
        constableBloomFilter25.insert((java.lang.constant.Constable) wildcardClass89);
        java.lang.Class<?> wildcardClass91 = constableBloomFilter25.getClass();
        constableBloomFilter22.insert((java.lang.constant.Constable) wildcardClass91);
        constableBloomFilter19.insert((java.lang.constant.Constable) wildcardClass91);
        constableBloomFilter14.insert((java.lang.constant.Constable) wildcardClass91);
        java.lang.Class<?> wildcardClass95 = constableBloomFilter14.getClass();
        boolean boolean96 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass95);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertNotNull(wildcardClass91);
        org.junit.Assert.assertNotNull(wildcardClass95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
    }

    @Test
    public void test1668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1668");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter2.insert((java.lang.constant.Constable) 1.0f);
        java.lang.constant.Constable constable7 = null;
        constableBloomFilter2.insert(constable7);
        boolean boolean10 = constableBloomFilter2.contains((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter13 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>((int) (short) 10, (int) (byte) 1);
        java.lang.Class<?> wildcardClass14 = constableBloomFilterBloomFilter13.getClass();
        boolean boolean15 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass14);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter18 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) 'a');
        boolean boolean20 = constableBloomFilter18.contains((java.lang.constant.Constable) ' ');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter23 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter23.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean27 = constableBloomFilter23.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter23.insert((java.lang.constant.Constable) (short) 0);
        boolean boolean31 = constableBloomFilter23.contains((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc> constantDescBloomFilter34 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc>((int) (byte) 100, 100);
        java.lang.Class<?> wildcardClass35 = constantDescBloomFilter34.getClass();
        constableBloomFilter23.insert((java.lang.constant.Constable) wildcardClass35);
        boolean boolean37 = constableBloomFilter18.contains((java.lang.constant.Constable) wildcardClass35);
        boolean boolean38 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass35);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter41 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter44 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable45 = null;
        boolean boolean46 = constableBloomFilter44.contains(constable45);
        constableBloomFilter44.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean50 = constableBloomFilter44.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass51 = constableBloomFilter44.getClass();
        boolean boolean52 = constableBloomFilter41.contains((java.lang.constant.Constable) wildcardClass51);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter55 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable56 = null;
        boolean boolean57 = constableBloomFilter55.contains(constable56);
        constableBloomFilter55.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean61 = constableBloomFilter55.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass62 = constableBloomFilter55.getClass();
        constableBloomFilter41.insert((java.lang.constant.Constable) wildcardClass62);
        boolean boolean65 = constableBloomFilter41.contains((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter68 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable69 = null;
        boolean boolean70 = constableBloomFilter68.contains(constable69);
        constableBloomFilter68.insert((java.lang.constant.Constable) 100.0f);
        java.lang.Class<?> wildcardClass73 = constableBloomFilter68.getClass();
        constableBloomFilter41.insert((java.lang.constant.Constable) wildcardClass73);
        boolean boolean75 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass73);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Comparable<java.lang.String>> strComparableBloomFilter78 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Comparable<java.lang.String>>(0, (int) (short) 0);
        java.lang.Class<?> wildcardClass79 = strComparableBloomFilter78.getClass();
        boolean boolean80 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass79);
        constableBloomFilter2.insert((java.lang.constant.Constable) '#');
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
    }

    @Test
    public void test1669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1669");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable6 = null;
        boolean boolean7 = constableBloomFilter5.contains(constable6);
        constableBloomFilter5.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean11 = constableBloomFilter5.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass12 = constableBloomFilter5.getClass();
        boolean boolean13 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass12);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable17 = null;
        boolean boolean18 = constableBloomFilter16.contains(constable17);
        constableBloomFilter16.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean22 = constableBloomFilter16.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass23 = constableBloomFilter16.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass23);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter27 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean29 = constableBloomFilter27.contains((java.lang.constant.Constable) 0L);
        boolean boolean31 = constableBloomFilter27.contains((java.lang.constant.Constable) 0L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter34 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter34.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean38 = constableBloomFilter34.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter34.insert((java.lang.constant.Constable) (short) 0);
        boolean boolean42 = constableBloomFilter34.contains((java.lang.constant.Constable) 0);
        java.lang.Class<?> wildcardClass43 = constableBloomFilter34.getClass();
        constableBloomFilter27.insert((java.lang.constant.Constable) wildcardClass43);
        java.lang.Class<?> wildcardClass45 = constableBloomFilter27.getClass();
        boolean boolean46 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass45);
        boolean boolean48 = constableBloomFilter2.contains((java.lang.constant.Constable) 100.0f);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
    }

    @Test
    public void test1670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1670");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 10, (int) (byte) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 1);
        java.lang.Class<?> wildcardClass6 = constableBloomFilter5.getClass();
        boolean boolean7 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test1671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1671");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean4 = constableBloomFilter2.contains((java.lang.constant.Constable) 0L);
        boolean boolean6 = constableBloomFilter2.contains((java.lang.constant.Constable) 0L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter9 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter9.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter9.insert((java.lang.constant.Constable) 1.0f);
        boolean boolean15 = constableBloomFilter9.contains((java.lang.constant.Constable) (short) 100);
        java.lang.Class<?> wildcardClass16 = constableBloomFilter9.getClass();
        boolean boolean17 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass16);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter20 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter20.insert((java.lang.constant.Constable) 10);
        boolean boolean24 = constableBloomFilter20.contains((java.lang.constant.Constable) true);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter27 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter27.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter32 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter35 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass36 = wildcardClassOfFieldBloomFilter35.getClass();
        constableBloomFilter32.insert((java.lang.constant.Constable) wildcardClass36);
        constableBloomFilter27.insert((java.lang.constant.Constable) wildcardClass36);
        boolean boolean39 = constableBloomFilter20.contains((java.lang.constant.Constable) wildcardClass36);
        constableBloomFilter2.insert((java.lang.constant.Constable) boolean39);
        java.lang.Class<?> wildcardClass41 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test1672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1672");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(0, (int) (byte) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter5.insert((java.lang.constant.Constable) 10);
        constableBloomFilter5.insert((java.lang.constant.Constable) true);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter12 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean14 = constableBloomFilter12.contains((java.lang.constant.Constable) 0L);
        boolean boolean16 = constableBloomFilter12.contains((java.lang.constant.Constable) 0L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter19 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter19.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean23 = constableBloomFilter19.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter19.insert((java.lang.constant.Constable) (short) 0);
        boolean boolean27 = constableBloomFilter19.contains((java.lang.constant.Constable) 0);
        java.lang.Class<?> wildcardClass28 = constableBloomFilter19.getClass();
        constableBloomFilter12.insert((java.lang.constant.Constable) wildcardClass28);
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass28);
        boolean boolean31 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass28);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter34 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable35 = null;
        boolean boolean36 = constableBloomFilter34.contains(constable35);
        constableBloomFilter34.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean40 = constableBloomFilter34.contains((java.lang.constant.Constable) 'a');
        constableBloomFilter34.insert((java.lang.constant.Constable) (short) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter45 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter45.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean49 = constableBloomFilter45.contains((java.lang.constant.Constable) 100L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter52 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter52.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter57 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter60 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass61 = wildcardClassOfFieldBloomFilter60.getClass();
        constableBloomFilter57.insert((java.lang.constant.Constable) wildcardClass61);
        constableBloomFilter52.insert((java.lang.constant.Constable) wildcardClass61);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter66 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', 0);
        java.lang.Class<?> wildcardClass67 = constableBloomFilter66.getClass();
        constableBloomFilter52.insert((java.lang.constant.Constable) wildcardClass67);
        constableBloomFilter45.insert((java.lang.constant.Constable) wildcardClass67);
        constableBloomFilter34.insert((java.lang.constant.Constable) wildcardClass67);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass67);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter74 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) (byte) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter77 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter77.insert((java.lang.constant.Constable) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter82 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) ' ', 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter85 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        java.lang.Class<?> wildcardClass86 = constableBloomFilter85.getClass();
        constableBloomFilter82.insert((java.lang.constant.Constable) wildcardClass86);
        boolean boolean88 = constableBloomFilter77.contains((java.lang.constant.Constable) wildcardClass86);
        java.lang.Class<?> wildcardClass89 = constableBloomFilter77.getClass();
        constableBloomFilter74.insert((java.lang.constant.Constable) wildcardClass89);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc> constantDescBloomFilter93 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc>((int) ' ', (int) '4');
        java.lang.Class<?> wildcardClass94 = constantDescBloomFilter93.getClass();
        boolean boolean95 = constableBloomFilter74.contains((java.lang.constant.Constable) wildcardClass94);
        boolean boolean96 = constableBloomFilter2.contains((java.lang.constant.Constable) boolean95);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertNotNull(wildcardClass94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
    }

    @Test
    public void test1673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1673");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter2.insert((java.lang.constant.Constable) 1.0f);
        java.lang.constant.Constable constable7 = null;
        constableBloomFilter2.insert(constable7);
        boolean boolean10 = constableBloomFilter2.contains((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter13 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>((int) (short) 10, (int) (byte) 1);
        java.lang.Class<?> wildcardClass14 = constableBloomFilterBloomFilter13.getClass();
        boolean boolean15 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass14);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter18 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) '4');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter21 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter21.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter21.insert((java.lang.constant.Constable) 1.0f);
        boolean boolean27 = constableBloomFilter21.contains((java.lang.constant.Constable) (short) 100);
        java.lang.constant.Constable constable28 = null;
        boolean boolean29 = constableBloomFilter21.contains(constable28);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter32 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter35 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable36 = null;
        boolean boolean37 = constableBloomFilter35.contains(constable36);
        constableBloomFilter35.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean41 = constableBloomFilter35.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass42 = constableBloomFilter35.getClass();
        boolean boolean43 = constableBloomFilter32.contains((java.lang.constant.Constable) wildcardClass42);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter46 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable47 = null;
        boolean boolean48 = constableBloomFilter46.contains(constable47);
        constableBloomFilter46.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean52 = constableBloomFilter46.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass53 = constableBloomFilter46.getClass();
        constableBloomFilter32.insert((java.lang.constant.Constable) wildcardClass53);
        boolean boolean56 = constableBloomFilter32.contains((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter59 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable60 = null;
        boolean boolean61 = constableBloomFilter59.contains(constable60);
        constableBloomFilter59.insert((java.lang.constant.Constable) 100.0f);
        java.lang.Class<?> wildcardClass64 = constableBloomFilter59.getClass();
        constableBloomFilter32.insert((java.lang.constant.Constable) wildcardClass64);
        boolean boolean66 = constableBloomFilter21.contains((java.lang.constant.Constable) wildcardClass64);
        constableBloomFilter18.insert((java.lang.constant.Constable) wildcardClass64);
        java.lang.Class<?> wildcardClass68 = constableBloomFilter18.getClass();
        boolean boolean69 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass68);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.GenericDeclaration> genericDeclarationBloomFilter72 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.GenericDeclaration>((int) ' ', (int) 'a');
        java.lang.Class<?> wildcardClass73 = genericDeclarationBloomFilter72.getClass();
        boolean boolean74 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass73);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter77 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(1, 1);
        constableBloomFilter77.insert((java.lang.constant.Constable) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter82 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '#', (int) (short) 100);
        java.lang.Class<?> wildcardClass83 = constableBloomFilter82.getClass();
        boolean boolean84 = constableBloomFilter77.contains((java.lang.constant.Constable) wildcardClass83);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.AnnotatedElement> annotatedElementBloomFilter87 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.AnnotatedElement>((int) (short) 0, 1);
        java.lang.Class<?> wildcardClass88 = annotatedElementBloomFilter87.getClass();
        boolean boolean89 = constableBloomFilter77.contains((java.lang.constant.Constable) wildcardClass88);
        constableBloomFilter2.insert((java.lang.constant.Constable) boolean89);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
    }

    @Test
    public void test1674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1674");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable3 = null;
        boolean boolean4 = constableBloomFilter2.contains(constable3);
        constableBloomFilter2.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean8 = constableBloomFilter2.contains((java.lang.constant.Constable) 'a');
        constableBloomFilter2.insert((java.lang.constant.Constable) (short) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter13 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter13.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean17 = constableBloomFilter13.contains((java.lang.constant.Constable) 100L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter20 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter20.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter25 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter28 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass29 = wildcardClassOfFieldBloomFilter28.getClass();
        constableBloomFilter25.insert((java.lang.constant.Constable) wildcardClass29);
        constableBloomFilter20.insert((java.lang.constant.Constable) wildcardClass29);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter34 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', 0);
        java.lang.Class<?> wildcardClass35 = constableBloomFilter34.getClass();
        constableBloomFilter20.insert((java.lang.constant.Constable) wildcardClass35);
        constableBloomFilter13.insert((java.lang.constant.Constable) wildcardClass35);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass35);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter41 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter41.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter41.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter41.insert((java.lang.constant.Constable) (-1L));
        boolean boolean49 = constableBloomFilter41.contains((java.lang.constant.Constable) 0L);
        constableBloomFilter41.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean53 = constableBloomFilter41.contains((java.lang.constant.Constable) (byte) -1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter56 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter56.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean60 = constableBloomFilter56.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter56.insert((java.lang.constant.Constable) (short) 0);
        boolean boolean64 = constableBloomFilter56.contains((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc> constantDescBloomFilter67 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc>((int) (byte) 100, 100);
        java.lang.Class<?> wildcardClass68 = constantDescBloomFilter67.getClass();
        constableBloomFilter56.insert((java.lang.constant.Constable) wildcardClass68);
        constableBloomFilter41.insert((java.lang.constant.Constable) wildcardClass68);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass68);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter74 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable75 = null;
        boolean boolean76 = constableBloomFilter74.contains(constable75);
        boolean boolean78 = constableBloomFilter74.contains((java.lang.constant.Constable) 1L);
        boolean boolean80 = constableBloomFilter74.contains((java.lang.constant.Constable) 100.0d);
        constableBloomFilter74.insert((java.lang.constant.Constable) (short) -1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter85 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass86 = wildcardClassOfFieldBloomFilter85.getClass();
        constableBloomFilter74.insert((java.lang.constant.Constable) wildcardClass86);
        java.lang.Class<?> wildcardClass88 = constableBloomFilter74.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass88);
        java.lang.Class<?> wildcardClass90 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test1675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1675");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, (int) (short) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 100, (int) (short) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.io.Serializable> serializableBloomFilter8 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.io.Serializable>((int) (short) 100, (int) (byte) 100);
        java.lang.Class<?> wildcardClass9 = serializableBloomFilter8.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass9);
        java.lang.Class<?> wildcardClass11 = constableBloomFilter5.getClass();
        boolean boolean12 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass11);
        java.lang.constant.Constable constable13 = null;
        boolean boolean14 = constableBloomFilter2.contains(constable13);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test1676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1676");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) 'a', 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter8 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable9 = null;
        boolean boolean10 = constableBloomFilter8.contains(constable9);
        constableBloomFilter8.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean14 = constableBloomFilter8.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass15 = constableBloomFilter8.getClass();
        boolean boolean16 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass15);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter19 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable20 = null;
        boolean boolean21 = constableBloomFilter19.contains(constable20);
        constableBloomFilter19.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean25 = constableBloomFilter19.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass26 = constableBloomFilter19.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass26);
        boolean boolean29 = constableBloomFilter5.contains((java.lang.constant.Constable) 1L);
        java.lang.Class<?> wildcardClass30 = constableBloomFilter5.getClass();
        boolean boolean31 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass30);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter34 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter34.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter34.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter34.insert((java.lang.constant.Constable) (-1L));
        boolean boolean42 = constableBloomFilter34.contains((java.lang.constant.Constable) 0L);
        constableBloomFilter34.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean46 = constableBloomFilter34.contains((java.lang.constant.Constable) (byte) -1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter49 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter49.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean53 = constableBloomFilter49.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter49.insert((java.lang.constant.Constable) (short) 0);
        boolean boolean57 = constableBloomFilter49.contains((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc> constantDescBloomFilter60 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc>((int) (byte) 100, 100);
        java.lang.Class<?> wildcardClass61 = constantDescBloomFilter60.getClass();
        constableBloomFilter49.insert((java.lang.constant.Constable) wildcardClass61);
        constableBloomFilter34.insert((java.lang.constant.Constable) wildcardClass61);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter66 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable67 = null;
        constableBloomFilter66.insert(constable67);
        constableBloomFilter66.insert((java.lang.constant.Constable) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter73 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        boolean boolean75 = constableBloomFilter73.contains((java.lang.constant.Constable) ' ');
        java.lang.Class<?> wildcardClass76 = constableBloomFilter73.getClass();
        constableBloomFilter66.insert((java.lang.constant.Constable) wildcardClass76);
        boolean boolean78 = constableBloomFilter34.contains((java.lang.constant.Constable) wildcardClass76);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter81 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter84 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>(0, (int) ' ');
        java.lang.Class<?> wildcardClass85 = constableBloomFilterBloomFilter84.getClass();
        boolean boolean86 = constableBloomFilter81.contains((java.lang.constant.Constable) wildcardClass85);
        boolean boolean88 = constableBloomFilter81.contains((java.lang.constant.Constable) (-1.0f));
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter91 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        java.lang.Class<?> wildcardClass92 = constableBloomFilter91.getClass();
        constableBloomFilter81.insert((java.lang.constant.Constable) wildcardClass92);
        constableBloomFilter34.insert((java.lang.constant.Constable) wildcardClass92);
        java.lang.Class<?> wildcardClass95 = constableBloomFilter34.getClass();
        boolean boolean96 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass95);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(wildcardClass92);
        org.junit.Assert.assertNotNull(wildcardClass95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test1677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1677");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Comparable<java.lang.String>> strComparableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Comparable<java.lang.String>>(10, (int) '4');
    }

    @Test
    public void test1678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1678");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        boolean boolean4 = constableBloomFilter2.contains((java.lang.constant.Constable) ' ');
        boolean boolean6 = constableBloomFilter2.contains((java.lang.constant.Constable) (short) 1);
        java.lang.constant.Constable constable7 = null;
        boolean boolean8 = constableBloomFilter2.contains(constable7);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter11 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(0, (int) (byte) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter14 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter14.insert((java.lang.constant.Constable) 10);
        constableBloomFilter14.insert((java.lang.constant.Constable) true);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter21 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean23 = constableBloomFilter21.contains((java.lang.constant.Constable) 0L);
        boolean boolean25 = constableBloomFilter21.contains((java.lang.constant.Constable) 0L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter28 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter28.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean32 = constableBloomFilter28.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter28.insert((java.lang.constant.Constable) (short) 0);
        boolean boolean36 = constableBloomFilter28.contains((java.lang.constant.Constable) 0);
        java.lang.Class<?> wildcardClass37 = constableBloomFilter28.getClass();
        constableBloomFilter21.insert((java.lang.constant.Constable) wildcardClass37);
        constableBloomFilter14.insert((java.lang.constant.Constable) wildcardClass37);
        boolean boolean40 = constableBloomFilter11.contains((java.lang.constant.Constable) wildcardClass37);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
    }

    @Test
    public void test1679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1679");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean6 = constableBloomFilter2.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter2.insert((java.lang.constant.Constable) (short) 0);
        boolean boolean10 = constableBloomFilter2.contains((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter13 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable14 = null;
        boolean boolean15 = constableBloomFilter13.contains(constable14);
        constableBloomFilter13.insert((java.lang.constant.Constable) 100);
        boolean boolean19 = constableBloomFilter13.contains((java.lang.constant.Constable) true);
        java.lang.Class<?> wildcardClass20 = constableBloomFilter13.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass20);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter24 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter24.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean28 = constableBloomFilter24.contains((java.lang.constant.Constable) 100L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter31 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter31.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter36 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter39 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass40 = wildcardClassOfFieldBloomFilter39.getClass();
        constableBloomFilter36.insert((java.lang.constant.Constable) wildcardClass40);
        constableBloomFilter31.insert((java.lang.constant.Constable) wildcardClass40);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter45 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', 0);
        java.lang.Class<?> wildcardClass46 = constableBloomFilter45.getClass();
        constableBloomFilter31.insert((java.lang.constant.Constable) wildcardClass46);
        constableBloomFilter24.insert((java.lang.constant.Constable) wildcardClass46);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter51 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter51.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean55 = constableBloomFilter51.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter51.insert((java.lang.constant.Constable) (short) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter60 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable61 = null;
        boolean boolean62 = constableBloomFilter60.contains(constable61);
        constableBloomFilter60.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter67 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable68 = null;
        boolean boolean69 = constableBloomFilter67.contains(constable68);
        java.lang.Class<?> wildcardClass70 = constableBloomFilter67.getClass();
        constableBloomFilter60.insert((java.lang.constant.Constable) wildcardClass70);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter74 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable75 = null;
        boolean boolean76 = constableBloomFilter74.contains(constable75);
        constableBloomFilter74.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter81 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable82 = null;
        boolean boolean83 = constableBloomFilter81.contains(constable82);
        java.lang.Class<?> wildcardClass84 = constableBloomFilter81.getClass();
        constableBloomFilter74.insert((java.lang.constant.Constable) wildcardClass84);
        boolean boolean86 = constableBloomFilter60.contains((java.lang.constant.Constable) wildcardClass84);
        boolean boolean87 = constableBloomFilter51.contains((java.lang.constant.Constable) wildcardClass84);
        constableBloomFilter24.insert((java.lang.constant.Constable) boolean87);
        java.lang.Object obj89 = new java.lang.Object();
        java.lang.Class<?> wildcardClass90 = obj89.getClass();
        boolean boolean91 = constableBloomFilter24.contains((java.lang.constant.Constable) wildcardClass90);
        boolean boolean92 = constableBloomFilter2.contains((java.lang.constant.Constable) boolean91);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
    }

    @Test
    public void test1680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1680");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter2.insert((java.lang.constant.Constable) 1.0f);
        constableBloomFilter2.insert((java.lang.constant.Constable) (-1L));
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter11 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter14 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass15 = wildcardClassOfFieldBloomFilter14.getClass();
        constableBloomFilter11.insert((java.lang.constant.Constable) wildcardClass15);
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        constableBloomFilter11.insert((java.lang.constant.Constable) wildcardClass18);
        boolean boolean21 = constableBloomFilter11.contains((java.lang.constant.Constable) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter24 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable25 = null;
        boolean boolean26 = constableBloomFilter24.contains(constable25);
        constableBloomFilter24.insert((java.lang.constant.Constable) 100.0f);
        java.lang.Class<?> wildcardClass29 = constableBloomFilter24.getClass();
        boolean boolean30 = constableBloomFilter11.contains((java.lang.constant.Constable) wildcardClass29);
        constableBloomFilter2.insert((java.lang.constant.Constable) boolean30);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter34 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean36 = constableBloomFilter34.contains((java.lang.constant.Constable) true);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter39 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter42 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>(0, (int) ' ');
        java.lang.Class<?> wildcardClass43 = constableBloomFilterBloomFilter42.getClass();
        boolean boolean44 = constableBloomFilter39.contains((java.lang.constant.Constable) wildcardClass43);
        boolean boolean45 = constableBloomFilter34.contains((java.lang.constant.Constable) wildcardClass43);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter48 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter48.insert((java.lang.constant.Constable) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter53 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter56 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable57 = null;
        boolean boolean58 = constableBloomFilter56.contains(constable57);
        constableBloomFilter56.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean62 = constableBloomFilter56.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass63 = constableBloomFilter56.getClass();
        boolean boolean64 = constableBloomFilter53.contains((java.lang.constant.Constable) wildcardClass63);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter67 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable68 = null;
        boolean boolean69 = constableBloomFilter67.contains(constable68);
        constableBloomFilter67.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean73 = constableBloomFilter67.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass74 = constableBloomFilter67.getClass();
        constableBloomFilter53.insert((java.lang.constant.Constable) wildcardClass74);
        boolean boolean77 = constableBloomFilter53.contains((java.lang.constant.Constable) 1L);
        java.lang.Class<?> wildcardClass78 = constableBloomFilter53.getClass();
        constableBloomFilter48.insert((java.lang.constant.Constable) wildcardClass78);
        boolean boolean80 = constableBloomFilter34.contains((java.lang.constant.Constable) wildcardClass78);
        java.lang.Class<?> wildcardClass81 = constableBloomFilter34.getClass();
        boolean boolean82 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass81);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
    }

    @Test
    public void test1681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1681");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.Type> typeBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.Type>((int) (short) 100, (int) (short) 1);
        java.lang.Class<?> wildcardClass3 = typeBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test1682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1682");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(0, (int) 'a');
        java.lang.Class<?> wildcardClass3 = constableBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test1683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1683");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter2.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter2.insert((java.lang.constant.Constable) (-1L));
        java.lang.constant.Constable constable9 = null;
        boolean boolean10 = constableBloomFilter2.contains(constable9);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter13 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable14 = null;
        boolean boolean15 = constableBloomFilter13.contains(constable14);
        boolean boolean17 = constableBloomFilter13.contains((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter20 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, (int) (short) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter23 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        boolean boolean25 = constableBloomFilter23.contains((java.lang.constant.Constable) ' ');
        boolean boolean27 = constableBloomFilter23.contains((java.lang.constant.Constable) (short) 1);
        java.lang.Class<?> wildcardClass28 = constableBloomFilter23.getClass();
        boolean boolean29 = constableBloomFilter20.contains((java.lang.constant.Constable) wildcardClass28);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter32 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable33 = null;
        boolean boolean34 = constableBloomFilter32.contains(constable33);
        constableBloomFilter32.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean38 = constableBloomFilter32.contains((java.lang.constant.Constable) 'a');
        boolean boolean40 = constableBloomFilter32.contains((java.lang.constant.Constable) 100.0f);
        java.lang.Class<?> wildcardClass41 = constableBloomFilter32.getClass();
        boolean boolean42 = constableBloomFilter20.contains((java.lang.constant.Constable) wildcardClass41);
        boolean boolean43 = constableBloomFilter13.contains((java.lang.constant.Constable) wildcardClass41);
        boolean boolean44 = constableBloomFilter2.contains((java.lang.constant.Constable) boolean43);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
    }

    @Test
    public void test1684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1684");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.Type> typeBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.Type>((int) (byte) 0, 1);
    }

    @Test
    public void test1685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1685");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>((int) ' ', (int) '#');
    }

    @Test
    public void test1686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1686");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, (int) (short) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter5.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter5.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter5.insert((java.lang.constant.Constable) (-1L));
        boolean boolean13 = constableBloomFilter5.contains((java.lang.constant.Constable) 0L);
        java.lang.Class<?> wildcardClass14 = constableBloomFilter5.getClass();
        boolean boolean15 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass14);
        java.lang.Class<?> wildcardClass16 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test1687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1687");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter2.insert((java.lang.constant.Constable) 1.0f);
        boolean boolean8 = constableBloomFilter2.contains((java.lang.constant.Constable) (short) 100);
        constableBloomFilter2.insert((java.lang.constant.Constable) '#');
        java.lang.constant.Constable constable11 = null;
        boolean boolean12 = constableBloomFilter2.contains(constable11);
        boolean boolean14 = constableBloomFilter2.contains((java.lang.constant.Constable) "");
        java.lang.Class<?> wildcardClass15 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test1688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1688");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter2.insert((java.lang.constant.Constable) 1.0f);
        boolean boolean8 = constableBloomFilter2.contains((java.lang.constant.Constable) (short) 100);
        boolean boolean10 = constableBloomFilter2.contains((java.lang.constant.Constable) 0L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter13 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) '#');
        java.lang.constant.Constable constable14 = null;
        constableBloomFilter13.insert(constable14);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter18 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) '#');
        constableBloomFilter18.insert((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.GenericDeclaration> genericDeclarationBloomFilter23 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.GenericDeclaration>(1, (int) 'a');
        java.lang.Class<?> wildcardClass24 = genericDeclarationBloomFilter23.getClass();
        constableBloomFilter18.insert((java.lang.constant.Constable) wildcardClass24);
        boolean boolean26 = constableBloomFilter13.contains((java.lang.constant.Constable) wildcardClass24);
        java.lang.Class<?> wildcardClass27 = constableBloomFilter13.getClass();
        boolean boolean28 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass27);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter31 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter31.insert((java.lang.constant.Constable) 10);
        boolean boolean35 = constableBloomFilter31.contains((java.lang.constant.Constable) true);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter38 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter38.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter43 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter46 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass47 = wildcardClassOfFieldBloomFilter46.getClass();
        constableBloomFilter43.insert((java.lang.constant.Constable) wildcardClass47);
        constableBloomFilter38.insert((java.lang.constant.Constable) wildcardClass47);
        boolean boolean50 = constableBloomFilter31.contains((java.lang.constant.Constable) wildcardClass47);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter53 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter53.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter53.insert((java.lang.constant.Constable) 1.0f);
        boolean boolean59 = constableBloomFilter53.contains((java.lang.constant.Constable) (short) 100);
        boolean boolean61 = constableBloomFilter53.contains((java.lang.constant.Constable) 0L);
        boolean boolean63 = constableBloomFilter53.contains((java.lang.constant.Constable) (short) 100);
        java.lang.Class<?> wildcardClass64 = constableBloomFilter53.getClass();
        boolean boolean65 = constableBloomFilter31.contains((java.lang.constant.Constable) wildcardClass64);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter68 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable69 = null;
        constableBloomFilter68.insert(constable69);
        constableBloomFilter68.insert((java.lang.constant.Constable) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter75 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter78 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass79 = wildcardClassOfFieldBloomFilter78.getClass();
        constableBloomFilter75.insert((java.lang.constant.Constable) wildcardClass79);
        java.lang.Object obj81 = new java.lang.Object();
        java.lang.Class<?> wildcardClass82 = obj81.getClass();
        constableBloomFilter75.insert((java.lang.constant.Constable) wildcardClass82);
        boolean boolean85 = constableBloomFilter75.contains((java.lang.constant.Constable) '#');
        constableBloomFilter75.insert((java.lang.constant.Constable) '#');
        java.lang.Class<?> wildcardClass88 = constableBloomFilter75.getClass();
        boolean boolean89 = constableBloomFilter68.contains((java.lang.constant.Constable) wildcardClass88);
        constableBloomFilter68.insert((java.lang.constant.Constable) 10.0f);
        java.lang.Class<?> wildcardClass92 = constableBloomFilter68.getClass();
        constableBloomFilter31.insert((java.lang.constant.Constable) wildcardClass92);
        boolean boolean94 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass92);
        java.lang.constant.Constable constable95 = null;
        constableBloomFilter2.insert(constable95);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(wildcardClass92);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
    }

    @Test
    public void test1689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1689");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) ' ', 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 1, (int) '#');
        java.lang.constant.Constable constable6 = null;
        constableBloomFilter5.insert(constable6);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter10 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter13 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) (byte) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter16.insert((java.lang.constant.Constable) 10);
        boolean boolean20 = constableBloomFilter16.contains((java.lang.constant.Constable) true);
        boolean boolean22 = constableBloomFilter16.contains((java.lang.constant.Constable) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter25 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable26 = null;
        boolean boolean27 = constableBloomFilter25.contains(constable26);
        constableBloomFilter25.insert((java.lang.constant.Constable) 100.0f);
        boolean boolean31 = constableBloomFilter25.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter34 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter37 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable38 = null;
        boolean boolean39 = constableBloomFilter37.contains(constable38);
        constableBloomFilter37.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean43 = constableBloomFilter37.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass44 = constableBloomFilter37.getClass();
        boolean boolean45 = constableBloomFilter34.contains((java.lang.constant.Constable) wildcardClass44);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter48 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable49 = null;
        boolean boolean50 = constableBloomFilter48.contains(constable49);
        constableBloomFilter48.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean54 = constableBloomFilter48.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass55 = constableBloomFilter48.getClass();
        constableBloomFilter34.insert((java.lang.constant.Constable) wildcardClass55);
        boolean boolean57 = constableBloomFilter25.contains((java.lang.constant.Constable) wildcardClass55);
        boolean boolean58 = constableBloomFilter16.contains((java.lang.constant.Constable) boolean57);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter61 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) 'a');
        boolean boolean63 = constableBloomFilter61.contains((java.lang.constant.Constable) (byte) 100);
        java.lang.Class<?> wildcardClass64 = constableBloomFilter61.getClass();
        constableBloomFilter16.insert((java.lang.constant.Constable) wildcardClass64);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter68 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean70 = constableBloomFilter68.contains((java.lang.constant.Constable) 0L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter73 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable74 = null;
        boolean boolean75 = constableBloomFilter73.contains(constable74);
        constableBloomFilter73.insert((java.lang.constant.Constable) (byte) 0);
        java.lang.Class<?> wildcardClass78 = constableBloomFilter73.getClass();
        boolean boolean79 = constableBloomFilter68.contains((java.lang.constant.Constable) wildcardClass78);
        java.lang.Class<?> wildcardClass80 = constableBloomFilter68.getClass();
        constableBloomFilter16.insert((java.lang.constant.Constable) wildcardClass80);
        java.lang.Class<?> wildcardClass82 = constableBloomFilter16.getClass();
        constableBloomFilter13.insert((java.lang.constant.Constable) wildcardClass82);
        constableBloomFilter10.insert((java.lang.constant.Constable) wildcardClass82);
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass82);
        boolean boolean86 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass82);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
    }

    @Test
    public void test1690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1690");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 10, (int) (byte) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter5.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter5.insert((java.lang.constant.Constable) 1.0f);
        boolean boolean11 = constableBloomFilter5.contains((java.lang.constant.Constable) (short) 100);
        boolean boolean13 = constableBloomFilter5.contains((java.lang.constant.Constable) 0L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) '#');
        java.lang.constant.Constable constable17 = null;
        constableBloomFilter16.insert(constable17);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter21 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) '#');
        constableBloomFilter21.insert((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.GenericDeclaration> genericDeclarationBloomFilter26 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.GenericDeclaration>(1, (int) 'a');
        java.lang.Class<?> wildcardClass27 = genericDeclarationBloomFilter26.getClass();
        constableBloomFilter21.insert((java.lang.constant.Constable) wildcardClass27);
        boolean boolean29 = constableBloomFilter16.contains((java.lang.constant.Constable) wildcardClass27);
        java.lang.Class<?> wildcardClass30 = constableBloomFilter16.getClass();
        boolean boolean31 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass30);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter34 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, 0);
        java.lang.Class<?> wildcardClass35 = constableBloomFilter34.getClass();
        boolean boolean36 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass35);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
    }

    @Test
    public void test1691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1691");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>(0, (int) ' ');
        java.lang.Class<?> wildcardClass6 = constableBloomFilterBloomFilter5.getClass();
        boolean boolean7 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass6);
        boolean boolean9 = constableBloomFilter2.contains((java.lang.constant.Constable) (-1.0f));
        constableBloomFilter2.insert((java.lang.constant.Constable) 100.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter14 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable15 = null;
        boolean boolean16 = constableBloomFilter14.contains(constable15);
        constableBloomFilter14.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean20 = constableBloomFilter14.contains((java.lang.constant.Constable) 'a');
        boolean boolean22 = constableBloomFilter14.contains((java.lang.constant.Constable) 100.0f);
        constableBloomFilter14.insert((java.lang.constant.Constable) (short) 1);
        boolean boolean26 = constableBloomFilter14.contains((java.lang.constant.Constable) '4');
        java.lang.Class<?> wildcardClass27 = constableBloomFilter14.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass27);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter31 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) 'a', 0);
        java.lang.Class<?> wildcardClass32 = constableBloomFilter31.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test1692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1692");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 10, (int) (short) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) 'a');
        boolean boolean7 = constableBloomFilter5.contains((java.lang.constant.Constable) (byte) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter10 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable11 = null;
        boolean boolean12 = constableBloomFilter10.contains(constable11);
        java.lang.Class<?> wildcardClass13 = constableBloomFilter10.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass13);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter17 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter20 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass21 = wildcardClassOfFieldBloomFilter20.getClass();
        constableBloomFilter17.insert((java.lang.constant.Constable) wildcardClass21);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter25 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) 'a');
        boolean boolean27 = constableBloomFilter25.contains((java.lang.constant.Constable) ' ');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter30 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter33 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable34 = null;
        boolean boolean35 = constableBloomFilter33.contains(constable34);
        constableBloomFilter33.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean39 = constableBloomFilter33.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass40 = constableBloomFilter33.getClass();
        boolean boolean41 = constableBloomFilter30.contains((java.lang.constant.Constable) wildcardClass40);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter44 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable45 = null;
        boolean boolean46 = constableBloomFilter44.contains(constable45);
        constableBloomFilter44.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean50 = constableBloomFilter44.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass51 = constableBloomFilter44.getClass();
        constableBloomFilter30.insert((java.lang.constant.Constable) wildcardClass51);
        boolean boolean53 = constableBloomFilter25.contains((java.lang.constant.Constable) wildcardClass51);
        constableBloomFilter17.insert((java.lang.constant.Constable) boolean53);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter57 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter60 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable61 = null;
        boolean boolean62 = constableBloomFilter60.contains(constable61);
        constableBloomFilter60.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean66 = constableBloomFilter60.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass67 = constableBloomFilter60.getClass();
        boolean boolean68 = constableBloomFilter57.contains((java.lang.constant.Constable) wildcardClass67);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter71 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable72 = null;
        boolean boolean73 = constableBloomFilter71.contains(constable72);
        constableBloomFilter71.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean77 = constableBloomFilter71.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass78 = constableBloomFilter71.getClass();
        constableBloomFilter57.insert((java.lang.constant.Constable) wildcardClass78);
        boolean boolean81 = constableBloomFilter57.contains((java.lang.constant.Constable) 1L);
        java.lang.Class<?> wildcardClass82 = constableBloomFilter57.getClass();
        boolean boolean83 = constableBloomFilter17.contains((java.lang.constant.Constable) wildcardClass82);
        boolean boolean84 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass82);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter87 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean89 = constableBloomFilter87.contains((java.lang.constant.Constable) 0L);
        boolean boolean91 = constableBloomFilter87.contains((java.lang.constant.Constable) (byte) 0);
        java.lang.Class<?> wildcardClass92 = constableBloomFilter87.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass92);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass92);
        java.lang.constant.Constable constable95 = null;
        constableBloomFilter2.insert(constable95);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test1693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1693");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(1, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter5.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter5.insert((java.lang.constant.Constable) 1.0f);
        constableBloomFilter5.insert((java.lang.constant.Constable) (-1L));
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter14 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean16 = constableBloomFilter14.contains((java.lang.constant.Constable) true);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter19 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter22 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>(0, (int) ' ');
        java.lang.Class<?> wildcardClass23 = constableBloomFilterBloomFilter22.getClass();
        boolean boolean24 = constableBloomFilter19.contains((java.lang.constant.Constable) wildcardClass23);
        boolean boolean25 = constableBloomFilter14.contains((java.lang.constant.Constable) wildcardClass23);
        boolean boolean26 = constableBloomFilter5.contains((java.lang.constant.Constable) boolean25);
        java.lang.Class<?> wildcardClass27 = constableBloomFilter5.getClass();
        boolean boolean28 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass27);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter31 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter34 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>(0, (int) ' ');
        java.lang.Class<?> wildcardClass35 = constableBloomFilterBloomFilter34.getClass();
        boolean boolean36 = constableBloomFilter31.contains((java.lang.constant.Constable) wildcardClass35);
        boolean boolean38 = constableBloomFilter31.contains((java.lang.constant.Constable) (-1.0f));
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter41 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        java.lang.Class<?> wildcardClass42 = constableBloomFilter41.getClass();
        constableBloomFilter31.insert((java.lang.constant.Constable) wildcardClass42);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass42);
        java.lang.Class<?> wildcardClass45 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test1694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1694");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean4 = constableBloomFilter2.contains((java.lang.constant.Constable) 0L);
        boolean boolean6 = constableBloomFilter2.contains((java.lang.constant.Constable) 0L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter9 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter9.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter9.insert((java.lang.constant.Constable) 1.0f);
        boolean boolean15 = constableBloomFilter9.contains((java.lang.constant.Constable) (short) 100);
        java.lang.Class<?> wildcardClass16 = constableBloomFilter9.getClass();
        boolean boolean17 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass16);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter20 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '#', (int) (short) 100);
        java.lang.Class<?> wildcardClass21 = constableBloomFilter20.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass21);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter25 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 100, (int) (short) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.io.Serializable> serializableBloomFilter28 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.io.Serializable>((int) (short) 100, (int) (byte) 100);
        java.lang.Class<?> wildcardClass29 = serializableBloomFilter28.getClass();
        constableBloomFilter25.insert((java.lang.constant.Constable) wildcardClass29);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter33 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) 'a', (int) (byte) 1);
        java.lang.Class<?> wildcardClass34 = constableBloomFilter33.getClass();
        boolean boolean35 = constableBloomFilter25.contains((java.lang.constant.Constable) wildcardClass34);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter38 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter41 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', (int) (short) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter44 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) 'a', 0);
        java.lang.Class<?> wildcardClass45 = constableBloomFilter44.getClass();
        constableBloomFilter41.insert((java.lang.constant.Constable) wildcardClass45);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter49 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) 'a');
        boolean boolean51 = constableBloomFilter49.contains((java.lang.constant.Constable) (byte) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter54 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable55 = null;
        boolean boolean56 = constableBloomFilter54.contains(constable55);
        java.lang.Class<?> wildcardClass57 = constableBloomFilter54.getClass();
        constableBloomFilter49.insert((java.lang.constant.Constable) wildcardClass57);
        java.lang.Class<?> wildcardClass59 = constableBloomFilter49.getClass();
        constableBloomFilter41.insert((java.lang.constant.Constable) wildcardClass59);
        constableBloomFilter38.insert((java.lang.constant.Constable) wildcardClass59);
        constableBloomFilter25.insert((java.lang.constant.Constable) wildcardClass59);
        java.lang.Class<?> wildcardClass63 = constableBloomFilter25.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test1695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1695");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass6 = wildcardClassOfFieldBloomFilter5.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass6);
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass9);
        boolean boolean12 = constableBloomFilter2.contains((java.lang.constant.Constable) '#');
        constableBloomFilter2.insert((java.lang.constant.Constable) (-1L));
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter17 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter17.insert((java.lang.constant.Constable) 10);
        boolean boolean21 = constableBloomFilter17.contains((java.lang.constant.Constable) true);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter24 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter24.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter29 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter32 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass33 = wildcardClassOfFieldBloomFilter32.getClass();
        constableBloomFilter29.insert((java.lang.constant.Constable) wildcardClass33);
        constableBloomFilter24.insert((java.lang.constant.Constable) wildcardClass33);
        boolean boolean36 = constableBloomFilter17.contains((java.lang.constant.Constable) wildcardClass33);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass33);
        java.lang.Class<?> wildcardClass38 = constableBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test1696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1696");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable6 = null;
        boolean boolean7 = constableBloomFilter5.contains(constable6);
        constableBloomFilter5.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean11 = constableBloomFilter5.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass12 = constableBloomFilter5.getClass();
        boolean boolean13 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass12);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable17 = null;
        boolean boolean18 = constableBloomFilter16.contains(constable17);
        constableBloomFilter16.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean22 = constableBloomFilter16.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass23 = constableBloomFilter16.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass23);
        boolean boolean26 = constableBloomFilter2.contains((java.lang.constant.Constable) 1L);
        boolean boolean28 = constableBloomFilter2.contains((java.lang.constant.Constable) (byte) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter31 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter31.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean35 = constableBloomFilter31.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter31.insert((java.lang.constant.Constable) (short) 0);
        boolean boolean39 = constableBloomFilter31.contains((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc> constantDescBloomFilter42 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc>((int) (byte) 100, 100);
        java.lang.Class<?> wildcardClass43 = constantDescBloomFilter42.getClass();
        constableBloomFilter31.insert((java.lang.constant.Constable) wildcardClass43);
        boolean boolean46 = constableBloomFilter31.contains((java.lang.constant.Constable) 10.0d);
        java.lang.Class<?> wildcardClass47 = constableBloomFilter31.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass47);
        java.lang.constant.Constable constable49 = null;
        boolean boolean50 = constableBloomFilter2.contains(constable49);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter53 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter53.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean57 = constableBloomFilter53.contains((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc> constantDescBloomFilter60 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc>((int) (byte) 100, 100);
        java.lang.Class<?> wildcardClass61 = constantDescBloomFilter60.getClass();
        constableBloomFilter53.insert((java.lang.constant.Constable) wildcardClass61);
        java.lang.Class<?> wildcardClass63 = constableBloomFilter53.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass63);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter67 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) (short) 1);
        java.lang.constant.Constable constable68 = null;
        boolean boolean69 = constableBloomFilter67.contains(constable68);
        java.lang.Class<?> wildcardClass70 = constableBloomFilter67.getClass();
        boolean boolean71 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass70);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
    }

    @Test
    public void test1697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1697");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Comparable<java.lang.String>> strComparableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Comparable<java.lang.String>>((int) (byte) 0, (int) (byte) 1);
        java.lang.Class<?> wildcardClass3 = strComparableBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test1698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1698");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        boolean boolean4 = constableBloomFilter2.contains((java.lang.constant.Constable) ' ');
        boolean boolean6 = constableBloomFilter2.contains((java.lang.constant.Constable) (short) 1);
        java.lang.constant.Constable constable7 = null;
        boolean boolean8 = constableBloomFilter2.contains(constable7);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter11 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, (int) (short) 100);
        java.lang.Class<?> wildcardClass12 = constableBloomFilter11.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass12);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter16.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter16.insert((java.lang.constant.Constable) ' ');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter23 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter23.insert((java.lang.constant.Constable) 0.0d);
        java.lang.Class<?> wildcardClass26 = constableBloomFilter23.getClass();
        boolean boolean27 = constableBloomFilter16.contains((java.lang.constant.Constable) wildcardClass26);
        java.lang.constant.Constable constable28 = null;
        boolean boolean29 = constableBloomFilter16.contains(constable28);
        java.lang.Class<?> wildcardClass30 = constableBloomFilter16.getClass();
        boolean boolean31 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass30);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter34 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter34.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter34.insert((java.lang.constant.Constable) ' ');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter41 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter41.insert((java.lang.constant.Constable) 0.0d);
        java.lang.Class<?> wildcardClass44 = constableBloomFilter41.getClass();
        boolean boolean45 = constableBloomFilter34.contains((java.lang.constant.Constable) wildcardClass44);
        java.lang.constant.Constable constable46 = null;
        boolean boolean47 = constableBloomFilter34.contains(constable46);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter50 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean52 = constableBloomFilter50.contains((java.lang.constant.Constable) 0L);
        boolean boolean54 = constableBloomFilter50.contains((java.lang.constant.Constable) (byte) 0);
        boolean boolean56 = constableBloomFilter50.contains((java.lang.constant.Constable) '4');
        boolean boolean58 = constableBloomFilter50.contains((java.lang.constant.Constable) 1.0f);
        java.lang.Class<?> wildcardClass59 = constableBloomFilter50.getClass();
        boolean boolean60 = constableBloomFilter34.contains((java.lang.constant.Constable) wildcardClass59);
        java.lang.Class<?> wildcardClass61 = constableBloomFilter34.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass61);
        java.lang.Class<?> wildcardClass63 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test1699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1699");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean4 = constableBloomFilter2.contains((java.lang.constant.Constable) 0L);
        boolean boolean6 = constableBloomFilter2.contains((java.lang.constant.Constable) 0L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter9 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter9.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean13 = constableBloomFilter9.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter9.insert((java.lang.constant.Constable) (short) 0);
        boolean boolean17 = constableBloomFilter9.contains((java.lang.constant.Constable) 0);
        java.lang.Class<?> wildcardClass18 = constableBloomFilter9.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass18);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter22 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter22.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean26 = constableBloomFilter22.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter22.insert((java.lang.constant.Constable) (short) 0);
        boolean boolean30 = constableBloomFilter22.contains((java.lang.constant.Constable) 0);
        java.lang.Class<?> wildcardClass31 = constableBloomFilter22.getClass();
        boolean boolean32 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass31);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter35 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>(0, 1);
        java.lang.Class<?> wildcardClass36 = constableBloomFilterBloomFilter35.getClass();
        boolean boolean37 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
    }

    @Test
    public void test1700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1700");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.CharSequence> charSequenceBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.CharSequence>(1, 100);
    }

    @Test
    public void test1701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1701");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable3 = null;
        boolean boolean4 = constableBloomFilter2.contains(constable3);
        constableBloomFilter2.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean8 = constableBloomFilter2.contains((java.lang.constant.Constable) 'a');
        constableBloomFilter2.insert((java.lang.constant.Constable) (short) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter13 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter13.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean17 = constableBloomFilter13.contains((java.lang.constant.Constable) 100L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter20 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter20.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter25 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter28 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass29 = wildcardClassOfFieldBloomFilter28.getClass();
        constableBloomFilter25.insert((java.lang.constant.Constable) wildcardClass29);
        constableBloomFilter20.insert((java.lang.constant.Constable) wildcardClass29);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter34 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', 0);
        java.lang.Class<?> wildcardClass35 = constableBloomFilter34.getClass();
        constableBloomFilter20.insert((java.lang.constant.Constable) wildcardClass35);
        constableBloomFilter13.insert((java.lang.constant.Constable) wildcardClass35);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass35);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter41 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter41.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter41.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter41.insert((java.lang.constant.Constable) (-1L));
        boolean boolean49 = constableBloomFilter41.contains((java.lang.constant.Constable) 0L);
        constableBloomFilter41.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean53 = constableBloomFilter41.contains((java.lang.constant.Constable) (byte) -1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter56 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter56.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean60 = constableBloomFilter56.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter56.insert((java.lang.constant.Constable) (short) 0);
        boolean boolean64 = constableBloomFilter56.contains((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc> constantDescBloomFilter67 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc>((int) (byte) 100, 100);
        java.lang.Class<?> wildcardClass68 = constantDescBloomFilter67.getClass();
        constableBloomFilter56.insert((java.lang.constant.Constable) wildcardClass68);
        constableBloomFilter41.insert((java.lang.constant.Constable) wildcardClass68);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass68);
        java.lang.Class<?> wildcardClass72 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test1702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1702");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass6 = wildcardClassOfFieldBloomFilter5.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass6);
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass9);
        boolean boolean12 = constableBloomFilter2.contains((java.lang.constant.Constable) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter15 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable16 = null;
        boolean boolean17 = constableBloomFilter15.contains(constable16);
        constableBloomFilter15.insert((java.lang.constant.Constable) (byte) 0);
        java.lang.Class<?> wildcardClass20 = constableBloomFilter15.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass20);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter24 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter27 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable28 = null;
        boolean boolean29 = constableBloomFilter27.contains(constable28);
        constableBloomFilter27.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean33 = constableBloomFilter27.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass34 = constableBloomFilter27.getClass();
        boolean boolean35 = constableBloomFilter24.contains((java.lang.constant.Constable) wildcardClass34);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter38 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable39 = null;
        boolean boolean40 = constableBloomFilter38.contains(constable39);
        constableBloomFilter38.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean44 = constableBloomFilter38.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass45 = constableBloomFilter38.getClass();
        constableBloomFilter24.insert((java.lang.constant.Constable) wildcardClass45);
        boolean boolean48 = constableBloomFilter24.contains((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter51 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass52 = wildcardClassOfFieldBloomFilter51.getClass();
        constableBloomFilter24.insert((java.lang.constant.Constable) wildcardClass52);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass52);
        java.lang.constant.Constable constable55 = null;
        boolean boolean56 = constableBloomFilter2.contains(constable55);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter59 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean61 = constableBloomFilter59.contains((java.lang.constant.Constable) 0L);
        boolean boolean63 = constableBloomFilter59.contains((java.lang.constant.Constable) 0L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter66 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter66.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter66.insert((java.lang.constant.Constable) 1.0f);
        boolean boolean72 = constableBloomFilter66.contains((java.lang.constant.Constable) (short) 100);
        java.lang.Class<?> wildcardClass73 = constableBloomFilter66.getClass();
        boolean boolean74 = constableBloomFilter59.contains((java.lang.constant.Constable) wildcardClass73);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass73);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter78 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) (byte) 100);
        java.lang.Class<?> wildcardClass79 = constableBloomFilter78.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass79);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test1703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1703");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) (short) 0);
        java.lang.Class<?> wildcardClass3 = constableBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test1704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1704");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) (short) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable6 = null;
        boolean boolean7 = constableBloomFilter5.contains(constable6);
        constableBloomFilter5.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean11 = constableBloomFilter5.contains((java.lang.constant.Constable) 'a');
        constableBloomFilter5.insert((java.lang.constant.Constable) (short) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter16.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean20 = constableBloomFilter16.contains((java.lang.constant.Constable) 100L);
        boolean boolean22 = constableBloomFilter16.contains((java.lang.constant.Constable) (byte) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter25 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter28 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable29 = null;
        boolean boolean30 = constableBloomFilter28.contains(constable29);
        constableBloomFilter28.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean34 = constableBloomFilter28.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass35 = constableBloomFilter28.getClass();
        boolean boolean36 = constableBloomFilter25.contains((java.lang.constant.Constable) wildcardClass35);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter39 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable40 = null;
        boolean boolean41 = constableBloomFilter39.contains(constable40);
        constableBloomFilter39.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean45 = constableBloomFilter39.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass46 = constableBloomFilter39.getClass();
        constableBloomFilter25.insert((java.lang.constant.Constable) wildcardClass46);
        boolean boolean48 = constableBloomFilter16.contains((java.lang.constant.Constable) wildcardClass46);
        boolean boolean49 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass46);
        boolean boolean50 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    }

    @Test
    public void test1705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1705");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable3 = null;
        boolean boolean4 = constableBloomFilter2.contains(constable3);
        constableBloomFilter2.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter9 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable10 = null;
        boolean boolean11 = constableBloomFilter9.contains(constable10);
        java.lang.Class<?> wildcardClass12 = constableBloomFilter9.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass12);
        constableBloomFilter2.insert((java.lang.constant.Constable) 10L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter18 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter18.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean22 = constableBloomFilter18.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter18.insert((java.lang.constant.Constable) (short) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter27 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable28 = null;
        boolean boolean29 = constableBloomFilter27.contains(constable28);
        constableBloomFilter27.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter34 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable35 = null;
        boolean boolean36 = constableBloomFilter34.contains(constable35);
        java.lang.Class<?> wildcardClass37 = constableBloomFilter34.getClass();
        constableBloomFilter27.insert((java.lang.constant.Constable) wildcardClass37);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter41 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable42 = null;
        boolean boolean43 = constableBloomFilter41.contains(constable42);
        constableBloomFilter41.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter48 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable49 = null;
        boolean boolean50 = constableBloomFilter48.contains(constable49);
        java.lang.Class<?> wildcardClass51 = constableBloomFilter48.getClass();
        constableBloomFilter41.insert((java.lang.constant.Constable) wildcardClass51);
        boolean boolean53 = constableBloomFilter27.contains((java.lang.constant.Constable) wildcardClass51);
        boolean boolean54 = constableBloomFilter18.contains((java.lang.constant.Constable) wildcardClass51);
        boolean boolean55 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass51);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter58 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable59 = null;
        constableBloomFilter58.insert(constable59);
        constableBloomFilter58.insert((java.lang.constant.Constable) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter65 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter68 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass69 = wildcardClassOfFieldBloomFilter68.getClass();
        constableBloomFilter65.insert((java.lang.constant.Constable) wildcardClass69);
        java.lang.Object obj71 = new java.lang.Object();
        java.lang.Class<?> wildcardClass72 = obj71.getClass();
        constableBloomFilter65.insert((java.lang.constant.Constable) wildcardClass72);
        boolean boolean75 = constableBloomFilter65.contains((java.lang.constant.Constable) '#');
        constableBloomFilter65.insert((java.lang.constant.Constable) '#');
        java.lang.Class<?> wildcardClass78 = constableBloomFilter65.getClass();
        boolean boolean79 = constableBloomFilter58.contains((java.lang.constant.Constable) wildcardClass78);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass78);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
    }

    @Test
    public void test1706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1706");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable3 = null;
        boolean boolean4 = constableBloomFilter2.contains(constable3);
        boolean boolean6 = constableBloomFilter2.contains((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter9 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, (int) (short) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter12 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        boolean boolean14 = constableBloomFilter12.contains((java.lang.constant.Constable) ' ');
        boolean boolean16 = constableBloomFilter12.contains((java.lang.constant.Constable) (short) 1);
        java.lang.Class<?> wildcardClass17 = constableBloomFilter12.getClass();
        boolean boolean18 = constableBloomFilter9.contains((java.lang.constant.Constable) wildcardClass17);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter21 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable22 = null;
        boolean boolean23 = constableBloomFilter21.contains(constable22);
        constableBloomFilter21.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean27 = constableBloomFilter21.contains((java.lang.constant.Constable) 'a');
        boolean boolean29 = constableBloomFilter21.contains((java.lang.constant.Constable) 100.0f);
        java.lang.Class<?> wildcardClass30 = constableBloomFilter21.getClass();
        boolean boolean31 = constableBloomFilter9.contains((java.lang.constant.Constable) wildcardClass30);
        boolean boolean32 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass30);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter35 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable36 = null;
        boolean boolean37 = constableBloomFilter35.contains(constable36);
        boolean boolean39 = constableBloomFilter35.contains((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter42 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter45 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter45.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter45.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter45.insert((java.lang.constant.Constable) (-1L));
        boolean boolean53 = constableBloomFilter45.contains((java.lang.constant.Constable) 0L);
        java.lang.Class<?> wildcardClass54 = constableBloomFilter45.getClass();
        constableBloomFilter42.insert((java.lang.constant.Constable) wildcardClass54);
        constableBloomFilter35.insert((java.lang.constant.Constable) wildcardClass54);
        boolean boolean57 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass54);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter60 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable61 = null;
        boolean boolean62 = constableBloomFilter60.contains(constable61);
        boolean boolean64 = constableBloomFilter60.contains((java.lang.constant.Constable) 1L);
        boolean boolean66 = constableBloomFilter60.contains((java.lang.constant.Constable) 100.0d);
        constableBloomFilter60.insert((java.lang.constant.Constable) (short) -1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter71 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass72 = wildcardClassOfFieldBloomFilter71.getClass();
        constableBloomFilter60.insert((java.lang.constant.Constable) wildcardClass72);
        java.lang.Class<?> wildcardClass74 = constableBloomFilter60.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass74);
        constableBloomFilter2.insert((java.lang.constant.Constable) 1.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter80 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter83 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass84 = wildcardClassOfFieldBloomFilter83.getClass();
        constableBloomFilter80.insert((java.lang.constant.Constable) wildcardClass84);
        java.lang.Object obj86 = new java.lang.Object();
        java.lang.Class<?> wildcardClass87 = obj86.getClass();
        constableBloomFilter80.insert((java.lang.constant.Constable) wildcardClass87);
        boolean boolean90 = constableBloomFilter80.contains((java.lang.constant.Constable) 1);
        java.lang.Class<?> wildcardClass91 = constableBloomFilter80.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass91);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter95 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 0);
        boolean boolean97 = constableBloomFilter95.contains((java.lang.constant.Constable) 10.0d);
        java.lang.Class<?> wildcardClass98 = constableBloomFilter95.getClass();
        boolean boolean99 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass98);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(wildcardClass91);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + true + "'", boolean97 == true);
        org.junit.Assert.assertNotNull(wildcardClass98);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + true + "'", boolean99 == true);
    }

    @Test
    public void test1707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1707");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, (int) (short) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter5.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter5.insert((java.lang.constant.Constable) ' ');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter12 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter12.insert((java.lang.constant.Constable) 0.0d);
        java.lang.Class<?> wildcardClass15 = constableBloomFilter12.getClass();
        boolean boolean16 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass15);
        java.lang.constant.Constable constable17 = null;
        boolean boolean18 = constableBloomFilter5.contains(constable17);
        java.lang.Class<?> wildcardClass19 = constableBloomFilter5.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass19);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter23 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 1, (int) (byte) 100);
        java.lang.Class<?> wildcardClass24 = constableBloomFilter23.getClass();
        boolean boolean25 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass24);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter28 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 100, 10);
        java.lang.Class<?> wildcardClass29 = constableBloomFilter28.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass29);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter33 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable34 = null;
        boolean boolean35 = constableBloomFilter33.contains(constable34);
        constableBloomFilter33.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean39 = constableBloomFilter33.contains((java.lang.constant.Constable) 'a');
        boolean boolean41 = constableBloomFilter33.contains((java.lang.constant.Constable) 100.0f);
        constableBloomFilter33.insert((java.lang.constant.Constable) (short) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter46 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 1);
        java.lang.Class<?> wildcardClass47 = constableBloomFilter46.getClass();
        boolean boolean48 = constableBloomFilter33.contains((java.lang.constant.Constable) wildcardClass47);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
    }

    @Test
    public void test1708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1708");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable3 = null;
        boolean boolean4 = constableBloomFilter2.contains(constable3);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter7 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable8 = null;
        boolean boolean9 = constableBloomFilter7.contains(constable8);
        boolean boolean11 = constableBloomFilter7.contains((java.lang.constant.Constable) 1L);
        java.lang.Class<?> wildcardClass12 = constableBloomFilter7.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass12);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter16.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter16.insert((java.lang.constant.Constable) 1.0f);
        boolean boolean22 = constableBloomFilter16.contains((java.lang.constant.Constable) (short) 100);
        boolean boolean24 = constableBloomFilter16.contains((java.lang.constant.Constable) 0L);
        boolean boolean26 = constableBloomFilter16.contains((java.lang.constant.Constable) (short) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter29 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable30 = null;
        boolean boolean31 = constableBloomFilter29.contains(constable30);
        constableBloomFilter29.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter36 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable37 = null;
        boolean boolean38 = constableBloomFilter36.contains(constable37);
        java.lang.Class<?> wildcardClass39 = constableBloomFilter36.getClass();
        constableBloomFilter29.insert((java.lang.constant.Constable) wildcardClass39);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter43 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable44 = null;
        boolean boolean45 = constableBloomFilter43.contains(constable44);
        constableBloomFilter43.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter50 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable51 = null;
        boolean boolean52 = constableBloomFilter50.contains(constable51);
        java.lang.Class<?> wildcardClass53 = constableBloomFilter50.getClass();
        constableBloomFilter43.insert((java.lang.constant.Constable) wildcardClass53);
        boolean boolean55 = constableBloomFilter29.contains((java.lang.constant.Constable) wildcardClass53);
        boolean boolean56 = constableBloomFilter16.contains((java.lang.constant.Constable) wildcardClass53);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter59 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable60 = null;
        boolean boolean61 = constableBloomFilter59.contains(constable60);
        java.lang.Class<?> wildcardClass62 = constableBloomFilter59.getClass();
        boolean boolean63 = constableBloomFilter16.contains((java.lang.constant.Constable) wildcardClass62);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass62);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Object> objBloomFilter67 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Object>((int) (byte) 100, (int) (byte) 100);
        java.lang.Class<?> wildcardClass68 = objBloomFilter67.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass68);
        java.lang.constant.Constable constable70 = null;
        constableBloomFilter2.insert(constable70);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test1709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1709");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter2.insert((java.lang.constant.Constable) 1.0f);
        java.lang.constant.Constable constable7 = null;
        constableBloomFilter2.insert(constable7);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter11 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter11.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean15 = constableBloomFilter11.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter11.insert((java.lang.constant.Constable) (short) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter20 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable21 = null;
        boolean boolean22 = constableBloomFilter20.contains(constable21);
        constableBloomFilter20.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter27 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable28 = null;
        boolean boolean29 = constableBloomFilter27.contains(constable28);
        java.lang.Class<?> wildcardClass30 = constableBloomFilter27.getClass();
        constableBloomFilter20.insert((java.lang.constant.Constable) wildcardClass30);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter34 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable35 = null;
        boolean boolean36 = constableBloomFilter34.contains(constable35);
        constableBloomFilter34.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter41 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable42 = null;
        boolean boolean43 = constableBloomFilter41.contains(constable42);
        java.lang.Class<?> wildcardClass44 = constableBloomFilter41.getClass();
        constableBloomFilter34.insert((java.lang.constant.Constable) wildcardClass44);
        boolean boolean46 = constableBloomFilter20.contains((java.lang.constant.Constable) wildcardClass44);
        boolean boolean47 = constableBloomFilter11.contains((java.lang.constant.Constable) wildcardClass44);
        boolean boolean49 = constableBloomFilter11.contains((java.lang.constant.Constable) (-1.0d));
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter52 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter52.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter52.insert((java.lang.constant.Constable) 1.0f);
        boolean boolean58 = constableBloomFilter52.contains((java.lang.constant.Constable) (short) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter61 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean63 = constableBloomFilter61.contains((java.lang.constant.Constable) 0L);
        boolean boolean65 = constableBloomFilter61.contains((java.lang.constant.Constable) 0L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter68 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter68.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter68.insert((java.lang.constant.Constable) 1.0f);
        boolean boolean74 = constableBloomFilter68.contains((java.lang.constant.Constable) (short) 100);
        java.lang.Class<?> wildcardClass75 = constableBloomFilter68.getClass();
        boolean boolean76 = constableBloomFilter61.contains((java.lang.constant.Constable) wildcardClass75);
        boolean boolean77 = constableBloomFilter52.contains((java.lang.constant.Constable) boolean76);
        java.lang.Class<?> wildcardClass78 = constableBloomFilter52.getClass();
        boolean boolean79 = constableBloomFilter11.contains((java.lang.constant.Constable) wildcardClass78);
        constableBloomFilter2.insert((java.lang.constant.Constable) boolean79);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
    }

    @Test
    public void test1710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1710");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor> typeDescriptorBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor>((int) (short) 0, (int) (short) 100);
        java.lang.Class<?> wildcardClass3 = typeDescriptorBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test1711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1711");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 10, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(1, 1);
        constableBloomFilter5.insert((java.lang.constant.Constable) 100);
        java.lang.Class<?> wildcardClass8 = constableBloomFilter5.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test1712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1712");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(1, (int) (byte) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.CharSequence> charSequenceBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.CharSequence>((int) (byte) 0, (int) ' ');
        java.lang.Class<?> wildcardClass6 = charSequenceBloomFilter5.getClass();
        boolean boolean7 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass6);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter10 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) 'a');
        boolean boolean12 = constableBloomFilter10.contains((java.lang.constant.Constable) ' ');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter15 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter15.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean19 = constableBloomFilter15.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter15.insert((java.lang.constant.Constable) (short) 0);
        boolean boolean23 = constableBloomFilter15.contains((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc> constantDescBloomFilter26 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc>((int) (byte) 100, 100);
        java.lang.Class<?> wildcardClass27 = constantDescBloomFilter26.getClass();
        constableBloomFilter15.insert((java.lang.constant.Constable) wildcardClass27);
        boolean boolean29 = constableBloomFilter10.contains((java.lang.constant.Constable) wildcardClass27);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test1713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1713");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.String> strBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.String>((int) (byte) 10, (int) (byte) 10);
    }

    @Test
    public void test1714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1714");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>((int) (short) 0, (int) (byte) 10);
    }

    @Test
    public void test1715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1715");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.AnnotatedElement> annotatedElementBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.AnnotatedElement>(100, (int) (byte) 100);
    }

    @Test
    public void test1716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1716");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(0, 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable6 = null;
        boolean boolean7 = constableBloomFilter5.contains(constable6);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter10 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable11 = null;
        boolean boolean12 = constableBloomFilter10.contains(constable11);
        boolean boolean14 = constableBloomFilter10.contains((java.lang.constant.Constable) 1L);
        java.lang.Class<?> wildcardClass15 = constableBloomFilter10.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass15);
        java.lang.Class<?> wildcardClass17 = constableBloomFilter5.getClass();
        boolean boolean18 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass17);
        java.lang.Class<?> wildcardClass19 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test1717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1717");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass6 = wildcardClassOfFieldBloomFilter5.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass6);
        constableBloomFilter2.insert((java.lang.constant.Constable) (byte) -1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter12 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter12.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter12.insert((java.lang.constant.Constable) 1.0f);
        java.lang.constant.Constable constable17 = null;
        constableBloomFilter12.insert(constable17);
        boolean boolean20 = constableBloomFilter12.contains((java.lang.constant.Constable) 0);
        constableBloomFilter12.insert((java.lang.constant.Constable) (-1L));
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter25 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>((int) (short) 0, (int) (short) 100);
        java.lang.Class<?> wildcardClass26 = wildcardClassOfFieldBloomFilter25.getClass();
        boolean boolean27 = constableBloomFilter12.contains((java.lang.constant.Constable) wildcardClass26);
        boolean boolean28 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass26);
        boolean boolean30 = constableBloomFilter2.contains((java.lang.constant.Constable) (short) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter33 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>((int) (byte) 100, (int) (byte) 10);
        java.lang.Class<?> wildcardClass34 = wildcardClassOfFieldBloomFilter33.getClass();
        boolean boolean35 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass34);
        java.lang.Class<?> wildcardClass36 = constableBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test1718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1718");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean4 = constableBloomFilter2.contains((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter7 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter10 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass11 = wildcardClassOfFieldBloomFilter10.getClass();
        constableBloomFilter7.insert((java.lang.constant.Constable) wildcardClass11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        constableBloomFilter7.insert((java.lang.constant.Constable) wildcardClass14);
        boolean boolean17 = constableBloomFilter7.contains((java.lang.constant.Constable) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter20 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable21 = null;
        boolean boolean22 = constableBloomFilter20.contains(constable21);
        constableBloomFilter20.insert((java.lang.constant.Constable) (byte) 0);
        java.lang.Class<?> wildcardClass25 = constableBloomFilter20.getClass();
        constableBloomFilter7.insert((java.lang.constant.Constable) wildcardClass25);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter29 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable30 = null;
        constableBloomFilter29.insert(constable30);
        java.lang.Class<?> wildcardClass32 = constableBloomFilter29.getClass();
        boolean boolean33 = constableBloomFilter7.contains((java.lang.constant.Constable) wildcardClass32);
        java.lang.Class<?> wildcardClass34 = constableBloomFilter7.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass34);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Comparable<java.lang.String>> strComparableBloomFilter38 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Comparable<java.lang.String>>((int) (byte) 100, 0);
        java.lang.Class<?> wildcardClass39 = strComparableBloomFilter38.getClass();
        boolean boolean40 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
    }

    @Test
    public void test1719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1719");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor> typeDescriptorBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor>((int) (byte) 1, 100);
        java.lang.Class<?> wildcardClass6 = typeDescriptorBloomFilter5.getClass();
        boolean boolean7 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass6);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter10 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter10.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter10.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter10.insert((java.lang.constant.Constable) (-1L));
        boolean boolean18 = constableBloomFilter10.contains((java.lang.constant.Constable) 0L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter21 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean23 = constableBloomFilter21.contains((java.lang.constant.Constable) 0L);
        boolean boolean25 = constableBloomFilter21.contains((java.lang.constant.Constable) (byte) 0);
        constableBloomFilter21.insert((java.lang.constant.Constable) 100L);
        java.lang.Class<?> wildcardClass28 = constableBloomFilter21.getClass();
        constableBloomFilter10.insert((java.lang.constant.Constable) wildcardClass28);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass28);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Comparable<java.lang.String>> strComparableBloomFilter33 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Comparable<java.lang.String>>((int) '4', (int) (byte) 100);
        java.lang.Class<?> wildcardClass34 = strComparableBloomFilter33.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass34);
        java.lang.constant.Constable constable36 = null;
        boolean boolean37 = constableBloomFilter2.contains(constable36);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test1720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1720");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc> constantDescBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc>((int) (short) 10, (int) (short) 10);
    }

    @Test
    public void test1721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1721");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, (int) (short) 10);
    }

    @Test
    public void test1722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1722");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 100, (int) (short) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.io.Serializable> serializableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.io.Serializable>((int) (short) 100, (int) (byte) 100);
        java.lang.Class<?> wildcardClass6 = serializableBloomFilter5.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass6);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter10 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) 'a', (int) (byte) 1);
        java.lang.Class<?> wildcardClass11 = constableBloomFilter10.getClass();
        boolean boolean12 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass11);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter15 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable16 = null;
        boolean boolean17 = constableBloomFilter15.contains(constable16);
        constableBloomFilter15.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean21 = constableBloomFilter15.contains((java.lang.constant.Constable) 'a');
        constableBloomFilter15.insert((java.lang.constant.Constable) (short) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter26 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter26.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean30 = constableBloomFilter26.contains((java.lang.constant.Constable) 100L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter33 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter33.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter38 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter41 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass42 = wildcardClassOfFieldBloomFilter41.getClass();
        constableBloomFilter38.insert((java.lang.constant.Constable) wildcardClass42);
        constableBloomFilter33.insert((java.lang.constant.Constable) wildcardClass42);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter47 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', 0);
        java.lang.Class<?> wildcardClass48 = constableBloomFilter47.getClass();
        constableBloomFilter33.insert((java.lang.constant.Constable) wildcardClass48);
        constableBloomFilter26.insert((java.lang.constant.Constable) wildcardClass48);
        constableBloomFilter15.insert((java.lang.constant.Constable) wildcardClass48);
        boolean boolean52 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass48);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter55 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) ' ', 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter58 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        java.lang.Class<?> wildcardClass59 = constableBloomFilter58.getClass();
        constableBloomFilter55.insert((java.lang.constant.Constable) wildcardClass59);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter63 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) 'a');
        java.lang.Class<?> wildcardClass64 = constableBloomFilter63.getClass();
        boolean boolean65 = constableBloomFilter55.contains((java.lang.constant.Constable) wildcardClass64);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass64);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
    }

    @Test
    public void test1723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1723");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', (int) (short) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter8 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass9 = wildcardClassOfFieldBloomFilter8.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass9);
        java.lang.Object obj11 = new java.lang.Object();
        java.lang.Class<?> wildcardClass12 = obj11.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass12);
        boolean boolean15 = constableBloomFilter5.contains((java.lang.constant.Constable) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter18 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter18.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean22 = constableBloomFilter18.contains((java.lang.constant.Constable) 100L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter25 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter25.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter30 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter33 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass34 = wildcardClassOfFieldBloomFilter33.getClass();
        constableBloomFilter30.insert((java.lang.constant.Constable) wildcardClass34);
        constableBloomFilter25.insert((java.lang.constant.Constable) wildcardClass34);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter39 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', 0);
        java.lang.Class<?> wildcardClass40 = constableBloomFilter39.getClass();
        constableBloomFilter25.insert((java.lang.constant.Constable) wildcardClass40);
        constableBloomFilter18.insert((java.lang.constant.Constable) wildcardClass40);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter45 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable46 = null;
        boolean boolean47 = constableBloomFilter45.contains(constable46);
        constableBloomFilter45.insert((java.lang.constant.Constable) (byte) 0);
        java.lang.Class<?> wildcardClass50 = constableBloomFilter45.getClass();
        boolean boolean51 = constableBloomFilter18.contains((java.lang.constant.Constable) wildcardClass50);
        boolean boolean52 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass50);
        boolean boolean53 = constableBloomFilter2.contains((java.lang.constant.Constable) boolean52);
        java.lang.constant.Constable constable54 = null;
        constableBloomFilter2.insert(constable54);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }

    @Test
    public void test1724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1724");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter2.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter2.insert((java.lang.constant.Constable) (-1L));
        constableBloomFilter2.insert((java.lang.constant.Constable) 'a');
        boolean boolean12 = constableBloomFilter2.contains((java.lang.constant.Constable) 10.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter15 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable16 = null;
        boolean boolean17 = constableBloomFilter15.contains(constable16);
        constableBloomFilter15.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter22 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable23 = null;
        boolean boolean24 = constableBloomFilter22.contains(constable23);
        java.lang.Class<?> wildcardClass25 = constableBloomFilter22.getClass();
        constableBloomFilter15.insert((java.lang.constant.Constable) wildcardClass25);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter29 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable30 = null;
        boolean boolean31 = constableBloomFilter29.contains(constable30);
        constableBloomFilter29.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter36 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable37 = null;
        boolean boolean38 = constableBloomFilter36.contains(constable37);
        java.lang.Class<?> wildcardClass39 = constableBloomFilter36.getClass();
        constableBloomFilter29.insert((java.lang.constant.Constable) wildcardClass39);
        boolean boolean41 = constableBloomFilter15.contains((java.lang.constant.Constable) wildcardClass39);
        java.lang.Class<?> wildcardClass42 = constableBloomFilter15.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass42);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter46 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter46.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter46.insert((java.lang.constant.Constable) 1.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter53 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter56 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass57 = wildcardClassOfFieldBloomFilter56.getClass();
        constableBloomFilter53.insert((java.lang.constant.Constable) wildcardClass57);
        java.lang.Object obj59 = new java.lang.Object();
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        constableBloomFilter53.insert((java.lang.constant.Constable) wildcardClass60);
        java.lang.Class<?> wildcardClass62 = constableBloomFilter53.getClass();
        constableBloomFilter46.insert((java.lang.constant.Constable) wildcardClass62);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test1725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1725");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable6 = null;
        boolean boolean7 = constableBloomFilter5.contains(constable6);
        constableBloomFilter5.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean11 = constableBloomFilter5.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass12 = constableBloomFilter5.getClass();
        boolean boolean13 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass12);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable17 = null;
        boolean boolean18 = constableBloomFilter16.contains(constable17);
        constableBloomFilter16.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean22 = constableBloomFilter16.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass23 = constableBloomFilter16.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass23);
        boolean boolean26 = constableBloomFilter2.contains((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter29 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable30 = null;
        boolean boolean31 = constableBloomFilter29.contains(constable30);
        constableBloomFilter29.insert((java.lang.constant.Constable) 100.0f);
        java.lang.Class<?> wildcardClass34 = constableBloomFilter29.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass34);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter38 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean40 = constableBloomFilter38.contains((java.lang.constant.Constable) 0L);
        boolean boolean42 = constableBloomFilter38.contains((java.lang.constant.Constable) (byte) 0);
        boolean boolean44 = constableBloomFilter38.contains((java.lang.constant.Constable) '4');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor> typeDescriptorBloomFilter47 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor>(0, 100);
        java.lang.Class<?> wildcardClass48 = typeDescriptorBloomFilter47.getClass();
        boolean boolean49 = constableBloomFilter38.contains((java.lang.constant.Constable) wildcardClass48);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter52 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>(0, 100);
        java.lang.Class<?> wildcardClass53 = constableBloomFilterBloomFilter52.getClass();
        constableBloomFilter38.insert((java.lang.constant.Constable) wildcardClass53);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter57 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable58 = null;
        boolean boolean59 = constableBloomFilter57.contains(constable58);
        constableBloomFilter57.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean63 = constableBloomFilter57.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter66 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter69 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass70 = wildcardClassOfFieldBloomFilter69.getClass();
        constableBloomFilter66.insert((java.lang.constant.Constable) wildcardClass70);
        java.lang.Object obj72 = new java.lang.Object();
        java.lang.Class<?> wildcardClass73 = obj72.getClass();
        constableBloomFilter66.insert((java.lang.constant.Constable) wildcardClass73);
        boolean boolean76 = constableBloomFilter66.contains((java.lang.constant.Constable) '#');
        constableBloomFilter66.insert((java.lang.constant.Constable) '#');
        java.lang.Class<?> wildcardClass79 = constableBloomFilter66.getClass();
        boolean boolean80 = constableBloomFilter57.contains((java.lang.constant.Constable) wildcardClass79);
        java.lang.Class<?> wildcardClass81 = constableBloomFilter57.getClass();
        boolean boolean82 = constableBloomFilter38.contains((java.lang.constant.Constable) wildcardClass81);
        boolean boolean83 = constableBloomFilter2.contains((java.lang.constant.Constable) boolean82);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
    }

    @Test
    public void test1726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1726");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc> constantDescBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc>((int) (short) 1, (int) (byte) 1);
        java.lang.Class<?> wildcardClass3 = constantDescBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test1727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1727");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean6 = constableBloomFilter2.contains((java.lang.constant.Constable) 100L);
        boolean boolean8 = constableBloomFilter2.contains((java.lang.constant.Constable) (byte) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter11 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter14 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable15 = null;
        boolean boolean16 = constableBloomFilter14.contains(constable15);
        constableBloomFilter14.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean20 = constableBloomFilter14.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass21 = constableBloomFilter14.getClass();
        boolean boolean22 = constableBloomFilter11.contains((java.lang.constant.Constable) wildcardClass21);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter25 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable26 = null;
        boolean boolean27 = constableBloomFilter25.contains(constable26);
        constableBloomFilter25.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean31 = constableBloomFilter25.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass32 = constableBloomFilter25.getClass();
        constableBloomFilter11.insert((java.lang.constant.Constable) wildcardClass32);
        boolean boolean34 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass32);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter37 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter37.insert((java.lang.constant.Constable) 10);
        boolean boolean41 = constableBloomFilter37.contains((java.lang.constant.Constable) true);
        java.lang.Class<?> wildcardClass42 = constableBloomFilter37.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass42);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter46 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter46.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean50 = constableBloomFilter46.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter46.insert((java.lang.constant.Constable) (short) 0);
        boolean boolean54 = constableBloomFilter46.contains((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc> constantDescBloomFilter57 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc>((int) (byte) 100, 100);
        java.lang.Class<?> wildcardClass58 = constantDescBloomFilter57.getClass();
        constableBloomFilter46.insert((java.lang.constant.Constable) wildcardClass58);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter62 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        boolean boolean64 = constableBloomFilter62.contains((java.lang.constant.Constable) ' ');
        boolean boolean66 = constableBloomFilter62.contains((java.lang.constant.Constable) (short) 1);
        java.lang.Class<?> wildcardClass67 = constableBloomFilter62.getClass();
        constableBloomFilter46.insert((java.lang.constant.Constable) wildcardClass67);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass67);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test1728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1728");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) 'a', (int) (byte) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter8 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable9 = null;
        boolean boolean10 = constableBloomFilter8.contains(constable9);
        constableBloomFilter8.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean14 = constableBloomFilter8.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass15 = constableBloomFilter8.getClass();
        boolean boolean16 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass15);
        constableBloomFilter5.insert((java.lang.constant.Constable) (short) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter21 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean23 = constableBloomFilter21.contains((java.lang.constant.Constable) 0L);
        boolean boolean25 = constableBloomFilter21.contains((java.lang.constant.Constable) (byte) 0);
        boolean boolean27 = constableBloomFilter21.contains((java.lang.constant.Constable) '4');
        java.lang.Class<?> wildcardClass28 = constableBloomFilter21.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass28);
        java.lang.Class<?> wildcardClass30 = constableBloomFilter5.getClass();
        boolean boolean31 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test1729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1729");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Object> objBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Object>(1, (int) '4');
        java.lang.Class<?> wildcardClass3 = objBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test1730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1730");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(1, 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable6 = null;
        boolean boolean7 = constableBloomFilter5.contains(constable6);
        constableBloomFilter5.insert((java.lang.constant.Constable) 100.0f);
        boolean boolean11 = constableBloomFilter5.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter14 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter17 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable18 = null;
        boolean boolean19 = constableBloomFilter17.contains(constable18);
        constableBloomFilter17.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean23 = constableBloomFilter17.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass24 = constableBloomFilter17.getClass();
        boolean boolean25 = constableBloomFilter14.contains((java.lang.constant.Constable) wildcardClass24);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter28 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable29 = null;
        boolean boolean30 = constableBloomFilter28.contains(constable29);
        constableBloomFilter28.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean34 = constableBloomFilter28.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass35 = constableBloomFilter28.getClass();
        constableBloomFilter14.insert((java.lang.constant.Constable) wildcardClass35);
        boolean boolean37 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass35);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter40 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter43 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable44 = null;
        boolean boolean45 = constableBloomFilter43.contains(constable44);
        constableBloomFilter43.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean49 = constableBloomFilter43.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass50 = constableBloomFilter43.getClass();
        boolean boolean51 = constableBloomFilter40.contains((java.lang.constant.Constable) wildcardClass50);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter54 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable55 = null;
        boolean boolean56 = constableBloomFilter54.contains(constable55);
        constableBloomFilter54.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean60 = constableBloomFilter54.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass61 = constableBloomFilter54.getClass();
        constableBloomFilter40.insert((java.lang.constant.Constable) wildcardClass61);
        boolean boolean64 = constableBloomFilter40.contains((java.lang.constant.Constable) 1L);
        boolean boolean66 = constableBloomFilter40.contains((java.lang.constant.Constable) (short) -1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter69 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter69.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter69.insert((java.lang.constant.Constable) 1.0f);
        boolean boolean75 = constableBloomFilter69.contains((java.lang.constant.Constable) (short) 100);
        boolean boolean77 = constableBloomFilter69.contains((java.lang.constant.Constable) 0L);
        java.lang.Class<?> wildcardClass78 = constableBloomFilter69.getClass();
        boolean boolean79 = constableBloomFilter40.contains((java.lang.constant.Constable) wildcardClass78);
        boolean boolean80 = constableBloomFilter5.contains((java.lang.constant.Constable) boolean79);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc> constantDescBloomFilter83 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc>((int) (byte) 10, 100);
        java.lang.Class<?> wildcardClass84 = constantDescBloomFilter83.getClass();
        boolean boolean85 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass84);
        boolean boolean86 = constableBloomFilter2.contains((java.lang.constant.Constable) boolean85);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
    }

    @Test
    public void test1731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1731");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Class<?>> wildcardClassBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Class<?>>(100, (int) (byte) 10);
        java.lang.Class<?> wildcardClass3 = wildcardClassBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test1732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1732");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Class<?>> wildcardClassBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Class<?>>((int) ' ', (int) (short) 1);
    }

    @Test
    public void test1733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1733");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', (int) (short) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter8 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable9 = null;
        boolean boolean10 = constableBloomFilter8.contains(constable9);
        constableBloomFilter8.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean14 = constableBloomFilter8.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass15 = constableBloomFilter8.getClass();
        boolean boolean16 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass15);
        java.lang.Class<?> wildcardClass17 = constableBloomFilter5.getClass();
        boolean boolean18 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass17);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter21 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) 'a', 10);
        java.lang.Class<?> wildcardClass22 = constableBloomFilter21.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass22);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter26 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) 'a', 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter29 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter32 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable33 = null;
        boolean boolean34 = constableBloomFilter32.contains(constable33);
        constableBloomFilter32.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean38 = constableBloomFilter32.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass39 = constableBloomFilter32.getClass();
        boolean boolean40 = constableBloomFilter29.contains((java.lang.constant.Constable) wildcardClass39);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter43 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable44 = null;
        boolean boolean45 = constableBloomFilter43.contains(constable44);
        constableBloomFilter43.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean49 = constableBloomFilter43.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass50 = constableBloomFilter43.getClass();
        constableBloomFilter29.insert((java.lang.constant.Constable) wildcardClass50);
        boolean boolean53 = constableBloomFilter29.contains((java.lang.constant.Constable) 1L);
        java.lang.Class<?> wildcardClass54 = constableBloomFilter29.getClass();
        boolean boolean55 = constableBloomFilter26.contains((java.lang.constant.Constable) wildcardClass54);
        boolean boolean56 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
    }

    @Test
    public void test1734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1734");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '#', (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean7 = constableBloomFilter5.contains((java.lang.constant.Constable) 0L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter10 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable11 = null;
        boolean boolean12 = constableBloomFilter10.contains(constable11);
        constableBloomFilter10.insert((java.lang.constant.Constable) (byte) 0);
        java.lang.Class<?> wildcardClass15 = constableBloomFilter10.getClass();
        boolean boolean16 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass15);
        java.lang.Class<?> wildcardClass17 = constableBloomFilter5.getClass();
        boolean boolean18 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass17);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter21 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable22 = null;
        boolean boolean23 = constableBloomFilter21.contains(constable22);
        boolean boolean25 = constableBloomFilter21.contains((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter28 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, (int) (short) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter31 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        boolean boolean33 = constableBloomFilter31.contains((java.lang.constant.Constable) ' ');
        boolean boolean35 = constableBloomFilter31.contains((java.lang.constant.Constable) (short) 1);
        java.lang.Class<?> wildcardClass36 = constableBloomFilter31.getClass();
        boolean boolean37 = constableBloomFilter28.contains((java.lang.constant.Constable) wildcardClass36);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter40 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable41 = null;
        boolean boolean42 = constableBloomFilter40.contains(constable41);
        constableBloomFilter40.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean46 = constableBloomFilter40.contains((java.lang.constant.Constable) 'a');
        boolean boolean48 = constableBloomFilter40.contains((java.lang.constant.Constable) 100.0f);
        java.lang.Class<?> wildcardClass49 = constableBloomFilter40.getClass();
        boolean boolean50 = constableBloomFilter28.contains((java.lang.constant.Constable) wildcardClass49);
        boolean boolean51 = constableBloomFilter21.contains((java.lang.constant.Constable) wildcardClass49);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter54 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable55 = null;
        constableBloomFilter54.insert(constable55);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter59 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable60 = null;
        boolean boolean61 = constableBloomFilter59.contains(constable60);
        constableBloomFilter59.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean65 = constableBloomFilter59.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter68 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter71 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass72 = wildcardClassOfFieldBloomFilter71.getClass();
        constableBloomFilter68.insert((java.lang.constant.Constable) wildcardClass72);
        java.lang.Object obj74 = new java.lang.Object();
        java.lang.Class<?> wildcardClass75 = obj74.getClass();
        constableBloomFilter68.insert((java.lang.constant.Constable) wildcardClass75);
        boolean boolean78 = constableBloomFilter68.contains((java.lang.constant.Constable) '#');
        constableBloomFilter68.insert((java.lang.constant.Constable) '#');
        java.lang.Class<?> wildcardClass81 = constableBloomFilter68.getClass();
        boolean boolean82 = constableBloomFilter59.contains((java.lang.constant.Constable) wildcardClass81);
        boolean boolean83 = constableBloomFilter54.contains((java.lang.constant.Constable) boolean82);
        java.lang.Class<?> wildcardClass84 = constableBloomFilter54.getClass();
        boolean boolean85 = constableBloomFilter21.contains((java.lang.constant.Constable) wildcardClass84);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter88 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, (int) (short) 10);
        java.lang.Class<?> wildcardClass89 = constableBloomFilter88.getClass();
        constableBloomFilter21.insert((java.lang.constant.Constable) wildcardClass89);
        boolean boolean91 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass89);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
    }

    @Test
    public void test1735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1735");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable3 = null;
        boolean boolean4 = constableBloomFilter2.contains(constable3);
        boolean boolean6 = constableBloomFilter2.contains((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter9 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, (int) (short) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter12 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        boolean boolean14 = constableBloomFilter12.contains((java.lang.constant.Constable) ' ');
        boolean boolean16 = constableBloomFilter12.contains((java.lang.constant.Constable) (short) 1);
        java.lang.Class<?> wildcardClass17 = constableBloomFilter12.getClass();
        boolean boolean18 = constableBloomFilter9.contains((java.lang.constant.Constable) wildcardClass17);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter21 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable22 = null;
        boolean boolean23 = constableBloomFilter21.contains(constable22);
        constableBloomFilter21.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean27 = constableBloomFilter21.contains((java.lang.constant.Constable) 'a');
        boolean boolean29 = constableBloomFilter21.contains((java.lang.constant.Constable) 100.0f);
        java.lang.Class<?> wildcardClass30 = constableBloomFilter21.getClass();
        boolean boolean31 = constableBloomFilter9.contains((java.lang.constant.Constable) wildcardClass30);
        boolean boolean32 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass30);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter35 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter35.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter35.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter35.insert((java.lang.constant.Constable) (short) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter44 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter47 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable48 = null;
        boolean boolean49 = constableBloomFilter47.contains(constable48);
        constableBloomFilter47.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean53 = constableBloomFilter47.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass54 = constableBloomFilter47.getClass();
        boolean boolean55 = constableBloomFilter44.contains((java.lang.constant.Constable) wildcardClass54);
        boolean boolean56 = constableBloomFilter35.contains((java.lang.constant.Constable) wildcardClass54);
        boolean boolean57 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass54);
        java.lang.Class<?> wildcardClass58 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test1736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1736");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) '4');
        java.lang.Class<?> wildcardClass3 = constableBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test1737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1737");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter5.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter5.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter5.insert((java.lang.constant.Constable) (-1L));
        boolean boolean13 = constableBloomFilter5.contains((java.lang.constant.Constable) 0L);
        java.lang.Class<?> wildcardClass14 = constableBloomFilter5.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass14);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter18 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable19 = null;
        boolean boolean20 = constableBloomFilter18.contains(constable19);
        constableBloomFilter18.insert((java.lang.constant.Constable) 100.0f);
        boolean boolean24 = constableBloomFilter18.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter27 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter30 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>(0, (int) ' ');
        java.lang.Class<?> wildcardClass31 = constableBloomFilterBloomFilter30.getClass();
        boolean boolean32 = constableBloomFilter27.contains((java.lang.constant.Constable) wildcardClass31);
        constableBloomFilter18.insert((java.lang.constant.Constable) wildcardClass31);
        boolean boolean34 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
    }

    @Test
    public void test1738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1738");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 1, (int) (byte) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.io.Serializable> serializableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.io.Serializable>(0, (int) (byte) 10);
        java.lang.Class<?> wildcardClass6 = serializableBloomFilter5.getClass();
        boolean boolean7 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass6);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter10 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable11 = null;
        boolean boolean12 = constableBloomFilter10.contains(constable11);
        boolean boolean14 = constableBloomFilter10.contains((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter17 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter20 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter20.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter20.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter20.insert((java.lang.constant.Constable) (-1L));
        boolean boolean28 = constableBloomFilter20.contains((java.lang.constant.Constable) 0L);
        java.lang.Class<?> wildcardClass29 = constableBloomFilter20.getClass();
        constableBloomFilter17.insert((java.lang.constant.Constable) wildcardClass29);
        constableBloomFilter10.insert((java.lang.constant.Constable) wildcardClass29);
        boolean boolean32 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test1739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1739");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean4 = constableBloomFilter2.contains((java.lang.constant.Constable) 0L);
        boolean boolean6 = constableBloomFilter2.contains((java.lang.constant.Constable) 0L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter9 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter9.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean13 = constableBloomFilter9.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter9.insert((java.lang.constant.Constable) (short) 0);
        boolean boolean17 = constableBloomFilter9.contains((java.lang.constant.Constable) 0);
        java.lang.Class<?> wildcardClass18 = constableBloomFilter9.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass18);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter22 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter22.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean26 = constableBloomFilter22.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter22.insert((java.lang.constant.Constable) (short) 0);
        boolean boolean30 = constableBloomFilter22.contains((java.lang.constant.Constable) 0);
        java.lang.Class<?> wildcardClass31 = constableBloomFilter22.getClass();
        boolean boolean32 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass31);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter35 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter35.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean39 = constableBloomFilter35.contains((java.lang.constant.Constable) 100L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter42 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter42.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter47 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter50 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass51 = wildcardClassOfFieldBloomFilter50.getClass();
        constableBloomFilter47.insert((java.lang.constant.Constable) wildcardClass51);
        constableBloomFilter42.insert((java.lang.constant.Constable) wildcardClass51);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter56 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', 0);
        java.lang.Class<?> wildcardClass57 = constableBloomFilter56.getClass();
        constableBloomFilter42.insert((java.lang.constant.Constable) wildcardClass57);
        constableBloomFilter35.insert((java.lang.constant.Constable) wildcardClass57);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter62 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable63 = null;
        boolean boolean64 = constableBloomFilter62.contains(constable63);
        constableBloomFilter62.insert((java.lang.constant.Constable) (byte) 0);
        java.lang.Class<?> wildcardClass67 = constableBloomFilter62.getClass();
        boolean boolean68 = constableBloomFilter35.contains((java.lang.constant.Constable) wildcardClass67);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass67);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
    }

    @Test
    public void test1740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1740");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter2.insert((java.lang.constant.Constable) 10);
        boolean boolean6 = constableBloomFilter2.contains((java.lang.constant.Constable) true);
        boolean boolean8 = constableBloomFilter2.contains((java.lang.constant.Constable) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter11 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable12 = null;
        boolean boolean13 = constableBloomFilter11.contains(constable12);
        constableBloomFilter11.insert((java.lang.constant.Constable) 100.0f);
        boolean boolean17 = constableBloomFilter11.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter20 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter23 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable24 = null;
        boolean boolean25 = constableBloomFilter23.contains(constable24);
        constableBloomFilter23.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean29 = constableBloomFilter23.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass30 = constableBloomFilter23.getClass();
        boolean boolean31 = constableBloomFilter20.contains((java.lang.constant.Constable) wildcardClass30);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter34 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable35 = null;
        boolean boolean36 = constableBloomFilter34.contains(constable35);
        constableBloomFilter34.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean40 = constableBloomFilter34.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass41 = constableBloomFilter34.getClass();
        constableBloomFilter20.insert((java.lang.constant.Constable) wildcardClass41);
        boolean boolean43 = constableBloomFilter11.contains((java.lang.constant.Constable) wildcardClass41);
        boolean boolean44 = constableBloomFilter2.contains((java.lang.constant.Constable) boolean43);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter47 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) 'a');
        boolean boolean49 = constableBloomFilter47.contains((java.lang.constant.Constable) (byte) 100);
        java.lang.Class<?> wildcardClass50 = constableBloomFilter47.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass50);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter54 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter54.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean58 = constableBloomFilter54.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter54.insert((java.lang.constant.Constable) (short) 0);
        boolean boolean62 = constableBloomFilter54.contains((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc> constantDescBloomFilter65 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc>((int) (byte) 100, 100);
        java.lang.Class<?> wildcardClass66 = constantDescBloomFilter65.getClass();
        constableBloomFilter54.insert((java.lang.constant.Constable) wildcardClass66);
        boolean boolean68 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass66);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter71 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass72 = wildcardClassOfFieldBloomFilter71.getClass();
        boolean boolean73 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass72);
        java.lang.constant.Constable constable74 = null;
        boolean boolean75 = constableBloomFilter2.contains(constable74);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
    }

    @Test
    public void test1741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1741");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Object> objBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Object>((int) (byte) 1, 100);
    }

    @Test
    public void test1742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1742");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable6 = null;
        boolean boolean7 = constableBloomFilter5.contains(constable6);
        constableBloomFilter5.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean11 = constableBloomFilter5.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass12 = constableBloomFilter5.getClass();
        boolean boolean13 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass12);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable17 = null;
        boolean boolean18 = constableBloomFilter16.contains(constable17);
        constableBloomFilter16.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean22 = constableBloomFilter16.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass23 = constableBloomFilter16.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass23);
        boolean boolean26 = constableBloomFilter2.contains((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter29 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass30 = wildcardClassOfFieldBloomFilter29.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass30);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter34 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.Class<?> wildcardClass35 = constableBloomFilter34.getClass();
        boolean boolean36 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass35);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter39 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) ' ', 1);
        java.lang.Class<?> wildcardClass40 = constableBloomFilter39.getClass();
        boolean boolean41 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass40);
        java.lang.Class<?> wildcardClass42 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test1743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1743");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 100, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 1, (int) '#');
        java.lang.constant.Constable constable6 = null;
        constableBloomFilter5.insert(constable6);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter10 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter13 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) (byte) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter16.insert((java.lang.constant.Constable) 10);
        boolean boolean20 = constableBloomFilter16.contains((java.lang.constant.Constable) true);
        boolean boolean22 = constableBloomFilter16.contains((java.lang.constant.Constable) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter25 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable26 = null;
        boolean boolean27 = constableBloomFilter25.contains(constable26);
        constableBloomFilter25.insert((java.lang.constant.Constable) 100.0f);
        boolean boolean31 = constableBloomFilter25.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter34 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter37 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable38 = null;
        boolean boolean39 = constableBloomFilter37.contains(constable38);
        constableBloomFilter37.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean43 = constableBloomFilter37.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass44 = constableBloomFilter37.getClass();
        boolean boolean45 = constableBloomFilter34.contains((java.lang.constant.Constable) wildcardClass44);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter48 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable49 = null;
        boolean boolean50 = constableBloomFilter48.contains(constable49);
        constableBloomFilter48.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean54 = constableBloomFilter48.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass55 = constableBloomFilter48.getClass();
        constableBloomFilter34.insert((java.lang.constant.Constable) wildcardClass55);
        boolean boolean57 = constableBloomFilter25.contains((java.lang.constant.Constable) wildcardClass55);
        boolean boolean58 = constableBloomFilter16.contains((java.lang.constant.Constable) boolean57);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter61 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) 'a');
        boolean boolean63 = constableBloomFilter61.contains((java.lang.constant.Constable) (byte) 100);
        java.lang.Class<?> wildcardClass64 = constableBloomFilter61.getClass();
        constableBloomFilter16.insert((java.lang.constant.Constable) wildcardClass64);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter68 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean70 = constableBloomFilter68.contains((java.lang.constant.Constable) 0L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter73 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable74 = null;
        boolean boolean75 = constableBloomFilter73.contains(constable74);
        constableBloomFilter73.insert((java.lang.constant.Constable) (byte) 0);
        java.lang.Class<?> wildcardClass78 = constableBloomFilter73.getClass();
        boolean boolean79 = constableBloomFilter68.contains((java.lang.constant.Constable) wildcardClass78);
        java.lang.Class<?> wildcardClass80 = constableBloomFilter68.getClass();
        constableBloomFilter16.insert((java.lang.constant.Constable) wildcardClass80);
        java.lang.Class<?> wildcardClass82 = constableBloomFilter16.getClass();
        constableBloomFilter13.insert((java.lang.constant.Constable) wildcardClass82);
        constableBloomFilter10.insert((java.lang.constant.Constable) wildcardClass82);
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass82);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass82);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test1744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1744");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass6 = wildcardClassOfFieldBloomFilter5.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass6);
        constableBloomFilter2.insert((java.lang.constant.Constable) (byte) -1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter12 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter12.insert((java.lang.constant.Constable) 10);
        boolean boolean16 = constableBloomFilter12.contains((java.lang.constant.Constable) true);
        boolean boolean18 = constableBloomFilter12.contains((java.lang.constant.Constable) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter21 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable22 = null;
        boolean boolean23 = constableBloomFilter21.contains(constable22);
        constableBloomFilter21.insert((java.lang.constant.Constable) 100.0f);
        boolean boolean27 = constableBloomFilter21.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter30 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter33 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable34 = null;
        boolean boolean35 = constableBloomFilter33.contains(constable34);
        constableBloomFilter33.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean39 = constableBloomFilter33.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass40 = constableBloomFilter33.getClass();
        boolean boolean41 = constableBloomFilter30.contains((java.lang.constant.Constable) wildcardClass40);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter44 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable45 = null;
        boolean boolean46 = constableBloomFilter44.contains(constable45);
        constableBloomFilter44.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean50 = constableBloomFilter44.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass51 = constableBloomFilter44.getClass();
        constableBloomFilter30.insert((java.lang.constant.Constable) wildcardClass51);
        boolean boolean53 = constableBloomFilter21.contains((java.lang.constant.Constable) wildcardClass51);
        boolean boolean54 = constableBloomFilter12.contains((java.lang.constant.Constable) boolean53);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter57 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) 'a');
        boolean boolean59 = constableBloomFilter57.contains((java.lang.constant.Constable) (byte) 100);
        java.lang.Class<?> wildcardClass60 = constableBloomFilter57.getClass();
        constableBloomFilter12.insert((java.lang.constant.Constable) wildcardClass60);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter64 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable65 = null;
        boolean boolean66 = constableBloomFilter64.contains(constable65);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter69 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable70 = null;
        boolean boolean71 = constableBloomFilter69.contains(constable70);
        boolean boolean73 = constableBloomFilter69.contains((java.lang.constant.Constable) 1L);
        java.lang.Class<?> wildcardClass74 = constableBloomFilter69.getClass();
        constableBloomFilter64.insert((java.lang.constant.Constable) wildcardClass74);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter78 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable79 = null;
        boolean boolean80 = constableBloomFilter78.contains(constable79);
        constableBloomFilter78.insert((java.lang.constant.Constable) 100.0f);
        boolean boolean84 = constableBloomFilter78.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass85 = constableBloomFilter78.getClass();
        constableBloomFilter64.insert((java.lang.constant.Constable) wildcardClass85);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.GenericDeclaration> genericDeclarationBloomFilter89 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.GenericDeclaration>(1, (int) 'a');
        java.lang.Class<?> wildcardClass90 = genericDeclarationBloomFilter89.getClass();
        constableBloomFilter64.insert((java.lang.constant.Constable) wildcardClass90);
        boolean boolean92 = constableBloomFilter12.contains((java.lang.constant.Constable) wildcardClass90);
        java.lang.Class<?> wildcardClass93 = constableBloomFilter12.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass93);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test1745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1745");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 100, (int) (short) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) '#');
        java.lang.constant.Constable constable6 = null;
        constableBloomFilter5.insert(constable6);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter10 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 1, (int) (byte) 100);
        java.lang.Class<?> wildcardClass11 = constableBloomFilter10.getClass();
        boolean boolean12 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass11);
        boolean boolean13 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass11);
        java.lang.Class<?> wildcardClass14 = constableBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test1746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1746");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter2.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter2.insert((java.lang.constant.Constable) (-1L));
        boolean boolean10 = constableBloomFilter2.contains((java.lang.constant.Constable) 0L);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean14 = constableBloomFilter2.contains((java.lang.constant.Constable) (byte) -1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter17 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter17.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean21 = constableBloomFilter17.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter17.insert((java.lang.constant.Constable) (short) 0);
        boolean boolean25 = constableBloomFilter17.contains((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc> constantDescBloomFilter28 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc>((int) (byte) 100, 100);
        java.lang.Class<?> wildcardClass29 = constantDescBloomFilter28.getClass();
        constableBloomFilter17.insert((java.lang.constant.Constable) wildcardClass29);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass29);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter34 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable35 = null;
        constableBloomFilter34.insert(constable35);
        constableBloomFilter34.insert((java.lang.constant.Constable) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter41 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        boolean boolean43 = constableBloomFilter41.contains((java.lang.constant.Constable) ' ');
        java.lang.Class<?> wildcardClass44 = constableBloomFilter41.getClass();
        constableBloomFilter34.insert((java.lang.constant.Constable) wildcardClass44);
        boolean boolean46 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass44);
        java.lang.Class<?> wildcardClass47 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }
}

